{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5451", "id": 5451, "title": "OpenRoad db query", "author": "CathedralsOfSand", "description": "How do you dump detailed cell usage statistics from a finished database?\n\nI have the cell stats from the yosys synth run but want similar data from the timing closed routed db. \n\nThanks", "content": [{"author": "CathedralsOfSand", "role": "user", "message": "How do you dump detailed cell usage statistics from a finished database?\n\nI have the cell stats from the yosys synth run but want similar data from the timing closed routed db. \n\nThanks", "date": "2024-07-25T20:58:09Z"}, {"author": "maliberty", "role": "assistant", "message": "`report_cell_usage` is the simplest", "date": "2024-07-25T21:00:06Z"}, {"author": "maliberty", "role": "assistant", "message": "https://github.com/The-OpenROAD-Project/OpenROAD/pull/5455 is quick stab at this.  What do you think of https://github.com/The-OpenROAD-Project/OpenROAD/pull/5455/files#diff-2da4a6ba84e5e60ce2a822063c4acd592ca2c6fc35f81f3d3d966f78ba7e1675 ?", "date": "2024-07-26T00:16:10Z"}], "date": "2024-07-25T20:58:09Z", "category": "Query", "subcategory": "Cell statistics report", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5420", "id": 5420, "title": "dft command names", "author": "ThomasGeroudet", "description": "Hello @maliberty, @fgaray, I've just seen dft commands, but not tried it yet.\r\nThe name of the commands seemed familiar, and I was wondering if it could be better to rename them to avoid potential legal issues such as this one:\r\nhttps://news.synopsys.com/2016-12-21-Synopsys-Obtains-Injunction-in-Copyright-Suit-Against-ATopTech\r\nIn case of renaming, maybe all dft commands could start with dft_* so that it's easy to find them ?", "content": [{"author": "ThomasGeroudet", "role": "user", "message": "Hello @maliberty, @fgaray, I've just seen dft commands, but not tried it yet.\r\nThe name of the commands seemed familiar, and I was wondering if it could be better to rename them to avoid potential legal issues such as this one:\r\nhttps://news.synopsys.com/2016-12-21-Synopsys-Obtains-Injunction-in-Copyright-Suit-Against-ATopTech\r\nIn case of renaming, maybe all dft commands could start with dft_* so that it's easy to find them ?", "date": "2024-07-22T17:49:42Z"}, {"author": "fgaray", "role": "assistant", "message": "Yeah, changing the names SGTM to avoid this issue.\r\n\r\nDo we know what other tools use to name this commands? (Cadence for example). I tried looking online but could not find Cadence's related docs.\r\n\r\ndft_insert, dft_scan_replace, dft_preview SGTM", "date": "2024-07-22T18:08:07Z"}, {"author": "maliberty", "role": "assistant", "message": "Thanks, we want to avoid any such conflicts.  I am not aware of the proprietary tool names but am fine with a rename to avoid such.", "date": "2024-07-22T18:36:10Z"}], "date": "2024-07-22T17:49:42Z", "category": "Feature Request", "subcategory": "Command naming", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5333", "id": 5333, "title": "pdgen remove stripes with [WARNING PDN-0200] Removing floating shape:", "author": "titan73", "description": "Based on the example at the bottom of https://openroad.readthedocs.io/en/latest/main/src/pdn/README.html.\r\n\r\nI did the following floorplan with the .def containing the power pins:\r\n\r\n    read_def -floorplan_initialize floor.def\r\n    set fp_area [ord::get_die_area]\r\n    initialize_floorplan -die_area $fp_area -core_area $fp_area -site CORECUBRICK\r\n\r\n    add_global_connection -net VDDD -pin_pattern {^VDDD$} -power\r\n    add_global_connection -net GNDD -pin_pattern {^GNDD$} -ground\r\n\r\n    set_voltage_domain -power VDDD -ground GNDD\r\n\r\n    define_pdn_grid -name \"Core\"\r\n    add_pdn_ring -grid \"Core\" -layers {metal4B alucap} -widths 5.0 -spacings 2.0 -core_offsets 4.5 -connect_to_pads\r\n\r\n    add_pdn_stripe -followpins -layer metal1 -extend_to_core_ring\r\n\r\n    add_pdn_stripe -layer metal4B -width 0.48 -pitch 56.0 -offset 2.0 -extend_to_core_ring\r\n    add_pdn_stripe -layer alucap -width 1.40 -pitch 40.0 -offset 2.0 -extend_to_core_ring\r\n\r\n    add_pdn_connect -layers {metal4B alucap}\r\n    add_pdn_connect -layers {alucap metal4B}\r\n\r\n    pdngen\r\n\r\nThe sroutes and the ring are created but not the stripes and I get the the warnings:\r\n\r\n    [WARNING PDN-0200] Removing floating shape: GNDD (1.7600, -9.5000) - (2.2400, 821.3000) on metal4B\r\n    [WARNING PDN-0200] Removing floating shape: VDDD (29.7600, -16.5000) - (30.2400, 828.3000) on metal4B\r\n\r\nIs there something more to do to connect these shapes?", "content": [{"author": "titan73", "role": "user", "message": "Based on the example at the bottom of https://openroad.readthedocs.io/en/latest/main/src/pdn/README.html.\r\n\r\nI did the following floorplan with the .def containing the power pins:\r\n\r\n    read_def -floorplan_initialize floor.def\r\n    set fp_area [ord::get_die_area]\r\n    initialize_floorplan -die_area $fp_area -core_area $fp_area -site CORECUBRICK\r\n\r\n    add_global_connection -net VDDD -pin_pattern {^VDDD$} -power\r\n    add_global_connection -net GNDD -pin_pattern {^GNDD$} -ground\r\n\r\n    set_voltage_domain -power VDDD -ground GNDD\r\n\r\n    define_pdn_grid -name \"Core\"\r\n    add_pdn_ring -grid \"Core\" -layers {metal4B alucap} -widths 5.0 -spacings 2.0 -core_offsets 4.5 -connect_to_pads\r\n\r\n    add_pdn_stripe -followpins -layer metal1 -extend_to_core_ring\r\n\r\n    add_pdn_stripe -layer metal4B -width 0.48 -pitch 56.0 -offset 2.0 -extend_to_core_ring\r\n    add_pdn_stripe -layer alucap -width 1.40 -pitch 40.0 -offset 2.0 -extend_to_core_ring\r\n\r\n    add_pdn_connect -layers {metal4B alucap}\r\n    add_pdn_connect -layers {alucap metal4B}\r\n\r\n    pdngen\r\n\r\nThe sroutes and the ring are created but not the stripes and I get the the warnings:\r\n\r\n    [WARNING PDN-0200] Removing floating shape: GNDD (1.7600, -9.5000) - (2.2400, 821.3000) on metal4B\r\n    [WARNING PDN-0200] Removing floating shape: VDDD (29.7600, -16.5000) - (30.2400, 828.3000) on metal4B\r\n\r\nIs there something more to do to connect these shapes?", "date": "2024-07-03T17:20:45Z"}, {"author": "titan73", "role": "assistant", "message": "Also note that the related power pins imported the from .def are removed.", "date": "2024-07-03T17:24:27Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you provide a test case?  Its hard to say much from just the output", "date": "2024-07-03T17:24:46Z"}], "date": "2024-07-03T17:20:45Z", "category": "Bug", "subcategory": "Power distribution network issue", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5289", "id": 5289, "title": "UPF support tested with openroad-2024-06-11", "author": "titan73", "description": "I have problems reading the upf (2.1) for my design which is an hard IP.\r\n\r\nI have read https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3531. Since it's mark as answered, I open a new one.\r\n\r\nSome command are missing:\r\n  - upf_version\r\n  - create_supply_port\r\n  - create_supply_net\r\n  - connect_supply_net\r\n  - create_supply_set\r\n  - set_port_attributes\r\n  - add_port_state\r\n  - create_pst\r\n  - add_pst_state\r\n\r\nAnd some commands have missing options:\r\n  - -include_scope  and -supply missing from create_power_domain\r\n  - -isolation_supply, -sink and -source missing from set_isolation (set_level_shifter has sink and -source)\r\n\r\nI have also several questions.\r\n\r\n1) What upf version openroad is supposed to support?\r\n\r\n2) Same question for all examples in git?\r\n  - ./test/upf/mpd_top.upf\r\n  - ./test/upf/mpd_aes.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_ls.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_combined.upf\r\n  - ./src/ifp/test/upf/mpd_top.upf\r\n  - ./src/ifp/test/upf/mpd_shifter.upf\r\n\r\n3) Are there reporting command related to upf (power domains, supply ports, ...)? I searched but didn't find any.\r\n\r\n4) set_level_shifter has 2 options -input_supply and -output_supply that take supply net. Where these nets are supposed to be defined?\r\n    Morover where do these options comes from? UPF 2.0 and 2.1 do no have them. They have -input_supply_set and -output_supply_set that take supply sets (and not nets).\r\n\r\n5) How supply ports are supposed to be created in openroad since there are no command create_supply_port.\r\n\r\nThanks in advance\r\n", "content": [{"author": "titan73", "role": "user", "message": "I have problems reading the upf (2.1) for my design which is an hard IP.\r\n\r\nI have read https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3531. Since it's mark as answered, I open a new one.\r\n\r\nSome command are missing:\r\n  - upf_version\r\n  - create_supply_port\r\n  - create_supply_net\r\n  - connect_supply_net\r\n  - create_supply_set\r\n  - set_port_attributes\r\n  - add_port_state\r\n  - create_pst\r\n  - add_pst_state\r\n\r\nAnd some commands have missing options:\r\n  - -include_scope  and -supply missing from create_power_domain\r\n  - -isolation_supply, -sink and -source missing from set_isolation (set_level_shifter has sink and -source)\r\n\r\nI have also several questions.\r\n\r\n1) What upf version openroad is supposed to support?\r\n\r\n2) Same question for all examples in git?\r\n  - ./test/upf/mpd_top.upf\r\n  - ./test/upf/mpd_aes.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_ls.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_combined.upf\r\n  - ./src/ifp/test/upf/mpd_top.upf\r\n  - ./src/ifp/test/upf/mpd_shifter.upf\r\n\r\n3) Are there reporting command related to upf (power domains, supply ports, ...)? I searched but didn't find any.\r\n\r\n4) set_level_shifter has 2 options -input_supply and -output_supply that take supply net. Where these nets are supposed to be defined?\r\n    Morover where do these options comes from? UPF 2.0 and 2.1 do no have them. They have -input_supply_set and -output_supply_set that take supply sets (and not nets).\r\n\r\n5) How supply ports are supposed to be created in openroad since there are no command create_supply_port.\r\n\r\nThanks in advance\r\n", "date": "2024-06-26T12:46:36Z"}, {"author": "maliberty", "role": "assistant", "message": "\r\nI'm glad to have someone trying to use this functionality as we have developed it but need people to test and give feedback.\r\n\r\nUPF is a large standard (> 500 pages) and OR supports only a core set of functionality.   OR is only concerned with the design creation aspects of UPF and not the functional behavior which it doesn't control.  We are open to enhancing the set we support as the community needs but don't expect to reach 100% coverage anytime soon.  We have worked off the 1801-2018 standard.\r\n\r\nReporting commands are a hole.  What would you like to see in this area?  It shouldn't be hard to add some.  You can query odb directly or use write_upf today.  \r\n\r\nset_level_shifter takes -input_port -output_port.  It looks like those should have been -input_supply/-output_supply.  I'll fix that.\r\n\r\nPower nets either come in explicitly in the netlist or are created by pdn.  You can look at set_voltage_domain in https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pdn/test/power_switch_upf_regions.tcl as an example.  We could add commands to create them from UPF though you will still need to configure pdn for an actual implementation as UPF is quite logical and not physical in its description.", "date": "2024-06-26T14:45:04Z"}, {"author": "titan73", "role": "assistant", "message": "Great! I'm happy to help.\r\n\r\nI'll prepare a simplified upf of our design.\r\nNote that we've just converted the power state table from 1.0 (using add_port_state, create_pst and add_pst_state which are deprecated) to 2.1 with add_power_state. This was planned for later but if something is done in openroad, it's better to implement something which is not deprecated.\r\n\r\nI'll think about with my colleage about what could be added for reporting. In the meantime, I'll try querying odb. How can I do that? I don't see any command that accesses the database.\r\n\r\nThe input netlist from synthesis does not have any power information in our flow & tools although the level shifters are inserted. And Yosys does not support upf anyway. We'd like to create power ports in upf to kept compatibility with other flows & tools so we use the same upf everywhere.\r\n\r\n Thanks!", "date": "2024-06-27T15:19:59Z"}, {"author": "titan73", "role": "assistant", "message": "Here is the simplified version with add_power_state:\r\n\r\nupf_version 2.1\r\n\r\n\r\ncreate_supply_port VDDD1V2\r\ncreate_supply_port -direction inout VDDD\r\n\r\n\r\ncreate_supply_net VDDD\r\ncreate_supply_net VDDD1V2\r\ncreate_supply_net GNDD\r\n\r\n\r\nconnect_supply_net -ports VDDD VDDD\r\nconnect_supply_net -ports VDDD1V2 VDDD1V2\r\nconnect_supply_net -ports GNDD GNDD\r\n\r\n\r\ncreate_supply_set ss_GNDD_VDDD1V2    -function {ground GNDD}   -function {power VDDD1V2}\r\ncreate_supply_set ss_GNDD_VDDD       -function {ground GNDD}   -function {power VDDD}\r\n\r\n\r\ncreate_power_domain PD1 -include_scope -supply {primary ss_GNDD_VDDD}\r\ncreate_power_domain PD2 -elements pd1v2 -supply {primary ss_GNDD_VDDD1V2}\r\n\r\n\r\n# One signal does not have the default power of its power domain\r\nset_port_attributes -ports out_signal_1v2 -receiver_supply ss_GNDD_VDDD1V2\r\n\r\n\r\nadd_power_state ss_GNDD_VDDD1V2 \\\r\n    -state {on_1v2  -supply_expr {(power == {FULL_ON 1.08}) && (ground == {FULL_ON 0})}} \\\r\n    -state {off_1v2 -supply_expr {(power == {OFF})}}\r\n\r\nadd_power_state ss_GNDD_VDDD \\\r\n    -state {on_std  -supply_expr {(power == {FULL_ON 2.25}) && (ground == {FULL_ON 0})}}\r\n\r\nadd_power_state PD1 \\\r\n    -state {dig_on -logic_expr { \\\r\n        (ss_GNDD_VDDD1V2      == on_1v2) && \\\r\n        (ss_GNDD_VDDD         == on_std)}} \\\r\n    -state {dig_off -logic_expr { \\\r\n        (ss_GNDD_VDDD1V2      == off_1v2) && \\\r\n        (ss_GNDD_VDDD         == on_std)}}\r\n\r\n\r\nset_isolation iso_PD2_from_ss_GNDD_VDDD1V2_to_ss_GNDD_VDDD \\\r\n\t-clamp_value 0 \\\r\n\t-domain PD2 \\\r\n\t-isolation_sense low \\\r\n\t-isolation_signal pd1v2/i_isolation \\\r\n\t-isolation_supply ss_GNDD_VDDD \\\r\n\t-sink ss_GNDD_VDDD \\\r\n\t-source ss_GNDD_VDDD1V2\r\n\r\n\r\nset_level_shifter ls_PD2_ss_GNDD_VDDD1V2_to_ss_GNDD_VDDD \\\r\n\t-domain PD2 \\\r\n\t-sink ss_GNDD_VDDD \\\r\n\t-source ss_GNDD_VDDD1V2\r\n\r\nset_level_shifter ls_PD2_ss_GNDD_VDDD_to_ss_GNDD_VDDD1V2 \\\r\n\t-domain PD2 \\\r\n\t-sink ss_GNDD_VDDD1V2 \\\r\n\t-source ss_GNDD_VDDD\r\n", "date": "2024-06-27T15:21:11Z"}, {"author": "titan73", "role": "assistant", "message": "I tested and checked our upf with add_power_state with our design in our flow & tools and everything is fine.\r\nSo I can test openroad when it's available and check against our flow.\r\n", "date": "2024-06-28T12:16:30Z"}, {"author": "titan73", "role": "assistant", "message": "Not sure it worth it to implement legacy 1.0 support but in case you implement it in a row, as it does the same thing, here is the old code:\r\n\r\nadd_port_state VDDD \\\r\n    -state [list VDDD_nom 2.25]\r\n\r\nadd_port_state VDDD1V2 \\\r\n    -state [list VDDD1V2_nom 1.08] \\\r\n    -state [list VDDD1V2_off off]\r\n\r\nadd_port_state GNDD \\\r\n    -state [list gnd_on 0]\r\n\r\ncreate_pst USB_pst                       -supplies {VDDD     VDDD1V2     GNDD}\r\nadd_pst_state pd1v2_on         -pst USB_pst -state {VDDD_nom VDDD1V2_nom gnd_on}\r\nadd_pst_state pd1v2_off        -pst USB_pst -state {VDDD_nom VDDD1V2_off gnd_on}\r\n", "date": "2024-06-28T12:22:49Z"}, {"author": "titan73", "role": "assistant", "message": "Any news on this topic?", "date": "2024-07-03T12:07:30Z"}, {"author": "titan73", "role": "assistant", "message": "Note that if power ports are not created in upf, the associated pins cannot be imported from floorplan .def file with read_def.\r\nSince pdn is run after the .def import, we can't rely on pdn for power ports creation.\r\n\r\n[WARNING ODB-0247] skipping undefined pin VDDD1V2 encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin GNDD encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin VDDD_FTP encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin GNDSUB encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin GNDA_FTP encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin VDDD encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin VDDA_FTP encountered in FLOORPLAN DEF\r\n", "date": "2024-07-03T12:11:37Z"}], "date": "2024-06-26T12:46:36Z", "category": "Runtime", "subcategory": "Missing functionality", "Tool": "Unified Power Format (UPF)"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5312", "id": 5312, "title": "How to query odb database", "author": "titan73", "description": "I want to directly query odb database. How can I do that? There is no command for that.\r\nI found some ord::xxx commands by searching the net but there is no proper documentation with all commands.", "content": [{"author": "titan73", "role": "user", "message": "I want to directly query odb database. How can I do that? There is no command for that.\r\nI found some ord::xxx commands by searching the net but there is no proper documentation with all commands.", "date": "2024-07-01T10:08:48Z"}, {"author": "titan73", "role": "assistant", "message": "also found odb::xxx. No documentation either.\r\nMost functions required a self argument.\r\nTested \"::odb::dbBlock_getPowerDomains [::odb::dbBlock]\" to get power domains but it crashes.", "date": "2024-07-01T12:17:00Z"}, {"author": "titan73", "role": "assistant", "message": "I got to something using orf and odb to get the created power domains:\r\n\r\nforeach pd [::odb::dbBlock_getPowerDomains [::ord::get_db_block]] {\r\n    puts \"[::odb::dbPowerDomain_getName $pd]\"\r\n}\r\n\r\nI think I get the idea. A pity it's not documented.\r\n", "date": "2024-07-01T12:35:47Z"}, {"author": "maliberty", "role": "assistant", "message": "We use swig on https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/include/odb/db.h so the APIs and comments there should be a guide.  If you have specific questions please ask.", "date": "2024-07-01T15:30:36Z"}, {"author": "titan73", "role": "assistant", "message": "Ok thanks. It helps. Although not all methods have comments.  dbPowerDomain for instance.\r\nHow does int& is supposed to be mapped in tcl? Ex: bool getArea(int& x1, int& y1, int& x2, int& y2);", "date": "2024-07-02T13:49:58Z"}], "date": "2024-07-01T10:08:48Z", "category": "Documentation", "subcategory": "Incomplete documentation", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5273", "id": 5273, "title": "Different results locally(laptop, say 32 threads) and on the server(128 threads)", "author": "oharboe", "description": "Q: what happens if we have different number of cores? Should we expect different results after `make place` even if we use manual placement?\r\n\r\nI suppose OpenROAD can use all available CPUs and not heed NUM_CORES in ORFS, so even if I set NUM_CORES to the same, that might not help me get the exact same results?\r\n\r\nI would expect partitioning to affect the results, is this true?\r\n\r\nIf so, can I choose the same partitioning even if NUM_CORES differ?\r\n\r\nAny thoughts on different results locally and on the server in terms of what is expected behavior?", "content": [{"author": "oharboe", "role": "user", "message": "Q: what happens if we have different number of cores? Should we expect different results after `make place` even if we use manual placement?\r\n\r\nI suppose OpenROAD can use all available CPUs and not heed NUM_CORES in ORFS, so even if I set NUM_CORES to the same, that might not help me get the exact same results?\r\n\r\nI would expect partitioning to affect the results, is this true?\r\n\r\nIf so, can I choose the same partitioning even if NUM_CORES differ?\r\n\r\nAny thoughts on different results locally and on the server in terms of what is expected behavior?", "date": "2024-06-22T12:24:35Z"}, {"author": "QuantamHD", "role": "assistant", "message": "It might be this issue https://github.com/The-OpenROAD-Project/OpenROAD/pull/5234", "date": "2024-06-22T15:06:29Z"}, {"author": "oharboe", "role": "assistant", "message": "For now my assumption is a PEBCAK: that I am running two different versions of OpenROAD in CI and locally(multiple levels of docker hell).\r\n\r\nI tried locally with a single level of docker and got the same results on two machines and varying NUM_CORES.", "date": "2024-06-22T16:49:29Z"}, {"author": "maliberty", "role": "assistant", "message": "fwiw https://github.com/The-OpenROAD-Project/OpenROAD/pull/5234 is merged", "date": "2024-06-22T21:44:50Z"}], "date": "2024-06-22T12:24:35Z", "category": "Runtime", "subcategory": "Parallelization issues", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5249", "id": 5249, "title": "Want to know semantics of blockages", "author": "doo3yoon", "description": "Hi\r\n\r\nI applied routing blockages before global routing stage using command lines below for the whole design area,\r\n\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 2 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 3 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 4 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 5 -adjustment 0.2\r\n\r\nand compared its routing resource reduction with the one without routing blockage (refer to the table below).\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/102841960/69b52af8-806c-4f18-bb1e-4059ade2d953)\r\n\r\nBut, I couldn't find a clear connection between blockage value and resource reduction.\r\nFor example, when I reduce 20% for metal2, its derated resource was from 0.89% to 29.75%.\r\n\r\nCould you explain about how the routing blockage affects routing resource reduction?\r\n\r\nThanks and looking forward to hearing from you,\r\n\r\nDooseok\r\n", "content": [{"author": "doo3yoon", "role": "user", "message": "Hi\r\n\r\nI applied routing blockages before global routing stage using command lines below for the whole design area,\r\n\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 2 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 3 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 4 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 5 -adjustment 0.2\r\n\r\nand compared its routing resource reduction with the one without routing blockage (refer to the table below).\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/102841960/69b52af8-806c-4f18-bb1e-4059ade2d953)\r\n\r\nBut, I couldn't find a clear connection between blockage value and resource reduction.\r\nFor example, when I reduce 20% for metal2, its derated resource was from 0.89% to 29.75%.\r\n\r\nCould you explain about how the routing blockage affects routing resource reduction?\r\n\r\nThanks and looking forward to hearing from you,\r\n\r\nDooseok\r\n", "date": "2024-06-15T19:19:40Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please comment", "date": "2024-06-15T22:04:31Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@doo3yoon The resource reduction you see in the run without applying `set_global_routing_region_adjustment` comes from the design obstructions, like PWR/GND nets, instance obstructions, macros, etc.\r\n\r\nThe percentage shown in the report does not match your reduction because it operates over integer values, and we always floor the result. So the global router will always be pessimistic with your reduction value, which can lead to a higher reduction percentage.\r\n\r\nYou can see that the higher layers have more impact because their pitch values are already high, meaning that the original resources will be smaller when compared to the lower layers. When we floor the resources after applying the reduction for these upper layers, we could end with a more significant reduction than the other layers.", "date": "2024-06-17T14:30:01Z"}], "date": "2024-06-15T19:19:40Z", "category": "Query", "subcategory": "Routing resource reduction", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5213", "id": 5213, "title": "Running a simple combinatorial design", "author": "Dandy201", "description": "Hi all, I'm new to using ORFS and tried some tutorials from https://github.com/The-OpenROAD-Project/micro2022tutorial. \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/8a6e4ccd-503a-4751-8ead-8c1c5d209890)\r\n\r\nCompleting exercise 5 got this simple output:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/63ead36e-c51b-456b-9526-819d76f8a209).\r\n\r\nFrom this, I'm trying to make a simple combinational circuit. Running make DESIGN_CONFIG=../../half_Adder/config.mk, it always ends at this error:\r\n\r\n7. Executing Verilog-2005 frontend: /home/dan/Desktop/Work/vlsi/tools/OpenROAD-flow-scripts/flow/platforms/asap7/yoSys/cells_clkgate_R.v\r\nUsing ABC speed script.\r\n[FLOW] Extracting clock period from SDC file: ./results/asap7/halfAdder/base/clock_period.txt\r\n[FLOW] Setting clock period to 5\r\n8. Executing SYNTH pass.\r\n8.1. Executing HIERARCHY pass (managing design hierarchy).\r\n**ERROR: TCL interpreter returned an error: Yosys command produced an error\r\nCommand exited with non-zero status 1\r\nElapsed time: 0:00.59[h:]min:sec. CPU time: user 0.56 sys 0.02 (99%). Peak memory: 72508KB.\r\nmake[1]: *** [Makefile:496: do-yosys] Error 1\r\nmake: *** [Makefile:499: results/asap7/halfAdder/base/1_1_yosys.v] Error 2.**\r\n\r\nConfig file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/324abeb8-c78c-42a6-906f-811f9c4134b6)\r\n\r\nConstraint file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/c305c964-35a7-4fae-b038-7cbb9539f98d)\r\n\r\nVerilog file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/fe9cc773-67be-4235-a4b5-b66b06dee795)\r\n\r\n\r\n\r\n", "content": [{"author": "Dandy201", "role": "user", "message": "Hi all, I'm new to using ORFS and tried some tutorials from https://github.com/The-OpenROAD-Project/micro2022tutorial. \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/8a6e4ccd-503a-4751-8ead-8c1c5d209890)\r\n\r\nCompleting exercise 5 got this simple output:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/63ead36e-c51b-456b-9526-819d76f8a209).\r\n\r\nFrom this, I'm trying to make a simple combinational circuit. Running make DESIGN_CONFIG=../../half_Adder/config.mk, it always ends at this error:\r\n\r\n7. Executing Verilog-2005 frontend: /home/dan/Desktop/Work/vlsi/tools/OpenROAD-flow-scripts/flow/platforms/asap7/yoSys/cells_clkgate_R.v\r\nUsing ABC speed script.\r\n[FLOW] Extracting clock period from SDC file: ./results/asap7/halfAdder/base/clock_period.txt\r\n[FLOW] Setting clock period to 5\r\n8. Executing SYNTH pass.\r\n8.1. Executing HIERARCHY pass (managing design hierarchy).\r\n**ERROR: TCL interpreter returned an error: Yosys command produced an error\r\nCommand exited with non-zero status 1\r\nElapsed time: 0:00.59[h:]min:sec. CPU time: user 0.56 sys 0.02 (99%). Peak memory: 72508KB.\r\nmake[1]: *** [Makefile:496: do-yosys] Error 1\r\nmake: *** [Makefile:499: results/asap7/halfAdder/base/1_1_yosys.v] Error 2.**\r\n\r\nConfig file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/324abeb8-c78c-42a6-906f-811f9c4134b6)\r\n\r\nConstraint file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/c305c964-35a7-4fae-b038-7cbb9539f98d)\r\n\r\nVerilog file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/fe9cc773-67be-4235-a4b5-b66b06dee795)\r\n\r\n\r\n\r\n", "date": "2024-06-08T01:49:39Z"}, {"author": "maliberty", "role": "assistant", "message": "Please package this as a standalone test case and attach it.  Reproducing it from screen shots is inefficient.", "date": "2024-06-08T08:03:35Z"}, {"author": "Dandy201", "role": "assistant", "message": "[try.zip](https://github.com/user-attachments/files/15751707/try.zip)\r\n\r\nHere's the  zip file along with the command : make DESIGN_CONFIG=../../try/config.mk\r\n", "date": "2024-06-09T11:52:33Z"}, {"author": "mi-and-core", "role": "assistant", "message": "(1) change module name from 'half_adder' to 'halfAdder'\r\n", "date": "2024-06-09T15:24:13Z"}, {"author": "maliberty", "role": "assistant", "message": "In the config.mk\r\n```\r\nexport DESIGN_NAME = halfAdder\r\n```\r\nwhile in halfAdder.v:\r\n```\r\nmodule half_adder(\r\n```\r\nThese names need to match.", "date": "2024-06-09T15:32:47Z"}], "date": "2024-06-08T01:49:39Z", "category": "Configuration", "subcategory": "Module name mismatch", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5199", "id": 5199, "title": "Non-rectilinear core area", "author": "Blebowski", "description": "Hello,\r\n\r\nis it possible to somehow specify core-area that is non-rectilinear (e.g. as a group of polygons surrounding concave shape) ?\r\n\r\nI understand that if doing \"digital on top\" FP where all the analog is a digital macro, this does not make sense. However, it may be usefull in case where \"analog-on-top\" is done, and digital may have some weird shape and is eventually placed as hard GDSII macro into analog-on-top design.\r\n\r\n", "content": [{"author": "Blebowski", "role": "user", "message": "Hello,\r\n\r\nis it possible to somehow specify core-area that is non-rectilinear (e.g. as a group of polygons surrounding concave shape) ?\r\n\r\nI understand that if doing \"digital on top\" FP where all the analog is a digital macro, this does not make sense. However, it may be usefull in case where \"analog-on-top\" is done, and digital may have some weird shape and is eventually placed as hard GDSII macro into analog-on-top design.\r\n\r\n", "date": "2024-06-04T14:25:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The simplest would be to make a rectangular block and add placement and routing blockages for the disallowed area", "date": "2024-06-04T14:36:53Z"}, {"author": "Blebowski", "role": "assistant", "message": "Thanks. Can I then do the `add_pdn_ring` around just the cut area (e.g. L-shape pdn-ring) ?  Or is there some other trick how\r\nto achieve this ?", "date": "2024-06-05T07:46:25Z"}], "date": "2024-06-04T14:25:31Z", "category": "Configuration", "subcategory": "Floorplan customization", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5168", "id": 5168, "title": "Move `_zero` to special nets", "author": "Blebowski", "description": "Hi,\r\nrelated to previous question, when I proceed to detailed routing, I get:\r\n```\r\ndetailed_route -bottom_routing_layer ME2 -top_routing_layer ME5\r\n```\r\n```\r\n[ERROR DRT-0305] Net zero_ of signal type GROUND is not routable by TritonRoute. Move to special nets.\r\n[ERROR GUI-0070] DRT-0305\r\n```\r\n\r\nBefore, I created my voltage domain and power-grid like so:\r\n```\r\nadd_global_connection -net VDD -pin_pattern {^VDD$} -power\r\nadd_global_connection -net VSS -pin_pattern {^VSS$} -ground\r\n\r\nset_voltage_domain -name VDD_1V2 -power VDD -ground VSS\r\n\r\ndefine_pdn_grid -name \"Core\"\r\n\r\n\r\nadd_pdn_stripe -layer ME1 -followpins -width 0.2\r\n\r\nadd_pdn_ring -grid \"Core\" -layers {ME4 ME5} -widths 4.5 -spacings 1.0 -core_offsets {0 0} -add_connect\r\n\r\nadd_pdn_stripe -layer ME4 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\nadd_pdn_stripe -layer ME5 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\n\r\nadd_pdn_connect -layers {ME1 ME4}\r\nadd_pdn_connect -layers {ME1 ME5}\r\n\r\npdngen\r\n```\r\n\r\nI thought that \"moving zero_ to special nets\" can be accomplished by something like:\r\n```\r\nassign_ground_net -domain VDD_1V2 -net [get_nets zero_]\r\n```\r\nBut that throws me:\r\n```\r\n[ERROR ODB-0335] group does not exist\r\n[ERROR GUI-0070] ODB-0335\r\n```\r\n\r\nCan you help me out here?\r\nProbably I am just doing something super-stupid...\r\n", "content": [{"author": "Blebowski", "role": "user", "message": "Hi,\r\nrelated to previous question, when I proceed to detailed routing, I get:\r\n```\r\ndetailed_route -bottom_routing_layer ME2 -top_routing_layer ME5\r\n```\r\n```\r\n[ERROR DRT-0305] Net zero_ of signal type GROUND is not routable by TritonRoute. Move to special nets.\r\n[ERROR GUI-0070] DRT-0305\r\n```\r\n\r\nBefore, I created my voltage domain and power-grid like so:\r\n```\r\nadd_global_connection -net VDD -pin_pattern {^VDD$} -power\r\nadd_global_connection -net VSS -pin_pattern {^VSS$} -ground\r\n\r\nset_voltage_domain -name VDD_1V2 -power VDD -ground VSS\r\n\r\ndefine_pdn_grid -name \"Core\"\r\n\r\n\r\nadd_pdn_stripe -layer ME1 -followpins -width 0.2\r\n\r\nadd_pdn_ring -grid \"Core\" -layers {ME4 ME5} -widths 4.5 -spacings 1.0 -core_offsets {0 0} -add_connect\r\n\r\nadd_pdn_stripe -layer ME4 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\nadd_pdn_stripe -layer ME5 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\n\r\nadd_pdn_connect -layers {ME1 ME4}\r\nadd_pdn_connect -layers {ME1 ME5}\r\n\r\npdngen\r\n```\r\n\r\nI thought that \"moving zero_ to special nets\" can be accomplished by something like:\r\n```\r\nassign_ground_net -domain VDD_1V2 -net [get_nets zero_]\r\n```\r\nBut that throws me:\r\n```\r\n[ERROR ODB-0335] group does not exist\r\n[ERROR GUI-0070] ODB-0335\r\n```\r\n\r\nCan you help me out here?\r\nProbably I am just doing something super-stupid...\r\n", "date": "2024-05-27T11:09:21Z"}, {"author": "maliberty", "role": "assistant", "message": "Generally _zero is avoided by using hilomap in yosys.  If you are not using yosys then I suggest using insert_tiecells", "date": "2024-05-27T16:06:29Z"}, {"author": "Blebowski", "role": "assistant", "message": "Thanks :) ", "date": "2024-05-28T11:23:28Z"}], "date": "2024-05-27T11:09:21Z", "category": "Runtime", "subcategory": "Routing issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2745", "id": 2745, "title": "Options in the Python API", "author": "maliberty", "description": "The python api differs from tcl in being more OO (objects/methods) rather than command oriented.  I'd like to discuss standardizing how that API accept options.  Current APIs are variable:\r\n- Some use state building commands.  For example pdn has define_pdn_grid, add_pdn_stripe, etc.\r\n- Some persistently hold an options object that can be modified by the user.  For example TritonCTS::getParms()\r\n- Some take their options as arguments.  For example Resizer::repairHold(...)\r\n\r\nComplicating cases are:\r\n- Tools that call other tools.  For example gpl calls grt and rsz\r\n- Incremental operations that retain state between invocations.  For example grt and sta\r\n\r\nMy best thought on how to standardize is to have a persistent set of default options and the ability to pass an overriding set.  A sketch of the idea:\r\n```\r\nclass ToolOptions\r\n{\r\npublic:\r\n  ToolOptions(); // a well-defined default state\r\n  void setOptionA(int value);\r\n  void setOptionB(bool value);\r\n};\r\n\r\nclass Tool\r\n{\r\npublic:\r\n  static ToolOptions* getDefaultOptions();\r\n\r\n  // if options is nullptr then the default options are used.\r\n  void task(ToolOptions* options = nullptr);\r\n\r\nprivate:\r\n  static ToolOptions* default_options_;\r\n};\r\n```\r\n\r\nOne use model would be pre-configuration (in C++ but similarly in python)\r\n```\r\n// setup\r\nauto default_options = Tool::getDefaultOptions();\r\ndefault_options.setOptionB(false);\r\n\r\n// later\r\ntool->task();\r\n```\r\n\r\nAnother use model could be\r\n```\r\nToolOptions options;\r\noptions.setOptionB(false);\r\ntool->task(options);\r\n```\r\n\r\nThis can be extended to the case of one tool calling another internally with an API like:\r\n```\r\nvoid task(ToolOptions* options = nullptr,\r\n          AnotherToolOptions* options = nullptr);\r\n```\r\n\r\nFor a sufficiently complicated tool the options object could itself become a sub-configuration builder.  For example:\r\n```\r\nclass PdnOptions\r\n{\r\npublic:\r\n  RingOptions* add_ring();\r\n};\r\n```\r\n\r\nThe case of an incremental tool is tricky.  If asked to do an update I think it should do so according to the last set of options (default or not) that it used.  This implies that it must keep a copy of any non-default options object.\r\n\r\nI'm open to other ideas or improvements.  I'd love to hear from folks @gadfort @macd @QuantamHD @cdleary @osamahammad21 @antonblanchard @donn @rovinski ", "content": [{"author": "maliberty", "role": "user", "message": "The python api differs from tcl in being more OO (objects/methods) rather than command oriented.  I'd like to discuss standardizing how that API accept options.  Current APIs are variable:\r\n- Some use state building commands.  For example pdn has define_pdn_grid, add_pdn_stripe, etc.\r\n- Some persistently hold an options object that can be modified by the user.  For example TritonCTS::getParms()\r\n- Some take their options as arguments.  For example Resizer::repairHold(...)\r\n\r\nComplicating cases are:\r\n- Tools that call other tools.  For example gpl calls grt and rsz\r\n- Incremental operations that retain state between invocations.  For example grt and sta\r\n\r\nMy best thought on how to standardize is to have a persistent set of default options and the ability to pass an overriding set.  A sketch of the idea:\r\n```\r\nclass ToolOptions\r\n{\r\npublic:\r\n  ToolOptions(); // a well-defined default state\r\n  void setOptionA(int value);\r\n  void setOptionB(bool value);\r\n};\r\n\r\nclass Tool\r\n{\r\npublic:\r\n  static ToolOptions* getDefaultOptions();\r\n\r\n  // if options is nullptr then the default options are used.\r\n  void task(ToolOptions* options = nullptr);\r\n\r\nprivate:\r\n  static ToolOptions* default_options_;\r\n};\r\n```\r\n\r\nOne use model would be pre-configuration (in C++ but similarly in python)\r\n```\r\n// setup\r\nauto default_options = Tool::getDefaultOptions();\r\ndefault_options.setOptionB(false);\r\n\r\n// later\r\ntool->task();\r\n```\r\n\r\nAnother use model could be\r\n```\r\nToolOptions options;\r\noptions.setOptionB(false);\r\ntool->task(options);\r\n```\r\n\r\nThis can be extended to the case of one tool calling another internally with an API like:\r\n```\r\nvoid task(ToolOptions* options = nullptr,\r\n          AnotherToolOptions* options = nullptr);\r\n```\r\n\r\nFor a sufficiently complicated tool the options object could itself become a sub-configuration builder.  For example:\r\n```\r\nclass PdnOptions\r\n{\r\npublic:\r\n  RingOptions* add_ring();\r\n};\r\n```\r\n\r\nThe case of an incremental tool is tricky.  If asked to do an update I think it should do so according to the last set of options (default or not) that it used.  This implies that it must keep a copy of any non-default options object.\r\n\r\nI'm open to other ideas or improvements.  I'd love to hear from folks @gadfort @macd @QuantamHD @cdleary @osamahammad21 @antonblanchard @donn @rovinski ", "date": "2023-01-13T00:19:27Z"}, {"author": "maliberty", "role": "assistant", "message": "@proppy ", "date": "2023-01-13T00:19:37Z"}, {"author": "QuantamHD", "role": "assistant", "message": "I like the idea, but I think I would make a modification to a builder architecture, which I think makes sense for two reasons.\r\n\r\n1. It allows you to do more validation in your builder which would give us the ability ensure that a user can never create an invalid tool configuration. For example creating a PDN that has straps repeat at a greater pitch than the width of the chip (Which I've run into)\r\n2. I like the idea of `ToolOptions` being an Immutable object. It means that a tool cannot modify the options which I think reduces the possibility of tools doing weird things with user provided options.\r\n\r\n```c++\r\nclass ToolOptionsBuilder : OptionBuilder {\r\npublic:\r\n  /*\r\n  * Not necessarily required in all cases, but could help build default options for a particular PDK, or\r\n  * core size etc.\r\n  */\r\n  ToolOptionsBuilder(Design *);\r\n\r\n  void setOptionA(int A);\r\n  void setOptionB(bool B);\r\n  ErrorOr<ToolOptions> create(); // could also throw an exception.\r\n}\r\n\r\nclass ToolOptions : ToolOption{\r\nprivate:\r\n   ToolOptions(int A, bool B); // a well-defined default state\r\n\r\npublic:\r\n   int getOptionA();\r\n   bool getOptionB();\r\n};\r\n \r\nclass Tool {\r\npublic:\r\n   static ToolOptions* getDefaultOptions(); // calls ToolOptionsBuilder(...).create(); \r\n \r\n   // if options is nullptr then the default options are used.\r\n   void task(ToolOptions* options = nullptr); \r\n};\r\n```\r\n\r\n\r\n\r\n> ```c++\r\n> // setup\r\n> auto default_options = Tool::getDefaultOptions();\r\n> default_options.setOptionB(false);\r\n> \r\n> // later\r\n> tool->task();\r\n> ```\r\nI don't like the idea of modifying the default options object, seems very error prone.\r\n\r\n\r\n\r\n> Another use model could be\r\n> \r\n> ```c++\r\n> ToolOptionsBuilder options;\r\n> options.setOptionB(false);\r\n> tool->task(options.create());\r\n> ```\r\nI like this model, but with the builder pattern.\r\n\r\n\r\n> This can be extended to the case of one tool calling another internally with an API like:\r\n> \r\n> ```c++\r\n> void task(ToolOptions* options = nullptr,\r\n>           AnotherToolOptions* options = nullptr);\r\n> ```\r\nI think this is a greate idea too.\r\n\r\n\r\n> For a sufficiently complicated tool the options object could itself become a sub-configuration builder. For example:\r\n> \r\n> ```c++\r\n> class PdnOptions\r\n> {\r\n> public:\r\n>   RingOptions* getRing();\r\n> };\r\n> ```\r\nI like this but again should be constructed using builders.\r\n\r\n\r\n> The case of an incremental tool is tricky. If asked to do an update I think it should do so according to the last set of options (default or not) that it used. This implies that it must keep a copy of any non-default options object.\r\n\r\nI think there's also another problem\r\n1. The common use mode of the tools is to do one step then dump an ODB file. I don't think we can get rid of this use mode, because then it would be impossible to run the tool incrementally. Which is making me feel like we need to serialize them into the database.\r\n\r\nI've thought about it a bunch, and I think storing a hidden only history from a user is probably not the right API instead I suggest. \r\n\r\n```c++\r\nclass Tool {\r\npublic:\r\n   static ToolOptions* getDefaultOptions(); // calls ToolOptionsBuilder(...).create();\r\n   set incrementalOptions(ToolOptions* options);\r\n \r\n   // if options is nullptr then the default options are used.\r\n   void task(ToolOptions* options = nullptr);\r\n \r\nprivate:\r\n  ToolOptions* incremental_options_;\r\n\r\n};\r\n```\r\n\r\nOn construction the incrementalOptions are set to what's provided in the constructor, or can be updated by the user.\r\n\r\nThis brings up another question about incremental APIs. @maliberty how do you envision a tool getting access to a `Tool` object will the user need to pass one into the options, or something else?\r\n", "date": "2023-01-13T18:43:31Z"}, {"author": "rovinski", "role": "assistant", "message": "It's a very interesting question and I feel like I've become jaded because of how inconsistent commercial tools are. It seems like tools (both commercial and OpenROAD) always consist of some combination of the three options you mentioned. What's worse is that commercial tools can be some kind of weird blend of global variables, app variables, tool variables, etc. all with different methods for accessing them... it can get overwhelming.\r\n\r\nI think for the most part, I like the idea of doing away with arguments to commands and having all options passed through some kind of options object. The caveat is that I am split on whether that's appropriate for very simple commands that only take one parameter, like `read_odb [filename]`.\r\n\r\nWhatever the decision is, I _definitely_ want to see a common command / interface that lets a user easily query all parameters that can be set for a tool. For example:\r\n```\r\nopenroad> list_parameters Tool\r\nParameters for command 'Tool':\r\nParameter  Type  Value  Default Description\r\n-------------------------------------------\r\nA          int   1      1       Short description of A\r\nB          bool  1      0       Short description of B\r\n-------------------------------------------\r\nUse 'help Tool' for more information on this command's parameters\r\n\r\nopenroad> help Tool\r\nParameter  Definition\r\n------------------------\r\nA          This is a long-form description of A. Here are the valid values, maybe some tips, etc.\r\n           The description could be multiple lines.\r\n\r\nB          This is a long-form description of B. Here are the valid values, maybe some tips, etc.\r\n\r\nUse 'list_parameters Tool' to list the current values for this command's parameters\r\n```\r\n\r\nHidden state / parameters is one of the things I hate the most about commercial tools. At the same time, a user definitely shouldn't _need_ to set parameters they don't know about, like bin grid size for GPL.\r\n\r\nThese comments are mostly concerning the user-side interface. As for the developer / C++ API, I don't think I have strong opinions. I think the proposed interface sounds ok.", "date": "2023-01-14T07:44:28Z"}, {"author": "maliberty", "role": "assistant", "message": "I'm lukewarm on a builder.  Your two arguments for it were:\r\n\r\n\"It allows you to do more validation in your builder\".  You can just as easily do this validation in the task.  If you want to do it in the  builder then you will have to restrict when it can be used (ie not before the db is populated) which seems awkward.  The builder itself will have to be constructed by the tool to give it enough state for validation.\r\n\r\n\"I like the idea of ToolOptions being an Immutable object. It means that a tool cannot modify the options which I think reduces the possibility of tools doing weird things with user provided options.\"  I see two problems.  The tool can always clone the options object and do \"weird things\".  In gpl for example we set options before calling grt (see https://github.com/The-OpenROAD-Project/OpenROAD/blob/b632f9f5177bc27fe7323beb1e5a97a8c904ccee/src/gpl/src/routeBase.cpp#L374).  I wouldn't want to force the user to know to do so.", "date": "2023-01-14T16:00:47Z"}, {"author": "maliberty", "role": "assistant", "message": "re \"I don't like the idea of modifying the default options object, seems very error prone.\"\r\n\r\nI have a somewhat similar feeling but I'm also afraid of producing very complex API calls (eg gpl).  I think some people would prefer to setup the tools upfront.  Also interactively it will save a lot of typing.  However I am fine to remove it if there is a consensus that it isn't useful.", "date": "2023-01-14T16:02:12Z"}, {"author": "maliberty", "role": "assistant", "message": "Putting the options in the db will open it up to tons of schema updates which is undesirable.  Or we would have to make the storage extremely generic which will push the validation on load problem to each tool which isn't much better.  Its also error prone for the user.\r\n\r\nI lean toward saying that on reload you don't get any incremental operations.  We are living with that today, sta is not incremental across restart.", "date": "2023-01-14T16:11:56Z"}, {"author": "donn", "role": "assistant", "message": "Sorry it's taken me a minute to respond to this- perhaps I can offer a bit of a different perspective being more on the user side, but:\r\n\r\n* Lukewarm on the builder, too. I don't see the utility outside of a niche case where I may elect to build and serialize the options in OpenLane then use it in OpenROAD, but I'm fairly sure that won't be possible regardless.\r\n* I like the idea of immutability vs. modifying a global variable. I get that means more typing, but I think it's worth it just to have less surprises. i.e. I wholeheartedly endorse this model:\r\n```c++\r\nToolOptions options;\r\noptions.setOptionB(false);\r\ntool->task(options);\r\n```\r\n\r\nFrom where I stand, the above model would let me write a single common file to convert OpenLane variables to an OpenROAD ToolOptions object generator, which can then be passed onto other tools. ", "date": "2023-01-15T11:04:55Z"}, {"author": "maliberty", "role": "assistant", "message": "@rovinski tcl is a completely different API with lots of manual coding.  Converting it look like python, if possible, would introduce the same friction of it looking nothing like usual EDA tools' tcl interface.  I don't think it is worth the effort to maintain two sets of APIs.  Klayout supporting both python & ruby is much simpler since they are both OO languages.  We could do that too more easily (though I have no desire to).", "date": "2023-01-15T21:53:07Z"}, {"author": "maliberty", "role": "assistant", "message": "Based on the discussions I'm wondering if it is preferrable to eliminate the global state and use only explicit options with a default arg:\r\n```\r\nclass Tool\r\n{\r\npublic:\r\n  void task(const ToolOptions& options = ToolOptions());\r\n  void complex_task(const ToolOptions& options = ToolOptions(),\r\n                    const AnotherToolOptions& other_options = AnotherToolOptions());\r\n};\r\n```", "date": "2023-01-16T05:27:04Z"}, {"author": "donn", "role": "assistant", "message": "Should probably add- syntactic sugar in the form of\r\n\r\n```c++\r\nauto options = ToolOptions {\r\n    {\"a\", \"value1\"},\r\n    {\"b\", \"value2\"}\r\n};\r\n```\r\n\r\ni.e., one that basically takes a dict,  with the appropriate bridging to python:\r\n\r\n```python\r\noptions = ToolOptions(\r\n   a=\"value1\",\r\n   b=\"value2\",\r\n)\r\n```\r\n\r\nwould be pretty cool", "date": "2023-01-17T00:20:23Z"}, {"author": "maliberty", "role": "assistant", "message": "For a next step I want to make a concrete example.  Looking at gpl it fits this model well is it is a single task (placement) with many options.  \r\n\r\nWhen I look at ifp it is more problematic.  It is a tool with multiple semi-related tasks: initFloorplan, insertTieCells, and makeTracks.  I don't feel it makes sense to have a single options object to cover such diverse tasks.  Perhaps this would be better formulated as TaskOptions rather than ToolOptions.  A TaskOptions could replace the need for overloaded methods.\r\n\r\nThis does run the risk of a proliferation of classes - worst case is one for every method.  I am hopeful that the number of tasks is fairly limited per tool today.", "date": "2023-01-20T00:04:35Z"}, {"author": "maliberty", "role": "assistant", "message": "I created https://github.com/The-OpenROAD-Project/OpenROAD/pull/2809 as a example of what the revised API for gpl could look like.  The user tcl layer is unchanged but python and c++ see a new options object.  Replace has way too many options so it produces a very large object interface.\r\n\r\nHaving made the change I'm a bit on the fence about keeping it like this versus making either (1) a code generator from a description file or (2) a more weakly typed interface using string (or enum) keys with a variant value and a single get/set method.  I'm glad to hear opinions.", "date": "2023-01-24T14:57:16Z"}, {"author": "maliberty", "role": "assistant", "message": "Any thoughts on either the existing approach or my other suggestion?", "date": "2023-01-25T04:53:27Z"}, {"author": "maliberty", "role": "assistant", "message": "I came across https://abseil.io/tips/173 which gives some nice ideas for using designated initializers", "date": "2024-05-28T01:00:45Z"}], "date": "2023-01-13T00:19:27Z", "category": "Query", "subcategory": "Usage question", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5158", "id": 5158, "title": "[WARNING PDN-0195] Removing 5 via(s) between M2 and M5 at (35.7900 um, 1291.9420 um) for VSS", "author": "oharboe", "description": "What does it mean and what should I do?\r\n\r\nFrom latest https://github.com/The-OpenROAD-Project/megaboom PDN", "content": [{"author": "oharboe", "role": "user", "message": "What does it mean and what should I do?\r\n\r\nFrom latest https://github.com/The-OpenROAD-Project/megaboom PDN", "date": "2024-05-24T12:27:51Z"}, {"author": "maliberty", "role": "assistant", "message": "@gadfort any comments?", "date": "2024-05-24T14:06:05Z"}, {"author": "oharboe", "role": "assistant", "message": "I see... Not an unfamiliar situation in EDA tools.... \r\n\r\nIn C++ one can generally remove all warnings, not so in FPGA/EDA tools....\r\n\r\nI going to forego filing a github issue on this case for now.", "date": "2024-05-24T15:07:08Z"}], "date": "2024-05-24T12:27:51Z", "category": "Runtime", "subcategory": "Warning message", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5087", "id": 5087, "title": "Add rectangle through odb scripting", "author": "OuDret", "description": "Hello,\r\n\r\nI was trying to place some rectangles/boxes using odb scripting but I did not manage to make it work. \r\n\r\nIs it even possible?", "content": [{"author": "OuDret", "role": "user", "message": "Hello,\r\n\r\nI was trying to place some rectangles/boxes using odb scripting but I did not manage to make it work. \r\n\r\nIs it even possible?", "date": "2024-05-10T15:07:48Z"}, {"author": "maliberty", "role": "assistant", "message": "What sort of rectange/box are you trying to add?  The odb api from db.h is swig'ed to tcl.", "date": "2024-05-12T04:45:22Z"}, {"author": "maliberty", "role": "assistant", "message": "> Which is not exactly what pdn ring do.\r\n\r\nWhat do you get with a ring?", "date": "2024-05-22T15:22:58Z"}], "date": "2024-05-10T15:07:48Z", "category": "Query", "subcategory": "Scripting question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5101", "id": 5101, "title": "OpenROAD build with recent versions of FMT and SPDLOG", "author": "sebinho", "description": "I am not sure where to put this, but I had lots of issues lately building OpenROAD on ArchLinux and I thought this might help other people.\r\nThe issues I had seem to be related to more recent versions of spdlog and fmt packages.\r\nDowgrading fmt to 8.1.1-2 and spdlog to 1.13.0 solves the issues (latest versions are 10.2.0-1 and 1.14.1-1).\r\n\r\nThe issues were as follows during the build (one example, others are similar):\r\n\r\n```\r\n/usr/include/fmt/core.h:1600:63: error: \u2018fmt::v10::detail::type_is_unformattable_for<const dpl::TypedCoordinate<dpl::GridYType>, char> _\u2019 has incomplete type\r\n 1600 |     type_is_unformattable_for<T, typename Context::char_type> _;\r\n      |                                                               ^\r\n/usr/include/fmt/core.h:1604:7: error: static assertion failed: Cannot format an argument. To make type T formattable provide a formatter<T> specialization: https://fmt.dev/latest/api.html#udt\r\n 1604 |       formattable,\r\n      |       ^~~~~~~~~~~\r\n/usr/include/fmt/core.h:1604:7: note: \u2018formattable\u2019 evaluates to false\r\n```\r\n\r\nThe better way for me to solve my issue (instead of downgrading packages) was to build OpenROAD with the following flag during `cmake`: `-DSPDLOG_FMT_EXTERNAL=OFF`", "content": [{"author": "sebinho", "role": "user", "message": "I am not sure where to put this, but I had lots of issues lately building OpenROAD on ArchLinux and I thought this might help other people.\r\nThe issues I had seem to be related to more recent versions of spdlog and fmt packages.\r\nDowgrading fmt to 8.1.1-2 and spdlog to 1.13.0 solves the issues (latest versions are 10.2.0-1 and 1.14.1-1).\r\n\r\nThe issues were as follows during the build (one example, others are similar):\r\n\r\n```\r\n/usr/include/fmt/core.h:1600:63: error: \u2018fmt::v10::detail::type_is_unformattable_for<const dpl::TypedCoordinate<dpl::GridYType>, char> _\u2019 has incomplete type\r\n 1600 |     type_is_unformattable_for<T, typename Context::char_type> _;\r\n      |                                                               ^\r\n/usr/include/fmt/core.h:1604:7: error: static assertion failed: Cannot format an argument. To make type T formattable provide a formatter<T> specialization: https://fmt.dev/latest/api.html#udt\r\n 1604 |       formattable,\r\n      |       ^~~~~~~~~~~\r\n/usr/include/fmt/core.h:1604:7: note: \u2018formattable\u2019 evaluates to false\r\n```\r\n\r\nThe better way for me to solve my issue (instead of downgrading packages) was to build OpenROAD with the following flag during `cmake`: `-DSPDLOG_FMT_EXTERNAL=OFF`", "date": "2024-05-14T09:34:01Z"}, {"author": "rovinski", "role": "assistant", "message": "You might want to take a look at the dependency installer because this issue is known. It may not have support for Arch but you can look at comments for other distros for notes like this.", "date": "2024-05-14T20:37:40Z"}, {"author": "maliberty", "role": "assistant", "message": "Please see my comment about FMT_DEPRECATED_OSTREAM  in https://github.com/The-OpenROAD-Project/OpenROAD/pull/2696", "date": "2024-05-14T21:50:20Z"}], "date": "2024-05-14T09:34:01Z", "category": "Build", "subcategory": "Dependency compatibility issues", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5058", "id": 5058, "title": "Does an improved default policy for NUM_CORES in detailed routing exist?", "author": "oharboe", "description": "Some rough numbers and takeaways:\r\n\r\nFirst: virtual memory size is the total amount of memory allocated by the process. Resident memory size, measured by make elapsed, is the amount of physical memory in use. Measuring virtual memory size can not be done by the \"time\" command.\r\n\r\n\r\nThe current default policy of using all CPU cores, 48 in my case, vs. 6 below, doesn't have a material difference in memory usage (virtual memory size). I don't have accurate numbers from that, just what I recall from having observed detailed routing in the past on megaboom. In both cases, max resident set is near physical memory(90%+).\r\n\r\nThe speed doesn't improve, nor deteriorate above 24 cores(50%).\r\n\r\nSince I don't care if I use virtual memory, I have to set it up anyway, then, based on the measurement below, it would seem that there is no improved policy that exists for megaboom, for the observable parameters I care about.\r\n\r\nIt is surprising to me that memory usage in detailed routing isn't a function of number of cores. I don't know why, but I always thought so, to the point where I fooled myself to believing I heard it somewhere. Am I missing something?\r\n\r\n\r\n\r\nNumbers from \"make elapsed\", so seconds, then megabytes resident memory set.\r\n\r\nNUM_CORES=48\r\n\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017246 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060673\r\nNUM_CORES=24\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017516 \u00a0 \u00a0 \u00a0 \u00a0 \u00a061012\r\nNUM_CORES=12\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a028831 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060868\r\nNUM_CORES=6\r\n\r\nStill it uses more than 64gByte of virtual memory, runs for at least 40000 seconds(didn't finish\u00a0yet, but I finished my investigations here).\r\n\r\n```\r\n\u00a0 \u00a0 PID USER \u00a0 \u00a0 \u00a0PR \u00a0NI \u00a0 \u00a0VIRT \u00a0 \u00a0RES \u00a0 \u00a0SHR S \u00a0%CPU \u00a0%MEM \u00a0 \u00a0 TIME+ COMMAND \u00a0\r\n2368797 oyvind \u00a0 \u00a020 \u00a0 0 \u00a0 76,0g \u00a056,6g \u00a0 1920 R 270,0 \u00a090,4 \u00a0 \u00a0 63,22 openroad\u00a0\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Some rough numbers and takeaways:\r\n\r\nFirst: virtual memory size is the total amount of memory allocated by the process. Resident memory size, measured by make elapsed, is the amount of physical memory in use. Measuring virtual memory size can not be done by the \"time\" command.\r\n\r\n\r\nThe current default policy of using all CPU cores, 48 in my case, vs. 6 below, doesn't have a material difference in memory usage (virtual memory size). I don't have accurate numbers from that, just what I recall from having observed detailed routing in the past on megaboom. In both cases, max resident set is near physical memory(90%+).\r\n\r\nThe speed doesn't improve, nor deteriorate above 24 cores(50%).\r\n\r\nSince I don't care if I use virtual memory, I have to set it up anyway, then, based on the measurement below, it would seem that there is no improved policy that exists for megaboom, for the observable parameters I care about.\r\n\r\nIt is surprising to me that memory usage in detailed routing isn't a function of number of cores. I don't know why, but I always thought so, to the point where I fooled myself to believing I heard it somewhere. Am I missing something?\r\n\r\n\r\n\r\nNumbers from \"make elapsed\", so seconds, then megabytes resident memory set.\r\n\r\nNUM_CORES=48\r\n\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017246 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060673\r\nNUM_CORES=24\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017516 \u00a0 \u00a0 \u00a0 \u00a0 \u00a061012\r\nNUM_CORES=12\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a028831 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060868\r\nNUM_CORES=6\r\n\r\nStill it uses more than 64gByte of virtual memory, runs for at least 40000 seconds(didn't finish\u00a0yet, but I finished my investigations here).\r\n\r\n```\r\n\u00a0 \u00a0 PID USER \u00a0 \u00a0 \u00a0PR \u00a0NI \u00a0 \u00a0VIRT \u00a0 \u00a0RES \u00a0 \u00a0SHR S \u00a0%CPU \u00a0%MEM \u00a0 \u00a0 TIME+ COMMAND \u00a0\r\n2368797 oyvind \u00a0 \u00a020 \u00a0 0 \u00a0 76,0g \u00a056,6g \u00a0 1920 R 270,0 \u00a090,4 \u00a0 \u00a0 63,22 openroad\u00a0\r\n```\r\n", "date": "2024-05-07T06:41:44Z"}, {"author": "maliberty", "role": "assistant", "message": "Not speeding up over 24 cpu suggests hitting the limit due to serial time per Amdahl.\r\n\r\nI expect most of the memory is in the netlist and segs/vias not the local per thread routing structures.  In any case the RSS can't grow beyond the available memory so any excess would be in the virtual size which isn't measured here.  ", "date": "2024-05-07T13:43:59Z"}, {"author": "maliberty", "role": "assistant", "message": "OR could print vm size as well as rss size if that is useful.  The data is available in /proc's statm (or stat or pid).", "date": "2024-05-07T13:58:00Z"}, {"author": "oharboe", "role": "assistant", "message": "Just one more datapoint. After detailed route completed with NUM_CORES=48, this is reported by \"top\":\r\n\r\n```\r\n    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                \r\n2424810 oyvind    20   0   80,3g  57,8g   9600 D  57,8  92,2     7d+2h openroad      \r\n```\r\n\r\nFrom above, with NUM_CORES=6, essentially no difference.\r\n\r\n```\r\n\u00a0 \u00a0 PID USER \u00a0 \u00a0 \u00a0PR \u00a0NI \u00a0 \u00a0VIRT \u00a0 \u00a0RES \u00a0 \u00a0SHR S \u00a0%CPU \u00a0%MEM \u00a0 \u00a0 TIME+ COMMAND \u00a0\r\n2368797 oyvind \u00a0 \u00a020 \u00a0 0 \u00a0 76,0g \u00a056,6g \u00a0 1920 R 270,0 \u00a090,4 \u00a0 \u00a0 63,22 openroad\u00a0\r\n```\r\n", "date": "2024-05-08T10:53:00Z"}], "date": "2024-05-07T06:41:44Z", "category": "Runtime", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5065", "id": 5065, "title": "howo to run openroad by reading an existing DEF file", "author": "bittnada", "description": "Hello\r\nI have a DEF file in which row, track, components, and pins are written.\r\nThe position of the cells are on the step of global placement, obtained by using another method.\r\nNow, I want to finish the rest of the procedures by modifying \"test/flow.tcl\" file.\r\nI just skipped the steps of pin placement and global placement and  added \"read_def [my_def_fiel}'\", but it did not work.\r\nI will appreciate if anyone let me know how to solve this problem.\r\nThanks,\r\n\r\n", "content": [{"author": "bittnada", "role": "user", "message": "Hello\r\nI have a DEF file in which row, track, components, and pins are written.\r\nThe position of the cells are on the step of global placement, obtained by using another method.\r\nNow, I want to finish the rest of the procedures by modifying \"test/flow.tcl\" file.\r\nI just skipped the steps of pin placement and global placement and  added \"read_def [my_def_fiel}'\", but it did not work.\r\nI will appreciate if anyone let me know how to solve this problem.\r\nThanks,\r\n\r\n", "date": "2024-05-08T03:04:19Z"}, {"author": "maliberty", "role": "assistant", "message": "What happened when it \"did not work\"?  Its not much to go on.", "date": "2024-05-08T05:20:49Z"}, {"author": "bittnada", "role": "assistant", "message": "\r\nSorry for my delayed response.\r\n\r\nI've just conducted a test using gcd_nangate45.tcl, and I've created my own DEF file containing rows, tracks, pins, nets, and components. I performed a simple test by modifying a flow.tcl script to skip buffer insertion, IO placement, Macro Placement, tap cell insertion, power distribution, and global placement, and then adding \"read_def\".\r\n\r\nAfter running gcd_nangate45.tcl, I received the following output:\r\n\r\n====================================================================================\r\nOpenROAD v2.0-13652-g6fc686431 \r\nFeatures included (+) or not (-): +Charts +GPU +GUI +Python\r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\n[INFO ODB-0227] LEF file: Nangate45/Nangate45_tech.lef, created 22 layers, 27 vias\r\n[INFO ODB-0227] LEF file: Nangate45/Nangate45_stdcell.lef, created 135 library cells\r\n[WARNING STA-0441] set_input_delay relative to a clock defined on the same port/pin not allowed.\r\n[INFO IFP-0001] Added 57 rows of 422 site FreePDK45_38x28_10R_NP_162NW_34O.\r\n[INFO ORD-0048] Loading an additional DEF.\r\nError: Chip already exists\r\n[INFO RSZ-0058] Using max wire length 693um.\r\n[INFO RSZ-0039] Resized 41 instances.\r\nPlacement Analysis\r\n---------------------------------\r\ntotal displacement      17739.5 u\r\naverage displacement       49.0 u\r\nmax displacement           62.9 u\r\noriginal HPWL             280.4 u\r\nlegalized HPWL           9839.7 u\r\ndelta HPWL                 3410 %\r\n\r\nworst slack 0.105\r\nworst slack -0.011\r\ntns -0.011\r\n[INFO CTS-0050] Root buffer is BUF_X4.\r\n[INFO CTS-0051] Sink buffer is BUF_X4.\r\n[INFO CTS-0052] The following clock buffers will be used for CTS:\r\n                    BUF_X4\r\n[INFO CTS-0049] Characterization buffer is BUF_X4.\r\n[INFO CTS-0007] Net \"clk\" found for clock \"core_clock\".\r\n[WARNING CTS-0041] Net \"clk\" has 0 sinks. Skipping...\r\n[WARNING CTS-0083] No clock nets have been found.\r\n[INFO CTS-0008] TritonCTS found 0 clock nets.\r\n[WARNING CTS-0082] No valid clock nets in the design.\r\n[INFO RSZ-0058] Using max wire length 693um.\r\nPlacement Analysis\r\n---------------------------------\r\ntotal displacement          0.0 u\r\naverage displacement        0.0 u\r\nmax displacement            0.0 u\r\noriginal HPWL            9839.7 u\r\nlegalized HPWL           9839.7 u\r\ndelta HPWL                    0 %\r\n\r\n[INFO RSZ-0094] Found 1 endpoints with setup violations.\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[INFO RSZ-0041] Resized 5 instances.\r\n[INFO RSZ-0043] Swapped pins on 2 instances.\r\n[INFO RSZ-0033] No hold violations found.\r\nworst slack 0.106\r\nworst slack 0.000\r\ntns 0.000\r\nPlacement Analysis\r\n---------------------------------\r\ntotal displacement         91.3 u\r\naverage displacement        0.3 u\r\nmax displacement            6.4 u\r\noriginal HPWL            9840.8 u\r\nlegalized HPWL           9925.0 u\r\ndelta HPWL                    1 %\r\n\r\n[INFO DRT-0149] Reading tech and libs.\r\n\r\nUnits:                2000\r\nNumber of layers:     21\r\nNumber of macros:     135\r\nNumber of vias:       27\r\nNumber of viarulegen: 19\r\n\r\nSignal 11 received\r\nStack trace:\r\n 0# 0x0000564758181A44 in /mnt/work/OpenROAD/bin/bin/openroad\r\n 1# 0x00007F4028F54F10 in /lib/x86_64-linux-gnu/libc.so.6\r\n 2# odb::dbTechVia::getTopLayer() in /mnt/work/OpenROAD/bin/bin/openroad\r\n 3# odb::dbWireEncoder::addTechVia(odb::dbTechVia*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 4# drt::TritonRoute::stackVias(odb::dbBTerm*, int, int, bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 5# drt::TritonRoute::processBTermsAboveTopLayer(bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 6# drt::TritonRoute::initDesign() in /mnt/work/OpenROAD/bin/bin/openroad\r\n 7# drt::TritonRoute::pinAccess(std::vector<odb::dbInst*, std::allocator<odb::dbInst*> > const&) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 8# pin_access_cmd(char const*, char const*, char const*, int, int) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 9# 0x00005647589E491B in /mnt/work/OpenROAD/bin/bin/openroad\r\n10# TclNRRunCallbacks in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n11# 0x00007F402E79BFBA in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n12# Tcl_EvalEx in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n13# Tcl_Eval in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n14# gui::TclCmdInputWidget::executeCommand(QString const&, bool, bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n15# gui::CmdInputWidget::handleEnterKeyPress(QKeyEvent*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n16# gui::TclCmdInputWidget::keyPressEvent(QKeyEvent*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n17# QWidget::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n18# QFrame::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n19# QAbstractScrollArea::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n20# QPlainTextEdit::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n21# QApplicationPrivate::notify_helper(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n22# QApplication::notify(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n23# QCoreApplication::notifyInternal2(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n24# 0x00007F402B1357B5 in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n25# QApplicationPrivate::notify_helper(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n26# QApplication::notify(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n27# QCoreApplication::notifyInternal2(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n28# QGuiApplicationPrivate::processKeyEvent(QWindowSystemInterfacePrivate::KeyEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5\r\n29# QGuiApplicationPrivate::processWindowSystemEvent(QWindowSystemInterfacePrivate::WindowSystemEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5\r\n30# QWindowSystemInterface::sendWindowSystemEvents(QFlags<QEventLoop::ProcessEventsFlag>) in /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5\r\n31# 0x00007F4022595260 in /usr/lib/x86_64-linux-gnu/libQt5XcbQpa.so.5\r\n32# g_main_context_dispatch in /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n33# 0x00007F402783C770 in /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n34# g_main_context_iteration in /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n35# QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n36# QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n37# QCoreApplication::exec() in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n38# gui::startGui(int&, char**, Tcl_Interp*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n39# ord::tclAppInit(Tcl_Interp*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n40# Tcl_MainEx in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n41# main in /mnt/work/OpenROAD/bin/bin/openroad\r\n42# __libc_start_main in /lib/x86_64-linux-gnu/libc.so.6\r\n43# _start in /mnt/work/OpenROAD/bin/bin/openroad\r\n================================================================================================\r\n\r\nI also examined the source codes and realized that the testing approach I employed did not yield the desired results. However, I am unsure about how to proceed from the step after global placement by reading the DEF file.\r\n\r\nThanks.", "date": "2024-05-09T06:10:08Z"}], "date": "2024-05-08T03:04:19Z", "category": "Configuration", "subcategory": "Initialization from existing DEF", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3531", "id": 3531, "title": "UPF support", "author": "kareefardi", "description": "Is https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/upf a work in progress (it doesn't have documentation). If it is, is it planned to have it supported? ", "content": [{"author": "kareefardi", "role": "user", "message": "Is https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/upf a work in progress (it doesn't have documentation). If it is, is it planned to have it supported? ", "date": "2023-06-26T14:57:14Z"}, {"author": "maliberty", "role": "assistant", "message": "UPF support is a work in progress.  The reader in upf/ works but the rest of the tool needs to support it.", "date": "2023-06-26T15:18:44Z"}, {"author": "maliberty", "role": "assistant", "message": "I think the last remaining piece was pdn inserting the power switches.  @gadfort would you update on this?", "date": "2024-05-08T16:51:05Z"}], "date": "2023-06-26T14:57:14Z", "category": "Feature Request", "subcategory": "UPF support", "Tool": "Unified Power Format (UPF)"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5041", "id": 5041, "title": "Write macro placement position to a tcl file", "author": "vijayank88", "description": "Similar to `write_pin_placement` option, is there a option to write macro placement position while using automatic macro placement.\r\nSo that macro position will be re-used for some specific requirement with manual macro placement again.", "content": [{"author": "vijayank88", "role": "user", "message": "Similar to `write_pin_placement` option, is there a option to write macro placement position while using automatic macro placement.\r\nSo that macro position will be re-used for some specific requirement with manual macro placement again.", "date": "2024-05-03T10:30:40Z"}, {"author": "maliberty", "role": "assistant", "message": "This is more of an issue than a discussion", "date": "2024-05-03T17:16:41Z"}, {"author": "maliberty", "role": "assistant", "message": "https://github.com/The-OpenROAD-Project/OpenROAD/issues/5043", "date": "2024-05-03T17:59:43Z"}, {"author": "AcKoucher", "role": "assistant", "message": "@vijayank88 FYI, there's the `write_macro_placement` flag in mpl2. However it's currently deprecated due to a new OR command for general macro placement writing that was implemented in #4557.\r\n\r\nI've opened #5046 to update the flag so that mpl2 will write the entire macro placement instead of only those macros that it placed.", "date": "2024-05-06T15:22:55Z"}], "date": "2024-05-03T10:30:40Z", "category": "Feature Request", "subcategory": "Macro placement output", "Tool": "Hierarchical Macro Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4987", "id": 4987, "title": "Router violation with proprietary PDK", "author": "sebinho", "description": "Hi Guys,\r\n\r\nI am posting here regarding an issue I am struggling with regarding the detailed routing of OR.\r\nI am using a proprietary PDK, so it is difficult for me to share a complete example of the issue.\r\n\r\nI am constantly running into metal spacing violations on M1 with my 45nm PDK. I systematically get the same error, typically on the same net(s). Because of that, the router always goes up to the max number of iterations (64) and never finds a solution.\r\nHere is a snapshot of the issue at hand. \r\n\r\n![Screenshot from 2024-04-23 17-07-03](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/760a2c49-1fcb-4f10-aa12-ccccc09f12c9)\r\n\r\nYou can see on the bottom orange rectangle (this is a VIA between M1 and M2), that the metal spacing is 0.06um. This violates the metal spacing rule of 0.07. M1 is in dark blue. You can see M2 in cyan in the picture below.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/6a93f3e6-8420-4407-8a70-54afad90ffb2)\r\n \r\nWhat I noticed is that the routing tool is able to select between 2 types of vias (on its own). Sometimes he selects a horizontal via (like the one that is problematic) and sometimes he takes a vertical via (like the one show in the upper part of the image where the 0.07um rule is respected).\r\nThe solution to the problem is quite straightforward when done manually. Simply replace the problematic via with its vertical version. But somehow the tool cannot see that.\r\n\r\nIs there something that can be done for such an issue @maliberty ? I understand that it is not easy to debug as I cannot share my PDK . Apologies for that.\r\nThanks for your help.", "content": [{"author": "sebinho", "role": "user", "message": "Hi Guys,\r\n\r\nI am posting here regarding an issue I am struggling with regarding the detailed routing of OR.\r\nI am using a proprietary PDK, so it is difficult for me to share a complete example of the issue.\r\n\r\nI am constantly running into metal spacing violations on M1 with my 45nm PDK. I systematically get the same error, typically on the same net(s). Because of that, the router always goes up to the max number of iterations (64) and never finds a solution.\r\nHere is a snapshot of the issue at hand. \r\n\r\n![Screenshot from 2024-04-23 17-07-03](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/760a2c49-1fcb-4f10-aa12-ccccc09f12c9)\r\n\r\nYou can see on the bottom orange rectangle (this is a VIA between M1 and M2), that the metal spacing is 0.06um. This violates the metal spacing rule of 0.07. M1 is in dark blue. You can see M2 in cyan in the picture below.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/6a93f3e6-8420-4407-8a70-54afad90ffb2)\r\n \r\nWhat I noticed is that the routing tool is able to select between 2 types of vias (on its own). Sometimes he selects a horizontal via (like the one that is problematic) and sometimes he takes a vertical via (like the one show in the upper part of the image where the 0.07um rule is respected).\r\nThe solution to the problem is quite straightforward when done manually. Simply replace the problematic via with its vertical version. But somehow the tool cannot see that.\r\n\r\nIs there something that can be done for such an issue @maliberty ? I understand that it is not easy to debug as I cannot share my PDK . Apologies for that.\r\nThanks for your help.", "date": "2024-04-23T15:24:22Z"}, {"author": "maliberty", "role": "assistant", "message": "You said to goes to 64 iterations.  Does drt report these violation itself or are they only seen by another drc tool?  \r\n\r\nPrecision Innovations does provide paid support under NDA if that makes sense for you.\r\n\r\n@osamahammad21 any thoughts?", "date": "2024-04-23T16:27:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Does the drc straddle the boundary of two different cells?  (ie the pins are in different instances)", "date": "2024-04-23T17:12:35Z"}, {"author": "sebinho", "role": "assistant", "message": "I reran the tool with different settings and 1 get 1 violation for metal spacing. It is a different location in my design but once again it seems to be at the boundary between 2 different cells. See below red line for separation.\r\n\r\n![via_issue2](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/6e9d737f-dd9b-4bf7-aa9e-4184a338228b)\r\n\r\nAny clue how this could be solved?\r\nThanks a lot", "date": "2024-04-23T18:28:18Z"}, {"author": "sebinho", "role": "assistant", "message": "@maliberty do you have any recommendations on where to look first in order to speed up the routing for a proprietary PDK?\r\nNow that I added an extra layer of complexity (custom DEF file to specify core/die size and pins locations, custom power grid), it often crash due to not being able to access pins. Or it takes forever to eventually not solve all violations. \r\nShould I incrementally try to simplify the technology (.LEF) file? Any other things I should look into?\r\nMy test design (very small module) goes through Sky130/freepdk45 in a matter of minutes even with a very similar DEF file and power grid\u2026\r\nThanks for your help ", "date": "2024-04-30T15:25:14Z"}, {"author": "maliberty", "role": "assistant", "message": "> Should I have the assumption that it is possible to port any rules deck with OpenROAD?\r\n\r\nThat's probably too strong a statement (eg we don't support all rules below 12nm) but for older nodes it should be possible.  More rules certainly will slow down the router if they make it more difficult to find legal solutions.\r\n\r\n@osamahammad21 am I correct in thinkin we support ADJACENTCUTS / WITHIN?", "date": "2024-05-02T13:59:09Z"}], "date": "2024-04-23T15:24:22Z", "category": "Runtime", "subcategory": "Routing violations", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4956", "id": 4956, "title": "OpenROAD Build From Sources", "author": "sebinho", "description": "Hello Guys,\r\n\r\nI am using ArchLinux and I have been using OpenROAD from an install package from the AUR. \r\nThis install does not seem to work anymore (it was working on my setup a couple of weeks ago).\r\n\r\nSo I am trying to build from sources but I get the same errors as I get with the AUR package:\r\n```\r\n[ 74%] Building CXX object src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/src/gui/src/scriptWidget.cpp:49:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\nmake[2]: *** [src/gui/CMakeFiles/gui.dir/build.make:226: src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 74%] Building CXX object src/rcx/src/CMakeFiles/rcxUnitTest.dir/__/test/ext2dBoxTest.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/../../../../../src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/moc_tclCmdInputWidget.cpp:10,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/mocs_compilation.cpp:23:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\n[ 74%] Linking CXX executable dpl_test\r\n```\r\n\r\nSeems to be something related to Swig with TCL. Does anybody know what the problem is?\r\n\r\nThanks for your help\r\n\r\n", "content": [{"author": "sebinho", "role": "user", "message": "Hello Guys,\r\n\r\nI am using ArchLinux and I have been using OpenROAD from an install package from the AUR. \r\nThis install does not seem to work anymore (it was working on my setup a couple of weeks ago).\r\n\r\nSo I am trying to build from sources but I get the same errors as I get with the AUR package:\r\n```\r\n[ 74%] Building CXX object src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/src/gui/src/scriptWidget.cpp:49:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\nmake[2]: *** [src/gui/CMakeFiles/gui.dir/build.make:226: src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 74%] Building CXX object src/rcx/src/CMakeFiles/rcxUnitTest.dir/__/test/ext2dBoxTest.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/../../../../../src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/moc_tclCmdInputWidget.cpp:10,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/mocs_compilation.cpp:23:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\n[ 74%] Linking CXX executable dpl_test\r\n```\r\n\r\nSeems to be something related to Swig with TCL. Does anybody know what the problem is?\r\n\r\nThanks for your help\r\n\r\n", "date": "2024-04-16T10:43:40Z"}, {"author": "maliberty", "role": "assistant", "message": "What version of TCL and swig do you have installed?", "date": "2024-04-16T15:29:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Perhaps something is different in 4.2.1 as with 4.1.0 I don't see any used of Tcl_Size in tclSwig.h.  Is it possible for you to downgrade?", "date": "2024-04-16T16:39:45Z"}, {"author": "stefanottili", "role": "assistant", "message": "Does anybody know how to downgrade swig on MacOS M1 homebrew ?\r\nThe current SWIG Version 4.2.1 causes the same error here.\r\nCan be worked around by commenting out the two offending lines, they seem to be in an error path ...  ", "date": "2024-04-17T03:14:52Z"}], "date": "2024-04-16T10:43:40Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4845", "id": 4845, "title": "Is [read_def -floorplan_initialize ] expected to unset [set_max_transition] and [set_max_capacitance] from sdc file?", "author": "b62833", "description": "Before I file a bug, I want to make sure this is unexpected behavior.\r\n\r\nIn my sdc file I do a \r\n```\r\n\r\nset_max_transition [exp $clk_period * 0.20] [current_design]\r\nset_max_capacitance 30 [current_design]\r\n```\r\n\r\nand then read a floorplan by setting FLOORPLAN_DEF.\r\n\r\nWhen I run through floorplanning, 2_floorplan.sdc doesn't have those commands. I've narrowed it down to floorplan.tcl's `read_def -floorplan_initialize` that's removing these. Max transition and max capacitance can't be set in DEF if I remember correctly, so this is unexpected. Is this the desired tool behavior?\r\n\r\n", "content": [{"author": "b62833", "role": "user", "message": "Before I file a bug, I want to make sure this is unexpected behavior.\r\n\r\nIn my sdc file I do a \r\n```\r\n\r\nset_max_transition [exp $clk_period * 0.20] [current_design]\r\nset_max_capacitance 30 [current_design]\r\n```\r\n\r\nand then read a floorplan by setting FLOORPLAN_DEF.\r\n\r\nWhen I run through floorplanning, 2_floorplan.sdc doesn't have those commands. I've narrowed it down to floorplan.tcl's `read_def -floorplan_initialize` that's removing these. Max transition and max capacitance can't be set in DEF if I remember correctly, so this is unexpected. Is this the desired tool behavior?\r\n\r\n", "date": "2024-03-23T23:52:02Z"}, {"author": "maliberty", "role": "assistant", "message": "I would consider it unexpected so go ahead and open an issue with a test case", "date": "2024-03-24T19:02:24Z"}, {"author": "b62833", "role": "assistant", "message": "Over the weekend I upgraded to OpenROAD version 2.0-13286-gebcc5196e and it works now.\r\n\r\nIt was broken in the version v2.0-11493-gaddecc2bd that I'd been using before.\r\n\r\nWe're good now.", "date": "2024-04-18T03:13:19Z"}], "date": "2024-03-23T23:52:02Z", "category": "Bug", "subcategory": "Unexpected behavior", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4942", "id": 4942, "title": "unplaced macros during PDN stage", "author": "vijayank88", "description": "@oharboe \r\nI came across your test case https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pdn/test/macros_cells_not_fixed.ok\r\nI am also facing similar error with `macro_placement` command followed by PDN stage throws error.\r\n```\r\n[WARNING PDN-0234] spm_inst_0 has not been placed and fixed.\r\n[WARNING PDN-0234] spm_inst_1 has not been placed and fixed.\r\n[ERROR PDN-0235] Design has unplaced macros.\r\nPDN-0235\r\n```\r\nHow to resolve this error?\r\nThanks in advance...", "content": [{"author": "vijayank88", "role": "user", "message": "@oharboe \r\nI came across your test case https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pdn/test/macros_cells_not_fixed.ok\r\nI am also facing similar error with `macro_placement` command followed by PDN stage throws error.\r\n```\r\n[WARNING PDN-0234] spm_inst_0 has not been placed and fixed.\r\n[WARNING PDN-0234] spm_inst_1 has not been placed and fixed.\r\n[ERROR PDN-0235] Design has unplaced macros.\r\nPDN-0235\r\n```\r\nHow to resolve this error?\r\nThanks in advance...", "date": "2024-04-12T07:43:32Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @vijayank88 I dont recall making this test case...", "date": "2024-04-12T07:46:52Z"}, {"author": "gadfort", "role": "assistant", "message": "@vijayank88 it means you have macros in your design that have not been placed. PDN will only consider placed and locked macros and therefore requires all macros to be locked. Look at your design to find the two macros that have not been placed and locked and fix that ", "date": "2024-04-12T12:10:47Z"}], "date": "2024-04-12T07:43:32Z", "category": "Runtime", "subcategory": "Macro placement issue", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4890", "id": 4890, "title": "Defaults for PPL values?", "author": "donn", "description": "For these flags in PPL:\r\n\r\n* `set_pin_length -hor_length`\r\n* `set_pin_length -ver_length`\r\n* `place_pins -min_distance`\r\n\r\nIt isn't super clear from the documentation what the default values are/where they would be obtained from otherwise. Does anyone have any idea? ", "content": [{"author": "donn", "role": "user", "message": "For these flags in PPL:\r\n\r\n* `set_pin_length -hor_length`\r\n* `set_pin_length -ver_length`\r\n* `place_pins -min_distance`\r\n\r\nIt isn't super clear from the documentation what the default values are/where they would be obtained from otherwise. Does anyone have any idea? ", "date": "2024-04-02T18:35:57Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please respond when you can", "date": "2024-04-02T20:03:26Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@donn I created this PR https://github.com/The-OpenROAD-Project/OpenROAD/pull/4891 updating the documentation with this data. In summary, the default length of the pins is the minimum necessary to respect the minimum area of the layer a pin was placed, considering that the width of a pin is the min width of the layer the pin was placed.\r\n\r\nAbout the min distance, the default is the length of two tracks between each pin.", "date": "2024-04-02T21:12:44Z"}], "date": "2024-04-02T18:35:57Z", "category": "Query", "subcategory": "Parameter defaults", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4417", "id": 4417, "title": "How do I get the power for each Instance\uff1f", "author": "LT-HB", "description": "How do I get the power for each Instance\uff1fI have no power report after reading the odb file in gui.\r\n![power_report](https://github.com/The-OpenROAD-Project/OpenROAD/assets/107295305/d747e889-1ea2-448e-ba0b-11b6c08e2b52)\r\n\r\n", "content": [{"author": "LT-HB", "role": "user", "message": "How do I get the power for each Instance\uff1fI have no power report after reading the odb file in gui.\r\n![power_report](https://github.com/The-OpenROAD-Project/OpenROAD/assets/107295305/d747e889-1ea2-448e-ba0b-11b6c08e2b52)\r\n\r\n", "date": "2023-12-20T08:38:21Z"}, {"author": "maliberty", "role": "assistant", "message": "```report_power -instances [get_cells *]``` should do it.  ", "date": "2023-12-20T17:31:28Z"}, {"author": "b224hisl", "role": "assistant", "message": "can I get the power of each module?", "date": "2024-03-28T11:11:04Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no per-module report today.  If you can express what you want in terms of instance names you could do something like `report_power -instances [get_cells a/b/*]`", "date": "2024-03-28T14:53:44Z"}, {"author": "maliberty", "role": "assistant", "message": "get_cells comes from SDC where a 'cell' is another (poor) name for an instance.", "date": "2024-03-28T14:55:00Z"}], "date": "2023-12-20T08:38:21Z", "category": "Query", "subcategory": "Power analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4819", "id": 4819, "title": "gui highlight_inst", "author": "gyu511", "description": "hello.\r\nIn the gui, highlight_inst only supports up to 8 groups, so I would like to expand it to support more groups.\r\nSo I added to HighlightGroupDialog in OpenROAD/src/gui/src/highlightGroupDialog.cpp and added color in OpenROAD/src/gui/include/gui/gui.h and finally button in OpenROAD/src/gui/ui/highlightGroupDlg.ui I also added it, but it doesn't work. What should I do?", "content": [{"author": "gyu511", "role": "user", "message": "hello.\r\nIn the gui, highlight_inst only supports up to 8 groups, so I would like to expand it to support more groups.\r\nSo I added to HighlightGroupDialog in OpenROAD/src/gui/src/highlightGroupDialog.cpp and added color in OpenROAD/src/gui/include/gui/gui.h and finally button in OpenROAD/src/gui/ui/highlightGroupDlg.ui I also added it, but it doesn't work. What should I do?", "date": "2024-03-20T08:06:37Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you send a pointer to your branch with the changes?  How does it not work?", "date": "2024-03-20T14:44:21Z"}, {"author": "maliberty", "role": "assistant", "message": "Once this works I hope you would be willing to make a PR so we can incorporate it in OR.", "date": "2024-03-20T14:45:07Z"}], "date": "2024-03-20T08:06:37Z", "category": "Feature Request", "subcategory": "Enhance GUI functionality", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4422", "id": 4422, "title": "Creating an FEOL Class in OpenROAD", "author": "chetanyagoyal", "description": "This is in regard to [https://github.com/chipsalliance/ideas/blob/main/gsoc-2023-ideas.md#create-feol-classes-in-openroad-and-a-gds-writer](url), a GSoC project proposed in 2023. I would like to take this up for 2024's run of GSoC, and was **wondering what the project entails**. For reference, I have been contributing to OpenFASoC for a large part of the year and have good knowledge of their codebase, and some knowledge of OpenROAD-flow-scripts", "content": [{"author": "chetanyagoyal", "role": "user", "message": "This is in regard to [https://github.com/chipsalliance/ideas/blob/main/gsoc-2023-ideas.md#create-feol-classes-in-openroad-and-a-gds-writer](url), a GSoC project proposed in 2023. I would like to take this up for 2024's run of GSoC, and was **wondering what the project entails**. For reference, I have been contributing to OpenFASoC for a large part of the year and have good knowledge of their codebase, and some knowledge of OpenROAD-flow-scripts", "date": "2023-12-20T16:55:49Z"}, {"author": "maliberty", "role": "assistant", "message": "@msaligane was the mentor in 2023 so it would be good to get his input.  I expect the hardest part would be dealing with hierarchy (aref/sref) as OR's odb is rather flat in its lef/def orientation.   New layers shouldn't be too hard.  The rest of the system will have to be more aware of them and the GUI will need some updating.\r\n\r\nI would be good to have a specific use case beyond just read/write gds.  There should be some value added by doing it in OR as opposed to klayout or gdsfactory.", "date": "2023-12-20T17:26:59Z"}, {"author": "stefanottili", "role": "assistant", "message": "Having openroad write gds/oas would be useful, because it reduces the file size compared to odb.\r\n\r\nBut I would recommend not to duplicate the ability to read and collect all the gds/oas pieces coming from various other sources. This functionality already exists in strm2oas.", "date": "2023-12-21T21:40:03Z"}, {"author": "msaligane", "role": "assistant", "message": "We have been looking into this in the previous GSOC. Hopefully, this project gets approved for Chetanya to finish the project.", "date": "2023-12-22T16:50:56Z"}], "date": "2023-12-20T16:55:49Z", "category": "Feature Request", "subcategory": "FEOL integration", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4672", "id": 4672, "title": "High congestion - asap7 . Many OA and AO combinational cells in the congestion areas.", "author": "Mudbhatkal", "description": "I'm seeing high congestion at global place for a design using asap7 libraries on Openroad.  I tried using cell padding with 8 cell sites on the left and right. It helped reduce the congestion a bit, but not enough. I have set a max fanout and tightened the max capacitance in addition to the previous changes, and congestion is still there. I also changed the flow to congestion-driven instead of timing-driven and used the routability check overflow option but still see the congestion although it has decreased slightly. Any suggestions?\u00a0", "content": [{"author": "Mudbhatkal", "role": "user", "message": "I'm seeing high congestion at global place for a design using asap7 libraries on Openroad.  I tried using cell padding with 8 cell sites on the left and right. It helped reduce the congestion a bit, but not enough. I have set a max fanout and tightened the max capacitance in addition to the previous changes, and congestion is still there. I also changed the flow to congestion-driven instead of timing-driven and used the routability check overflow option but still see the congestion although it has decreased slightly. Any suggestions?\u00a0", "date": "2024-02-15T13:55:08Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you provide a test case or at least some images of the problem?", "date": "2024-02-15T16:03:41Z"}, {"author": "Mudbhatkal", "role": "assistant", "message": "The RTL was generated through [OpenASIP ](http://openasip.org/)\r\nBy testcase do you mean odb file ? If not, how do I generate one ?\r\n<img width=\"751\" alt=\"new_Cong\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/19781271/f02dbc11-ef8d-464c-b763-647caff65122\">\r\nThe image shows estimated congestion and is captured after detailed placement. \r\n", "date": "2024-02-18T22:05:05Z"}, {"author": "maliberty", "role": "assistant", "message": "`make global_place_issue` should package the test case.  Do not post if you are using any confidential data.", "date": "2024-02-18T23:02:00Z"}, {"author": "Mudbhatkal", "role": "assistant", "message": "Here is the testcase : https://tuni-my.sharepoint.com/:u:/g/personal/pooja_mudbhatkal_tuni_fi/EVDGc1VOxIZNhEfmDVLf1JcB56kh2ipprLFusncKTGhAWA?e=NnEMJh \r\nPlease let me know if you have access issues", "date": "2024-02-20T16:44:03Z"}, {"author": "maliberty", "role": "assistant", "message": "This design does have an very unusual distribution of cell types.  I think you will need to enlarge the block and lower the placement density to compensate for it.\r\n\r\n@gudeh this could be an interesting case to test your routability improvements on.", "date": "2024-02-22T03:38:31Z"}, {"author": "maliberty", "role": "assistant", "message": "Btw, what sort of block is this?", "date": "2024-02-22T03:39:21Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi @Mudbhatkal, I noticed from the log files in the make issue you uploaded that you used yosys version 0.33. Have you tried other Yosys versions? ORFS is currently using 0.38 from a recent update. If you have a local installation of ORFS you can use the 'build_openroad.sh' script. I usually use the following: `./build_openroad.sh --local`.\r\n\r\nMaybe this would provide a different set of logic gates and a different routing scenario. For some reason I was not able to run Yosys on my end with your files.", "date": "2024-02-27T22:40:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Have you tried lowering PLACE_DENSITY as I suggested earlier?", "date": "2024-02-29T16:22:55Z"}, {"author": "stefanottili", "role": "assistant", "message": "vliw cores I\u2019ve seen in the past had wide and deep muxes around the registers. If these are not isolated in a separate rtl hierarchy, synthesis tools tend to ignore mux levels and generate ao/oa spagetti netlists that no R&R tool can untangle.\r\nPhysical synthesis tools are supposed to be able to give you a better netlist, but since yosys isn\u2019t one of them, you\u2019ll have to rewrite the rtl of the muxes to get a P&R friendly netlist.\r\nPut each mux level in a separate rtl hierarchy and make sure that synthesis doesn\u2019t flatten them. Separate enables per level of muxing. You should be able to identify mux structures in your netlist.\r\nP&R tools are usually bad at visualizing cone connectivity, but OR has timing critically color coded cone viewing as part of the timing debug. Use it after placement to look at your muxes.", "date": "2024-03-01T16:58:47Z"}, {"author": "Mudbhatkal", "role": "assistant", "message": "[big_tta_fixed.zip](https://github.com/The-OpenROAD-Project/OpenROAD/files/14486076/big_tta_fixed.zip)\r\nThis RTL has some fixes but I still see congestion issues. Also tried with synth_hierarchial set to 1. Attaching it here in case someone finds it useful.", "date": "2024-03-04T19:07:29Z"}], "date": "2024-02-15T13:55:08Z", "category": "Runtime", "subcategory": "Congestion issues", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4758", "id": 4758, "title": "flipflop + inverter + rebuffer + output buffer", "author": "oharboe", "description": "Is the \"rebuffer\" buffer superfluous here?\r\n\r\nThe \"rebuffer\" buffer does not exist in placement, only after CTS.\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_final`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7a197d43-9270-4233-bebd-620b9cfd5fc8)\r\n\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7d45e527-9062-4a14-b4d3-24125d3c0f46)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Is the \"rebuffer\" buffer superfluous here?\r\n\r\nThe \"rebuffer\" buffer does not exist in placement, only after CTS.\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_final`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7a197d43-9270-4233-bebd-620b9cfd5fc8)\r\n\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7d45e527-9062-4a14-b4d3-24125d3c0f46)\r\n", "date": "2024-03-10T08:47:04Z"}, {"author": "maliberty", "role": "assistant", "message": "It is there for timing optimization as the path has negative slack which is addressed post-CTS.  Is there a reason to think it superfluous?", "date": "2024-03-10T16:41:35Z"}, {"author": "oharboe", "role": "assistant", "message": "No extra buffers after removing `set_load -pin_load 10 [all_outputs]`:\r\n\r\nUntar  [cts-nobuffer.tar.gz](https://github.com/The-OpenROAD-Project/OpenROAD/files/14554686/cts-nobuffer.tar.gz)\r\n\r\n```\r\n$ ./run-me-mock-array_Element-asap7-base.sh\r\nOpenROAD v2.0-12488-g85f541bb6\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n  74.98   74.98   clock network delay (propagated)\r\n   0.00   74.98 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  45.97  120.95 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  13.06  134.01 ^ _435_/Y (INVx4_ASAP7_75t_R)\r\n  18.04  152.05 ^ output265/Y (BUFx2_ASAP7_75t_R)\r\n   0.01  152.06 ^ io_lsbOuts_7 (out)\r\n         152.06   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n  70.00  370.00   clock network delay (ideal)\r\n -20.00  350.00   clock uncertainty\r\n   0.00  350.00   clock reconvergence pessimism\r\n-240.00  110.00   output external delay\r\n         110.00   data required time\r\n---------------------------------------------------------\r\n         110.00   data required time\r\n        -152.06   data arrival time\r\n---------------------------------------------------------\r\n         -42.06   slack (VIOLATED)\r\n```\r\n", "date": "2024-03-11T06:57:00Z"}, {"author": "maliberty", "role": "assistant", "message": "> How do I stop \"don't touch\" from removing the output buffer so I get the comparison I'm after?\r\n\r\nSet don't touch after the output buffer is created.\r\n\r\n> If I delete set_load -pin_load 10 [all_outputs], the extra buffer goes away.\r\n\r\nProbably the timing improves and the net no longer needs repair.  Similarly with the set_driving_cell changing the timing.", "date": "2024-03-11T15:44:54Z"}], "date": "2024-03-10T08:47:04Z", "category": "Runtime", "subcategory": "Unexpected optimization", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4743", "id": 4743, "title": "Using multiple DBs?", "author": "donn", "description": "In issue #4692:\r\n\r\n> If you use `db = odb.dbDatabase.create()` then you get a db with no Logger that can't issue messages. I suggest you just use the API that works.\r\n\r\nThe problem with that is while `odb.dbDatabase.create()` allows multiple DBs to exist simultaneously, the new API does not. We do have a number of scripts that operate on two databases simultaneously. Problem is, now we have three ways of doing this, none of which are ideal:\r\n\r\n1. This fails with \"No logger is installed in odb.\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_old(db1_in, db2_in, db_out):\r\n\t    db1 = odb.dbDatabase.create()\r\n\t    db1 = odb.read_db(db1, db1_in)\r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t    odb.write_db(db1, db_out)\r\n\t```\r\n\r\n2. This fails with \"You can't load a new db file as the db is already populated\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_new(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    ord_tech2 = Tech()\r\n\t    design2 = Design(ord_tech2)\r\n\t    design2.readDb(db2_in)\r\n\t    \r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\n3. This works, but is horrifying and is likely to fail for multiple reasons in the future.\r\n\r\n\t```python3\r\n\tdef _2r1w_db_mix(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2.setLogger(design1.getLogger())\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t\r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\nAdvice?", "content": [{"author": "donn", "role": "user", "message": "In issue #4692:\r\n\r\n> If you use `db = odb.dbDatabase.create()` then you get a db with no Logger that can't issue messages. I suggest you just use the API that works.\r\n\r\nThe problem with that is while `odb.dbDatabase.create()` allows multiple DBs to exist simultaneously, the new API does not. We do have a number of scripts that operate on two databases simultaneously. Problem is, now we have three ways of doing this, none of which are ideal:\r\n\r\n1. This fails with \"No logger is installed in odb.\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_old(db1_in, db2_in, db_out):\r\n\t    db1 = odb.dbDatabase.create()\r\n\t    db1 = odb.read_db(db1, db1_in)\r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t    odb.write_db(db1, db_out)\r\n\t```\r\n\r\n2. This fails with \"You can't load a new db file as the db is already populated\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_new(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    ord_tech2 = Tech()\r\n\t    design2 = Design(ord_tech2)\r\n\t    design2.readDb(db2_in)\r\n\t    \r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\n3. This works, but is horrifying and is likely to fail for multiple reasons in the future.\r\n\r\n\t```python3\r\n\tdef _2r1w_db_mix(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2.setLogger(design1.getLogger())\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t\r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\nAdvice?", "date": "2024-03-06T11:13:29Z"}, {"author": "maliberty", "role": "assistant", "message": "I'm curious what your use case is for multiple dbs.  I guess you are only use odb APIs as nothing else in OR is likely to work in such a scenario.  \r\n\r\nWe could add an API to setup the logger.", "date": "2024-03-06T15:59:38Z"}, {"author": "maliberty", "role": "assistant", "message": "Does this satisfy your needs\r\n```\r\nfrom openroad import Design, Tech\r\nimport odb\r\n\r\nord_tech1 = Tech()\r\ndesign1 = Design(ord_tech1)\r\ndesign1.readDb('odb/test/data/design.odb')\r\n\r\ndb2 = Design.createDetachedDb()\r\ndb2 = odb.read_db(db2, 'odb/test/data/design.odb')\r\n\r\ndesign1.writeDb('db1.odb')\r\nodb.write_db(db2, 'db2.odb')\r\n```", "date": "2024-03-07T23:40:21Z"}, {"author": "maliberty", "role": "assistant", "message": "Done #4749 \r\n\r\nThe odb APIs should be fine.", "date": "2024-03-08T16:22:45Z"}], "date": "2024-03-06T11:13:29Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4742", "id": 4742, "title": "Highlight cells belonging to a module", "author": "scorbetta", "description": "Hello all,\r\n\r\nis there a way in the GUI to highlight all standard cells that belong to a given module within the hierarchy?", "content": [{"author": "scorbetta", "role": "user", "message": "Hello all,\r\n\r\nis there a way in the GUI to highlight all standard cells that belong to a given module within the hierarchy?", "date": "2024-03-06T11:00:44Z"}, {"author": "maliberty", "role": "assistant", "message": "You can use the 'Hierarchy Browser' from the 'Windows' menu.  If you see \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/979243d1-d259-41ed-b50f-7403f9fbffa6)\r\n\r\nclick it to the on the highlighting.  An example:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/5e659e20-c91f-4a76-8c99-544abd423c63)\r\n", "date": "2024-03-06T15:56:54Z"}, {"author": "maliberty", "role": "assistant", "message": "Are you using ORFS?  If so set SYNTH_HIERARCHICAL=1 in your config", "date": "2024-03-06T17:23:06Z"}], "date": "2024-03-06T11:00:44Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4660", "id": 4660, "title": "An inverter + a buffer before an output, superfluous?", "author": "oharboe", "description": "I thought inverters were good at amplifying signals? So is an inverter + buffer on output superfluous?\r\n\r\nI'm not suggesting a change, I'm just trying to learn what is possible/common vs. what OpenROAD is doing.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65b87224-0bb8-497a-bf34-b89ca348d8c7)\r\n\r\nThe buffer is added in resizing.\r\n\r\n1. untar [resize.tar.gz](https://github.com/The-OpenROAD-Project/OpenROAD/files/14265925/resize.tar.gz)\r\n2. `./run-me-mock-array_Element-asap7-base.sh`\r\n3. Enter `report_checks -to io_lsbOuts_7`\r\n\r\n```\r\n$ ./run-me-mock-array_Element-asap7-base.sh \r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer pre report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 105 u^2 6% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 257 input buffers.\r\n[INFO RSZ-0028] Inserted 264 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n[INFO RSZ-0039] Resized 526 instances.\r\nRepair tie lo fanout...\r\nRepair tie hi fanout...\r\n\r\n==========================================================================\r\nreport_floating_nets\r\n--------------------------------------------------------------------------\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 159 u^2 9% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n1423\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n2341\r\n\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  40.03   40.03 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  11.28   51.31 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n  22.51   73.82 ^ output265/Y (BUFx4f_ASAP7_75t_R)\r\n   0.27   74.09 ^ io_lsbOuts_7 (out)\r\n          74.09   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -74.09   data arrival time\r\n---------------------------------------------------------\r\n         145.91   slack (MET)\r\n\r\n\r\nopenroad> \r\n```\r\n\r\n\r\nChecking that this buffer isn't there before resizing:\r\n\r\n```\r\n$ . vars-mock-array_Element-asap7-base.sh \r\n$ ODB_FILE=results/asap7/mock-array_Element/base/3_3_place_gp.odb openroad -no_init -gui scripts/gui.tcl\r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nEstimating parasitics\r\n>>> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx1_ASAP7_75t_R)\r\n  36.60   36.60 v _755_/QN (DFFHQNx1_ASAP7_75t_R)\r\n  17.65   54.25 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n   7.12   61.38 ^ io_lsbOuts_7 (out)\r\n          61.38   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -61.38   data arrival time\r\n---------------------------------------------------------\r\n         158.62   slack (MET)\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I thought inverters were good at amplifying signals? So is an inverter + buffer on output superfluous?\r\n\r\nI'm not suggesting a change, I'm just trying to learn what is possible/common vs. what OpenROAD is doing.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65b87224-0bb8-497a-bf34-b89ca348d8c7)\r\n\r\nThe buffer is added in resizing.\r\n\r\n1. untar [resize.tar.gz](https://github.com/The-OpenROAD-Project/OpenROAD/files/14265925/resize.tar.gz)\r\n2. `./run-me-mock-array_Element-asap7-base.sh`\r\n3. Enter `report_checks -to io_lsbOuts_7`\r\n\r\n```\r\n$ ./run-me-mock-array_Element-asap7-base.sh \r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer pre report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 105 u^2 6% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 257 input buffers.\r\n[INFO RSZ-0028] Inserted 264 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n[INFO RSZ-0039] Resized 526 instances.\r\nRepair tie lo fanout...\r\nRepair tie hi fanout...\r\n\r\n==========================================================================\r\nreport_floating_nets\r\n--------------------------------------------------------------------------\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 159 u^2 9% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n1423\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n2341\r\n\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  40.03   40.03 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  11.28   51.31 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n  22.51   73.82 ^ output265/Y (BUFx4f_ASAP7_75t_R)\r\n   0.27   74.09 ^ io_lsbOuts_7 (out)\r\n          74.09   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -74.09   data arrival time\r\n---------------------------------------------------------\r\n         145.91   slack (MET)\r\n\r\n\r\nopenroad> \r\n```\r\n\r\n\r\nChecking that this buffer isn't there before resizing:\r\n\r\n```\r\n$ . vars-mock-array_Element-asap7-base.sh \r\n$ ODB_FILE=results/asap7/mock-array_Element/base/3_3_place_gp.odb openroad -no_init -gui scripts/gui.tcl\r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nEstimating parasitics\r\n>>> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx1_ASAP7_75t_R)\r\n  36.60   36.60 v _755_/QN (DFFHQNx1_ASAP7_75t_R)\r\n  17.65   54.25 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n   7.12   61.38 ^ io_lsbOuts_7 (out)\r\n          61.38   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -61.38   data arrival time\r\n---------------------------------------------------------\r\n         158.62   slack (MET)\r\n```\r\n", "date": "2024-02-13T12:14:53Z"}, {"author": "oharboe", "role": "assistant", "message": "There is an option not to buffer ports, but I don't see it used anywhere, nor documented. `buffer_ports` is documented.\r\n\r\n```\r\n$ DONT_BUFFER_PORTS=1 ./run-me-mock-array_Element-asap7-base.sh \r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer pre report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 105 u^2 6% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n[INFO RSZ-0039] Resized 521 instances.\r\nRepair tie lo fanout...\r\nRepair tie hi fanout...\r\n\r\n==========================================================================\r\nreport_floating_nets\r\n--------------------------------------------------------------------------\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 155 u^2 9% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  48.38   48.38 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  12.54   60.92 ^ _435_/Y (CKINVDCx8_ASAP7_75t_R)\r\n   6.63   67.55 ^ io_lsbOuts_7 (out)\r\n          67.55   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -67.55   data arrival time\r\n---------------------------------------------------------\r\n         152.45   slack (MET)\r\n\r\n\r\nopenroad> \r\n```\r\n", "date": "2024-02-13T13:21:22Z"}, {"author": "maliberty", "role": "assistant", "message": "That option comes from https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1431 and I don't really remember why we needed it at all.  Tom said \"I think that the need for this variable should go away when we improve the automatic code.\" but I don't know what improvement was needed and there is no issue referenced.  I don't think it is a good option to have.  Do you remember more?", "date": "2024-02-13T15:24:45Z"}], "date": "2024-02-13T12:14:53Z", "category": "Query", "subcategory": "Design optimization", "Tool": "Gate Resizer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4653", "id": 4653, "title": "Openroad and QtCharts", "author": "pguerr91", "description": "I installed openroad on RHEL8 using the documentation from GitHub. After launching openroad -gui, I noticed that it mentions QtCharts is not installed. So I built and compiled it (from source qtcharts-everywhere-src-5.15.0.zip), and and it appears to have installed in /usr/include/qt5/QtCharts ..but when I launch openroad -gui again , it STILL says \"QtCharts not installed\" ..(see attachment) Any ideas on what to do ??  This doesn't appear to be very straightforward\r\n\r\n![openroad_QtCharts_missing](https://github.com/The-OpenROAD-Project/OpenROAD/assets/47336735/70f5288c-1aa8-447b-ac35-0c0cfb27bee0)\r\n", "content": [{"author": "pguerr91", "role": "user", "message": "I installed openroad on RHEL8 using the documentation from GitHub. After launching openroad -gui, I noticed that it mentions QtCharts is not installed. So I built and compiled it (from source qtcharts-everywhere-src-5.15.0.zip), and and it appears to have installed in /usr/include/qt5/QtCharts ..but when I launch openroad -gui again , it STILL says \"QtCharts not installed\" ..(see attachment) Any ideas on what to do ??  This doesn't appear to be very straightforward\r\n\r\n![openroad_QtCharts_missing](https://github.com/The-OpenROAD-Project/OpenROAD/assets/47336735/70f5288c-1aa8-447b-ac35-0c0cfb27bee0)\r\n", "date": "2024-02-12T14:38:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Cmake does some caching so I suggest removing your build directory and re-running cmake to see if it then finds it.", "date": "2024-02-12T15:22:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Is the rest of Qt installed in the same area?", "date": "2024-02-12T15:22:36Z"}], "date": "2024-02-12T14:38:14Z", "category": "Installation", "subcategory": "Library dependency issue", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4515", "id": 4515, "title": "How do I avoid cells rotation in placement?", "author": "OuDret", "description": "I need a cell that does not rotate in both global and detailed placement. Is there any way to achieve it? I did not find any parameter.  \r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/9d1b472c-dac6-4458-a3f6-f045e42abcfc)\r\n\r\nThanks\r\n\r\n", "content": [{"author": "OuDret", "role": "user", "message": "I need a cell that does not rotate in both global and detailed placement. Is there any way to achieve it? I did not find any parameter.  \r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/9d1b472c-dac6-4458-a3f6-f045e42abcfc)\r\n\r\nThanks\r\n\r\n", "date": "2024-01-10T16:43:26Z"}, {"author": "maliberty", "role": "assistant", "message": "If it is a standard cell the LEF for the cell gives its symmetry.", "date": "2024-01-10T18:05:02Z"}, {"author": "maliberty", "role": "assistant", "message": "As this isn't a usual use case it has been lower priority.  The simplest thing might be to just delete the rows that represent Y symmetry if you want to avoid such for your experiments.", "date": "2024-02-12T15:28:54Z"}], "date": "2024-01-10T16:43:26Z", "category": "Configuration", "subcategory": "Cell placement rules", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4602", "id": 4602, "title": "About routing constant values to VDD/VSS power rails", "author": "OuDret", "description": "Is there any way to route logical constant 1 & 0 to Vdd & Vss power rails instead of using tie cells? Right now I'm using a cell with short circuit between output and power pins, which is really bad in terms of area.", "content": [{"author": "OuDret", "role": "user", "message": "Is there any way to route logical constant 1 & 0 to Vdd & Vss power rails instead of using tie cells? Right now I'm using a cell with short circuit between output and power pins, which is really bad in terms of area.", "date": "2024-01-29T14:38:37Z"}, {"author": "maliberty", "role": "assistant", "message": "No there is no facility for that.  The supply rails are often noisy and the tie cell provides a more stable output.  What is the issue with using a tie cell?", "date": "2024-01-29T18:22:48Z"}, {"author": "stefanottili", "role": "assistant", "message": "Constant propagation should be able to remove all constants unless they're connected to ram/rom/pad/analog macro's, no ?\r\nWhich synthesis tool has been used to create the netlist ?\r\nCan yosys do constant propagation ? If so, is it on by default or does it need to be enabled ?", "date": "2024-01-31T00:06:14Z"}], "date": "2024-01-29T14:38:37Z", "category": "Query", "subcategory": "Design optimization", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4532", "id": 4532, "title": "RTLMP_FLOW=True and HIREARCHICAL_SYNTHESIS=1", "author": "oharboe", "description": "Why are these used in combination?\r\n\r\nWhat happens if I don't?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/discussions/4529 has an fMax of 125, which isn't enormously impressive. There are 79 levels of logic in the longest path, which indicates to me that something isn't being optimized in synthesis...\r\n\r\nBOOMv documents that it relies heavily on [register retiming](https://docs.boom-core.org/en/latest/sections/physical-realization.html#physical-realization) and I've also observed that it needs [register cloning](https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4522#discussioncomment-8106429) for synchronous reset.\r\n\r\nHence, I want to try disabling hierarchical synthesis on MegaBoom, but given the long turnaround times, 40 hours, it would be nice to know a little bit about what I'm doing and what I should expect...", "content": [{"author": "oharboe", "role": "user", "message": "Why are these used in combination?\r\n\r\nWhat happens if I don't?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/discussions/4529 has an fMax of 125, which isn't enormously impressive. There are 79 levels of logic in the longest path, which indicates to me that something isn't being optimized in synthesis...\r\n\r\nBOOMv documents that it relies heavily on [register retiming](https://docs.boom-core.org/en/latest/sections/physical-realization.html#physical-realization) and I've also observed that it needs [register cloning](https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4522#discussioncomment-8106429) for synchronous reset.\r\n\r\nHence, I want to try disabling hierarchical synthesis on MegaBoom, but given the long turnaround times, 40 hours, it would be nice to know a little bit about what I'm doing and what I should expect...", "date": "2024-01-15T07:04:10Z"}, {"author": "rovinski", "role": "assistant", "message": "I believe that RTLMP requires hierarchy in the netlist to work at all. If the netlist is flat, RTLMP won't work.", "date": "2024-01-15T08:29:21Z"}, {"author": "oharboe", "role": "assistant", "message": "> At least no public tests. We would have to run the private ones as well.\r\n\r\n", "date": "2024-01-16T07:30:54Z"}, {"author": "gadfort", "role": "assistant", "message": "@oharboe the retiming doesn't work in Yosys (and not in OpenROAD), so that is going to be a limitation. We ran into this as well with something else from the Chisel team folks and there isn't a good solution at the moment ", "date": "2024-01-16T13:38:45Z"}], "date": "2024-01-15T07:04:10Z", "category": "Query", "subcategory": "Tool usage", "Tool": "Hierarchical Macro Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4529", "id": 4529, "title": "MegaBoom flattened", "author": "oharboe", "description": "Based on https://github.com/The-OpenROAD-Project/megaboom/commit/a8e07eab7d4848057ac8e7993d5fee93b3d8653d\r\n\r\nAfter understanding the design better and a best effort to [generating Verilog](https://groups.google.com/g/chipyard/c/XPmGRK_CtZA) for the core with an asynchronous FIFO from the core to the surrounding memory system and buses such that the depth of the clock tree in the core isn't such an enormous issue + I have a report from yosys to list all RAMs and ROMs in the design such that I can be sure that I mock all ROM/RAMs larger than 1024 bits, it was time to try [MegaBoom flattened](https://github.com/The-OpenROAD-Project/megaboom/blob/1cce55c772d823ebca0bf8368f1d363a2e546044/BUILD.bazel#L1153)...\r\n\r\nThe core here is MegaBoom up to and including L1 data/instruction cache. L2 & peripherals are excluded.\r\n\r\nSynthesis times are tolerable and not that far off non-flattened where I break out some macros for the larger parts of the core: ICache, DCache, branch predictor and floating point pipeline.\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\nTotal                           8120\r\n```\r\n\r\nFrom `make gui_synth`, I can see that the core is ca. 98% of the design measured in instances. The rest are buses and asynchronous bridges.\r\n\r\n`make memory` reports the table of roms and rams in the design. This report uses yosys and takes ca. 5 minutes to run, very acceptable. It would be *great* if synthesis could be run without optimizations quicky and then to view the results in the hierarchy view...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/05c5ded4-19e6-417f-ba74-31c5c64aa6ea)\r\n\r\nThe area of the instances is 250000um^2. I have been having trouble with 30% placement density, so I'm going to try 20% placement density. What is the relationship with CORE_UTILIZATION and placement density here...?\r\n\r\nMake that CORE_UTILIZATION=15\r\n\r\nsqrt(2500000/0.15) => 1300um * 1300um\r\n\r\nMacro placement and estimated routing congestion for 2000um x 2000um. The macros seem to be pushed out to the corners, let's see how that works out in placement and routing...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/03f9e101-6a6b-4362-a4f9-f93e142c11dc)\r\n\r\nRouting congestion in `make gui_place`. Why is the empty area yellow? Is power considered part of routing congestion?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/cdef90ba-9366-4046-b86d-7cac7a1d476f)\r\n\r\nEstimated routing congestion RUDY. I guess RUDY excludes power?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/203b5a86-3cd4-4c04-bf80-a0b204e98692)\r\n\r\nClock tree looks good:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/2363f35c-d12e-44b4-bbbb-5773d25b3426)\r\n\r\n\r\nGlobal routing has taken 40000s so far, but it seems to have succeeded:\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[INFO GRT-0197] Via related to pin nodes: 10765900\r\n[INFO GRT-0198] Via related Steiner nodes: 1028317\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 14831285\r\n[INFO GRT-0112] Final usage 3D: 118911097\r\n\r\n[INFO GRT-0096] Final congestion report:\r\nLayer         Resource        Demand        Usage (%)    Max H / Max V / Total Overflow\r\n---------------------------------------------------------------------------------------\r\nM1                   0             0            0.00%             0 /  0 /  0\r\nM2            65189536       19765924           30.32%             0 /  0 /  0\r\nM3            88394705       29035790           32.85%             0 /  0 /  0\r\nM4            65419606       14163760           21.65%             0 /  0 /  0\r\nM5            58863583       8001905           13.59%             0 /  0 /  0\r\nM6            42524107       2674369            6.29%             0 /  0 /  0\r\nM7            52346733        775494            1.48%             0 /  0 /  0\r\n---------------------------------------------------------------------------------------\r\nTotal        372738270       74417242           19.97%             0 /  0 /  0\r\n\r\n[INFO GRT-0018] Total wirelength: 44969527 um\r\n[INFO GRT-0014] Routed nets: 2043518\r\nWarning: There are 10 input ports missing set_input_delay.\r\nWarning: There are 7 output ports missing set_output_delay.\r\nWarning: There are 323 unclocked register/latch pins.\r\nWarning: There are 4128 unconstrained endpoints.\r\n\r\n==========================================================================\r\nglobal route pre repair design report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 523197 u^2 13% utilization.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n```\r\n\r\n\r\nGlobal route heat map:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/504a1b08-d095-41f1-a8be-6392437eeaf5)\r\n\r\n\r\nDetailed routing without power:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97c26702-6d81-472a-a79d-e15eb6cf1a9e)\r\n\r\n\r\nRegarding the long global routing times, I set SKIP_INCREMENTAL_REPAIR=1 in detailed routing, whereas it is a global routing argument. I believe that will take care of the pathologically slow global routing...\r\n\r\n```\r\n-                'route': ['SKIP_INCREMENTAL_REPAIR=1'],\r\n+                'grt': ['SKIP_INCREMENTAL_REPAIR=1']\r\n```\r\n\r\n\r\n```\r\n>>> report_checks -path_delay max\r\nStartpoint: system/prci_ctrl_domain/_853_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/_185_ (recovery check against rising-edge clock clock_uncore)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1973.50 1973.50   clock network delay (propagated)\r\n   0.00 1973.50 ^ system/prci_ctrl_domain/_853_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n  87.72 2061.22 v system/prci_ctrl_domain/_853_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  41.86 2103.08 v load_slew185637/Y (BUFx16f_ASAP7_75t_R)\r\n  37.04 2140.12 v max_cap185634/Y (BUFx16f_ASAP7_75t_R)\r\n  36.83 2176.95 v wire185631/Y (BUFx16f_ASAP7_75t_R)\r\n  41.48 2218.44 v wire185630/Y (BUFx16f_ASAP7_75t_R)\r\n  47.39 2265.83 v max_length185629/Y (BUFx16f_ASAP7_75t_R)\r\n  39.69 2305.52 v wire185628/Y (BUFx16f_ASAP7_75t_R)\r\n  81.35 2386.87 v max_length185627/Y (BUFx16f_ASAP7_75t_R)\r\n  29.27 2416.13 v load_slew185625/Y (BUFx16f_ASAP7_75t_R)\r\n  52.11 2468.25 v load_slew185624/Y (BUFx12f_ASAP7_75t_R)\r\n  43.24 2511.49 v load_slew185618/Y (BUFx16f_ASAP7_75t_R)\r\n  50.84 2562.32 v load_slew185615/Y (BUFx16f_ASAP7_75t_R)\r\n  34.35 2596.68 v load_slew185559/Y (BUFx16f_ASAP7_75t_R)\r\n  34.56 2631.24 v load_slew185558/Y (BUFx16f_ASAP7_75t_R)\r\n  26.61 2657.85 v load_slew185557/Y (BUFx16f_ASAP7_75t_R)\r\n  46.26 2704.11 v load_slew185556/Y (BUFx16f_ASAP7_75t_R)\r\n  51.34 2755.46 v max_length185555/Y (BUFx12f_ASAP7_75t_R)\r\n  41.44 2796.90 v wire185553/Y (BUFx16f_ASAP7_75t_R)\r\n  51.64 2848.53 v load_slew185552/Y (BUFx16f_ASAP7_75t_R)\r\n  34.46 2882.99 v wire185550/Y (BUFx16f_ASAP7_75t_R)\r\n  51.12 2934.11 v wire185547/Y (BUFx16f_ASAP7_75t_R)\r\n  64.89 2999.00 v load_slew185546/Y (BUFx16f_ASAP7_75t_R)\r\n  37.84 3036.83 v wire185534/Y (BUFx16f_ASAP7_75t_R)\r\n  88.57 3125.41 v wire185533/Y (BUFx3_ASAP7_75t_R)\r\n  17.20 3142.60 v wire23908/Y (BUFx16f_ASAP7_75t_R)\r\n 103.84 3246.44 v wire185532/Y (BUFx16f_ASAP7_75t_R)\r\n  53.90 3300.35 v load_slew185531/Y (BUFx16f_ASAP7_75t_R)\r\n  35.37 3335.71 v load_slew185522/Y (BUFx16f_ASAP7_75t_R)\r\n  31.13 3366.84 v load_slew185507/Y (BUFx16f_ASAP7_75t_R)\r\n  32.21 3399.06 v wire185505/Y (BUFx16f_ASAP7_75t_R)\r\n  37.17 3436.23 v load_slew185504/Y (BUFx16f_ASAP7_75t_R)\r\n  25.45 3461.69 v load_slew185494/Y (BUFx16f_ASAP7_75t_R)\r\n  25.36 3487.04 v wire185486/Y (BUFx16f_ASAP7_75t_R)\r\n  47.14 3534.18 v wire185485/Y (BUFx16f_ASAP7_75t_R)\r\n  24.87 3559.05 v max_cap185484/Y (BUFx16f_ASAP7_75t_R)\r\n  27.89 3586.94 v wire185483/Y (BUFx3_ASAP7_75t_R)\r\n  16.61 3603.56 v wire19831/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 3708.69 v wire185481/Y (BUFx3_ASAP7_75t_R)\r\n  18.09 3726.78 v wire19408/Y (BUFx16f_ASAP7_75t_R)\r\n 112.70 3839.48 ^ system/_107_/Y (INVx1_ASAP7_75t_R)\r\n   0.03 3839.51 ^ system/_185_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n        3839.51   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1969.03 10469.03   clock network delay (propagated)\r\n -10.00 10459.03   clock uncertainty\r\n   0.00 10459.03   clock reconvergence pessimism\r\n        10459.03 ^ system/_185_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n   0.82 10459.85   library recovery time\r\n        10459.85   data required time\r\n---------------------------------------------------------\r\n        10459.85   data required time\r\n        -3839.51   data arrival time\r\n---------------------------------------------------------\r\n        6620.34   slack (MET)\r\n\r\n\r\nStartpoint: _32_ (negative level-sensitive latch clocked by clock_uncore)\r\nEndpoint: _10_ (rising clock gating-check end-point clocked by clock_uncore)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n4250.00 4250.00   clock clock_uncore (fall edge)\r\n2156.12 6406.12   clock network delay (propagated)\r\n   0.00 6406.12 v _32_/CLK (DLLx1_ASAP7_75t_R)\r\n  32.10 6438.22 v _32_/Q (DLLx1_ASAP7_75t_R)\r\n   0.01 6438.23 v _10_/B (AND2x4_ASAP7_75t_R)\r\n        6438.23   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1955.45 10455.45   clock network delay (propagated)\r\n -10.00 10445.45   clock uncertainty\r\n   0.00 10445.45   clock reconvergence pessimism\r\n        10445.45 ^ _10_/A (AND2x4_ASAP7_75t_R)\r\n   0.00 10445.45   clock gating setup time\r\n        10445.45   data required time\r\n---------------------------------------------------------\r\n        10445.45   data required time\r\n        -6438.23   data arrival time\r\n---------------------------------------------------------\r\n        4007.22   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_\r\n          (rising edge-triggered flip-flop clocked by clock_uncore)\r\nPath Group: clock_uncore\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1977.51 1977.51   clock network delay (propagated)\r\n   0.00 1977.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  97.74 2075.25 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  26.79 2102.04 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055781_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 123.43 2225.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100818_/CON (HAxp5_ASAP7_75t_R)\r\n  36.21 2261.68 ^ wire155277/Y (BUFx12f_ASAP7_75t_R)\r\n  45.28 2306.96 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055932_/Y (NOR2x2_ASAP7_75t_R)\r\n  28.25 2335.21 v max_length142580/Y (BUFx16f_ASAP7_75t_R)\r\n 104.72 2439.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055933_/Y (NAND2x2_ASAP7_75t_R)\r\n  59.96 2499.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055934_/Y (OA22x2_ASAP7_75t_R)\r\n  36.00 2535.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055951_/Y (AND4x2_ASAP7_75t_R)\r\n  12.14 2548.03 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055963_/Y (NAND3x2_ASAP7_75t_R)\r\n  70.12 2618.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055964_/Y (AOI211x1_ASAP7_75t_R)\r\n  55.95 2674.10 ^ load_slew117489/Y (BUFx12f_ASAP7_75t_R)\r\n  53.80 2727.90 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056077_/Y (AND3x4_ASAP7_75t_R)\r\n  25.58 2753.48 ^ max_length114043/Y (BUFx16f_ASAP7_75t_R)\r\n  32.81 2786.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056130_/Y (AND2x6_ASAP7_75t_R)\r\n  14.23 2800.52 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056131_/Y (NAND2x1_ASAP7_75t_R)\r\n  15.55 2816.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056132_/Y (INVx1_ASAP7_75t_R)\r\n  16.14 2832.21 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09390_/Y (NAND2x2_ASAP7_75t_R)\r\n  28.51 2860.72 v wire99845/Y (BUFx16f_ASAP7_75t_R)\r\n  70.62 2931.33 v wire99844/Y (BUFx16f_ASAP7_75t_R)\r\n  56.99 2988.32 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09404_/Y (OAI21x1_ASAP7_75t_R)\r\n  11.35 2999.67 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09407_/Y (NAND2x1_ASAP7_75t_R)\r\n  44.90 3044.57 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09408_/Y (OR4x2_ASAP7_75t_R)\r\n  57.29 3101.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09409_/Y (OR5x2_ASAP7_75t_R)\r\n  39.18 3141.05 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11025_/Y (NOR2x2_ASAP7_75t_R)\r\n  25.42 3166.47 ^ wire85735/Y (BUFx3_ASAP7_75t_R)\r\n  16.09 3182.56 ^ wire22108/Y (BUFx16f_ASAP7_75t_R)\r\n  96.00 3278.56 ^ max_length85734/Y (BUFx12f_ASAP7_75t_R)\r\n  59.41 3337.98 ^ wire85733/Y (BUFx3_ASAP7_75t_R)\r\n  15.95 3353.92 ^ wire21265/Y (BUFx16f_ASAP7_75t_R)\r\n  93.06 3446.99 ^ max_length85732/Y (BUFx16f_ASAP7_75t_R)\r\n  52.88 3499.86 ^ wire85731/Y (BUFx12f_ASAP7_75t_R)\r\n  61.48 3561.34 ^ wire85730/Y (BUFx12f_ASAP7_75t_R)\r\n  94.55 3655.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374889_/Y (AND3x4_ASAP7_75t_R)\r\n  93.17 3749.07 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374891_/Y (XNOR2x2_ASAP7_75t_R)\r\n  33.79 3782.85 v max_length80723/Y (BUFx16f_ASAP7_75t_R)\r\n  73.46 3856.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715616_/CON (HAxp5_ASAP7_75t_R)\r\n  16.66 3872.97 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374906_/Y (INVx4_ASAP7_75t_R)\r\n  24.46 3897.43 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715614_/CON (HAxp5_ASAP7_75t_R)\r\n  13.62 3911.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715583_/Y (INVx1_ASAP7_75t_R)\r\n 101.30 4012.35 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715612_/SN (HAxp5_ASAP7_75t_R)\r\n  45.01 4057.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384513_/Y (XNOR2x1_ASAP7_75t_R)\r\n  28.70 4086.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384518_/Y (AND5x2_ASAP7_75t_R)\r\n  31.22 4117.28 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09414_/Y (AO22x2_ASAP7_75t_R)\r\n  32.81 4150.08 v wire55436/Y (BUFx12f_ASAP7_75t_R)\r\n  66.68 4216.77 v wire55435/Y (BUFx12f_ASAP7_75t_R)\r\n  67.25 4284.01 v wire55434/Y (BUFx12f_ASAP7_75t_R)\r\n  66.32 4350.34 v wire55433/Y (BUFx12f_ASAP7_75t_R)\r\n  67.31 4417.65 v wire55432/Y (BUFx12f_ASAP7_75t_R)\r\n  71.71 4489.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09415_/Y (OR4x1_ASAP7_75t_R)\r\n  50.77 4540.13 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09416_/Y (OR5x2_ASAP7_75t_R)\r\n  50.72 4590.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09417_/Y (OR5x2_ASAP7_75t_R)\r\n  33.49 4624.35 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11022_/Y (AOI22x1_ASAP7_75t_R)\r\n  26.99 4651.33 ^ load_slew51767/Y (BUFx16f_ASAP7_75t_R)\r\n  59.33 4710.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11023_/Y (AND2x6_ASAP7_75t_R)\r\n  32.05 4742.72 ^ wire50793/Y (BUFx16f_ASAP7_75t_R)\r\n  70.46 4813.18 ^ wire50792/Y (BUFx16f_ASAP7_75t_R)\r\n  57.14 4870.32 ^ max_length50791/Y (BUFx12f_ASAP7_75t_R)\r\n  57.90 4928.22 ^ wire50790/Y (BUFx16f_ASAP7_75t_R)\r\n  89.00 5017.21 ^ wire50789/Y (BUFx16f_ASAP7_75t_R)\r\n  65.37 5082.59 ^ wire50788/Y (BUFx12f_ASAP7_75t_R)\r\n  62.25 5144.84 ^ wire50787/Y (BUFx12f_ASAP7_75t_R)\r\n  73.66 5218.50 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374879_/Y (AND2x2_ASAP7_75t_R)\r\n  30.04 5248.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374909_/Y (NAND2x2_ASAP7_75t_R)\r\n  75.54 5324.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374941_/Y (XNOR2x2_ASAP7_75t_R)\r\n  47.25 5371.33 v wire46725/Y (BUFx3_ASAP7_75t_R)\r\n  16.83 5388.16 v wire7813/Y (BUFx16f_ASAP7_75t_R)\r\n  77.75 5465.91 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715634_/CON (HAxp5_ASAP7_75t_R)\r\n  20.02 5485.92 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374961_/Y (INVx4_ASAP7_75t_R)\r\n  27.92 5513.84 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715636_/CON (HAxp5_ASAP7_75t_R)\r\n  14.52 5528.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715578_/Y (INVx1_ASAP7_75t_R)\r\n 110.73 5639.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715638_/SN (HAxp5_ASAP7_75t_R)\r\n  46.55 5685.64 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384519_/Y (XNOR2x1_ASAP7_75t_R)\r\n  41.02 5726.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384524_/Y (AND5x2_ASAP7_75t_R)\r\n  63.15 5789.80 v wire30208/Y (BUFx12f_ASAP7_75t_R)\r\n  83.85 5873.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09398_/Y (AO221x2_ASAP7_75t_R)\r\n  31.18 5904.83 v wire29780/Y (BUFx12f_ASAP7_75t_R)\r\n  67.42 5972.25 v wire29779/Y (BUFx12f_ASAP7_75t_R)\r\n  66.73 6038.98 v wire29778/Y (BUFx12f_ASAP7_75t_R)\r\n  66.08 6105.06 v wire29777/Y (BUFx12f_ASAP7_75t_R)\r\n  99.39 6204.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09399_/Y (OR4x2_ASAP7_75t_R)\r\n  52.91 6257.36 v wire29446/Y (BUFx12f_ASAP7_75t_R)\r\n  74.94 6332.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09400_/Y (OR3x2_ASAP7_75t_R)\r\n  11.77 6344.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13817_/Y (NOR2x1_ASAP7_75t_R)\r\n  36.79 6380.86 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13818_/Y (AND3x4_ASAP7_75t_R)\r\n  22.16 6403.01 ^ wire29198/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 6419.13 ^ wire4813/Y (BUFx16f_ASAP7_75t_R)\r\n  79.70 6498.83 ^ wire29197/Y (BUFx3_ASAP7_75t_R)\r\n  17.06 6515.89 ^ wire4798/Y (BUFx16f_ASAP7_75t_R)\r\n 110.37 6626.27 ^ wire29196/Y (BUFx3_ASAP7_75t_R)\r\n  17.81 6644.08 ^ wire4769/Y (BUFx16f_ASAP7_75t_R)\r\n  71.73 6715.81 ^ wire29195/Y (BUFx12f_ASAP7_75t_R)\r\n  63.73 6779.54 ^ wire29194/Y (BUFx16f_ASAP7_75t_R)\r\n  82.80 6862.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380843_/Y (AND3x4_ASAP7_75t_R)\r\n  80.15 6942.49 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380845_/Y (XNOR2x2_ASAP7_75t_R)\r\n  40.14 6982.63 v wire24381/Y (BUFx3_ASAP7_75t_R)\r\n  16.96 6999.59 v wire4637/Y (BUFx16f_ASAP7_75t_R)\r\n 169.90 7169.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715676_/CON (HAxp5_ASAP7_75t_R)\r\n  22.93 7192.41 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380978_/Y (INVx5_ASAP7_75t_R)\r\n  39.12 7231.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715678_/CON (HAxp5_ASAP7_75t_R)\r\n  17.36 7248.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715581_/Y (INVx1_ASAP7_75t_R)\r\n 139.72 7388.61 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715680_/SN (HAxp5_ASAP7_75t_R)\r\n  46.63 7435.24 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384526_/Y (XNOR2x1_ASAP7_75t_R)\r\n  43.35 7478.59 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384530_/Y (AND5x2_ASAP7_75t_R)\r\n  21.89 7500.48 ^ wire14553/Y (BUFx16f_ASAP7_75t_R)\r\n  60.38 7560.86 ^ wire14552/Y (BUFx12f_ASAP7_75t_R)\r\n  78.29 7639.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09424_/Y (AO221x2_ASAP7_75t_R)\r\n  46.92 7686.07 ^ wire14505/Y (BUFx12f_ASAP7_75t_R)\r\n  61.68 7747.74 ^ wire14504/Y (BUFx12f_ASAP7_75t_R)\r\n  63.66 7811.41 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09425_/Y (OR4x2_ASAP7_75t_R)\r\n  18.88 7830.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09426_/Y (OA21x2_ASAP7_75t_R)\r\n   9.19 7839.48 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13964_/Y (NOR2x1_ASAP7_75t_R)\r\n  32.41 7871.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13965_/Y (AND3x4_ASAP7_75t_R)\r\n  21.83 7893.72 v wire14423/Y (BUFx3_ASAP7_75t_R)\r\n  16.60 7910.32 v wire2687/Y (BUFx16f_ASAP7_75t_R)\r\n  76.26 7986.58 v wire14422/Y (BUFx3_ASAP7_75t_R)\r\n  17.63 8004.21 v wire2673/Y (BUFx16f_ASAP7_75t_R)\r\n  92.08 8096.29 v max_length14421/Y (BUFx16f_ASAP7_75t_R)\r\n  48.26 8144.55 v wire14420/Y (BUFx12f_ASAP7_75t_R)\r\n  65.64 8210.20 v wire14419/Y (BUFx12f_ASAP7_75t_R)\r\n  78.20 8288.39 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462481_/Y (AND2x2_ASAP7_75t_R)\r\n  32.72 8321.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462482_/Y (NAND2x2_ASAP7_75t_R)\r\n  51.65 8372.77 ^ wire13868/Y (BUFx16f_ASAP7_75t_R)\r\n  93.74 8466.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_463033_/Y (OR2x6_ASAP7_75t_R)\r\n  66.52 8533.02 ^ wire13185/Y (BUFx16f_ASAP7_75t_R)\r\n 125.00 8658.02 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_469024_/Y (NOR2x2_ASAP7_75t_R)\r\n  73.88 8731.90 v wire7777/Y (BUFx16f_ASAP7_75t_R)\r\n 117.54 8849.44 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_477305_/Y (OR3x4_ASAP7_75t_R)\r\n  46.53 8895.97 v wire2121/Y (BUFx3_ASAP7_75t_R)\r\n  16.26 8912.24 v wire1767/Y (BUFx16f_ASAP7_75t_R)\r\n 100.49 9012.73 v max_length2120/Y (BUFx16f_ASAP7_75t_R)\r\n  62.86 9075.59 v max_length2119/Y (BUFx16f_ASAP7_75t_R)\r\n  21.06 9096.65 v wire2118/Y (BUFx16f_ASAP7_75t_R)\r\n  76.88 9173.53 v max_length2117/Y (BUFx16f_ASAP7_75t_R)\r\n  36.80 9210.33 v wire2116/Y (BUFx16f_ASAP7_75t_R)\r\n  83.84 9294.17 v wire2115/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 9399.30 v wire2101/Y (BUFx16f_ASAP7_75t_R)\r\n  95.85 9495.16 v wire2100/Y (BUFx16f_ASAP7_75t_R)\r\n  52.35 9547.50 v max_length2099/Y (BUFx16f_ASAP7_75t_R)\r\n  38.11 9585.61 v wire2098/Y (BUFx3_ASAP7_75t_R)\r\n  16.02 9601.62 v wire113/Y (BUFx16f_ASAP7_75t_R)\r\n 127.64 9729.27 v max_length2096/Y (BUFx16f_ASAP7_75t_R)\r\n  47.57 9776.84 v wire2094/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 9792.96 v wire70/Y (BUFx16f_ASAP7_75t_R)\r\n 103.02 9895.98 v max_length2093/Y (BUFx16f_ASAP7_75t_R)\r\n  51.33 9947.30 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521833_/Y (NOR2x1_ASAP7_75t_R)\r\n  14.62 9961.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521834_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 9961.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/D (DFFHQNx2_ASAP7_75t_R)\r\n        9961.94   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1952.03 10452.03   clock network delay (propagated)\r\n -10.00 10442.03   clock uncertainty\r\n   0.00 10442.03   clock reconvergence pessimism\r\n        10442.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -6.09 10435.94   library setup time\r\n        10435.94   data required time\r\n---------------------------------------------------------\r\n        10435.94   data required time\r\n        -9961.94   data arrival time\r\n---------------------------------------------------------\r\n         474.00   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1267_\r\n            (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nEndpoint: system/serial_tl_domain/_1188_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock serial_tl_0_clock (rise edge)\r\n  48.42   48.42   clock network delay (propagated)\r\n   0.00   48.42 ^ system/serial_tl_domain/_1267_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n 130.15  178.57 ^ system/serial_tl_domain/_1267_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  69.41  247.98 v system/serial_tl_domain/_0676_/Y (NOR2x2_ASAP7_75t_R)\r\n  39.09  287.06 v system/serial_tl_domain/_0823_/Y (AND2x4_ASAP7_75t_R)\r\n  22.08  309.14 ^ system/serial_tl_domain/_1128_/CON (HAxp5_ASAP7_75t_R)\r\n   9.17  318.32 v system/serial_tl_domain/_1125_/Y (INVx1_ASAP7_75t_R)\r\n  13.54  331.85 ^ system/serial_tl_domain/_1129_/CON (HAxp5_ASAP7_75t_R)\r\n   8.88  340.73 v system/serial_tl_domain/_1123_/Y (INVx1_ASAP7_75t_R)\r\n  83.77  424.51 v system/serial_tl_domain/_1130_/SN (HAxp5_ASAP7_75t_R)\r\n  41.84  466.35 v load_slew119094/Y (BUFx10_ASAP7_75t_R)\r\n  24.78  491.13 v system/serial_tl_domain/_0863_/Y (AND2x2_ASAP7_75t_R)\r\n  19.53  510.67 v system/serial_tl_domain/_0864_/Y (AND2x2_ASAP7_75t_R)\r\n  23.33  534.00 v system/serial_tl_domain/_0866_/Y (AO32x1_ASAP7_75t_R)\r\n  49.05  583.05 v system/serial_tl_domain/_0870_/Y (OR5x2_ASAP7_75t_R)\r\n  22.11  605.16 v system/serial_tl_domain/_0872_/Y (OA22x2_ASAP7_75t_R)\r\n   0.01  605.17 v system/serial_tl_domain/_1188_/D (DFFHQNx2_ASAP7_75t_R)\r\n         605.17   data arrival time\r\n\r\n8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n  47.57 8547.57   clock network delay (propagated)\r\n -10.00 8537.57   clock uncertainty\r\n   0.00 8537.57   clock reconvergence pessimism\r\n        8537.57 ^ system/serial_tl_domain/_1188_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -4.26 8533.31   library setup time\r\n        8533.31   data required time\r\n---------------------------------------------------------\r\n        8533.31   data required time\r\n        -605.17   data arrival time\r\n---------------------------------------------------------\r\n        7928.14   slack (MET)\r\n\r\n```\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock_uncore period_min = 8026.00 fmax = 124.60\r\nserial_tl_0_clock period_min = 571.86 fmax = 1748.67\r\n```\r\n\r\n```\r\n$ ./orfs make FLOW_VARIANT=flat elapsed\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\n2_1_floorplan                    393\r\n2_2_floorplan_io                  12\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/flat/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro             1817\r\n2_5_floorplan_tapcell            678\r\n2_6_floorplan_pdn                580\r\n3_1_place_gp_skip_io             877\r\n3_2_place_iop                     38\r\n3_3_place_gp                    7678\r\n3_4_place_resized               1341\r\n3_5_place_dp                    1934\r\n4_1_cts                        12699\r\n5_1_grt                        68906\r\n5_2_fillcell                     143\r\n5_3_route                      20911\r\n6_1_merge                        556\r\n6_report                        7928\r\ngenerate_abstract               1166\r\nTotal                         135777\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Based on https://github.com/The-OpenROAD-Project/megaboom/commit/a8e07eab7d4848057ac8e7993d5fee93b3d8653d\r\n\r\nAfter understanding the design better and a best effort to [generating Verilog](https://groups.google.com/g/chipyard/c/XPmGRK_CtZA) for the core with an asynchronous FIFO from the core to the surrounding memory system and buses such that the depth of the clock tree in the core isn't such an enormous issue + I have a report from yosys to list all RAMs and ROMs in the design such that I can be sure that I mock all ROM/RAMs larger than 1024 bits, it was time to try [MegaBoom flattened](https://github.com/The-OpenROAD-Project/megaboom/blob/1cce55c772d823ebca0bf8368f1d363a2e546044/BUILD.bazel#L1153)...\r\n\r\nThe core here is MegaBoom up to and including L1 data/instruction cache. L2 & peripherals are excluded.\r\n\r\nSynthesis times are tolerable and not that far off non-flattened where I break out some macros for the larger parts of the core: ICache, DCache, branch predictor and floating point pipeline.\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\nTotal                           8120\r\n```\r\n\r\nFrom `make gui_synth`, I can see that the core is ca. 98% of the design measured in instances. The rest are buses and asynchronous bridges.\r\n\r\n`make memory` reports the table of roms and rams in the design. This report uses yosys and takes ca. 5 minutes to run, very acceptable. It would be *great* if synthesis could be run without optimizations quicky and then to view the results in the hierarchy view...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/05c5ded4-19e6-417f-ba74-31c5c64aa6ea)\r\n\r\nThe area of the instances is 250000um^2. I have been having trouble with 30% placement density, so I'm going to try 20% placement density. What is the relationship with CORE_UTILIZATION and placement density here...?\r\n\r\nMake that CORE_UTILIZATION=15\r\n\r\nsqrt(2500000/0.15) => 1300um * 1300um\r\n\r\nMacro placement and estimated routing congestion for 2000um x 2000um. The macros seem to be pushed out to the corners, let's see how that works out in placement and routing...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/03f9e101-6a6b-4362-a4f9-f93e142c11dc)\r\n\r\nRouting congestion in `make gui_place`. Why is the empty area yellow? Is power considered part of routing congestion?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/cdef90ba-9366-4046-b86d-7cac7a1d476f)\r\n\r\nEstimated routing congestion RUDY. I guess RUDY excludes power?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/203b5a86-3cd4-4c04-bf80-a0b204e98692)\r\n\r\nClock tree looks good:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/2363f35c-d12e-44b4-bbbb-5773d25b3426)\r\n\r\n\r\nGlobal routing has taken 40000s so far, but it seems to have succeeded:\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[INFO GRT-0197] Via related to pin nodes: 10765900\r\n[INFO GRT-0198] Via related Steiner nodes: 1028317\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 14831285\r\n[INFO GRT-0112] Final usage 3D: 118911097\r\n\r\n[INFO GRT-0096] Final congestion report:\r\nLayer         Resource        Demand        Usage (%)    Max H / Max V / Total Overflow\r\n---------------------------------------------------------------------------------------\r\nM1                   0             0            0.00%             0 /  0 /  0\r\nM2            65189536       19765924           30.32%             0 /  0 /  0\r\nM3            88394705       29035790           32.85%             0 /  0 /  0\r\nM4            65419606       14163760           21.65%             0 /  0 /  0\r\nM5            58863583       8001905           13.59%             0 /  0 /  0\r\nM6            42524107       2674369            6.29%             0 /  0 /  0\r\nM7            52346733        775494            1.48%             0 /  0 /  0\r\n---------------------------------------------------------------------------------------\r\nTotal        372738270       74417242           19.97%             0 /  0 /  0\r\n\r\n[INFO GRT-0018] Total wirelength: 44969527 um\r\n[INFO GRT-0014] Routed nets: 2043518\r\nWarning: There are 10 input ports missing set_input_delay.\r\nWarning: There are 7 output ports missing set_output_delay.\r\nWarning: There are 323 unclocked register/latch pins.\r\nWarning: There are 4128 unconstrained endpoints.\r\n\r\n==========================================================================\r\nglobal route pre repair design report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 523197 u^2 13% utilization.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n```\r\n\r\n\r\nGlobal route heat map:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/504a1b08-d095-41f1-a8be-6392437eeaf5)\r\n\r\n\r\nDetailed routing without power:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97c26702-6d81-472a-a79d-e15eb6cf1a9e)\r\n\r\n\r\nRegarding the long global routing times, I set SKIP_INCREMENTAL_REPAIR=1 in detailed routing, whereas it is a global routing argument. I believe that will take care of the pathologically slow global routing...\r\n\r\n```\r\n-                'route': ['SKIP_INCREMENTAL_REPAIR=1'],\r\n+                'grt': ['SKIP_INCREMENTAL_REPAIR=1']\r\n```\r\n\r\n\r\n```\r\n>>> report_checks -path_delay max\r\nStartpoint: system/prci_ctrl_domain/_853_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/_185_ (recovery check against rising-edge clock clock_uncore)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1973.50 1973.50   clock network delay (propagated)\r\n   0.00 1973.50 ^ system/prci_ctrl_domain/_853_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n  87.72 2061.22 v system/prci_ctrl_domain/_853_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  41.86 2103.08 v load_slew185637/Y (BUFx16f_ASAP7_75t_R)\r\n  37.04 2140.12 v max_cap185634/Y (BUFx16f_ASAP7_75t_R)\r\n  36.83 2176.95 v wire185631/Y (BUFx16f_ASAP7_75t_R)\r\n  41.48 2218.44 v wire185630/Y (BUFx16f_ASAP7_75t_R)\r\n  47.39 2265.83 v max_length185629/Y (BUFx16f_ASAP7_75t_R)\r\n  39.69 2305.52 v wire185628/Y (BUFx16f_ASAP7_75t_R)\r\n  81.35 2386.87 v max_length185627/Y (BUFx16f_ASAP7_75t_R)\r\n  29.27 2416.13 v load_slew185625/Y (BUFx16f_ASAP7_75t_R)\r\n  52.11 2468.25 v load_slew185624/Y (BUFx12f_ASAP7_75t_R)\r\n  43.24 2511.49 v load_slew185618/Y (BUFx16f_ASAP7_75t_R)\r\n  50.84 2562.32 v load_slew185615/Y (BUFx16f_ASAP7_75t_R)\r\n  34.35 2596.68 v load_slew185559/Y (BUFx16f_ASAP7_75t_R)\r\n  34.56 2631.24 v load_slew185558/Y (BUFx16f_ASAP7_75t_R)\r\n  26.61 2657.85 v load_slew185557/Y (BUFx16f_ASAP7_75t_R)\r\n  46.26 2704.11 v load_slew185556/Y (BUFx16f_ASAP7_75t_R)\r\n  51.34 2755.46 v max_length185555/Y (BUFx12f_ASAP7_75t_R)\r\n  41.44 2796.90 v wire185553/Y (BUFx16f_ASAP7_75t_R)\r\n  51.64 2848.53 v load_slew185552/Y (BUFx16f_ASAP7_75t_R)\r\n  34.46 2882.99 v wire185550/Y (BUFx16f_ASAP7_75t_R)\r\n  51.12 2934.11 v wire185547/Y (BUFx16f_ASAP7_75t_R)\r\n  64.89 2999.00 v load_slew185546/Y (BUFx16f_ASAP7_75t_R)\r\n  37.84 3036.83 v wire185534/Y (BUFx16f_ASAP7_75t_R)\r\n  88.57 3125.41 v wire185533/Y (BUFx3_ASAP7_75t_R)\r\n  17.20 3142.60 v wire23908/Y (BUFx16f_ASAP7_75t_R)\r\n 103.84 3246.44 v wire185532/Y (BUFx16f_ASAP7_75t_R)\r\n  53.90 3300.35 v load_slew185531/Y (BUFx16f_ASAP7_75t_R)\r\n  35.37 3335.71 v load_slew185522/Y (BUFx16f_ASAP7_75t_R)\r\n  31.13 3366.84 v load_slew185507/Y (BUFx16f_ASAP7_75t_R)\r\n  32.21 3399.06 v wire185505/Y (BUFx16f_ASAP7_75t_R)\r\n  37.17 3436.23 v load_slew185504/Y (BUFx16f_ASAP7_75t_R)\r\n  25.45 3461.69 v load_slew185494/Y (BUFx16f_ASAP7_75t_R)\r\n  25.36 3487.04 v wire185486/Y (BUFx16f_ASAP7_75t_R)\r\n  47.14 3534.18 v wire185485/Y (BUFx16f_ASAP7_75t_R)\r\n  24.87 3559.05 v max_cap185484/Y (BUFx16f_ASAP7_75t_R)\r\n  27.89 3586.94 v wire185483/Y (BUFx3_ASAP7_75t_R)\r\n  16.61 3603.56 v wire19831/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 3708.69 v wire185481/Y (BUFx3_ASAP7_75t_R)\r\n  18.09 3726.78 v wire19408/Y (BUFx16f_ASAP7_75t_R)\r\n 112.70 3839.48 ^ system/_107_/Y (INVx1_ASAP7_75t_R)\r\n   0.03 3839.51 ^ system/_185_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n        3839.51   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1969.03 10469.03   clock network delay (propagated)\r\n -10.00 10459.03   clock uncertainty\r\n   0.00 10459.03   clock reconvergence pessimism\r\n        10459.03 ^ system/_185_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n   0.82 10459.85   library recovery time\r\n        10459.85   data required time\r\n---------------------------------------------------------\r\n        10459.85   data required time\r\n        -3839.51   data arrival time\r\n---------------------------------------------------------\r\n        6620.34   slack (MET)\r\n\r\n\r\nStartpoint: _32_ (negative level-sensitive latch clocked by clock_uncore)\r\nEndpoint: _10_ (rising clock gating-check end-point clocked by clock_uncore)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n4250.00 4250.00   clock clock_uncore (fall edge)\r\n2156.12 6406.12   clock network delay (propagated)\r\n   0.00 6406.12 v _32_/CLK (DLLx1_ASAP7_75t_R)\r\n  32.10 6438.22 v _32_/Q (DLLx1_ASAP7_75t_R)\r\n   0.01 6438.23 v _10_/B (AND2x4_ASAP7_75t_R)\r\n        6438.23   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1955.45 10455.45   clock network delay (propagated)\r\n -10.00 10445.45   clock uncertainty\r\n   0.00 10445.45   clock reconvergence pessimism\r\n        10445.45 ^ _10_/A (AND2x4_ASAP7_75t_R)\r\n   0.00 10445.45   clock gating setup time\r\n        10445.45   data required time\r\n---------------------------------------------------------\r\n        10445.45   data required time\r\n        -6438.23   data arrival time\r\n---------------------------------------------------------\r\n        4007.22   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_\r\n          (rising edge-triggered flip-flop clocked by clock_uncore)\r\nPath Group: clock_uncore\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1977.51 1977.51   clock network delay (propagated)\r\n   0.00 1977.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  97.74 2075.25 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  26.79 2102.04 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055781_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 123.43 2225.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100818_/CON (HAxp5_ASAP7_75t_R)\r\n  36.21 2261.68 ^ wire155277/Y (BUFx12f_ASAP7_75t_R)\r\n  45.28 2306.96 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055932_/Y (NOR2x2_ASAP7_75t_R)\r\n  28.25 2335.21 v max_length142580/Y (BUFx16f_ASAP7_75t_R)\r\n 104.72 2439.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055933_/Y (NAND2x2_ASAP7_75t_R)\r\n  59.96 2499.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055934_/Y (OA22x2_ASAP7_75t_R)\r\n  36.00 2535.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055951_/Y (AND4x2_ASAP7_75t_R)\r\n  12.14 2548.03 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055963_/Y (NAND3x2_ASAP7_75t_R)\r\n  70.12 2618.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055964_/Y (AOI211x1_ASAP7_75t_R)\r\n  55.95 2674.10 ^ load_slew117489/Y (BUFx12f_ASAP7_75t_R)\r\n  53.80 2727.90 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056077_/Y (AND3x4_ASAP7_75t_R)\r\n  25.58 2753.48 ^ max_length114043/Y (BUFx16f_ASAP7_75t_R)\r\n  32.81 2786.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056130_/Y (AND2x6_ASAP7_75t_R)\r\n  14.23 2800.52 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056131_/Y (NAND2x1_ASAP7_75t_R)\r\n  15.55 2816.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056132_/Y (INVx1_ASAP7_75t_R)\r\n  16.14 2832.21 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09390_/Y (NAND2x2_ASAP7_75t_R)\r\n  28.51 2860.72 v wire99845/Y (BUFx16f_ASAP7_75t_R)\r\n  70.62 2931.33 v wire99844/Y (BUFx16f_ASAP7_75t_R)\r\n  56.99 2988.32 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09404_/Y (OAI21x1_ASAP7_75t_R)\r\n  11.35 2999.67 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09407_/Y (NAND2x1_ASAP7_75t_R)\r\n  44.90 3044.57 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09408_/Y (OR4x2_ASAP7_75t_R)\r\n  57.29 3101.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09409_/Y (OR5x2_ASAP7_75t_R)\r\n  39.18 3141.05 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11025_/Y (NOR2x2_ASAP7_75t_R)\r\n  25.42 3166.47 ^ wire85735/Y (BUFx3_ASAP7_75t_R)\r\n  16.09 3182.56 ^ wire22108/Y (BUFx16f_ASAP7_75t_R)\r\n  96.00 3278.56 ^ max_length85734/Y (BUFx12f_ASAP7_75t_R)\r\n  59.41 3337.98 ^ wire85733/Y (BUFx3_ASAP7_75t_R)\r\n  15.95 3353.92 ^ wire21265/Y (BUFx16f_ASAP7_75t_R)\r\n  93.06 3446.99 ^ max_length85732/Y (BUFx16f_ASAP7_75t_R)\r\n  52.88 3499.86 ^ wire85731/Y (BUFx12f_ASAP7_75t_R)\r\n  61.48 3561.34 ^ wire85730/Y (BUFx12f_ASAP7_75t_R)\r\n  94.55 3655.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374889_/Y (AND3x4_ASAP7_75t_R)\r\n  93.17 3749.07 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374891_/Y (XNOR2x2_ASAP7_75t_R)\r\n  33.79 3782.85 v max_length80723/Y (BUFx16f_ASAP7_75t_R)\r\n  73.46 3856.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715616_/CON (HAxp5_ASAP7_75t_R)\r\n  16.66 3872.97 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374906_/Y (INVx4_ASAP7_75t_R)\r\n  24.46 3897.43 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715614_/CON (HAxp5_ASAP7_75t_R)\r\n  13.62 3911.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715583_/Y (INVx1_ASAP7_75t_R)\r\n 101.30 4012.35 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715612_/SN (HAxp5_ASAP7_75t_R)\r\n  45.01 4057.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384513_/Y (XNOR2x1_ASAP7_75t_R)\r\n  28.70 4086.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384518_/Y (AND5x2_ASAP7_75t_R)\r\n  31.22 4117.28 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09414_/Y (AO22x2_ASAP7_75t_R)\r\n  32.81 4150.08 v wire55436/Y (BUFx12f_ASAP7_75t_R)\r\n  66.68 4216.77 v wire55435/Y (BUFx12f_ASAP7_75t_R)\r\n  67.25 4284.01 v wire55434/Y (BUFx12f_ASAP7_75t_R)\r\n  66.32 4350.34 v wire55433/Y (BUFx12f_ASAP7_75t_R)\r\n  67.31 4417.65 v wire55432/Y (BUFx12f_ASAP7_75t_R)\r\n  71.71 4489.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09415_/Y (OR4x1_ASAP7_75t_R)\r\n  50.77 4540.13 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09416_/Y (OR5x2_ASAP7_75t_R)\r\n  50.72 4590.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09417_/Y (OR5x2_ASAP7_75t_R)\r\n  33.49 4624.35 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11022_/Y (AOI22x1_ASAP7_75t_R)\r\n  26.99 4651.33 ^ load_slew51767/Y (BUFx16f_ASAP7_75t_R)\r\n  59.33 4710.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11023_/Y (AND2x6_ASAP7_75t_R)\r\n  32.05 4742.72 ^ wire50793/Y (BUFx16f_ASAP7_75t_R)\r\n  70.46 4813.18 ^ wire50792/Y (BUFx16f_ASAP7_75t_R)\r\n  57.14 4870.32 ^ max_length50791/Y (BUFx12f_ASAP7_75t_R)\r\n  57.90 4928.22 ^ wire50790/Y (BUFx16f_ASAP7_75t_R)\r\n  89.00 5017.21 ^ wire50789/Y (BUFx16f_ASAP7_75t_R)\r\n  65.37 5082.59 ^ wire50788/Y (BUFx12f_ASAP7_75t_R)\r\n  62.25 5144.84 ^ wire50787/Y (BUFx12f_ASAP7_75t_R)\r\n  73.66 5218.50 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374879_/Y (AND2x2_ASAP7_75t_R)\r\n  30.04 5248.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374909_/Y (NAND2x2_ASAP7_75t_R)\r\n  75.54 5324.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374941_/Y (XNOR2x2_ASAP7_75t_R)\r\n  47.25 5371.33 v wire46725/Y (BUFx3_ASAP7_75t_R)\r\n  16.83 5388.16 v wire7813/Y (BUFx16f_ASAP7_75t_R)\r\n  77.75 5465.91 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715634_/CON (HAxp5_ASAP7_75t_R)\r\n  20.02 5485.92 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374961_/Y (INVx4_ASAP7_75t_R)\r\n  27.92 5513.84 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715636_/CON (HAxp5_ASAP7_75t_R)\r\n  14.52 5528.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715578_/Y (INVx1_ASAP7_75t_R)\r\n 110.73 5639.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715638_/SN (HAxp5_ASAP7_75t_R)\r\n  46.55 5685.64 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384519_/Y (XNOR2x1_ASAP7_75t_R)\r\n  41.02 5726.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384524_/Y (AND5x2_ASAP7_75t_R)\r\n  63.15 5789.80 v wire30208/Y (BUFx12f_ASAP7_75t_R)\r\n  83.85 5873.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09398_/Y (AO221x2_ASAP7_75t_R)\r\n  31.18 5904.83 v wire29780/Y (BUFx12f_ASAP7_75t_R)\r\n  67.42 5972.25 v wire29779/Y (BUFx12f_ASAP7_75t_R)\r\n  66.73 6038.98 v wire29778/Y (BUFx12f_ASAP7_75t_R)\r\n  66.08 6105.06 v wire29777/Y (BUFx12f_ASAP7_75t_R)\r\n  99.39 6204.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09399_/Y (OR4x2_ASAP7_75t_R)\r\n  52.91 6257.36 v wire29446/Y (BUFx12f_ASAP7_75t_R)\r\n  74.94 6332.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09400_/Y (OR3x2_ASAP7_75t_R)\r\n  11.77 6344.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13817_/Y (NOR2x1_ASAP7_75t_R)\r\n  36.79 6380.86 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13818_/Y (AND3x4_ASAP7_75t_R)\r\n  22.16 6403.01 ^ wire29198/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 6419.13 ^ wire4813/Y (BUFx16f_ASAP7_75t_R)\r\n  79.70 6498.83 ^ wire29197/Y (BUFx3_ASAP7_75t_R)\r\n  17.06 6515.89 ^ wire4798/Y (BUFx16f_ASAP7_75t_R)\r\n 110.37 6626.27 ^ wire29196/Y (BUFx3_ASAP7_75t_R)\r\n  17.81 6644.08 ^ wire4769/Y (BUFx16f_ASAP7_75t_R)\r\n  71.73 6715.81 ^ wire29195/Y (BUFx12f_ASAP7_75t_R)\r\n  63.73 6779.54 ^ wire29194/Y (BUFx16f_ASAP7_75t_R)\r\n  82.80 6862.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380843_/Y (AND3x4_ASAP7_75t_R)\r\n  80.15 6942.49 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380845_/Y (XNOR2x2_ASAP7_75t_R)\r\n  40.14 6982.63 v wire24381/Y (BUFx3_ASAP7_75t_R)\r\n  16.96 6999.59 v wire4637/Y (BUFx16f_ASAP7_75t_R)\r\n 169.90 7169.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715676_/CON (HAxp5_ASAP7_75t_R)\r\n  22.93 7192.41 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380978_/Y (INVx5_ASAP7_75t_R)\r\n  39.12 7231.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715678_/CON (HAxp5_ASAP7_75t_R)\r\n  17.36 7248.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715581_/Y (INVx1_ASAP7_75t_R)\r\n 139.72 7388.61 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715680_/SN (HAxp5_ASAP7_75t_R)\r\n  46.63 7435.24 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384526_/Y (XNOR2x1_ASAP7_75t_R)\r\n  43.35 7478.59 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384530_/Y (AND5x2_ASAP7_75t_R)\r\n  21.89 7500.48 ^ wire14553/Y (BUFx16f_ASAP7_75t_R)\r\n  60.38 7560.86 ^ wire14552/Y (BUFx12f_ASAP7_75t_R)\r\n  78.29 7639.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09424_/Y (AO221x2_ASAP7_75t_R)\r\n  46.92 7686.07 ^ wire14505/Y (BUFx12f_ASAP7_75t_R)\r\n  61.68 7747.74 ^ wire14504/Y (BUFx12f_ASAP7_75t_R)\r\n  63.66 7811.41 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09425_/Y (OR4x2_ASAP7_75t_R)\r\n  18.88 7830.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09426_/Y (OA21x2_ASAP7_75t_R)\r\n   9.19 7839.48 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13964_/Y (NOR2x1_ASAP7_75t_R)\r\n  32.41 7871.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13965_/Y (AND3x4_ASAP7_75t_R)\r\n  21.83 7893.72 v wire14423/Y (BUFx3_ASAP7_75t_R)\r\n  16.60 7910.32 v wire2687/Y (BUFx16f_ASAP7_75t_R)\r\n  76.26 7986.58 v wire14422/Y (BUFx3_ASAP7_75t_R)\r\n  17.63 8004.21 v wire2673/Y (BUFx16f_ASAP7_75t_R)\r\n  92.08 8096.29 v max_length14421/Y (BUFx16f_ASAP7_75t_R)\r\n  48.26 8144.55 v wire14420/Y (BUFx12f_ASAP7_75t_R)\r\n  65.64 8210.20 v wire14419/Y (BUFx12f_ASAP7_75t_R)\r\n  78.20 8288.39 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462481_/Y (AND2x2_ASAP7_75t_R)\r\n  32.72 8321.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462482_/Y (NAND2x2_ASAP7_75t_R)\r\n  51.65 8372.77 ^ wire13868/Y (BUFx16f_ASAP7_75t_R)\r\n  93.74 8466.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_463033_/Y (OR2x6_ASAP7_75t_R)\r\n  66.52 8533.02 ^ wire13185/Y (BUFx16f_ASAP7_75t_R)\r\n 125.00 8658.02 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_469024_/Y (NOR2x2_ASAP7_75t_R)\r\n  73.88 8731.90 v wire7777/Y (BUFx16f_ASAP7_75t_R)\r\n 117.54 8849.44 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_477305_/Y (OR3x4_ASAP7_75t_R)\r\n  46.53 8895.97 v wire2121/Y (BUFx3_ASAP7_75t_R)\r\n  16.26 8912.24 v wire1767/Y (BUFx16f_ASAP7_75t_R)\r\n 100.49 9012.73 v max_length2120/Y (BUFx16f_ASAP7_75t_R)\r\n  62.86 9075.59 v max_length2119/Y (BUFx16f_ASAP7_75t_R)\r\n  21.06 9096.65 v wire2118/Y (BUFx16f_ASAP7_75t_R)\r\n  76.88 9173.53 v max_length2117/Y (BUFx16f_ASAP7_75t_R)\r\n  36.80 9210.33 v wire2116/Y (BUFx16f_ASAP7_75t_R)\r\n  83.84 9294.17 v wire2115/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 9399.30 v wire2101/Y (BUFx16f_ASAP7_75t_R)\r\n  95.85 9495.16 v wire2100/Y (BUFx16f_ASAP7_75t_R)\r\n  52.35 9547.50 v max_length2099/Y (BUFx16f_ASAP7_75t_R)\r\n  38.11 9585.61 v wire2098/Y (BUFx3_ASAP7_75t_R)\r\n  16.02 9601.62 v wire113/Y (BUFx16f_ASAP7_75t_R)\r\n 127.64 9729.27 v max_length2096/Y (BUFx16f_ASAP7_75t_R)\r\n  47.57 9776.84 v wire2094/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 9792.96 v wire70/Y (BUFx16f_ASAP7_75t_R)\r\n 103.02 9895.98 v max_length2093/Y (BUFx16f_ASAP7_75t_R)\r\n  51.33 9947.30 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521833_/Y (NOR2x1_ASAP7_75t_R)\r\n  14.62 9961.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521834_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 9961.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/D (DFFHQNx2_ASAP7_75t_R)\r\n        9961.94   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1952.03 10452.03   clock network delay (propagated)\r\n -10.00 10442.03   clock uncertainty\r\n   0.00 10442.03   clock reconvergence pessimism\r\n        10442.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -6.09 10435.94   library setup time\r\n        10435.94   data required time\r\n---------------------------------------------------------\r\n        10435.94   data required time\r\n        -9961.94   data arrival time\r\n---------------------------------------------------------\r\n         474.00   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1267_\r\n            (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nEndpoint: system/serial_tl_domain/_1188_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock serial_tl_0_clock (rise edge)\r\n  48.42   48.42   clock network delay (propagated)\r\n   0.00   48.42 ^ system/serial_tl_domain/_1267_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n 130.15  178.57 ^ system/serial_tl_domain/_1267_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  69.41  247.98 v system/serial_tl_domain/_0676_/Y (NOR2x2_ASAP7_75t_R)\r\n  39.09  287.06 v system/serial_tl_domain/_0823_/Y (AND2x4_ASAP7_75t_R)\r\n  22.08  309.14 ^ system/serial_tl_domain/_1128_/CON (HAxp5_ASAP7_75t_R)\r\n   9.17  318.32 v system/serial_tl_domain/_1125_/Y (INVx1_ASAP7_75t_R)\r\n  13.54  331.85 ^ system/serial_tl_domain/_1129_/CON (HAxp5_ASAP7_75t_R)\r\n   8.88  340.73 v system/serial_tl_domain/_1123_/Y (INVx1_ASAP7_75t_R)\r\n  83.77  424.51 v system/serial_tl_domain/_1130_/SN (HAxp5_ASAP7_75t_R)\r\n  41.84  466.35 v load_slew119094/Y (BUFx10_ASAP7_75t_R)\r\n  24.78  491.13 v system/serial_tl_domain/_0863_/Y (AND2x2_ASAP7_75t_R)\r\n  19.53  510.67 v system/serial_tl_domain/_0864_/Y (AND2x2_ASAP7_75t_R)\r\n  23.33  534.00 v system/serial_tl_domain/_0866_/Y (AO32x1_ASAP7_75t_R)\r\n  49.05  583.05 v system/serial_tl_domain/_0870_/Y (OR5x2_ASAP7_75t_R)\r\n  22.11  605.16 v system/serial_tl_domain/_0872_/Y (OA22x2_ASAP7_75t_R)\r\n   0.01  605.17 v system/serial_tl_domain/_1188_/D (DFFHQNx2_ASAP7_75t_R)\r\n         605.17   data arrival time\r\n\r\n8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n  47.57 8547.57   clock network delay (propagated)\r\n -10.00 8537.57   clock uncertainty\r\n   0.00 8537.57   clock reconvergence pessimism\r\n        8537.57 ^ system/serial_tl_domain/_1188_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -4.26 8533.31   library setup time\r\n        8533.31   data required time\r\n---------------------------------------------------------\r\n        8533.31   data required time\r\n        -605.17   data arrival time\r\n---------------------------------------------------------\r\n        7928.14   slack (MET)\r\n\r\n```\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock_uncore period_min = 8026.00 fmax = 124.60\r\nserial_tl_0_clock period_min = 571.86 fmax = 1748.67\r\n```\r\n\r\n```\r\n$ ./orfs make FLOW_VARIANT=flat elapsed\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\n2_1_floorplan                    393\r\n2_2_floorplan_io                  12\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/flat/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro             1817\r\n2_5_floorplan_tapcell            678\r\n2_6_floorplan_pdn                580\r\n3_1_place_gp_skip_io             877\r\n3_2_place_iop                     38\r\n3_3_place_gp                    7678\r\n3_4_place_resized               1341\r\n3_5_place_dp                    1934\r\n4_1_cts                        12699\r\n5_1_grt                        68906\r\n5_2_fillcell                     143\r\n5_3_route                      20911\r\n6_1_merge                        556\r\n6_report                        7928\r\ngenerate_abstract               1166\r\nTotal                         135777\r\n```\r\n", "date": "2024-01-13T10:44:53Z"}, {"author": "oharboe", "role": "assistant", "message": "@gudeh Any idea why the colors are so different for estimated and actual routing congestion? The estimate appears to give a very similar looking image, but why is the actual estimated congestion different?", "date": "2024-01-13T17:30:22Z"}, {"author": "rovinski", "role": "assistant", "message": "@oharboe Just a thought, have you properly constrained the async FIFO in SDC? I found this line https://github.com/The-OpenROAD-Project/megaboom/blob/1cce55c772d823ebca0bf8368f1d363a2e546044/constraints-chiptop.sdc#L13. I'm not sure if this covers the async FIFO or not. This would be okay for design space exploration, but for a real implementation it isn't sufficient. See [this very good guide](https://gist.github.com/brabect1/7695ead3d79be47576890bbcd61fe426).", "date": "2024-01-13T21:47:05Z"}, {"author": "oharboe", "role": "assistant", "message": "Regarding the very long global routing times. The global routing is actually fast, it is incremental repair and [reporting times](https://github.com/The-OpenROAD-Project/OpenROAD/issues/4533) that are slow.", "date": "2024-01-15T09:59:12Z"}], "date": "2024-01-13T10:44:53Z", "category": "Runtime", "subcategory": "Long run times", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4522", "id": 4522, "title": "MegaBoom, clock trees, macro placement and global routing congestion", "author": "oharboe", "description": "How can I tell if clock skew is increasing the minimum clock period for a design?\r\n\r\nHere is my current understanding:\r\n\r\nIf two flip flops are not connected, then the clock skew between the clocks that drive those two flip flops doesn't matter because there is no timing path between these two flip flops.\r\n\r\nSkew can be good and it can be bad. If there is a long timing path between two flip flops, then a negative skew for the starting flip flops or postivive skew for the capturing flip flop would make it easier to meet timing.\r\n\r\nAs a first order approximation though, the CTS will try to minimize clock skew, because in the end a very large clock skew will catch up with you and increase the minimum clock period.\r\n\r\nLatest MegaBoom update:\r\n\r\nI have [modified MegaBoom](https://github.com/The-OpenROAD-Project/megaboom/pull/18) so that it no longer has a PLL, but a clock for the TileLink (top level memory/peripheral interface) and for the RISC-V core.\r\n\r\nAs I understand, though I don't know the code very well, the RISC-V core is connected to the TileLink via an asynchronous FIFO(or equivalent thereof).\r\n\r\nTherefore there are no ChipTop inputs/outputs that have an insertion point relative to the clock for the RISC-V core. This seems like a clever way of doing things, because then the insertion latency of the RISC-V clock doesn't matter(though clock uncertainty which I would expect to grow with a long clock insertation latency) for the clock period.\r\n\r\n```\r\n>>> report_clock_skew\r\nClock clock_uncore\r\nLatency      CRPR       Skew\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_728430_/CLK ^\r\n 882.50\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/core/int_issue_unit/slots_32/_3607_/CLK ^\r\n1008.42      0.00    -125.92\r\n\r\nClock serial_tl_0_clock\r\nLatency      CRPR       Skew\r\nsystem/serial_tl_domain/_1154_/CLK ^\r\n  67.76\r\nsystem/serial_tl_domain/_1275_/CLK ^\r\n  64.77      0.00       2.99\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1df082cd-b853-44f7-8b5e-7ebeb9e1409b)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e1288f3f-c699-4fa5-9148-40a2b85e5d43)\r\n\r\nSome notes:\r\n\r\n- The area of some of those macros are mocked to be smaller than they really are so as to fit this into 1000um x 1000um and have reasonable turnaround times in builds. The L2 is *tiny* in area...\r\n- The longest timing path is part of the top level design(macros are not involved), so nothing material should be lost by ignoring what is inside the macros for now. The macros are abstracts from floorplan, so completely unrealistic.\r\n- A quick test the other day put a flattened design at ca. 3mm^2 and 3 million instances(big caveat, as I write this from my flawed memory, I'm not currently studying a flattened design). To be revisited later maybe.\r\n- W.r.t. the global placement congestion, macro placement has a fix coming up, so I don't think there's anything interesting to study w.r.t. macro placement and global routing congestion until a new build has been done after that fix. https://github.com/The-OpenROAD-Project/OpenROAD/pull/4519\r\n- almost no hold cells, 20, there used to be thousands or even tens of thousands. . :exploding_head: \r\n- running time for CTS is now much more reasonable, 5000s down from 30000s. This is not entirely suprising: now that the clock tree is not pathologically formed, the repair job is probably quick.\r\n\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_0_mem                          173\r\n1_1_yosys                       3606\r\n1_1_yosys_hier_report           3542\r\n2_1_floorplan                    277\r\n2_2_floorplan_io                   8\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/base/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro              496\r\n2_5_floorplan_tapcell            130\r\n2_6_floorplan_pdn                206\r\n3_1_place_gp_skip_io             448\r\n3_2_place_iop                     14\r\n3_3_place_gp                    4564\r\n3_4_place_resized                863\r\n3_5_place_dp                    1033\r\n4_1_cts                         5069\r\n5_1_grt                        14525\r\nTotal                          34954\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I tell if clock skew is increasing the minimum clock period for a design?\r\n\r\nHere is my current understanding:\r\n\r\nIf two flip flops are not connected, then the clock skew between the clocks that drive those two flip flops doesn't matter because there is no timing path between these two flip flops.\r\n\r\nSkew can be good and it can be bad. If there is a long timing path between two flip flops, then a negative skew for the starting flip flops or postivive skew for the capturing flip flop would make it easier to meet timing.\r\n\r\nAs a first order approximation though, the CTS will try to minimize clock skew, because in the end a very large clock skew will catch up with you and increase the minimum clock period.\r\n\r\nLatest MegaBoom update:\r\n\r\nI have [modified MegaBoom](https://github.com/The-OpenROAD-Project/megaboom/pull/18) so that it no longer has a PLL, but a clock for the TileLink (top level memory/peripheral interface) and for the RISC-V core.\r\n\r\nAs I understand, though I don't know the code very well, the RISC-V core is connected to the TileLink via an asynchronous FIFO(or equivalent thereof).\r\n\r\nTherefore there are no ChipTop inputs/outputs that have an insertion point relative to the clock for the RISC-V core. This seems like a clever way of doing things, because then the insertion latency of the RISC-V clock doesn't matter(though clock uncertainty which I would expect to grow with a long clock insertation latency) for the clock period.\r\n\r\n```\r\n>>> report_clock_skew\r\nClock clock_uncore\r\nLatency      CRPR       Skew\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_728430_/CLK ^\r\n 882.50\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/core/int_issue_unit/slots_32/_3607_/CLK ^\r\n1008.42      0.00    -125.92\r\n\r\nClock serial_tl_0_clock\r\nLatency      CRPR       Skew\r\nsystem/serial_tl_domain/_1154_/CLK ^\r\n  67.76\r\nsystem/serial_tl_domain/_1275_/CLK ^\r\n  64.77      0.00       2.99\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1df082cd-b853-44f7-8b5e-7ebeb9e1409b)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e1288f3f-c699-4fa5-9148-40a2b85e5d43)\r\n\r\nSome notes:\r\n\r\n- The area of some of those macros are mocked to be smaller than they really are so as to fit this into 1000um x 1000um and have reasonable turnaround times in builds. The L2 is *tiny* in area...\r\n- The longest timing path is part of the top level design(macros are not involved), so nothing material should be lost by ignoring what is inside the macros for now. The macros are abstracts from floorplan, so completely unrealistic.\r\n- A quick test the other day put a flattened design at ca. 3mm^2 and 3 million instances(big caveat, as I write this from my flawed memory, I'm not currently studying a flattened design). To be revisited later maybe.\r\n- W.r.t. the global placement congestion, macro placement has a fix coming up, so I don't think there's anything interesting to study w.r.t. macro placement and global routing congestion until a new build has been done after that fix. https://github.com/The-OpenROAD-Project/OpenROAD/pull/4519\r\n- almost no hold cells, 20, there used to be thousands or even tens of thousands. . :exploding_head: \r\n- running time for CTS is now much more reasonable, 5000s down from 30000s. This is not entirely suprising: now that the clock tree is not pathologically formed, the repair job is probably quick.\r\n\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_0_mem                          173\r\n1_1_yosys                       3606\r\n1_1_yosys_hier_report           3542\r\n2_1_floorplan                    277\r\n2_2_floorplan_io                   8\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/base/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro              496\r\n2_5_floorplan_tapcell            130\r\n2_6_floorplan_pdn                206\r\n3_1_place_gp_skip_io             448\r\n3_2_place_iop                     14\r\n3_3_place_gp                    4564\r\n3_4_place_resized                863\r\n3_5_place_dp                    1033\r\n4_1_cts                         5069\r\n5_1_grt                        14525\r\nTotal                          34954\r\n```\r\n", "date": "2024-01-11T06:33:55Z"}, {"author": "rovinski", "role": "assistant", "message": "> If two flip flops are not connected, then the clock skew between the clocks that drive those two flip flops doesn't matter because there is no timing path between these two flip flops.\r\n\r\nCorrect\r\n\r\n> Skew can be good and it can be bad. If there is a long timing path between two flip flops, then a negative skew for the starting flip flops or postivive skew for the capturing flip flop would make it easier to meet timing.\r\n\r\nCorrect\r\n\r\n> As a first order approximation though, the CTS will try to minimize clock skew, because in the end a very large clock skew will catch up with you and increase the minimum clock period.\r\n\r\nThe OR CTS engine tries to minimize skew because it is algorithmically simpler, but not necessarily the most optimal. Commercial engines use a technique called \"concurrent clock optimization\" which will look at the timing paths and purposefully skew certain registers if it makes timing better.\r\n\r\nConcurrent clock optimization has a similar effect to register retiming - the former shifts the clock so it borrows setup time from one stage to give to another stage. The latter shifts logic from one stage to another stage and therefore also shifts setup time.\r\n\r\n> As I understand, though I don't know the code very well, the RISC-V core is connected to the TileLink via an asynchronous FIFO(or equivalent thereof).\r\n\r\nYes, async FIFOs or other clock domain crossings (CDCs) are convenient ways to break up and decouple clock trees. Clock trees cannot become too large, because the larger they are, the more power they consume and the more difficult it is to minimize skew/jitter/uncertainty. A clock tree can become so large that the jitter becomes larger than the clock period, in which case timing is impossible to meet. There is a design tradeoff between how many clock domains there are and data latency because the CDCs add one or more cycles when transmitting data across the interface.\r\n\r\n> How can I tell if clock skew is increasing the minimum clock period for a design?\r\n\r\nI might rephrase the question more simply as \"How can I tell if clock skew is bad for a design?\" because clock skew always impacts the clock period, as alluded above. This is one of the areas where it takes a lot of intuition, experimentation, and heuristics to evaluate because the answer is rarely clear. A soft and perhaps unuseful rule of thumb would be \"when the clock skew/jitter/uncertainty becomes a significant fraction of the clock period\". There are no hard rules of thumb, because sometimes high skew can be tolerated in order to keep the design fully synchronous. I personally start to get suspicious if the skew is eating more than 20-40% of the clock period. But the size of the clock tree also matters and how much skew you would _expect_ from a clock tree of that size.\r\n\r\nThere are some red flags, though, to identify purely suboptimal results. One is if there are many, many hold buffers being inserted. This is usually due to bad timing constraints, but it could also be due to bad skew in the clock tree.\r\n\r\nAnother red flag is if a path is failing both setup time _and_ hold time. This most often happens not because of skew but because of jitter caused by on-chip variation. Jitter can cause clock edges to be both early and late, which means that if a path is failing both then the jitter is too high.", "date": "2024-01-11T07:47:29Z"}, {"author": "oharboe", "role": "assistant", "message": "This is the [asynchronous connection](https://github.com/The-OpenROAD-Project/megaboom/blob/9d9d44d90545dd747f38f23d1f4c37045edb5d57/rtl/ClockSinkDomain_2.sv#L163C3-L163C3) between TileLink and the rest of the system is in the Verilog code.\r\n\r\nHere is [the expected gray counter](https://github.com/The-OpenROAD-Project/megaboom/blob/9d9d44d90545dd747f38f23d1f4c37045edb5d57/rtl/AsyncQueueSink_3.sv#L56C14-L56C34)  and the corresponding [Chisel code](https://github.com/chipsalliance/rocket-chip/blob/50adbdb3e4e18c2b3de57693323f4174b60f9767/src/main/scala/util/AsyncQueue.scala#L145). \r\n\r\n", "date": "2024-01-11T11:52:46Z"}, {"author": "oharboe", "role": "assistant", "message": "I chased down the synchronous reset although it doesn't show up in the most critical path at the ChipTop level.\r\n\r\nFor now, I have created a macro out of the BranchPredictor to rein in build times. In that macro the synchronous reset has a very large fanout, which obviously is a disaster for timing.\r\n\r\nAfter some investigation at the top level, I have found out that MegaBoom, [as documented](https://docs.boom-core.org/en/latest/sections/physical-realization.html#register-retiming), is relying heavily on register retiming and that the synchronous reset [is in fact pipelined](https://github.com/The-OpenROAD-Project/megaboom/blob/9d9d44d90545dd747f38f23d1f4c37045edb5d57/rtl/AsyncResetSynchronizerPrimitiveShiftReg_d3_i0.sv#L40).\r\n\r\nHowever, since the design is hierarchical and not flattened, the design won't be able to take advantage of these three pipeline stages. Also, yosys does not support retiming.\r\n\r\nRetiming in OpenROAD/yosys has been discussed in some detail [previously](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/discussions/1710#discussioncomment-7882745), I wanted to share the results of my investigation into synchronous reset specifically for MegaBoom.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/205fd24f-9f6f-4153-ba6e-75a32f1f87a9)\r\n", "date": "2024-01-11T14:07:53Z"}, {"author": "oharboe", "role": "assistant", "message": "For my part, the questions were answered so closing.", "date": "2024-01-12T21:05:45Z"}], "date": "2024-01-11T06:33:55Z", "category": "Runtime", "subcategory": "Clock tree and timing analysis", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4504", "id": 4504, "title": "MegaBoom with clock tree", "author": "oharboe", "description": "Looks much more reasonable now. There are H-clock trees after CTS.\r\n\r\n`make cts_issue`; CTS takes ca. 25000 seconds on my machine: https://drive.google.com/file/d/13eenpP2JgzXJD0uP3KIpX4QLArBVjzT2/view?usp=sharing\r\n\r\nThis is apples and oranges comparision, but ... Minimum clock period is 5000ps, whereas I've seen claims on the order of 1000ps with commercial tools for the most similar design I know of to MegaBoom: https://carrv.github.io/2020/papers/CARRV2020_paper_15_Zhao.pdf\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock period_min = 5403.70 fmax = 185.06\r\nclock_vir period_min = 0.00 fmax = inf\r\nfake_pll_clk period_min = 5403.70 fmax = 185.06\r\nserial_tl_0_clock period_min = 953.62 fmax = 1048.63\r\n```\r\n\r\nYellow are hold cells, very reasonable... Clock tree looks odd. Those leaf nodes on the right side are flip flops. It would be nice if there was some clear visual indication of macros vs. flip flop endpoints in the CTS view....\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5837af84-df29-4b34-adbe-c8f9b1a48e14)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/6f0037fa-6c26-4904-88a0-e31fc5312cb0)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3d39c96e-5d49-4a5e-add6-6e6517d4ccf8)\r\n\r\n\r\n```\r\nreport_checks -path_delay max -fields {fanout skew}\r\nStartpoint: reset (input port clocked by clock_vir)\r\nEndpoint: system/prci_ctrl_domain/_3041_\r\n          (recovery check against rising-edge clock fake_pll_clk)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v reset (in)\r\n     1   10.58 2710.58 v hold4662/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2723.18 v hold4387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2735.67 v hold4663/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2748.32 v hold4335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2760.97 v hold4664/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2773.69 v hold4388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 2786.50 v hold4665/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2799.00 v hold64/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2811.66 v hold4666/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2824.31 v hold4389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 2836.91 v hold4667/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 2849.61 v hold4336/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 2862.09 v hold4668/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 2874.48 v hold4390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2886.88 v hold4669/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2899.21 v hold56/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 2911.54 v hold4670/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 2923.77 v hold4391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.45 2936.22 v hold4671/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2948.71 v hold4337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 2961.06 v hold4672/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2973.22 v hold4392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2985.48 v hold4673/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.38 2997.87 v hold65/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 3010.12 v hold4674/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 3022.31 v hold4393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3034.52 v hold4675/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3046.72 v hold4338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 3059.19 v hold4676/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 3071.78 v hold4394/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.63 3087.41 v hold4677/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.70 3106.12 v input5/Y (BUFx24_ASAP7_75t_R)\r\n     1   13.56 3119.68 v hold4678/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.47 3134.15 v hold4395/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3149.44 v hold4339/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3164.73 v hold4396/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3180.00 v hold66/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3195.29 v hold4397/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 3210.53 v hold4340/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3225.74 v hold4398/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3241.03 v hold57/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3256.34 v hold4399/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3271.56 v hold4341/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3286.82 v hold4400/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3302.12 v hold67/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3317.35 v hold4401/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3332.56 v hold4342/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3350.46 v hold4402/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.93 3367.38 v wire96200/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.22 3381.60 v hold4403/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.14 3396.75 v hold4343/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3412.01 v hold4404/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3427.30 v hold68/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 3442.49 v hold4405/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3457.70 v hold4344/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3472.98 v hold4406/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3488.22 v hold58/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3503.40 v hold4407/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3518.64 v hold4345/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3533.87 v hold4408/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3549.06 v hold69/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.15 3564.21 v hold4409/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.13 3579.33 v hold4346/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.89 3597.22 v hold4410/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.94 3614.16 v wire96199/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.34 3628.51 v hold4411/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3643.80 v hold4347/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3659.08 v hold4412/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3674.36 v hold70/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3689.65 v hold4413/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3704.94 v hold4348/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3720.18 v hold4414/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3735.49 v hold59/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3750.82 v hold4415/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3766.08 v hold4349/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3781.32 v hold4416/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3796.53 v hold71/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.32 3811.85 v hold4417/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.36 3827.21 v hold4350/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3845.10 v hold4418/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.84 3861.95 v wire96198/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.33 3876.27 v hold4419/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.34 3891.61 v hold4351/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3906.92 v hold4420/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3922.13 v hold72/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3937.43 v hold4421/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3952.73 v hold4352/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3967.93 v hold4422/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3983.26 v hold60/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3998.57 v hold4423/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4013.88 v hold4353/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4029.16 v hold4424/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.17 4044.33 v hold73/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4059.57 v hold4425/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4074.94 v hold4354/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.95 4092.90 v hold4426/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.85 4109.75 v wire96197/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.32 4124.07 v hold4427/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4139.40 v hold4355/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4154.77 v hold4428/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4170.01 v hold74/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 4185.20 v hold4429/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4200.45 v hold4356/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4215.67 v hold4430/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4230.98 v hold61/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4246.25 v hold4431/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4261.53 v hold4357/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4276.86 v hold4432/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4292.15 v hold75/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 4307.35 v hold4433/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 4322.59 v hold4358/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.96 4340.55 v hold4434/Y (BUFx2_ASAP7_75t_R)\r\n     1   20.57 4361.13 v wire96196/Y (BUFx24_ASAP7_75t_R)\r\n     1   14.76 4375.89 v hold4435/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4391.20 v hold4359/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4406.49 v hold4436/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4421.75 v hold76/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4437.02 v hold4437/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4452.26 v hold4360/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4467.52 v hold4438/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4482.79 v hold62/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 4497.99 v hold4439/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 4513.17 v hold4361/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 4528.42 v hold4440/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4543.66 v hold77/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4558.88 v hold4441/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 4574.23 v hold4362/Y (BUFx2_ASAP7_75t_R)\r\n     1   22.85 4597.08 v hold4442/Y (BUFx2_ASAP7_75t_R)\r\n    15   15.42 4612.50 ^ system/prci_ctrl_domain/_1567_/Y (INVx11_ASAP7_75t_R)\r\n          2.22 4614.72 ^ system/prci_ctrl_domain/_3041_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n               4614.72   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        474.60 8974.60   clock network delay (propagated)\r\n        -10.00 8964.60   clock uncertainty\r\n          0.00 8964.60   clock reconvergence pessimism\r\n               8964.60 ^ system/prci_ctrl_domain/_3041_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n          4.83 8969.43   library recovery time\r\n               8969.43   data required time\r\n---------------------------------------------------------------\r\n               8969.43   data required time\r\n               -4614.72   data arrival time\r\n---------------------------------------------------------------\r\n               4354.71   slack (MET)\r\n\r\n\r\nStartpoint: system/prci_ctrl_domain/_2967_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/prci_ctrl_domain/_1576_\r\n          (rising clock gating-check end-point clocked by fake_pll_clk)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n        983.66  983.66   clock network delay (propagated)\r\n          0.00  983.66 ^ system/prci_ctrl_domain/_2967_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n    29  134.66 1118.32 v system/prci_ctrl_domain/_2967_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n     1   41.06 1159.38 v hold6293/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.10 1173.47 v hold6165/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1185.77 v hold6294/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1198.07 v hold6101/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1210.37 v hold6295/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1222.63 v hold6166/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1234.88 v hold6296/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1247.17 v hold5379/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 1259.39 v hold6297/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 1271.74 v hold6167/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 1284.10 v hold6298/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1296.38 v hold6102/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1308.63 v hold6299/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 1321.09 v hold6168/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1333.82 v hold6300/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 1346.34 v hold4926/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1358.54 v hold6301/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1370.85 v hold6169/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 1383.12 v hold6302/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 1395.53 v hold6103/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1408.26 v hold6303/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1421.03 v hold6170/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 1433.72 v hold6304/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 1446.40 v hold5380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1459.19 v hold6305/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1472.02 v hold6171/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 1484.59 v hold6306/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 1496.96 v hold6104/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1509.22 v hold6307/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 1521.92 v hold6172/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1534.74 v hold6308/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1547.36 v hold4681/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 1559.74 v hold6309/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1572.00 v hold6173/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1584.30 v hold6310/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1597.06 v hold6105/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.51 1609.57 v hold6311/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 1621.73 v hold6174/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1634.53 v hold6312/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 1647.71 v hold5381/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 1660.86 v hold6313/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 1674.00 v hold6175/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 1687.12 v hold6314/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1699.76 v hold6106/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 1711.97 v hold6315/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 1724.29 v hold6176/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 1737.31 v hold6316/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1749.93 v hold4927/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1762.70 v hold6317/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1775.24 v hold6177/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1787.97 v hold6318/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 1801.06 v hold6107/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1814.23 v hold6319/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1827.04 v hold6178/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 1839.94 v hold6320/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 1852.42 v hold5382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1865.07 v hold6321/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 1877.55 v hold6179/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1889.85 v hold6322/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 1902.89 v hold6108/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1916.05 v hold6323/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 1928.68 v hold6180/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 1941.34 v hold6324/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1953.88 v hold4532/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1966.16 v hold6325/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 1978.40 v hold6181/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1990.60 v hold6326/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2002.76 v hold6109/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.10 2014.86 v hold6327/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2027.85 v hold6182/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2040.62 v hold6328/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 2052.84 v hold5383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2065.15 v hold6329/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2077.41 v hold6183/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 2089.71 v hold6330/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 2101.98 v hold6110/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2114.31 v hold6331/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 2127.24 v hold6184/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 2139.92 v hold6332/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2152.26 v hold4928/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 2164.78 v hold6333/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2177.41 v hold6185/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2189.99 v hold6334/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2202.48 v hold6111/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 2215.24 v hold6335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2227.82 v hold6186/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2240.82 v hold6336/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.26 2254.08 v hold5384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.10 2267.18 v hold6337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2280.06 v hold6187/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2292.45 v hold6338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 2305.14 v hold6112/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 2318.31 v hold6339/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 2331.55 v hold6188/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 2344.49 v hold6340/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2357.37 v hold4682/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 2370.45 v hold6341/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 2383.51 v hold6189/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.44 2395.95 v hold6342/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 2409.06 v hold6113/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 2422.58 v hold6343/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2435.33 v hold6190/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2448.35 v hold6344/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 2461.14 v hold5385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2473.46 v hold6345/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 2486.32 v hold6191/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.72 2500.04 v hold6346/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2514.08 v hold6114/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.71 2527.79 v hold6347/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2540.53 v hold6192/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2553.30 v hold6348/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 2566.61 v hold4929/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 2580.08 v hold6349/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.34 2593.42 v hold6193/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2606.83 v hold6350/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.19 2620.02 v hold6115/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2632.66 v hold6351/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2644.99 v hold6194/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2657.71 v hold6352/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 2670.28 v hold5386/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2682.76 v hold6353/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.07 2695.84 v hold6195/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2709.26 v hold6354/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 2722.44 v hold6116/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2735.05 v hold6355/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2747.62 v hold6196/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2759.95 v hold6356/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 2772.19 v hold4317/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 2785.42 v hold6357/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2798.42 v hold6197/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 2811.30 v hold6358/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.39 2824.69 v hold6117/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2837.72 v hold6359/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.42 2850.13 v hold6198/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2863.12 v hold6360/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2876.68 v hold5387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 2889.57 v hold6361/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 2901.86 v hold6199/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 2914.95 v hold6362/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.65 2928.60 v hold6118/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.02 2942.62 v hold6363/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.33 2956.95 v hold6200/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2970.98 v hold6364/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.62 2984.61 v hold4930/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2998.16 v hold6365/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.70 3011.86 v hold6201/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.86 3025.72 v hold6366/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3038.67 v hold6119/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3051.19 v hold6367/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3063.79 v hold6202/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3076.69 v hold6368/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3089.21 v hold5388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3101.85 v hold6369/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 3115.16 v hold6203/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 3127.95 v hold6370/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3141.13 v hold6120/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.51 3154.64 v hold6371/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 3167.48 v hold6204/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 3179.78 v hold6372/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 3192.33 v hold4683/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.37 3205.71 v hold6373/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3218.58 v hold6205/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 3231.89 v hold6374/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 3245.11 v hold6121/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3258.02 v hold6375/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 3270.59 v hold6206/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 3282.80 v hold6376/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3295.74 v hold5389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3308.36 v hold6377/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 3321.59 v hold6207/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 3334.63 v hold6378/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.57 3348.20 v hold6122/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3361.35 v hold6379/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 3374.80 v hold6208/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 3387.94 v hold6380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3400.29 v hold4931/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3413.17 v hold6381/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 3426.15 v hold6209/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3438.68 v hold6382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 3451.60 v hold6123/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 3465.10 v hold6383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3477.95 v hold6210/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3490.90 v hold6384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 3504.15 v hold5390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3516.69 v hold6385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3529.04 v hold6211/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.55 3542.59 v hold6386/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 3555.88 v hold6124/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 3568.28 v hold6387/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 3581.34 v hold6212/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3594.24 v hold6388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 3606.90 v hold4533/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3619.75 v hold6389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 3632.25 v hold6213/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3644.78 v hold6390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3657.66 v hold6125/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 3671.08 v hold6391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3683.93 v hold6214/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.78 3696.70 v hold6392/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3709.88 v hold5391/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.83 3723.71 v hold6393/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.31 3738.02 v hold6215/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.03 3751.05 v hold6394/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3764.20 v hold6126/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.54 3777.74 v hold6216/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.35 3791.09 v hold4932/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 3803.85 v hold6217/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 3816.14 v hold6127/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 3828.40 v hold6218/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3841.01 v hold5392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.96 3853.97 v hold6219/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 3866.70 v hold6128/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 3879.39 v hold6220/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3891.85 v hold4684/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 3904.28 v hold6221/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 3916.52 v hold6129/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3928.99 v hold6222/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 3941.53 v hold5393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 3953.81 v hold6223/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3966.75 v hold6130/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.08 3980.82 v hold6224/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.56 3995.38 v hold4933/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 4008.56 v hold6225/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4020.80 v hold6131/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.36 4034.16 v hold6226/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 4047.10 v hold5394/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 4059.57 v hold6227/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 4072.18 v hold6132/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4084.61 v hold6228/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 4097.02 v hold55/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 4109.60 v hold6229/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 4122.52 v hold6133/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 4135.47 v hold6230/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.91 4148.38 v hold5395/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4161.68 v hold6231/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 4174.74 v hold6134/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.38 4188.13 v hold6232/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4200.93 v hold4934/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4213.19 v hold6233/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 4225.52 v hold6135/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 4238.05 v hold6234/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4250.45 v hold5396/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4262.65 v hold6235/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 4274.89 v hold6136/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 4287.49 v hold6236/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 4300.21 v hold4685/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.12 4313.32 v hold6237/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 4326.80 v hold6137/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 4340.29 v hold6238/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 4352.98 v hold5397/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 4365.83 v hold6239/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 4379.13 v hold6138/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 4391.84 v hold6240/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4404.10 v hold4935/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4416.35 v hold6241/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 4428.54 v hold6139/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 4441.69 v hold6242/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.98 4455.68 v hold5398/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.93 4469.61 v hold6243/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 4482.41 v hold6140/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 4495.55 v hold6244/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 4509.07 v hold4534/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4521.64 v hold6245/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4533.86 v hold6141/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 4546.38 v hold6246/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 4559.05 v hold5399/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 4571.76 v hold6247/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4584.15 v hold6142/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.20 4597.34 v hold6248/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 4610.20 v hold4936/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4622.40 v hold6249/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 4634.89 v hold6143/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4647.24 v hold6250/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 4659.58 v hold5400/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4672.01 v hold6251/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 4684.29 v hold6144/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.40 4697.68 v hold6252/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.97 4710.66 v hold4686/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 4723.91 v hold6253/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.75 4737.67 v hold6145/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4750.60 v hold6254/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 4762.91 v hold5401/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 4775.05 v hold6255/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 4787.42 v hold6146/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4799.99 v hold6256/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 4812.96 v hold4937/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 4825.62 v hold6257/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4838.91 v hold6147/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.89 4852.81 v hold6258/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 4865.89 v hold5402/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4878.28 v hold6259/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4891.10 v hold6148/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 4903.94 v hold6260/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4916.29 v hold4318/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4928.52 v hold6261/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.05 4941.57 v hold6149/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 4955.33 v hold6262/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 4969.26 v hold5403/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.94 4983.20 v hold6263/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4996.14 v hold6150/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 5008.41 v hold6264/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5021.72 v hold4938/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 5034.82 v hold6265/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 5047.13 v hold6151/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 5060.37 v hold6266/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 5073.81 v hold5404/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5087.13 v hold6267/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 5100.61 v hold6152/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5114.08 v hold6268/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 5127.58 v hold4687/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 5141.34 v hold6269/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 5155.26 v hold6153/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5168.17 v hold6270/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 5181.19 v hold5405/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 5193.87 v hold6271/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5206.20 v hold6154/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 5219.02 v hold6272/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 5232.10 v hold4939/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 5244.73 v hold6273/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 5257.22 v hold6155/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 5270.15 v hold6274/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5282.79 v hold5406/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.62 5295.42 v hold6275/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 5308.07 v hold6156/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 5320.81 v hold6276/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 5334.03 v hold4535/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5347.49 v hold6277/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5360.13 v hold6157/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5372.59 v hold6278/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5385.19 v hold5407/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5397.58 v hold6279/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5409.88 v hold6158/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5422.34 v hold6280/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5434.65 v hold4940/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 5446.79 v hold6281/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5459.18 v hold6159/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 5471.66 v hold6282/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 5484.95 v hold5408/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.66 5498.61 v hold6283/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5511.37 v hold6160/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5524.28 v hold6284/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 5537.19 v hold4688/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5549.79 v hold6285/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5562.09 v hold6161/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 5574.59 v hold6286/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5586.98 v hold5409/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 5599.54 v hold6287/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 5612.33 v hold6162/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 5625.05 v hold6288/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5637.37 v hold4941/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 5649.62 v hold6289/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5661.93 v hold6163/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5674.69 v hold6290/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5687.59 v hold5410/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 5700.14 v hold6291/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5712.48 v hold6164/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5724.80 v hold6292/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 5724.82 v system/prci_ctrl_domain/_1576_/A (AND2x2_ASAP7_75t_R)\r\n               5724.82   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        898.15 9398.15   clock network delay (propagated)\r\n        -10.00 9388.15   clock uncertainty\r\n          0.00 9388.15   clock reconvergence pessimism\r\n               9388.15 ^ system/prci_ctrl_domain/_1576_/B (AND2x2_ASAP7_75t_R)\r\n          0.00 9388.15   clock gating setup time\r\n               9388.15   data required time\r\n---------------------------------------------------------------\r\n               9388.15   data required time\r\n               -5724.82   data arrival time\r\n---------------------------------------------------------------\r\n               3663.32   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock clock (rise edge)\r\n       1476.29 9976.29   clock network delay (propagated)\r\n        -10.00 9966.29   clock uncertainty\r\n          4.53 9970.81   clock reconvergence pessimism\r\n               9970.81 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9959.87   library setup time\r\n               9959.87   data required time\r\n---------------------------------------------------------------\r\n               9959.87   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3096.30   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1142_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: serial_tl_0_bits_in_ready (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1486.19 1486.19   clock network delay (propagated)\r\n          0.00 1486.19 ^ system/serial_tl_domain/_1142_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n     3   50.71 1536.90 ^ system/serial_tl_domain/_1142_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     3   35.82 1572.72 v system/serial_tl_domain/_0641_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   61.16 1633.88 v output14/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 1633.90 v serial_tl_0_bits_in_ready (out)\r\n               1633.90   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_vir (rise edge)\r\n       1000.00 9500.00   clock network delay (ideal)\r\n        -10.00 9490.00   clock uncertainty\r\n          0.00 9490.00   clock reconvergence pessimism\r\n       -1700.00 7790.00   output external delay\r\n               7790.00   data required time\r\n---------------------------------------------------------------\r\n               7790.00   data required time\r\n               -1633.90   data arrival time\r\n---------------------------------------------------------------\r\n               6156.10   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by fake_pll_clk)\r\nPath Group: fake_pll_clk\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n       1445.94 9945.94   clock network delay (propagated)\r\n        -10.00 9935.94   clock uncertainty\r\n          0.00 9935.94   clock reconvergence pessimism\r\n               9935.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9924.99   library setup time\r\n               9924.99   data required time\r\n---------------------------------------------------------------\r\n               9924.99   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3061.42   slack (MET)\r\n\r\n\r\nStartpoint: serial_tl_0_bits_out_ready (input port clocked by clock_vir)\r\nEndpoint: system/serial_tl_domain/_1190_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v serial_tl_0_bits_out_ready (in)\r\n     1   12.09 2712.09 v input11/Y (BUFx2_ASAP7_75t_R)\r\n     1   21.58 2733.66 v system/serial_tl_domain/_0823_/Y (AND2x6_ASAP7_75t_R)\r\n     1   25.37 2759.03 v wire96183/Y (BUFx12f_ASAP7_75t_R)\r\n    13  259.71 3018.74 v system/serial_tl_domain/_1128_/SN (HAxp5_ASAP7_75t_R)\r\n     3  104.06 3122.80 v system/serial_tl_domain/_0882_/Y (OR3x4_ASAP7_75t_R)\r\n     1   13.63 3136.44 ^ system/serial_tl_domain/_0897_/Y (AOI211x1_ASAP7_75t_R)\r\n     1   22.32 3158.76 ^ system/serial_tl_domain/_0898_/Y (AO221x1_ASAP7_75t_R)\r\n     1   23.94 3182.70 ^ system/serial_tl_domain/_0899_/Y (OR4x2_ASAP7_75t_R)\r\n     1   20.19 3202.89 ^ system/serial_tl_domain/_0900_/Y (OA22x2_ASAP7_75t_R)\r\n          0.01 3202.90 ^ system/serial_tl_domain/_1190_/D (DFFHQNx2_ASAP7_75t_R)\r\n               3202.90   data arrival time\r\n\r\n       8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n         99.58 8599.58   clock network delay (propagated)\r\n        -10.00 8589.58   clock uncertainty\r\n          0.00 8589.58   clock reconvergence pessimism\r\n               8589.58 ^ system/serial_tl_domain/_1190_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.33 8584.25   library setup time\r\n               8584.25   data required time\r\n---------------------------------------------------------------\r\n               8584.25   data required time\r\n               -3202.90   data arrival time\r\n---------------------------------------------------------------\r\n               5381.35   slack (MET)\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Looks much more reasonable now. There are H-clock trees after CTS.\r\n\r\n`make cts_issue`; CTS takes ca. 25000 seconds on my machine: https://drive.google.com/file/d/13eenpP2JgzXJD0uP3KIpX4QLArBVjzT2/view?usp=sharing\r\n\r\nThis is apples and oranges comparision, but ... Minimum clock period is 5000ps, whereas I've seen claims on the order of 1000ps with commercial tools for the most similar design I know of to MegaBoom: https://carrv.github.io/2020/papers/CARRV2020_paper_15_Zhao.pdf\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock period_min = 5403.70 fmax = 185.06\r\nclock_vir period_min = 0.00 fmax = inf\r\nfake_pll_clk period_min = 5403.70 fmax = 185.06\r\nserial_tl_0_clock period_min = 953.62 fmax = 1048.63\r\n```\r\n\r\nYellow are hold cells, very reasonable... Clock tree looks odd. Those leaf nodes on the right side are flip flops. It would be nice if there was some clear visual indication of macros vs. flip flop endpoints in the CTS view....\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5837af84-df29-4b34-adbe-c8f9b1a48e14)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/6f0037fa-6c26-4904-88a0-e31fc5312cb0)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3d39c96e-5d49-4a5e-add6-6e6517d4ccf8)\r\n\r\n\r\n```\r\nreport_checks -path_delay max -fields {fanout skew}\r\nStartpoint: reset (input port clocked by clock_vir)\r\nEndpoint: system/prci_ctrl_domain/_3041_\r\n          (recovery check against rising-edge clock fake_pll_clk)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v reset (in)\r\n     1   10.58 2710.58 v hold4662/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2723.18 v hold4387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2735.67 v hold4663/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2748.32 v hold4335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2760.97 v hold4664/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2773.69 v hold4388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 2786.50 v hold4665/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2799.00 v hold64/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2811.66 v hold4666/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2824.31 v hold4389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 2836.91 v hold4667/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 2849.61 v hold4336/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 2862.09 v hold4668/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 2874.48 v hold4390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2886.88 v hold4669/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2899.21 v hold56/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 2911.54 v hold4670/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 2923.77 v hold4391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.45 2936.22 v hold4671/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2948.71 v hold4337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 2961.06 v hold4672/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2973.22 v hold4392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2985.48 v hold4673/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.38 2997.87 v hold65/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 3010.12 v hold4674/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 3022.31 v hold4393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3034.52 v hold4675/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3046.72 v hold4338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 3059.19 v hold4676/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 3071.78 v hold4394/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.63 3087.41 v hold4677/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.70 3106.12 v input5/Y (BUFx24_ASAP7_75t_R)\r\n     1   13.56 3119.68 v hold4678/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.47 3134.15 v hold4395/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3149.44 v hold4339/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3164.73 v hold4396/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3180.00 v hold66/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3195.29 v hold4397/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 3210.53 v hold4340/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3225.74 v hold4398/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3241.03 v hold57/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3256.34 v hold4399/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3271.56 v hold4341/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3286.82 v hold4400/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3302.12 v hold67/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3317.35 v hold4401/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3332.56 v hold4342/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3350.46 v hold4402/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.93 3367.38 v wire96200/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.22 3381.60 v hold4403/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.14 3396.75 v hold4343/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3412.01 v hold4404/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3427.30 v hold68/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 3442.49 v hold4405/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3457.70 v hold4344/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3472.98 v hold4406/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3488.22 v hold58/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3503.40 v hold4407/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3518.64 v hold4345/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3533.87 v hold4408/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3549.06 v hold69/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.15 3564.21 v hold4409/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.13 3579.33 v hold4346/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.89 3597.22 v hold4410/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.94 3614.16 v wire96199/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.34 3628.51 v hold4411/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3643.80 v hold4347/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3659.08 v hold4412/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3674.36 v hold70/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3689.65 v hold4413/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3704.94 v hold4348/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3720.18 v hold4414/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3735.49 v hold59/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3750.82 v hold4415/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3766.08 v hold4349/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3781.32 v hold4416/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3796.53 v hold71/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.32 3811.85 v hold4417/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.36 3827.21 v hold4350/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3845.10 v hold4418/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.84 3861.95 v wire96198/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.33 3876.27 v hold4419/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.34 3891.61 v hold4351/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3906.92 v hold4420/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3922.13 v hold72/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3937.43 v hold4421/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3952.73 v hold4352/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3967.93 v hold4422/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3983.26 v hold60/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3998.57 v hold4423/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4013.88 v hold4353/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4029.16 v hold4424/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.17 4044.33 v hold73/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4059.57 v hold4425/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4074.94 v hold4354/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.95 4092.90 v hold4426/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.85 4109.75 v wire96197/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.32 4124.07 v hold4427/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4139.40 v hold4355/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4154.77 v hold4428/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4170.01 v hold74/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 4185.20 v hold4429/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4200.45 v hold4356/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4215.67 v hold4430/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4230.98 v hold61/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4246.25 v hold4431/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4261.53 v hold4357/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4276.86 v hold4432/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4292.15 v hold75/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 4307.35 v hold4433/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 4322.59 v hold4358/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.96 4340.55 v hold4434/Y (BUFx2_ASAP7_75t_R)\r\n     1   20.57 4361.13 v wire96196/Y (BUFx24_ASAP7_75t_R)\r\n     1   14.76 4375.89 v hold4435/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4391.20 v hold4359/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4406.49 v hold4436/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4421.75 v hold76/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4437.02 v hold4437/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4452.26 v hold4360/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4467.52 v hold4438/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4482.79 v hold62/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 4497.99 v hold4439/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 4513.17 v hold4361/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 4528.42 v hold4440/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4543.66 v hold77/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4558.88 v hold4441/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 4574.23 v hold4362/Y (BUFx2_ASAP7_75t_R)\r\n     1   22.85 4597.08 v hold4442/Y (BUFx2_ASAP7_75t_R)\r\n    15   15.42 4612.50 ^ system/prci_ctrl_domain/_1567_/Y (INVx11_ASAP7_75t_R)\r\n          2.22 4614.72 ^ system/prci_ctrl_domain/_3041_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n               4614.72   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        474.60 8974.60   clock network delay (propagated)\r\n        -10.00 8964.60   clock uncertainty\r\n          0.00 8964.60   clock reconvergence pessimism\r\n               8964.60 ^ system/prci_ctrl_domain/_3041_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n          4.83 8969.43   library recovery time\r\n               8969.43   data required time\r\n---------------------------------------------------------------\r\n               8969.43   data required time\r\n               -4614.72   data arrival time\r\n---------------------------------------------------------------\r\n               4354.71   slack (MET)\r\n\r\n\r\nStartpoint: system/prci_ctrl_domain/_2967_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/prci_ctrl_domain/_1576_\r\n          (rising clock gating-check end-point clocked by fake_pll_clk)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n        983.66  983.66   clock network delay (propagated)\r\n          0.00  983.66 ^ system/prci_ctrl_domain/_2967_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n    29  134.66 1118.32 v system/prci_ctrl_domain/_2967_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n     1   41.06 1159.38 v hold6293/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.10 1173.47 v hold6165/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1185.77 v hold6294/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1198.07 v hold6101/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1210.37 v hold6295/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1222.63 v hold6166/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1234.88 v hold6296/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1247.17 v hold5379/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 1259.39 v hold6297/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 1271.74 v hold6167/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 1284.10 v hold6298/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1296.38 v hold6102/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1308.63 v hold6299/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 1321.09 v hold6168/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1333.82 v hold6300/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 1346.34 v hold4926/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1358.54 v hold6301/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1370.85 v hold6169/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 1383.12 v hold6302/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 1395.53 v hold6103/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1408.26 v hold6303/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1421.03 v hold6170/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 1433.72 v hold6304/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 1446.40 v hold5380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1459.19 v hold6305/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1472.02 v hold6171/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 1484.59 v hold6306/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 1496.96 v hold6104/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1509.22 v hold6307/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 1521.92 v hold6172/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1534.74 v hold6308/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1547.36 v hold4681/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 1559.74 v hold6309/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1572.00 v hold6173/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1584.30 v hold6310/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1597.06 v hold6105/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.51 1609.57 v hold6311/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 1621.73 v hold6174/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1634.53 v hold6312/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 1647.71 v hold5381/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 1660.86 v hold6313/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 1674.00 v hold6175/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 1687.12 v hold6314/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1699.76 v hold6106/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 1711.97 v hold6315/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 1724.29 v hold6176/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 1737.31 v hold6316/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1749.93 v hold4927/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1762.70 v hold6317/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1775.24 v hold6177/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1787.97 v hold6318/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 1801.06 v hold6107/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1814.23 v hold6319/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1827.04 v hold6178/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 1839.94 v hold6320/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 1852.42 v hold5382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1865.07 v hold6321/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 1877.55 v hold6179/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1889.85 v hold6322/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 1902.89 v hold6108/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1916.05 v hold6323/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 1928.68 v hold6180/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 1941.34 v hold6324/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1953.88 v hold4532/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1966.16 v hold6325/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 1978.40 v hold6181/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1990.60 v hold6326/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2002.76 v hold6109/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.10 2014.86 v hold6327/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2027.85 v hold6182/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2040.62 v hold6328/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 2052.84 v hold5383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2065.15 v hold6329/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2077.41 v hold6183/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 2089.71 v hold6330/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 2101.98 v hold6110/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2114.31 v hold6331/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 2127.24 v hold6184/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 2139.92 v hold6332/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2152.26 v hold4928/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 2164.78 v hold6333/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2177.41 v hold6185/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2189.99 v hold6334/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2202.48 v hold6111/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 2215.24 v hold6335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2227.82 v hold6186/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2240.82 v hold6336/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.26 2254.08 v hold5384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.10 2267.18 v hold6337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2280.06 v hold6187/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2292.45 v hold6338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 2305.14 v hold6112/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 2318.31 v hold6339/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 2331.55 v hold6188/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 2344.49 v hold6340/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2357.37 v hold4682/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 2370.45 v hold6341/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 2383.51 v hold6189/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.44 2395.95 v hold6342/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 2409.06 v hold6113/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 2422.58 v hold6343/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2435.33 v hold6190/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2448.35 v hold6344/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 2461.14 v hold5385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2473.46 v hold6345/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 2486.32 v hold6191/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.72 2500.04 v hold6346/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2514.08 v hold6114/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.71 2527.79 v hold6347/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2540.53 v hold6192/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2553.30 v hold6348/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 2566.61 v hold4929/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 2580.08 v hold6349/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.34 2593.42 v hold6193/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2606.83 v hold6350/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.19 2620.02 v hold6115/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2632.66 v hold6351/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2644.99 v hold6194/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2657.71 v hold6352/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 2670.28 v hold5386/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2682.76 v hold6353/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.07 2695.84 v hold6195/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2709.26 v hold6354/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 2722.44 v hold6116/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2735.05 v hold6355/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2747.62 v hold6196/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2759.95 v hold6356/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 2772.19 v hold4317/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 2785.42 v hold6357/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2798.42 v hold6197/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 2811.30 v hold6358/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.39 2824.69 v hold6117/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2837.72 v hold6359/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.42 2850.13 v hold6198/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2863.12 v hold6360/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2876.68 v hold5387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 2889.57 v hold6361/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 2901.86 v hold6199/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 2914.95 v hold6362/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.65 2928.60 v hold6118/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.02 2942.62 v hold6363/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.33 2956.95 v hold6200/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2970.98 v hold6364/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.62 2984.61 v hold4930/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2998.16 v hold6365/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.70 3011.86 v hold6201/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.86 3025.72 v hold6366/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3038.67 v hold6119/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3051.19 v hold6367/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3063.79 v hold6202/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3076.69 v hold6368/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3089.21 v hold5388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3101.85 v hold6369/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 3115.16 v hold6203/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 3127.95 v hold6370/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3141.13 v hold6120/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.51 3154.64 v hold6371/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 3167.48 v hold6204/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 3179.78 v hold6372/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 3192.33 v hold4683/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.37 3205.71 v hold6373/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3218.58 v hold6205/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 3231.89 v hold6374/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 3245.11 v hold6121/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3258.02 v hold6375/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 3270.59 v hold6206/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 3282.80 v hold6376/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3295.74 v hold5389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3308.36 v hold6377/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 3321.59 v hold6207/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 3334.63 v hold6378/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.57 3348.20 v hold6122/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3361.35 v hold6379/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 3374.80 v hold6208/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 3387.94 v hold6380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3400.29 v hold4931/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3413.17 v hold6381/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 3426.15 v hold6209/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3438.68 v hold6382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 3451.60 v hold6123/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 3465.10 v hold6383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3477.95 v hold6210/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3490.90 v hold6384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 3504.15 v hold5390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3516.69 v hold6385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3529.04 v hold6211/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.55 3542.59 v hold6386/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 3555.88 v hold6124/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 3568.28 v hold6387/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 3581.34 v hold6212/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3594.24 v hold6388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 3606.90 v hold4533/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3619.75 v hold6389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 3632.25 v hold6213/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3644.78 v hold6390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3657.66 v hold6125/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 3671.08 v hold6391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3683.93 v hold6214/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.78 3696.70 v hold6392/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3709.88 v hold5391/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.83 3723.71 v hold6393/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.31 3738.02 v hold6215/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.03 3751.05 v hold6394/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3764.20 v hold6126/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.54 3777.74 v hold6216/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.35 3791.09 v hold4932/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 3803.85 v hold6217/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 3816.14 v hold6127/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 3828.40 v hold6218/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3841.01 v hold5392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.96 3853.97 v hold6219/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 3866.70 v hold6128/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 3879.39 v hold6220/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3891.85 v hold4684/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 3904.28 v hold6221/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 3916.52 v hold6129/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3928.99 v hold6222/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 3941.53 v hold5393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 3953.81 v hold6223/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3966.75 v hold6130/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.08 3980.82 v hold6224/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.56 3995.38 v hold4933/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 4008.56 v hold6225/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4020.80 v hold6131/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.36 4034.16 v hold6226/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 4047.10 v hold5394/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 4059.57 v hold6227/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 4072.18 v hold6132/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4084.61 v hold6228/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 4097.02 v hold55/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 4109.60 v hold6229/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 4122.52 v hold6133/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 4135.47 v hold6230/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.91 4148.38 v hold5395/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4161.68 v hold6231/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 4174.74 v hold6134/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.38 4188.13 v hold6232/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4200.93 v hold4934/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4213.19 v hold6233/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 4225.52 v hold6135/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 4238.05 v hold6234/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4250.45 v hold5396/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4262.65 v hold6235/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 4274.89 v hold6136/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 4287.49 v hold6236/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 4300.21 v hold4685/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.12 4313.32 v hold6237/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 4326.80 v hold6137/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 4340.29 v hold6238/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 4352.98 v hold5397/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 4365.83 v hold6239/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 4379.13 v hold6138/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 4391.84 v hold6240/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4404.10 v hold4935/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4416.35 v hold6241/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 4428.54 v hold6139/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 4441.69 v hold6242/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.98 4455.68 v hold5398/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.93 4469.61 v hold6243/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 4482.41 v hold6140/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 4495.55 v hold6244/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 4509.07 v hold4534/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4521.64 v hold6245/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4533.86 v hold6141/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 4546.38 v hold6246/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 4559.05 v hold5399/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 4571.76 v hold6247/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4584.15 v hold6142/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.20 4597.34 v hold6248/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 4610.20 v hold4936/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4622.40 v hold6249/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 4634.89 v hold6143/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4647.24 v hold6250/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 4659.58 v hold5400/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4672.01 v hold6251/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 4684.29 v hold6144/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.40 4697.68 v hold6252/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.97 4710.66 v hold4686/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 4723.91 v hold6253/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.75 4737.67 v hold6145/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4750.60 v hold6254/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 4762.91 v hold5401/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 4775.05 v hold6255/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 4787.42 v hold6146/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4799.99 v hold6256/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 4812.96 v hold4937/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 4825.62 v hold6257/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4838.91 v hold6147/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.89 4852.81 v hold6258/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 4865.89 v hold5402/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4878.28 v hold6259/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4891.10 v hold6148/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 4903.94 v hold6260/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4916.29 v hold4318/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4928.52 v hold6261/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.05 4941.57 v hold6149/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 4955.33 v hold6262/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 4969.26 v hold5403/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.94 4983.20 v hold6263/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4996.14 v hold6150/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 5008.41 v hold6264/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5021.72 v hold4938/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 5034.82 v hold6265/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 5047.13 v hold6151/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 5060.37 v hold6266/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 5073.81 v hold5404/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5087.13 v hold6267/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 5100.61 v hold6152/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5114.08 v hold6268/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 5127.58 v hold4687/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 5141.34 v hold6269/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 5155.26 v hold6153/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5168.17 v hold6270/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 5181.19 v hold5405/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 5193.87 v hold6271/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5206.20 v hold6154/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 5219.02 v hold6272/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 5232.10 v hold4939/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 5244.73 v hold6273/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 5257.22 v hold6155/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 5270.15 v hold6274/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5282.79 v hold5406/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.62 5295.42 v hold6275/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 5308.07 v hold6156/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 5320.81 v hold6276/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 5334.03 v hold4535/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5347.49 v hold6277/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5360.13 v hold6157/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5372.59 v hold6278/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5385.19 v hold5407/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5397.58 v hold6279/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5409.88 v hold6158/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5422.34 v hold6280/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5434.65 v hold4940/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 5446.79 v hold6281/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5459.18 v hold6159/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 5471.66 v hold6282/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 5484.95 v hold5408/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.66 5498.61 v hold6283/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5511.37 v hold6160/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5524.28 v hold6284/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 5537.19 v hold4688/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5549.79 v hold6285/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5562.09 v hold6161/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 5574.59 v hold6286/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5586.98 v hold5409/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 5599.54 v hold6287/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 5612.33 v hold6162/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 5625.05 v hold6288/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5637.37 v hold4941/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 5649.62 v hold6289/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5661.93 v hold6163/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5674.69 v hold6290/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5687.59 v hold5410/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 5700.14 v hold6291/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5712.48 v hold6164/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5724.80 v hold6292/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 5724.82 v system/prci_ctrl_domain/_1576_/A (AND2x2_ASAP7_75t_R)\r\n               5724.82   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        898.15 9398.15   clock network delay (propagated)\r\n        -10.00 9388.15   clock uncertainty\r\n          0.00 9388.15   clock reconvergence pessimism\r\n               9388.15 ^ system/prci_ctrl_domain/_1576_/B (AND2x2_ASAP7_75t_R)\r\n          0.00 9388.15   clock gating setup time\r\n               9388.15   data required time\r\n---------------------------------------------------------------\r\n               9388.15   data required time\r\n               -5724.82   data arrival time\r\n---------------------------------------------------------------\r\n               3663.32   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock clock (rise edge)\r\n       1476.29 9976.29   clock network delay (propagated)\r\n        -10.00 9966.29   clock uncertainty\r\n          4.53 9970.81   clock reconvergence pessimism\r\n               9970.81 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9959.87   library setup time\r\n               9959.87   data required time\r\n---------------------------------------------------------------\r\n               9959.87   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3096.30   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1142_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: serial_tl_0_bits_in_ready (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1486.19 1486.19   clock network delay (propagated)\r\n          0.00 1486.19 ^ system/serial_tl_domain/_1142_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n     3   50.71 1536.90 ^ system/serial_tl_domain/_1142_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     3   35.82 1572.72 v system/serial_tl_domain/_0641_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   61.16 1633.88 v output14/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 1633.90 v serial_tl_0_bits_in_ready (out)\r\n               1633.90   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_vir (rise edge)\r\n       1000.00 9500.00   clock network delay (ideal)\r\n        -10.00 9490.00   clock uncertainty\r\n          0.00 9490.00   clock reconvergence pessimism\r\n       -1700.00 7790.00   output external delay\r\n               7790.00   data required time\r\n---------------------------------------------------------------\r\n               7790.00   data required time\r\n               -1633.90   data arrival time\r\n---------------------------------------------------------------\r\n               6156.10   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by fake_pll_clk)\r\nPath Group: fake_pll_clk\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n       1445.94 9945.94   clock network delay (propagated)\r\n        -10.00 9935.94   clock uncertainty\r\n          0.00 9935.94   clock reconvergence pessimism\r\n               9935.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9924.99   library setup time\r\n               9924.99   data required time\r\n---------------------------------------------------------------\r\n               9924.99   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3061.42   slack (MET)\r\n\r\n\r\nStartpoint: serial_tl_0_bits_out_ready (input port clocked by clock_vir)\r\nEndpoint: system/serial_tl_domain/_1190_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v serial_tl_0_bits_out_ready (in)\r\n     1   12.09 2712.09 v input11/Y (BUFx2_ASAP7_75t_R)\r\n     1   21.58 2733.66 v system/serial_tl_domain/_0823_/Y (AND2x6_ASAP7_75t_R)\r\n     1   25.37 2759.03 v wire96183/Y (BUFx12f_ASAP7_75t_R)\r\n    13  259.71 3018.74 v system/serial_tl_domain/_1128_/SN (HAxp5_ASAP7_75t_R)\r\n     3  104.06 3122.80 v system/serial_tl_domain/_0882_/Y (OR3x4_ASAP7_75t_R)\r\n     1   13.63 3136.44 ^ system/serial_tl_domain/_0897_/Y (AOI211x1_ASAP7_75t_R)\r\n     1   22.32 3158.76 ^ system/serial_tl_domain/_0898_/Y (AO221x1_ASAP7_75t_R)\r\n     1   23.94 3182.70 ^ system/serial_tl_domain/_0899_/Y (OR4x2_ASAP7_75t_R)\r\n     1   20.19 3202.89 ^ system/serial_tl_domain/_0900_/Y (OA22x2_ASAP7_75t_R)\r\n          0.01 3202.90 ^ system/serial_tl_domain/_1190_/D (DFFHQNx2_ASAP7_75t_R)\r\n               3202.90   data arrival time\r\n\r\n       8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n         99.58 8599.58   clock network delay (propagated)\r\n        -10.00 8589.58   clock uncertainty\r\n          0.00 8589.58   clock reconvergence pessimism\r\n               8589.58 ^ system/serial_tl_domain/_1190_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.33 8584.25   library setup time\r\n               8584.25   data required time\r\n---------------------------------------------------------------\r\n               8584.25   data required time\r\n               -3202.90   data arrival time\r\n---------------------------------------------------------------\r\n               5381.35   slack (MET)\r\n```\r\n\r\n", "date": "2024-01-09T10:03:53Z"}, {"author": "oharboe", "role": "assistant", "message": "To get this to build in Yosys, I had to mock fake_pll_clk:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/931c2a882510bf5735dbf5efab1a8c474f838c49/mock/ChipTop.sv#L31\r\n\r\nWhereas Chipyard has this clock coming out of a PLL:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/931c2a882510bf5735dbf5efab1a8c474f838c49/rtl/ChipTop.sv#L150\r\n\r\nI don't know what the relationships are between these clocks, this is my first cut .sdc file that I used:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/main/constraints-chiptop.sdc", "date": "2024-01-09T10:15:35Z"}, {"author": "oharboe", "role": "assistant", "message": "I've reached out to Chipyard to get some help with the .sdc file for the clocks: https://groups.google.com/g/chipyard/c/PzVcnnqRwf8/m/t1pIDPnuAwAJ", "date": "2024-01-09T10:55:44Z"}, {"author": "oharboe", "role": "assistant", "message": "Failed in global routing, ca. 7000 seconds.\r\n\r\n`make macro_place_issue` reproducible case for mpl2: https://drive.google.com/file/d/1w_vIUNtWp7dBntP9i7WGEkgtGhTRD6M_/view?usp=sharing\r\n\r\nI suppose I could try to flatten the design for the two macros with contention, but if macro placement can't place these two bigger macros, what are the chances it can place many smaller macros(there are SRAMs inside the branch predictor and the data cache that have all the congestion on top)?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/520a354a-1e5e-42a3-b3c4-090050a08c42)\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a4a48871-f7c9-4445-aff2-4621b73f551a)\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/199c6c47-e6ba-4471-8f98-1befb9677a22)\r\n\r\nIntentionally, BranchPredictor has all the pins on the left side. This is to break the rotational and mirroring symmetry such that mpl2 can try different directions to find one that is better.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7272e784-c63e-4209-b0ac-3dd59f43b22d)\r\n\r\nThis is odd... Why is the macro rotated R180? That puts the pins on the right hand side... I would have thought, looking at the floorplan, that having the pins on the left side was better, given the placement...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c54e3016-9444-4b17-805f-9a82a1d003d7)\r\n", "date": "2024-01-09T13:31:26Z"}, {"author": "maliberty", "role": "assistant", "message": "You can zoom in with the mouse wheel in the CTS view. If you do so on the odd branch on the right you can select the end points and see what they are.  That would be helpful.\r\n\r\nThe setup paths with tons of hold buffers are quite odd. I suspect an SDC issue.\r\n\r\nYou might lower the placement density slightly to see if that helps with congestion.  \r\n\r\nA test case for the flipping is needed to say much about it.  Perhaps the connections go to pins on the right?", "date": "2024-01-09T17:59:03Z"}, {"author": "oharboe", "role": "assistant", "message": "Broke out #4513 and #4512 for further investigation", "date": "2024-01-10T08:39:08Z"}, {"author": "oharboe", "role": "assistant", "message": "So, I think I understand more or less what is going on.\r\n\r\nThe Verilog is not the way I want it yet. It contains a fake PLL that is controlled via the TileLink interface at the top level that multiplies the top level clock to the core frequency. This PLL is set up out of bounds of a single core.\r\n\r\nhttps://github.com/ucb-bar/chipyard/blob/c9fa23edf049f35f9b8e6291b0e2b82b1056540b/generators/chipyard/src/main/scala/clocking/ClockBinders.scala#L12", "date": "2024-01-10T12:15:39Z"}], "date": "2024-01-09T10:03:53Z", "category": "Runtime", "subcategory": "Clock tree issue", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4495", "id": 4495, "title": "pad_left/right units for GPL and repair_clock_inverters description", "author": "lustefan97", "description": "\r\n\r\nI looked in OpenROAD documentation for Global Placement and Gate Resizer to get more detail about the units of the pad_left/right parameters of the `global_placement` command [(GPL)](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gpl) and the use/behavior of `repair_clock_inverters` [(RSZ).](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/rsz/README.md) \r\n\r\nBoth the variables units description is missing (while present for DPL (site count units), but since the two tools are different I don't want to assume it is the same for both) in GPL, and there is no description concerning `repair_clock_inverters` use case or behavior description (like there would be for `repair_timing` or `repair_design`.\r\n\r\nWhat are the units of pad_left/right, and what does `repair_clock_inverters` do/how to use it ?", "content": [{"author": "lustefan97", "role": "user", "message": "\r\n\r\nI looked in OpenROAD documentation for Global Placement and Gate Resizer to get more detail about the units of the pad_left/right parameters of the `global_placement` command [(GPL)](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gpl) and the use/behavior of `repair_clock_inverters` [(RSZ).](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/rsz/README.md) \r\n\r\nBoth the variables units description is missing (while present for DPL (site count units), but since the two tools are different I don't want to assume it is the same for both) in GPL, and there is no description concerning `repair_clock_inverters` use case or behavior description (like there would be for `repair_timing` or `repair_design`.\r\n\r\nWhat are the units of pad_left/right, and what does `repair_clock_inverters` do/how to use it ?", "date": "2024-01-06T18:24:28Z"}, {"author": "maliberty", "role": "assistant", "message": "The units are sites from the LEF.\r\n\r\nrepair_clock_inverters is useful when you have an inverter in the clock tree that would split the tree.  It clones the inverter so you have one per flop instead.", "date": "2024-01-06T19:37:29Z"}, {"author": "maliberty", "role": "assistant", "message": "before CTS see https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/181e9133776117ea1b9f74dbacbfdaadff8c331b/flow/scripts/cts.tcl#L7\r\n\r\nYou might benefit from investigating how ORFS works", "date": "2024-01-08T01:33:18Z"}], "date": "2024-01-06T18:24:28Z", "category": "Documentation", "subcategory": "Missing information", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4490", "id": 4490, "title": "Any thoughts on what to do to solve the global routing problems in MegaBoom?", "author": "oharboe", "description": "I would like to get https://github.com/The-OpenROAD-Project/megaboom to the point where it goes through a full build and then incrementally improve.\r\n\r\nThe idea with such big projects is to get the build under CI, separate concerns and continously improve...\r\n\r\nCurrently it stops in global routing:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/02068fde-3bb1-4ae7-a7b2-45f9a83db528)\r\n\r\nCurrent options for DigitalTop:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/391bbbd8d59b93b15b1cdb850294696a60d2dd4f/BUILD.bazel#L1636\r\n\r\n- the yellow are hold cells. Given the 2000+ps skew in the clock tree, I don't find it shocking that there's ca. 100000 hold cells. I have set clock_latency to 3300, which I could try to change to 1000 to be closer to what is actually going on, but that still leaves 1000ps of clock skew on either side of that... There is the familiar hold cell log jam at the pins...\r\n- there is a lot of congestion on top of the macro. What does that mean and how can it be fixed?\r\n- reduce placement density?\r\n- Increase number of global routing iterations from 30 to 100?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f32c23ae-cb26-4b40-a649-c47071f3a21b)\r\n\r\nIf you want to have a look... \r\n\r\n1. Build OpenROAD https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/master/docs/user/BuildLocally.md\r\n2. download. 1.3gByte. https://drive.google.com/file/d/1HcAU-pOsPvhcMGKdSWvy_mV17By0qH65/view?usp=sharing\r\n3. untar\r\n4. run:\r\n\r\n```\r\n$ . ~/OpenROAD-flow-scripts/env.sh \r\nOPENROAD: /home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD\r\n$ ./run-me-DigitalTop-asap7-base.sh\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I would like to get https://github.com/The-OpenROAD-Project/megaboom to the point where it goes through a full build and then incrementally improve.\r\n\r\nThe idea with such big projects is to get the build under CI, separate concerns and continously improve...\r\n\r\nCurrently it stops in global routing:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/02068fde-3bb1-4ae7-a7b2-45f9a83db528)\r\n\r\nCurrent options for DigitalTop:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/391bbbd8d59b93b15b1cdb850294696a60d2dd4f/BUILD.bazel#L1636\r\n\r\n- the yellow are hold cells. Given the 2000+ps skew in the clock tree, I don't find it shocking that there's ca. 100000 hold cells. I have set clock_latency to 3300, which I could try to change to 1000 to be closer to what is actually going on, but that still leaves 1000ps of clock skew on either side of that... There is the familiar hold cell log jam at the pins...\r\n- there is a lot of congestion on top of the macro. What does that mean and how can it be fixed?\r\n- reduce placement density?\r\n- Increase number of global routing iterations from 30 to 100?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f32c23ae-cb26-4b40-a649-c47071f3a21b)\r\n\r\nIf you want to have a look... \r\n\r\n1. Build OpenROAD https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/master/docs/user/BuildLocally.md\r\n2. download. 1.3gByte. https://drive.google.com/file/d/1HcAU-pOsPvhcMGKdSWvy_mV17By0qH65/view?usp=sharing\r\n3. untar\r\n4. run:\r\n\r\n```\r\n$ . ~/OpenROAD-flow-scripts/env.sh \r\nOPENROAD: /home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD\r\n$ ./run-me-DigitalTop-asap7-base.sh\r\n```\r\n\r\n", "date": "2024-01-04T12:16:52Z"}, {"author": "rovinski", "role": "assistant", "message": "Some miscellaneous thoughts:\r\n\r\n* The keep-out region around the macros seems higher than necessary. Can it be shrunk?\r\n* Is there a way to push the macros all the way to the edges? If there are no pins on one side, then it should be fine to push it all the way to the edge. Right now, the gap between the macro and the edge is just wasted space.\r\n\r\n> ![image](https://private-user-images.githubusercontent.com/2798822/294173465-f32c23ae-cb26-4b40-a649-c47071f3a21b.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDQzODc5MjUsIm5iZiI6MTcwNDM4NzYyNSwicGF0aCI6Ii8yNzk4ODIyLzI5NDE3MzQ2NS1mMzJjMjNhZS1jYjI2LTRiNDAtYTY0OS1jNDcwNzFmM2EyMWIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDEwNCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAxMDRUMTcwMDI1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NTc2NGJiMzAxYjU3ZmFkMzc3ZDk4OWExM2M2ZWY3NzhiOTdhMDJmMjc0N2MwZDllNzU0MzEyZDA0NzY5ZjI2ZiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.1T6oUzQvPgbEHYZep6GOnSjXk8Xz7V07M8CsSou38jI)\r\n\r\n* I'm assuming the highlighted yellow are the hold cells? If so, it looks like they are feeding towards the I/Os. You should double check that your I/O constraints are in reference to the clock tree latency so that they are reasonable. For example, if the input constraint is 50ps, but the capture register has a 2000ps clock latency, then the tools need to insert 1950ps of hold buffers. If the output constraint is 50ps and the launch register clock latency is 2000ps, the best it could do is -1950ps slack.\r\n* Do your large macros have the clock tree latency annotated in them when extracted? I believe that CTS support for this was added to help balancing, but I am not sure if the GUI or the skew report reflect this. If a macro and a register have 1000ps of skew, it could be totally fine if the macro has an internal clock tree of 1000ps.\r\n* Even with that consideration, the clock tree looks very unbalanced. There might be something breaking down with the algorithm.", "date": "2024-01-04T17:23:12Z"}, {"author": "maliberty", "role": "assistant", "message": "I think resolve the clock skew will go a long way to resolving the other problems so let's start there.  Even without insertion delay the tree is quite skewed.\r\n\r\nMACRO_PLACE_HALO=\"20 20\" seems rather large.  How did you pick those?", "date": "2024-01-04T18:56:00Z"}, {"author": "oharboe", "role": "assistant", "message": "Still cooking, but 100 global routing iterations + some fixes from the list above and only 6 violations. Lets see if it can push through...\r\n\r\nMany more things to test and tweak in the design, this is just intended to be a baseline. \r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9fc2d3e7-1d39-4615-b3ae-2a714bcb1f32)\r\n", "date": "2024-01-04T19:08:25Z"}, {"author": "maliberty", "role": "assistant", "message": "In looking at auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock it goes into a user buffer prci_ctrl_domain/_1019_.  I'm not clear why we would have a user buffer in the clock tree.  Did you skip remove_buffers in floorplanning?", "date": "2024-01-04T19:37:44Z"}, {"author": "maliberty", "role": "assistant", "message": "How did you run cts?  I see 75 instances named 'cklbuf*'.  The clkbuf seem only related to a small area (showing only 'Clock tree' instances):\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/4dfbc6d9-ab65-4b1a-8e4a-a1d3ed27c2dd)\r\n\r\nI see 7535 instances named 'load_slew*'.  It seems most of the tree is not actually clock buffers:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/05340a29-8d33-42b8-a98b-9c65969a1d56)\r\n", "date": "2024-01-04T19:45:09Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty So it seems to me that outputting the clock from a module, so that you have the clock coming in with 0 insertion latency and the clock output with the clock tree leaf insertion latency would be useful to deal with a very large clock tree latency as follows:\r\n\r\nCreate FIFOs on the outside that take the input clock for the module with large clock tree insertion latency as well as the output clock. Now you have two clock domains, use this FIFO to cross the two clock domain. The input/output pins of the module with large clock tree insertion latency can now have a clock latency constraints that is approximately equal to the clock tree insertion latency, which relaxes the constraints within the module.\r\n\r\nIt is a bit annoying to set up that .sdc file, because you can't know the clock tree insertion latency until after you have run CTS, so a few iterations are probably needed...\r\n", "date": "2024-01-05T06:33:22Z"}, {"author": "oharboe", "role": "assistant", "message": "Another datapoint, running times for this design (macros not included):\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_1_yosys                       2614\r\n1_1_yosys_hier_report           2518\r\n2_1_floorplan                    186\r\n2_2_floorplan_io                   6\r\n2_4_floorplan_macro              312\r\n2_5_floorplan_tapcell            108\r\n2_6_floorplan_pdn                234\r\n3_1_place_gp_skip_io             322\r\n3_2_place_iop                     12\r\n3_3_place_gp                    2904\r\n3_4_place_resized                590\r\n3_5_place_dp                     683\r\n4_1_cts                         5259\r\n```\r\n", "date": "2024-01-05T08:49:51Z"}, {"author": "maliberty", "role": "assistant", "message": "The cts runtime is likely mostly comprised of rsz runtime buffering that huge clock net. \r\n\r\nI haven't looked at the floorplan test case but I think I know what's going on.  remove_buffers will not remove a buffer that is between a primary input and output (that would leave a pure feedthru which is a generally a bad thing).  So it likely removes all the buffers but one as you have both in and out clock ports tied together.\r\n\r\nCTS sees the buffer and assumes you have a manually constructed tree and skips as shown above.\r\n\r\nThis is not a methodology that OR supports.  It seems a difficult one to do in general as you have no real idea what the skew requirement on the output pin should be.  I don't understand chipyard or this design so I'm not sure what to suggest here.\r\n\r\nre \"However, Yosys can't compile ChipTop, nor flatten the entire design(it would run forever), so I only build DigitalTop and hence we get clocks going out at the top level.\"  Can you flatten just DigitalTop into ChipTop and not the whole design?", "date": "2024-01-06T03:58:48Z"}, {"author": "oharboe", "role": "assistant", "message": "@rovinski \r\n> Bad logical designs can absolutely hamper physical design, and this is one example. It is taking away options from the algorithms and defecting to the user to make the proper decision, which is the opposite of what is wanted for automated design and design space exploration.\r\n> \r\n> I have done a decent amount of clock tree structuring for taped out chips, and this is simply a bad methodology except in very specific hand-tuned circumstances. It only works if you ensure the tree is manually balanced and the only reason to do it is to save clock power by reducing the branching factor and/or to reduce clock tree jitter for specific endpoints.\r\n\r\nDon't take my word for what MegaBoom is doing and not doing and why. I just have a default assumption that the authors knew what they were doing and did what they did the way they did for a reason...\r\n\r\nSince I know they are making a CPU, it makes sense to me(a default assumption until I learn more) that the memory master interface of that CPU is running on a different clock domain and that it is providing the clock which slave devices must use is an output.\r\n\r\nOr.... perhaps I'm not generating the Verilog in the right way...? The AXI output clock for the memory master interface might be there for the simulation test harness rather than synthesis?\r\n\r\nThis Hammer file is for SonicBOOM (a smaller design than MegaBoom), it doesn't offer any clues as to what the AXI output clock means...\r\n\r\nhttps://github.com/ucb-bar/chipyard/blob/main/vlsi/example-designs/sky130-openroad.yml", "date": "2024-01-06T20:14:53Z"}, {"author": "oharboe", "role": "assistant", "message": "This is a screenshot from after global route of ChipTop.sv:\r\n\r\n- Standalone reproduction case for CTS in this case which includes the global routing result & congestion report: https://drive.google.com/file/d/1sAFbG_MpjmaN4inulYWUqbeuPsYLqx73/view?usp=sharing\r\n- I was wrong that ChipTop.sv didn't go through synthesis with Yosys. I can't recall what problems I was having, though there are some simulation only .sv files that won't go through Yosys that are not used by ChipTop, perhaps I was confused by those?\r\n- Only two global route failures indicated (white crosses)\r\n- How can I tell if I have a clock tree?\r\n- There are significant caveats still in that the macro abstracts are mocked: they only went through floorplan. I'll do a full build later. Still it is possible to learn something at this stage.\r\n- clock_uncore_clock is fed through to axi4_mem_0_clock and the text says that it is clocked by clock_uncore_clock_vir, which makes sense. clock_uncore_clock_vir is clock_uncore_clock + source latency.\r\n\r\n```\r\nStartpoint: clock_uncore_clock (clock source 'clock_uncore_clock')\r\nEndpoint: axi4_mem_0_clock (output port clocked by clock_uncore_clock_vir)\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/abb63910-5d13-4ef2-b837-cb8060439fd1)\r\n\r\nThere is a second clock into the design, but my guess is that this has something to do with a peripheral or other, not the CPU:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/66e066a5-c2b6-4054-994c-7e02b7a74da1)\r\n\r\n```\r\nOpenROAD v2.0-11704-gfb0df7fb7 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\n[WARNING STA-0357] virtual clock clock_uncore_clock_vir can not be propagated.\r\nEstimating parasitics\r\n[WARNING GUI-0076] QXcbConnection: XCB error: 3 (BadWindow), sequence: 3175, resource id: 16788675, major code: 40 (TranslateCoords), minor code: 0\r\n>>> report_checks -path_delay max -fields {fanout skew}\r\nStartpoint: reset_io (input port clocked by clock_uncore_clock_vir)\r\nEndpoint: system/prci_ctrl_domain/_0952_\r\n          (recovery check against rising-edge clock clock_uncore_clock)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_uncore_clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v reset_io (in)\r\n     1   12.54 2712.54 v input87/Y (BUFx12f_ASAP7_75t_R)\r\n     1   70.17 2782.71 v wire49778/Y (BUFx16f_ASAP7_75t_R)\r\n     4   59.30 2842.00 ^ system/prci_ctrl_domain/_0722_/Y (INVx2_ASAP7_75t_R)\r\n          0.53 2842.54 ^ system/prci_ctrl_domain/_0952_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n               2842.54   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock (rise edge)\r\n        871.54 9371.54   clock network delay (propagated)\r\n        -10.00 9361.54   clock uncertainty\r\n          0.00 9361.54   clock reconvergence pessimism\r\n               9361.54 ^ system/prci_ctrl_domain/_0952_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n         15.79 9377.33   library recovery time\r\n               9377.33   data required time\r\n---------------------------------------------------------------\r\n               9377.33   data required time\r\n               -2842.54   data arrival time\r\n---------------------------------------------------------------\r\n               6534.79   slack (MET)\r\n\r\n\r\nStartpoint: _32_ (negative level-sensitive latch clocked by clock_uncore_clock)\r\nEndpoint: _10_\r\n          (rising clock gating-check end-point clocked by clock_uncore_clock)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n       4250.00 4250.00   clock clock_uncore_clock (fall edge)\r\n        532.14 4782.14   clock network delay (propagated)\r\n          0.00 4782.14 v _32_/CLK (DLLx1_ASAP7_75t_R)\r\n     1   45.86 4828.00 v _32_/Q (DLLx1_ASAP7_75t_R)\r\n          0.02 4828.02 v _10_/B (AND2x4_ASAP7_75t_R)\r\n               4828.02   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock (rise edge)\r\n        492.25 8992.25   clock network delay (propagated)\r\n        -10.00 8982.25   clock uncertainty\r\n          0.00 8982.25   clock reconvergence pessimism\r\n               8982.25 ^ _10_/A (AND2x4_ASAP7_75t_R)\r\n          0.00 8982.25   clock gating setup time\r\n               8982.25   data required time\r\n---------------------------------------------------------------\r\n               8982.25   data required time\r\n               -4828.02   data arrival time\r\n---------------------------------------------------------------\r\n               4154.23   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095120_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore_clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_80484_\r\n          (rising edge-triggered flip-flop clocked by clock_uncore_clock)\r\nPath Group: clock_uncore_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_uncore_clock (rise edge)\r\n       1899.28 1899.28   clock network delay (propagated)\r\n          0.00 1899.28 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095120_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n     6   75.38 1974.65 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095120_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     1   22.16 1996.82 ^ hold78251/Y (BUFx2_ASAP7_75t_R)\r\n     3   20.28 2017.09 ^ hold24171/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.71 2035.80 ^ hold78252/Y (BUFx2_ASAP7_75t_R)\r\n     6   44.43 2080.23 ^ hold14462/Y (BUFx2_ASAP7_75t_R)\r\n    14   32.26 2112.50 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052537_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    10  114.99 2227.49 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095077_/CON (HAxp5_ASAP7_75t_R)\r\n     4   27.96 2255.44 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052831_/Y (INVx4_ASAP7_75t_R)\r\n     2   30.15 2285.59 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064284_/Y (AND2x2_ASAP7_75t_R)\r\n     6   64.65 2350.24 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095079_/CON (HAxp5_ASAP7_75t_R)\r\n     6   43.78 2394.03 ^ wire30543/Y (BUFx12_ASAP7_75t_R)\r\n     2   20.98 2415.01 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052672_/Y (INVx11_ASAP7_75t_R)\r\n     3   15.28 2430.28 v max_length29072/Y (BUFx12f_ASAP7_75t_R)\r\n     3   32.78 2463.06 v max_length29071/Y (BUFx10_ASAP7_75t_R)\r\n    13   69.31 2532.38 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052686_/Y (OR4x2_ASAP7_75t_R)\r\n     2   63.47 2595.85 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052855_/Y (OR3x4_ASAP7_75t_R)\r\n     2   43.49 2639.34 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052856_/Y (AND3x4_ASAP7_75t_R)\r\n    16   17.48 2656.82 v wire25227/Y (BUFx16f_ASAP7_75t_R)\r\n     4   89.89 2746.71 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052858_/Y (AND4x2_ASAP7_75t_R)\r\n     1   21.42 2768.12 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   27.61 2795.74 ^ wire22599/Y (BUFx12f_ASAP7_75t_R)\r\n     2   63.18 2858.92 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09478_/Y (OA21x2_ASAP7_75t_R)\r\n     1   21.19 2880.10 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09481_/Y (OR3x4_ASAP7_75t_R)\r\n     1   15.57 2895.67 ^ hold11148/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.93 2911.60 ^ hold8869/Y (BUFx2_ASAP7_75t_R)\r\n     3   22.93 2934.53 ^ hold11149/Y (BUFx2_ASAP7_75t_R)\r\n     5   33.02 2967.55 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_10524_/Y (NOR3x2_ASAP7_75t_R)\r\n     2   32.14 2999.70 v wire20615/Y (BUFx16f_ASAP7_75t_R)\r\n    19   76.62 3076.32 v wire20614/Y (BUFx16f_ASAP7_75t_R)\r\n    30  123.33 3199.65 v wire20613/Y (BUFx16f_ASAP7_75t_R)\r\n    16   26.25 3225.90 v wire20612/Y (BUFx16f_ASAP7_75t_R)\r\n     1   60.57 3286.46 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140035_/Y (AND3x1_ASAP7_75t_R)\r\n     9   19.01 3305.47 v wire19271/Y (BUFx16f_ASAP7_75t_R)\r\n     1   89.99 3395.47 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140050_/Y (AND2x2_ASAP7_75t_R)\r\n     7   36.72 3432.19 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140051_/Y (AO21x2_ASAP7_75t_R)\r\n     6   51.35 3483.53 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140087_/Y (INVx13_ASAP7_75t_R)\r\n     5   35.71 3519.24 ^ wire16755/Y (BUFx16f_ASAP7_75t_R)\r\n     7  104.20 3623.44 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267695_/CON (HAxp5_ASAP7_75t_R)\r\n     5   26.52 3649.96 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140053_/Y (INVx3_ASAP7_75t_R)\r\n     2   31.74 3681.71 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140060_/Y (AND3x1_ASAP7_75t_R)\r\n     2   23.56 3705.27 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267682_/CON (HAxp5_ASAP7_75t_R)\r\n     2   24.40 3729.67 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267682_/SN (HAxp5_ASAP7_75t_R)\r\n     1   28.23 3757.89 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149590_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   43.36 3801.25 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149594_/Y (AND5x2_ASAP7_75t_R)\r\n     1   24.45 3825.70 ^ wire13571/Y (BUFx12f_ASAP7_75t_R)\r\n     1   64.03 3889.73 ^ wire13570/Y (BUFx16f_ASAP7_75t_R)\r\n     1   79.93 3969.66 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09472_/Y (AO221x2_ASAP7_75t_R)\r\n     1   68.57 4038.23 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09473_/Y (OR5x2_ASAP7_75t_R)\r\n     1   13.72 4051.94 ^ hold11977/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4064.20 ^ hold7674/Y (BUFx2_ASAP7_75t_R)\r\n     2   14.63 4078.84 ^ hold11978/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.72 4094.55 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OA21x2_ASAP7_75t_R)\r\n     2   20.63 4115.18 ^ hold7675/Y (BUFx2_ASAP7_75t_R)\r\n     5   24.11 4139.29 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_10522_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   22.06 4161.35 v hold18417/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 4174.03 v hold10243/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 4186.24 v hold18418/Y (BUFx2_ASAP7_75t_R)\r\n     2   20.53 4206.77 v hold7676/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.19 4224.96 v hold18419/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 4237.55 v hold10244/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.38 4252.93 v hold18420/Y (BUFx2_ASAP7_75t_R)\r\n     2   13.31 4266.24 v load_slew12502/Y (BUFx12f_ASAP7_75t_R)\r\n     1   15.05 4281.29 v hold18421/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4296.67 v hold10245/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 4312.02 v hold18422/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 4327.32 v hold7677/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4342.59 v hold18423/Y (BUFx2_ASAP7_75t_R)\r\n     3   30.80 4373.39 v hold10246/Y (BUFx2_ASAP7_75t_R)\r\n     3   35.71 4409.10 v max_length12501/Y (BUFx16f_ASAP7_75t_R)\r\n    17   68.42 4477.52 v wire12498/Y (BUFx16f_ASAP7_75t_R)\r\n    29  122.51 4600.04 v max_length12497/Y (BUFx16f_ASAP7_75t_R)\r\n    18   24.10 4624.14 v max_length12496/Y (BUFx16f_ASAP7_75t_R)\r\n     3   67.14 4691.28 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140063_/Y (AND3x4_ASAP7_75t_R)\r\n    10   59.39 4750.67 v max_length12300/Y (BUFx16f_ASAP7_75t_R)\r\n     3   72.57 4823.25 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140076_/Y (XNOR2x2_ASAP7_75t_R)\r\n     9   20.37 4843.61 ^ load_slew11681/Y (BUFx16f_ASAP7_75t_R)\r\n     5   23.34 4866.96 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_201351_/Y (CKINVDCx16_ASAP7_75t_R)\r\n     3   45.17 4912.12 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267727_/CON (HAxp5_ASAP7_75t_R)\r\n     3   20.27 4932.39 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140092_/Y (INVx2_ASAP7_75t_R)\r\n     1   21.44 4953.83 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267721_/CON (HAxp5_ASAP7_75t_R)\r\n     2   16.81 4970.65 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267668_/Y (INVx1_ASAP7_75t_R)\r\n     2   57.58 5028.23 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267723_/SN (HAxp5_ASAP7_75t_R)\r\n     1   30.13 5058.35 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149595_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   35.26 5093.62 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149601_/Y (AND5x2_ASAP7_75t_R)\r\n     1   34.85 5128.46 v wire8234/Y (BUFx16f_ASAP7_75t_R)\r\n     1   69.42 5197.89 v wire8233/Y (BUFx16f_ASAP7_75t_R)\r\n     1   86.50 5284.38 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09501_/Y (AO221x2_ASAP7_75t_R)\r\n     1   64.90 5349.29 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09502_/Y (OR4x2_ASAP7_75t_R)\r\n     1   15.04 5364.33 v hold11691/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 5377.04 v hold8103/Y (BUFx2_ASAP7_75t_R)\r\n     2   15.24 5392.28 v hold11692/Y (BUFx2_ASAP7_75t_R)\r\n     1    8.30 5400.59 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09503_/Y (NOR2x1_ASAP7_75t_R)\r\n     1   16.07 5416.66 ^ hold11693/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.98 5428.63 ^ hold8104/Y (BUFx2_ASAP7_75t_R)\r\n     2   14.25 5442.89 ^ hold11694/Y (BUFx2_ASAP7_75t_R)\r\n     6   33.66 5476.55 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_13871_/Y (AND3x4_ASAP7_75t_R)\r\n     1   19.94 5496.49 ^ hold17405/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.17 5508.66 ^ hold11980/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.81 5520.46 ^ hold17406/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.68 5532.14 ^ hold11695/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.84 5543.97 ^ hold11981/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.84 5555.81 ^ hold8105/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.69 5567.50 ^ hold11982/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.65 5579.15 ^ hold11696/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.92 5594.07 ^ hold11983/Y (BUFx2_ASAP7_75t_R)\r\n     2   13.10 5607.17 ^ max_length7476/Y (BUFx12f_ASAP7_75t_R)\r\n     1   16.07 5623.24 ^ hold11984/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.88 5639.12 ^ hold11697/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.95 5655.07 ^ hold11985/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.87 5670.94 ^ hold8106/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.89 5686.83 ^ hold11986/Y (BUFx2_ASAP7_75t_R)\r\n     2   26.49 5713.32 ^ hold11698/Y (BUFx2_ASAP7_75t_R)\r\n     2   26.12 5739.44 ^ hold11987/Y (BUFx2_ASAP7_75t_R)\r\n     3   20.02 5759.46 ^ wire7475/Y (BUFx16f_ASAP7_75t_R)\r\n     6   50.30 5809.76 ^ max_length7474/Y (BUFx12f_ASAP7_75t_R)\r\n     2   66.91 5876.68 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140099_/Y (AND2x2_ASAP7_75t_R)\r\n     1   17.15 5893.83 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140100_/Y (NAND2x2_ASAP7_75t_R)\r\n     8   30.84 5924.67 v wire6776/Y (BUFx16f_ASAP7_75t_R)\r\n    13  114.72 6039.39 v load_slew6775/Y (BUFx16f_ASAP7_75t_R)\r\n     1   54.63 6094.02 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_146049_/Y (OR2x2_ASAP7_75t_R)\r\n     7   41.21 6135.24 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_146050_/Y (OA21x2_ASAP7_75t_R)\r\n     9   39.67 6174.90 v wire5396/Y (BUFx16f_ASAP7_75t_R)\r\n     5   51.31 6226.22 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267763_/CON (HAxp5_ASAP7_75t_R)\r\n     5   17.32 6243.54 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149526_/Y (INVx5_ASAP7_75t_R)\r\n     1   56.08 6299.62 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267765_/CON (HAxp5_ASAP7_75t_R)\r\n     2   29.02 6328.63 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267663_/Y (INVx1_ASAP7_75t_R)\r\n     2  126.39 6455.02 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267767_/SN (HAxp5_ASAP7_75t_R)\r\n     1   54.46 6509.49 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149603_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   37.55 6547.04 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149608_/Y (AND5x2_ASAP7_75t_R)\r\n     1   37.85 6584.88 v wire4143/Y (BUFx16f_ASAP7_75t_R)\r\n     1   69.84 6654.72 v wire4142/Y (BUFx16f_ASAP7_75t_R)\r\n     1   84.81 6739.53 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09493_/Y (AO221x2_ASAP7_75t_R)\r\n     1   57.90 6797.43 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09494_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.94 6812.38 v hold30872/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 6825.17 v hold13130/Y (BUFx2_ASAP7_75t_R)\r\n     2   14.65 6839.82 v hold30873/Y (BUFx2_ASAP7_75t_R)\r\n     2   20.21 6860.03 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09495_/Y (OR2x2_ASAP7_75t_R)\r\n     1   14.23 6874.25 v hold30874/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.10 6886.36 v hold13131/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.38 6898.74 v hold30875/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 6912.20 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09505_/Y (AO21x1_ASAP7_75t_R)\r\n     1   12.83 6925.03 v hold30876/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 6937.40 v hold13132/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 6952.75 v hold30877/Y (BUFx2_ASAP7_75t_R)\r\n    17   31.60 6984.35 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09506_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   22.33 7006.68 ^ hold32043/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 7019.06 ^ hold30878/Y (BUFx2_ASAP7_75t_R)\r\n     4   22.96 7042.02 ^ hold13133/Y (BUFx2_ASAP7_75t_R)\r\n    35   24.88 7066.90 ^ load_slew4133/Y (BUFx16f_ASAP7_75t_R)\r\n     2   26.42 7093.32 ^ hold13134/Y (BUFx2_ASAP7_75t_R)\r\n     5   31.12 7124.44 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_13971_/Y (AND2x6_ASAP7_75t_R)\r\n     2   27.47 7151.91 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/_3835_/Y (INVx2_ASAP7_75t_R)\r\n     1   14.40 7166.30 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/_5294_/Y (NOR2x2_ASAP7_75t_R)\r\n     5   17.30 7183.60 ^ wire3988/Y (BUFx16f_ASAP7_75t_R)\r\n     1   84.04 7267.64 ^ wire3987/Y (BUFx16f_ASAP7_75t_R)\r\n     8   66.05 7333.69 ^ wire3986/Y (BUFx16f_ASAP7_75t_R)\r\n     9  136.20 7469.90 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_52698_/Y (AND4x2_ASAP7_75t_R)\r\n     6   60.97 7530.87 ^ wire3601/Y (BUFx16f_ASAP7_75t_R)\r\n    10   86.11 7616.98 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_54157_/Y (AND2x6_ASAP7_75t_R)\r\n    14   23.34 7640.32 ^ wire2977/Y (BUFx16f_ASAP7_75t_R)\r\n     8   50.78 7691.10 ^ max_length2976/Y (BUFx12f_ASAP7_75t_R)\r\n    16   39.60 7730.70 ^ max_length2975/Y (BUFx16f_ASAP7_75t_R)\r\n    14   17.45 7748.16 ^ wire2974/Y (BUFx16f_ASAP7_75t_R)\r\n    16   29.41 7777.57 ^ wire2973/Y (BUFx16f_ASAP7_75t_R)\r\n     3   77.98 7855.55 ^ wire2972/Y (BUFx16f_ASAP7_75t_R)\r\n     2   82.43 7937.98 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_54165_/Y (NOR2x2_ASAP7_75t_R)\r\n    10   30.56 7968.54 v max_length1585/Y (BUFx16f_ASAP7_75t_R)\r\n    12   70.74 8039.28 v load_slew1584/Y (BUFx12f_ASAP7_75t_R)\r\n     8   18.25 8057.53 v max_length1583/Y (BUFx12f_ASAP7_75t_R)\r\n    11   46.63 8104.16 v load_slew1582/Y (BUFx16f_ASAP7_75t_R)\r\n    12   55.12 8159.28 v wire1580/Y (BUFx16f_ASAP7_75t_R)\r\n    12   57.79 8217.07 v max_length1579/Y (BUFx16f_ASAP7_75t_R)\r\n     1   39.31 8256.38 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_54636_/Y (AOI221x1_ASAP7_75t_R)\r\n          0.01 8256.39 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_80484_/D (DFFHQNx2_ASAP7_75t_R)\r\n               8256.39   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock (rise edge)\r\n        380.41 8880.41   clock network delay (propagated)\r\n        -10.00 8870.41   clock uncertainty\r\n          0.00 8870.41   clock reconvergence pessimism\r\n               8870.41 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_80484_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.21 8865.20   library setup time\r\n               8865.20   data required time\r\n---------------------------------------------------------------\r\n               8865.20   data required time\r\n               -8256.39   data arrival time\r\n---------------------------------------------------------------\r\n                608.81   slack (MET)\r\n\r\n\r\nStartpoint: clock_uncore_clock (clock source 'clock_uncore_clock')\r\nEndpoint: axi4_mem_0_clock (output port clocked by clock_uncore_clock_vir)\r\nPath Group: clock_uncore_clock_vir\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n       4250.00 4250.00   clock clock_uncore_clock (fall edge)\r\n       1775.06 6025.06   clock network delay\r\n               6025.06 v axi4_mem_0_clock (out)\r\n               6025.06   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock_vir (rise edge)\r\n       1000.00 9500.00   clock network delay (ideal)\r\n        -10.00 9490.00   clock uncertainty\r\n          0.00 9490.00   clock reconvergence pessimism\r\n       -1700.00 7790.00   output external delay\r\n               7790.00   data required time\r\n---------------------------------------------------------------\r\n               7790.00   data required time\r\n               -6025.06   data arrival time\r\n---------------------------------------------------------------\r\n               1764.93   slack (MET)\r\n\r\n\r\nStartpoint: serial_tl_bits_out_ready\r\n            (input port clocked by clock_uncore_clock_vir)\r\nEndpoint: system/subsystem_fbus/out_async/_1122_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_clock)\r\nPath Group: serial_tl_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_uncore_clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v serial_tl_bits_out_ready (in)\r\n     1   11.42 2711.42 v input121/Y (BUFx2_ASAP7_75t_R)\r\n     1   21.57 2733.00 v system/subsystem_fbus/out_async/_0655_/Y (AND2x6_ASAP7_75t_R)\r\n     1   27.18 2760.18 ^ system/subsystem_fbus/out_async/_1119_/CON (HAxp5_ASAP7_75t_R)\r\n     1    9.72 2769.90 v system/subsystem_fbus/out_async/_1118_/Y (INVx1_ASAP7_75t_R)\r\n     1   13.58 2783.48 ^ system/subsystem_fbus/out_async/_1120_/CON (HAxp5_ASAP7_75t_R)\r\n     1    8.76 2792.23 v system/subsystem_fbus/out_async/_1117_/Y (INVx1_ASAP7_75t_R)\r\n    12  204.22 2996.46 v system/subsystem_fbus/out_async/_1121_/SN (HAxp5_ASAP7_75t_R)\r\n    12   53.79 3050.25 v load_slew27103/Y (BUFx6f_ASAP7_75t_R)\r\n     2   24.58 3074.83 v system/subsystem_fbus/out_async/_0587_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   26.20 3101.02 v system/subsystem_fbus/out_async/_0588_/Y (OR3x1_ASAP7_75t_R)\r\n    33   54.44 3155.46 v system/subsystem_fbus/out_async/_0593_/Y (AO22x2_ASAP7_75t_R)\r\n    33  113.80 3269.27 ^ system/subsystem_fbus/out_async/_0594_/Y (NAND2x2_ASAP7_75t_R)\r\n     1   46.55 3315.82 ^ system/subsystem_fbus/out_async/_0679_/Y (OA21x2_ASAP7_75t_R)\r\n          0.02 3315.84 ^ system/subsystem_fbus/out_async/_1122_/D (DFFHQNx2_ASAP7_75t_R)\r\n               3315.84   data arrival time\r\n\r\n       8500.00 8500.00   clock serial_tl_clock (rise edge)\r\n        191.14 8691.14   clock network delay (propagated)\r\n        -10.00 8681.14   clock uncertainty\r\n          0.00 8681.14   clock reconvergence pessimism\r\n               8681.14 ^ system/subsystem_fbus/out_async/_1122_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.07 8676.07   library setup time\r\n               8676.07   data required time\r\n---------------------------------------------------------------\r\n               8676.07   data required time\r\n               -3315.84   data arrival time\r\n---------------------------------------------------------------\r\n               5360.23   slack (MET)\r\n```\r\n", "date": "2024-01-07T09:24:51Z"}, {"author": "oharboe", "role": "assistant", "message": "I've posted a question to Chipyard: https://groups.google.com/g/chipyard/c/BXsafsGlhJ0", "date": "2024-01-08T05:23:51Z"}], "date": "2024-01-04T12:16:52Z", "category": "Runtime", "subcategory": "Global routing congestion", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4442", "id": 4442, "title": "Custom Placement of Two-Row Tall Cells", "author": "harshkhandeparkar", "description": "In the OpenFASoC [LDO generator](https://github.com/idea-fasoc/OpenFASOC/tree/main/openfasoc/generators/ldo-gen), a two-row tall comparator latch is custom placed using the `place_cell` command in a [tcl script](https://github.com/idea-fasoc/OpenFASOC/blob/f7b3440c485ff2accbf549aa11a12a75c01186c1/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl#L7).\r\n\r\nThis used to work in earlier versions of OpenROAD, but recently the CI is [failing](https://github.com/idea-fasoc/OpenFASOC/actions/runs/7301239627/job/19897490889#step:4:1990) with the following error:\r\n```\r\n[ERROR DPL-0017] cannot place instance cmp1.\r\n```\r\n The custom placement is done before running the `detailed_placement` command in the [detail_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/detail_place.tcl) script. If the `detailed_placement` command is removed, the following error is returned:\r\n```\r\n[ERROR DPL-0044] Cell cmp1 with height 8140 is taller than any row.\r\nError: detail_place.tcl, 26 DPL-0044\r\n```\r\n\r\nRelevant Information:\r\n- OpenROAD Version hash: `e89829335596b351ce665dcc3b73619c0b191c14`\r\n- Comparator Latch Cell: [LEF](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/lef/LDO_COMPARATOR_LATCH.lef) / [GDS](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/gds/LDO_COMPARATOR_LATCH.gds)\r\n- Custom placement script: [custom_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl)\r\n\r\nIs there a way to place this cell (not as a macro) without placement violations?\r\n\r\ncc: @msaligane ", "content": [{"author": "harshkhandeparkar", "role": "user", "message": "In the OpenFASoC [LDO generator](https://github.com/idea-fasoc/OpenFASOC/tree/main/openfasoc/generators/ldo-gen), a two-row tall comparator latch is custom placed using the `place_cell` command in a [tcl script](https://github.com/idea-fasoc/OpenFASOC/blob/f7b3440c485ff2accbf549aa11a12a75c01186c1/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl#L7).\r\n\r\nThis used to work in earlier versions of OpenROAD, but recently the CI is [failing](https://github.com/idea-fasoc/OpenFASOC/actions/runs/7301239627/job/19897490889#step:4:1990) with the following error:\r\n```\r\n[ERROR DPL-0017] cannot place instance cmp1.\r\n```\r\n The custom placement is done before running the `detailed_placement` command in the [detail_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/detail_place.tcl) script. If the `detailed_placement` command is removed, the following error is returned:\r\n```\r\n[ERROR DPL-0044] Cell cmp1 with height 8140 is taller than any row.\r\nError: detail_place.tcl, 26 DPL-0044\r\n```\r\n\r\nRelevant Information:\r\n- OpenROAD Version hash: `e89829335596b351ce665dcc3b73619c0b191c14`\r\n- Comparator Latch Cell: [LEF](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/lef/LDO_COMPARATOR_LATCH.lef) / [GDS](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/gds/LDO_COMPARATOR_LATCH.gds)\r\n- Custom placement script: [custom_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl)\r\n\r\nIs there a way to place this cell (not as a macro) without placement violations?\r\n\r\ncc: @msaligane ", "date": "2023-12-25T14:47:28Z"}, {"author": "rovinski", "role": "assistant", "message": "Have you tried marking the cells as `FIXED` instead of `PLACED`?", "date": "2023-12-26T06:48:09Z"}, {"author": "maliberty", "role": "assistant", "message": "We have recently being doing work related to multi-height cells.  The error indicates that the detailed placer is trying to legalize this instance which is sounds like you don't want.  FIRM should work for that purpose.  Can you provide a test case?", "date": "2023-12-26T15:48:03Z"}, {"author": "maliberty", "role": "assistant", "message": "Your other option is to provide double height site rows.", "date": "2023-12-26T15:48:34Z"}], "date": "2023-12-25T14:47:28Z", "category": "Runtime", "subcategory": "Placement violation", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4464", "id": 4464, "title": "Avoiding overallocation of CPU and memory for OpenROAD builds", "author": "oharboe", "description": "I am running into problems with too many OpenROAD binaries running in parallel when using Bazel ORFS layer.\r\n\r\nI'm looking into whether I can get Bazel not to overuse CPUs in the system: https://groups.google.com/g/bazel-discuss/c/KVDcZ-EDfZw\r\n\r\nWhat other options are there? Surely this is not a new problem. What does other types of toolchains do?\r\n\r\nHowever, could and should OpenROAD be modified so that it communicates with other OpenROAD instances in the system and throttles usage to avoid overallocation of CPU and memory?\r\n\r\nIdea:\r\n\r\n- add new option to openroad `-limit <path>`\r\n- this would cause openroad instances to communicate with eachother not to overallocate CPU and memory", "content": [{"author": "oharboe", "role": "user", "message": "I am running into problems with too many OpenROAD binaries running in parallel when using Bazel ORFS layer.\r\n\r\nI'm looking into whether I can get Bazel not to overuse CPUs in the system: https://groups.google.com/g/bazel-discuss/c/KVDcZ-EDfZw\r\n\r\nWhat other options are there? Surely this is not a new problem. What does other types of toolchains do?\r\n\r\nHowever, could and should OpenROAD be modified so that it communicates with other OpenROAD instances in the system and throttles usage to avoid overallocation of CPU and memory?\r\n\r\nIdea:\r\n\r\n- add new option to openroad `-limit <path>`\r\n- this would cause openroad instances to communicate with eachother not to overallocate CPU and memory", "date": "2023-12-30T09:33:55Z"}, {"author": "maliberty", "role": "assistant", "message": "This seems to be more about job scheduling than OR.  Usually a job scheduler will have some ability to specify the required resources for a job.   OR itself will allow you to give a max number of threads if that's helpful.\r\n\r\nFor example in [condor](https://htcondor.readthedocs.io/en/latest/users-manual/submitting-a-job.html):\r\n```\r\nrequest_cpus   = 1\r\nrequest_memory = 1024M\r\nrequest_disk   = 10240K\r\n```\r\n\r\nI don't think OR should try to solve this as you can run into the same issue between unrelated tools (yosys, klayout, or, etc).  ", "date": "2023-12-30T15:59:32Z"}, {"author": "oharboe", "role": "assistant", "message": "Turns out there is an infinite loop, probably, in DRC. I thought things ground to a halt because of CPU thrashing, but the detailed router might actually be stuck here. https://github.com/The-OpenROAD-Project/OpenROAD/issues/4466\r\n\r\nIf there is some performance degradation like 30-50% when running multiple detailed routing in parallel, that's tolerable.", "date": "2023-12-31T10:33:14Z"}], "date": "2023-12-30T09:33:55Z", "category": "Runtime", "subcategory": "Resource management", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4461", "id": 4461, "title": "MegaBoom clock skew", "author": "oharboe", "description": "I get a lot of clock skew with https://github.com/The-OpenROAD-Project/megaboom/commit/f5dd1af7841cf1c811a51206bda6f36b446ff335 \r\n\r\n\r\n\r\n```\r\n>>> report_clock_skew\r\nClock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nLatency      CRPR       Skew\r\nprci_ctrl_domain/_0952_/CLK ^\r\n  11.20\r\ntile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095958_/CLK ^\r\n2185.78      0.00    -2174.58\r\n\r\nClock clock\r\nNo launch/capture paths found.\r\n\r\nClock clock_vir\r\nNo launch/capture paths found.\r\n\r\nClock debug_clock\r\nLatency      CRPR       Skew\r\ntlDM/dmInner/_0926_/CLK ^\r\n 118.89\r\ntlDM/dmInner/dmInner/_13930_/CLK ^\r\n 143.67      0.00     -24.78\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/faff2190-acda-4d7f-a513-7d4a3c847cdd)\r\n\r\nHowever, a simple clock skew number doesn't really tell me if the clock skew is a problem.  This presentation talks about that: https://www.eng.biu.ac.il/temanad/files/2017/02/Lecture-8-CTS.pdf\r\n\r\nThe clock skew is a problem if two flip flops that have a path between them have a large clock skew. Overcompensating for clock skew is bad for power/area/performance.\r\n\r\nThough, it is hard to believe that 2000ps clock skew isn't going to be an issue....\r\n\r\n\r\nLooking at the max path, ignoring all the hold elements(clock skew?), it seems like a very deep logic path going from the reorder buffer, through the load store unit and back into the rename stage. I can definitely see how this needs to be flattened in synthesis.\r\n\r\n```\r\nStartpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_\r\n            (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nEndpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_\r\n          (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nPath Group: auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n1958.08 1958.08   clock network delay (propagated)\r\n   0.00 1958.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  37.20 2244.42 v load_slew37373/Y (BUFx6f_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  51.73 2428.42 v max_cap29793/Y (BUFx10_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  12.60 2733.05 v hold3456/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 2745.47 v hold3147/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 2757.83 v hold3457/Y (BUFx2_ASAP7_75t_R)\r\n  12.25 2770.08 v hold2749/Y (BUFx2_ASAP7_75t_R)\r\n  12.23 2782.31 v hold3458/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2794.54 v hold3148/Y (BUFx2_ASAP7_75t_R)\r\n  12.34 2806.88 v hold3459/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 2819.16 v hold2589/Y (BUFx2_ASAP7_75t_R)\r\n  12.26 2831.41 v hold3460/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2843.64 v hold3149/Y (BUFx2_ASAP7_75t_R)\r\n  12.29 2855.93 v hold3461/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 2868.23 v hold2750/Y (BUFx2_ASAP7_75t_R)\r\n  12.57 2880.80 v hold3462/Y (BUFx2_ASAP7_75t_R)\r\n  13.60 2894.40 v hold3150/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 2908.22 v hold3463/Y (BUFx2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  18.64 2954.30 v wire17733/Y (BUFx16f_ASAP7_75t_R)\r\n  89.70 3044.00 v wire17732/Y (BUFx16f_ASAP7_75t_R)\r\n 119.92 3163.91 v max_length17731/Y (BUFx16f_ASAP7_75t_R)\r\n  30.15 3194.06 v wire17730/Y (BUFx16f_ASAP7_75t_R)\r\n  91.23 3285.29 v wire17729/Y (BUFx16f_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n  27.75 3477.02 v max_cap15253/Y (BUFx12f_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  20.78 3822.73 v wire11834/Y (BUFx12f_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  25.17 3929.30 v wire11643/Y (BUFx16f_ASAP7_75t_R)\r\n  70.74 4000.04 v wire11642/Y (BUFx16f_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n  15.55 4100.01 v hold2875/Y (BUFx2_ASAP7_75t_R)\r\n  12.67 4112.67 v hold2611/Y (BUFx2_ASAP7_75t_R)\r\n  12.70 4125.38 v hold2876/Y (BUFx2_ASAP7_75t_R)\r\n  12.45 4137.83 v hold2489/Y (BUFx2_ASAP7_75t_R)\r\n  12.41 4150.23 v hold2877/Y (BUFx2_ASAP7_75t_R)\r\n  12.47 4162.71 v hold2612/Y (BUFx2_ASAP7_75t_R)\r\n  14.28 4176.98 v hold2878/Y (BUFx2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.17 4195.32 ^ hold2613/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 4206.97 ^ hold2490/Y (BUFx2_ASAP7_75t_R)\r\n  11.89 4218.86 ^ hold2614/Y (BUFx2_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  12.91 4244.43 ^ hold2615/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 4256.17 ^ hold2491/Y (BUFx2_ASAP7_75t_R)\r\n  13.34 4269.51 ^ hold2616/Y (BUFx2_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  12.97 4304.23 ^ hold2753/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4316.36 ^ hold2617/Y (BUFx2_ASAP7_75t_R)\r\n  12.16 4328.52 ^ hold2754/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4340.65 ^ hold2591/Y (BUFx2_ASAP7_75t_R)\r\n  12.20 4352.86 ^ hold2755/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4365.04 ^ hold2618/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4377.23 ^ hold2756/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4389.36 ^ hold2492/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 4401.58 ^ hold2757/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 4413.89 ^ hold2619/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 4426.24 ^ hold2758/Y (BUFx2_ASAP7_75t_R)\r\n  25.20 4451.44 ^ hold2592/Y (BUFx2_ASAP7_75t_R)\r\n  39.44 4490.88 ^ wire10835/Y (BUFx16f_ASAP7_75t_R)\r\n 118.30 4609.18 ^ wire10834/Y (BUFx16f_ASAP7_75t_R)\r\n  42.72 4651.90 ^ wire10832/Y (BUFx16f_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  25.32 4924.57 v max_length9483/Y (BUFx16f_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  25.28 5252.66 v wire7254/Y (BUFx12f_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  21.54 5351.72 v wire7115/Y (BUFx16f_ASAP7_75t_R)\r\n  69.67 5421.39 v wire7114/Y (BUFx16f_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n  14.86 5510.88 v hold3695/Y (BUFx2_ASAP7_75t_R)\r\n  12.38 5523.26 v hold2552/Y (BUFx2_ASAP7_75t_R)\r\n  12.33 5535.59 v hold3696/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5547.89 v hold2504/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5560.21 v hold3697/Y (BUFx2_ASAP7_75t_R)\r\n  13.56 5573.77 v hold2553/Y (BUFx2_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  12.23 5591.93 ^ hold2554/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 5603.59 ^ hold2505/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 5615.32 ^ hold2555/Y (BUFx2_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  13.70 5657.64 ^ hold2883/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5669.51 ^ hold2556/Y (BUFx2_ASAP7_75t_R)\r\n  11.76 5681.27 ^ hold2884/Y (BUFx2_ASAP7_75t_R)\r\n  11.68 5692.95 ^ hold2525/Y (BUFx2_ASAP7_75t_R)\r\n  11.99 5704.94 ^ hold2885/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 5717.06 ^ hold2557/Y (BUFx2_ASAP7_75t_R)\r\n  12.07 5729.14 ^ hold2886/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 5740.97 ^ hold2506/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 5752.66 ^ hold2887/Y (BUFx2_ASAP7_75t_R)\r\n  11.82 5764.48 ^ hold2558/Y (BUFx2_ASAP7_75t_R)\r\n  11.91 5776.39 ^ hold2888/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5788.33 ^ hold2526/Y (BUFx2_ASAP7_75t_R)\r\n  12.00 5800.33 ^ hold2889/Y (BUFx2_ASAP7_75t_R)\r\n  16.89 5817.22 ^ hold2559/Y (BUFx2_ASAP7_75t_R)\r\n  34.94 5852.15 ^ hold2890/Y (BUFx2_ASAP7_75t_R)\r\n  26.15 5878.30 ^ max_length6496/Y (BUFx16f_ASAP7_75t_R)\r\n  13.60 5891.91 ^ hold2891/Y (BUFx2_ASAP7_75t_R)\r\n  12.02 5903.93 ^ hold2560/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5915.80 ^ hold2892/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 5927.54 ^ hold2527/Y (BUFx2_ASAP7_75t_R)\r\n  11.79 5939.33 ^ hold2893/Y (BUFx2_ASAP7_75t_R)\r\n  11.81 5951.14 ^ hold2561/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 5963.09 ^ hold2894/Y (BUFx2_ASAP7_75t_R)\r\n  11.93 5975.03 ^ hold2507/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5986.97 ^ hold2895/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5998.84 ^ hold2562/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 6010.80 ^ hold2896/Y (BUFx2_ASAP7_75t_R)\r\n  11.88 6022.68 ^ hold2528/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 6034.51 ^ hold2897/Y (BUFx2_ASAP7_75t_R)\r\n  29.92 6064.43 ^ hold2563/Y (BUFx2_ASAP7_75t_R)\r\n  64.30 6128.72 ^ wire6494/Y (BUFx12f_ASAP7_75t_R)\r\n  65.09 6193.82 ^ wire6493/Y (BUFx16f_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  37.31 6337.19 v max_length5802/Y (BUFx16f_ASAP7_75t_R)\r\n  41.02 6378.21 v load_slew5800/Y (BUFx16f_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  57.64 6800.51 ^ wire3875/Y (BUFx16f_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  34.79 6913.78 ^ wire3865/Y (BUFx16f_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  13.02 6983.41 ^ hold3416/Y (BUFx2_ASAP7_75t_R)\r\n  11.71 6995.11 ^ hold2992/Y (BUFx2_ASAP7_75t_R)\r\n  11.65 7006.76 ^ hold3417/Y (BUFx2_ASAP7_75t_R)\r\n  11.64 7018.40 ^ hold2679/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 7030.09 ^ hold3418/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7041.75 ^ hold2993/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7053.52 ^ hold3419/Y (BUFx2_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n  12.18 7080.22 ^ hold3699/Y (BUFx2_ASAP7_75t_R)\r\n  11.67 7091.90 ^ hold2994/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7103.56 ^ hold3700/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 7115.29 ^ hold2680/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7127.06 ^ hold3701/Y (BUFx2_ASAP7_75t_R)\r\n  11.84 7138.90 ^ hold2995/Y (BUFx2_ASAP7_75t_R)\r\n  11.86 7150.75 ^ hold3702/Y (BUFx2_ASAP7_75t_R)\r\n  16.27 7167.03 ^ hold3420/Y (BUFx2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  12.83 7186.26 v hold2996/Y (BUFx2_ASAP7_75t_R)\r\n  12.44 7198.70 v hold2681/Y (BUFx2_ASAP7_75t_R)\r\n  13.05 7211.75 v hold2997/Y (BUFx2_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  17.05 7252.74 v hold3703/Y (BUFx2_ASAP7_75t_R)\r\n  13.73 7266.47 v hold2998/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 7280.29 v hold3704/Y (BUFx2_ASAP7_75t_R)\r\n  13.62 7293.91 v hold2682/Y (BUFx2_ASAP7_75t_R)\r\n  13.64 7307.54 v hold3705/Y (BUFx2_ASAP7_75t_R)\r\n  13.25 7320.80 v hold2999/Y (BUFx2_ASAP7_75t_R)\r\n  12.85 7333.65 v hold3706/Y (BUFx2_ASAP7_75t_R)\r\n  36.78 7370.43 v hold3421/Y (BUFx2_ASAP7_75t_R)\r\n  38.82 7409.25 v hold3707/Y (BUFx2_ASAP7_75t_R)\r\n  15.66 7424.91 v max_length3853/Y (BUFx12f_ASAP7_75t_R)\r\n  11.90 7436.81 v hold3708/Y (BUFx2_ASAP7_75t_R)\r\n  12.17 7448.98 v hold3000/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 7461.26 v hold3709/Y (BUFx2_ASAP7_75t_R)\r\n  12.32 7473.58 v hold2683/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 7486.00 v hold3710/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 7498.22 v hold3001/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 7510.52 v hold3711/Y (BUFx2_ASAP7_75t_R)\r\n  30.05 7540.57 v hold3422/Y (BUFx2_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  17.31 7592.60 v hold4909/Y (BUFx2_ASAP7_75t_R)\r\n  17.42 7610.02 v hold3002/Y (BUFx2_ASAP7_75t_R)\r\n  17.51 7627.53 v hold4910/Y (BUFx2_ASAP7_75t_R)\r\n  17.30 7644.84 v hold2684/Y (BUFx2_ASAP7_75t_R)\r\n  16.93 7661.77 v hold4911/Y (BUFx2_ASAP7_75t_R)\r\n  15.77 7677.54 v hold3003/Y (BUFx2_ASAP7_75t_R)\r\n  14.70 7692.24 v hold4912/Y (BUFx2_ASAP7_75t_R)\r\n  27.90 7720.14 v hold3423/Y (BUFx2_ASAP7_75t_R)\r\n  56.26 7776.40 v wire3837/Y (BUFx16f_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  41.42 7889.00 ^ wire3756/Y (BUFx16f_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  48.71 8029.36 v wire3438/Y (BUFx12f_ASAP7_75t_R)\r\n  70.54 8099.90 v wire3437/Y (BUFx16f_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n  29.19 8275.99 v max_length2710/Y (BUFx12f_ASAP7_75t_R)\r\n  38.04 8314.04 v wire2709/Y (BUFx16f_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  40.95 8641.07 ^ max_cap481/Y (BUFx10_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n        8671.92   data arrival time\r\n\r\n8500.00 8500.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n 201.71 8701.71   clock network delay (propagated)\r\n -10.00 8691.71   clock uncertainty\r\n   0.00 8691.71   clock reconvergence pessimism\r\n        8691.71 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  15.71 8707.42   library setup time\r\n        8707.42   data required time\r\n---------------------------------------------------------\r\n        8707.42   data required time\r\n        -8671.92   data arrival time\r\n---------------------------------------------------------\r\n          35.50   slack (MET)\r\n```\r\n\r\n\r\nIf I strip away everything but the logic, I get:\r\n\r\n```\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n```\r\n\r\nThis is a delay of 70 levels of logic yielding 3445.12ps. The fanout of a number of these levels are in the 10-20 range.\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I get a lot of clock skew with https://github.com/The-OpenROAD-Project/megaboom/commit/f5dd1af7841cf1c811a51206bda6f36b446ff335 \r\n\r\n\r\n\r\n```\r\n>>> report_clock_skew\r\nClock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nLatency      CRPR       Skew\r\nprci_ctrl_domain/_0952_/CLK ^\r\n  11.20\r\ntile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095958_/CLK ^\r\n2185.78      0.00    -2174.58\r\n\r\nClock clock\r\nNo launch/capture paths found.\r\n\r\nClock clock_vir\r\nNo launch/capture paths found.\r\n\r\nClock debug_clock\r\nLatency      CRPR       Skew\r\ntlDM/dmInner/_0926_/CLK ^\r\n 118.89\r\ntlDM/dmInner/dmInner/_13930_/CLK ^\r\n 143.67      0.00     -24.78\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/faff2190-acda-4d7f-a513-7d4a3c847cdd)\r\n\r\nHowever, a simple clock skew number doesn't really tell me if the clock skew is a problem.  This presentation talks about that: https://www.eng.biu.ac.il/temanad/files/2017/02/Lecture-8-CTS.pdf\r\n\r\nThe clock skew is a problem if two flip flops that have a path between them have a large clock skew. Overcompensating for clock skew is bad for power/area/performance.\r\n\r\nThough, it is hard to believe that 2000ps clock skew isn't going to be an issue....\r\n\r\n\r\nLooking at the max path, ignoring all the hold elements(clock skew?), it seems like a very deep logic path going from the reorder buffer, through the load store unit and back into the rename stage. I can definitely see how this needs to be flattened in synthesis.\r\n\r\n```\r\nStartpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_\r\n            (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nEndpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_\r\n          (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nPath Group: auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n1958.08 1958.08   clock network delay (propagated)\r\n   0.00 1958.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  37.20 2244.42 v load_slew37373/Y (BUFx6f_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  51.73 2428.42 v max_cap29793/Y (BUFx10_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  12.60 2733.05 v hold3456/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 2745.47 v hold3147/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 2757.83 v hold3457/Y (BUFx2_ASAP7_75t_R)\r\n  12.25 2770.08 v hold2749/Y (BUFx2_ASAP7_75t_R)\r\n  12.23 2782.31 v hold3458/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2794.54 v hold3148/Y (BUFx2_ASAP7_75t_R)\r\n  12.34 2806.88 v hold3459/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 2819.16 v hold2589/Y (BUFx2_ASAP7_75t_R)\r\n  12.26 2831.41 v hold3460/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2843.64 v hold3149/Y (BUFx2_ASAP7_75t_R)\r\n  12.29 2855.93 v hold3461/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 2868.23 v hold2750/Y (BUFx2_ASAP7_75t_R)\r\n  12.57 2880.80 v hold3462/Y (BUFx2_ASAP7_75t_R)\r\n  13.60 2894.40 v hold3150/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 2908.22 v hold3463/Y (BUFx2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  18.64 2954.30 v wire17733/Y (BUFx16f_ASAP7_75t_R)\r\n  89.70 3044.00 v wire17732/Y (BUFx16f_ASAP7_75t_R)\r\n 119.92 3163.91 v max_length17731/Y (BUFx16f_ASAP7_75t_R)\r\n  30.15 3194.06 v wire17730/Y (BUFx16f_ASAP7_75t_R)\r\n  91.23 3285.29 v wire17729/Y (BUFx16f_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n  27.75 3477.02 v max_cap15253/Y (BUFx12f_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  20.78 3822.73 v wire11834/Y (BUFx12f_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  25.17 3929.30 v wire11643/Y (BUFx16f_ASAP7_75t_R)\r\n  70.74 4000.04 v wire11642/Y (BUFx16f_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n  15.55 4100.01 v hold2875/Y (BUFx2_ASAP7_75t_R)\r\n  12.67 4112.67 v hold2611/Y (BUFx2_ASAP7_75t_R)\r\n  12.70 4125.38 v hold2876/Y (BUFx2_ASAP7_75t_R)\r\n  12.45 4137.83 v hold2489/Y (BUFx2_ASAP7_75t_R)\r\n  12.41 4150.23 v hold2877/Y (BUFx2_ASAP7_75t_R)\r\n  12.47 4162.71 v hold2612/Y (BUFx2_ASAP7_75t_R)\r\n  14.28 4176.98 v hold2878/Y (BUFx2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.17 4195.32 ^ hold2613/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 4206.97 ^ hold2490/Y (BUFx2_ASAP7_75t_R)\r\n  11.89 4218.86 ^ hold2614/Y (BUFx2_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  12.91 4244.43 ^ hold2615/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 4256.17 ^ hold2491/Y (BUFx2_ASAP7_75t_R)\r\n  13.34 4269.51 ^ hold2616/Y (BUFx2_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  12.97 4304.23 ^ hold2753/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4316.36 ^ hold2617/Y (BUFx2_ASAP7_75t_R)\r\n  12.16 4328.52 ^ hold2754/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4340.65 ^ hold2591/Y (BUFx2_ASAP7_75t_R)\r\n  12.20 4352.86 ^ hold2755/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4365.04 ^ hold2618/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4377.23 ^ hold2756/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4389.36 ^ hold2492/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 4401.58 ^ hold2757/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 4413.89 ^ hold2619/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 4426.24 ^ hold2758/Y (BUFx2_ASAP7_75t_R)\r\n  25.20 4451.44 ^ hold2592/Y (BUFx2_ASAP7_75t_R)\r\n  39.44 4490.88 ^ wire10835/Y (BUFx16f_ASAP7_75t_R)\r\n 118.30 4609.18 ^ wire10834/Y (BUFx16f_ASAP7_75t_R)\r\n  42.72 4651.90 ^ wire10832/Y (BUFx16f_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  25.32 4924.57 v max_length9483/Y (BUFx16f_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  25.28 5252.66 v wire7254/Y (BUFx12f_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  21.54 5351.72 v wire7115/Y (BUFx16f_ASAP7_75t_R)\r\n  69.67 5421.39 v wire7114/Y (BUFx16f_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n  14.86 5510.88 v hold3695/Y (BUFx2_ASAP7_75t_R)\r\n  12.38 5523.26 v hold2552/Y (BUFx2_ASAP7_75t_R)\r\n  12.33 5535.59 v hold3696/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5547.89 v hold2504/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5560.21 v hold3697/Y (BUFx2_ASAP7_75t_R)\r\n  13.56 5573.77 v hold2553/Y (BUFx2_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  12.23 5591.93 ^ hold2554/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 5603.59 ^ hold2505/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 5615.32 ^ hold2555/Y (BUFx2_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  13.70 5657.64 ^ hold2883/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5669.51 ^ hold2556/Y (BUFx2_ASAP7_75t_R)\r\n  11.76 5681.27 ^ hold2884/Y (BUFx2_ASAP7_75t_R)\r\n  11.68 5692.95 ^ hold2525/Y (BUFx2_ASAP7_75t_R)\r\n  11.99 5704.94 ^ hold2885/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 5717.06 ^ hold2557/Y (BUFx2_ASAP7_75t_R)\r\n  12.07 5729.14 ^ hold2886/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 5740.97 ^ hold2506/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 5752.66 ^ hold2887/Y (BUFx2_ASAP7_75t_R)\r\n  11.82 5764.48 ^ hold2558/Y (BUFx2_ASAP7_75t_R)\r\n  11.91 5776.39 ^ hold2888/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5788.33 ^ hold2526/Y (BUFx2_ASAP7_75t_R)\r\n  12.00 5800.33 ^ hold2889/Y (BUFx2_ASAP7_75t_R)\r\n  16.89 5817.22 ^ hold2559/Y (BUFx2_ASAP7_75t_R)\r\n  34.94 5852.15 ^ hold2890/Y (BUFx2_ASAP7_75t_R)\r\n  26.15 5878.30 ^ max_length6496/Y (BUFx16f_ASAP7_75t_R)\r\n  13.60 5891.91 ^ hold2891/Y (BUFx2_ASAP7_75t_R)\r\n  12.02 5903.93 ^ hold2560/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5915.80 ^ hold2892/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 5927.54 ^ hold2527/Y (BUFx2_ASAP7_75t_R)\r\n  11.79 5939.33 ^ hold2893/Y (BUFx2_ASAP7_75t_R)\r\n  11.81 5951.14 ^ hold2561/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 5963.09 ^ hold2894/Y (BUFx2_ASAP7_75t_R)\r\n  11.93 5975.03 ^ hold2507/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5986.97 ^ hold2895/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5998.84 ^ hold2562/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 6010.80 ^ hold2896/Y (BUFx2_ASAP7_75t_R)\r\n  11.88 6022.68 ^ hold2528/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 6034.51 ^ hold2897/Y (BUFx2_ASAP7_75t_R)\r\n  29.92 6064.43 ^ hold2563/Y (BUFx2_ASAP7_75t_R)\r\n  64.30 6128.72 ^ wire6494/Y (BUFx12f_ASAP7_75t_R)\r\n  65.09 6193.82 ^ wire6493/Y (BUFx16f_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  37.31 6337.19 v max_length5802/Y (BUFx16f_ASAP7_75t_R)\r\n  41.02 6378.21 v load_slew5800/Y (BUFx16f_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  57.64 6800.51 ^ wire3875/Y (BUFx16f_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  34.79 6913.78 ^ wire3865/Y (BUFx16f_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  13.02 6983.41 ^ hold3416/Y (BUFx2_ASAP7_75t_R)\r\n  11.71 6995.11 ^ hold2992/Y (BUFx2_ASAP7_75t_R)\r\n  11.65 7006.76 ^ hold3417/Y (BUFx2_ASAP7_75t_R)\r\n  11.64 7018.40 ^ hold2679/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 7030.09 ^ hold3418/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7041.75 ^ hold2993/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7053.52 ^ hold3419/Y (BUFx2_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n  12.18 7080.22 ^ hold3699/Y (BUFx2_ASAP7_75t_R)\r\n  11.67 7091.90 ^ hold2994/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7103.56 ^ hold3700/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 7115.29 ^ hold2680/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7127.06 ^ hold3701/Y (BUFx2_ASAP7_75t_R)\r\n  11.84 7138.90 ^ hold2995/Y (BUFx2_ASAP7_75t_R)\r\n  11.86 7150.75 ^ hold3702/Y (BUFx2_ASAP7_75t_R)\r\n  16.27 7167.03 ^ hold3420/Y (BUFx2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  12.83 7186.26 v hold2996/Y (BUFx2_ASAP7_75t_R)\r\n  12.44 7198.70 v hold2681/Y (BUFx2_ASAP7_75t_R)\r\n  13.05 7211.75 v hold2997/Y (BUFx2_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  17.05 7252.74 v hold3703/Y (BUFx2_ASAP7_75t_R)\r\n  13.73 7266.47 v hold2998/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 7280.29 v hold3704/Y (BUFx2_ASAP7_75t_R)\r\n  13.62 7293.91 v hold2682/Y (BUFx2_ASAP7_75t_R)\r\n  13.64 7307.54 v hold3705/Y (BUFx2_ASAP7_75t_R)\r\n  13.25 7320.80 v hold2999/Y (BUFx2_ASAP7_75t_R)\r\n  12.85 7333.65 v hold3706/Y (BUFx2_ASAP7_75t_R)\r\n  36.78 7370.43 v hold3421/Y (BUFx2_ASAP7_75t_R)\r\n  38.82 7409.25 v hold3707/Y (BUFx2_ASAP7_75t_R)\r\n  15.66 7424.91 v max_length3853/Y (BUFx12f_ASAP7_75t_R)\r\n  11.90 7436.81 v hold3708/Y (BUFx2_ASAP7_75t_R)\r\n  12.17 7448.98 v hold3000/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 7461.26 v hold3709/Y (BUFx2_ASAP7_75t_R)\r\n  12.32 7473.58 v hold2683/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 7486.00 v hold3710/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 7498.22 v hold3001/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 7510.52 v hold3711/Y (BUFx2_ASAP7_75t_R)\r\n  30.05 7540.57 v hold3422/Y (BUFx2_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  17.31 7592.60 v hold4909/Y (BUFx2_ASAP7_75t_R)\r\n  17.42 7610.02 v hold3002/Y (BUFx2_ASAP7_75t_R)\r\n  17.51 7627.53 v hold4910/Y (BUFx2_ASAP7_75t_R)\r\n  17.30 7644.84 v hold2684/Y (BUFx2_ASAP7_75t_R)\r\n  16.93 7661.77 v hold4911/Y (BUFx2_ASAP7_75t_R)\r\n  15.77 7677.54 v hold3003/Y (BUFx2_ASAP7_75t_R)\r\n  14.70 7692.24 v hold4912/Y (BUFx2_ASAP7_75t_R)\r\n  27.90 7720.14 v hold3423/Y (BUFx2_ASAP7_75t_R)\r\n  56.26 7776.40 v wire3837/Y (BUFx16f_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  41.42 7889.00 ^ wire3756/Y (BUFx16f_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  48.71 8029.36 v wire3438/Y (BUFx12f_ASAP7_75t_R)\r\n  70.54 8099.90 v wire3437/Y (BUFx16f_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n  29.19 8275.99 v max_length2710/Y (BUFx12f_ASAP7_75t_R)\r\n  38.04 8314.04 v wire2709/Y (BUFx16f_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  40.95 8641.07 ^ max_cap481/Y (BUFx10_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n        8671.92   data arrival time\r\n\r\n8500.00 8500.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n 201.71 8701.71   clock network delay (propagated)\r\n -10.00 8691.71   clock uncertainty\r\n   0.00 8691.71   clock reconvergence pessimism\r\n        8691.71 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  15.71 8707.42   library setup time\r\n        8707.42   data required time\r\n---------------------------------------------------------\r\n        8707.42   data required time\r\n        -8671.92   data arrival time\r\n---------------------------------------------------------\r\n          35.50   slack (MET)\r\n```\r\n\r\n\r\nIf I strip away everything but the logic, I get:\r\n\r\n```\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n```\r\n\r\nThis is a delay of 70 levels of logic yielding 3445.12ps. The fanout of a number of these levels are in the 10-20 range.\r\n", "date": "2023-12-29T07:04:22Z"}, {"author": "oharboe", "role": "assistant", "message": "@precisionmoon FYI", "date": "2023-12-30T09:17:46Z"}, {"author": "maliberty", "role": "assistant", "message": "The reported clock skew from sta considers only ff that have a path between them.", "date": "2023-12-30T15:50:54Z"}], "date": "2023-12-29T07:04:22Z", "category": "Runtime", "subcategory": "Clock skew issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4420", "id": 4420, "title": "Report total number of paths vs. number of failing path", "author": "lustefan97", "description": "I was wondering if there was a way to quickly summarize the ratio between the number of paths and number of failing paths (with regard to timing) using OpenSTA. I know it can report the slack in each path in a detailled manner, but I would like to have a report in the vein of : \"Here is the number of paths that the design has that needs to be tested for timing vs. the number of path that failed the test\"", "content": [{"author": "lustefan97", "role": "user", "message": "I was wondering if there was a way to quickly summarize the ratio between the number of paths and number of failing paths (with regard to timing) using OpenSTA. I know it can report the slack in each path in a detailled manner, but I would like to have a report in the vein of : \"Here is the number of paths that the design has that needs to be tested for timing vs. the number of path that failed the test\"", "date": "2023-12-20T15:52:12Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't see an easy way as the number of paths is exponential.  How would you use the result?\r\n\r\n@tspyrou any thoughts?", "date": "2023-12-20T17:28:48Z"}, {"author": "oharboe", "role": "assistant", "message": "@lustefan97 Could this be a use-case for timing histogram(supported in OpenROAD under Charts).", "date": "2023-12-21T08:51:44Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that to get the histograms you have to have qt charts installed.   During cmake you should get a message like \"Charts widget is enabled\" and not \"Charts widget is not enabled\"", "date": "2023-12-21T16:18:58Z"}, {"author": "maliberty", "role": "assistant", "message": "> It is just a shame that it is so out if the way, I forget that we do... Can it be moved to the tabs where clocktree, hierarchy, etc. is?\r\n\r\nIt is a docking window the same as all the others and can be position wherever you like.", "date": "2023-12-22T00:29:36Z"}, {"author": "maliberty", "role": "assistant", "message": "> Anyway: I think it would be great if this feature could be made more available out of the box and not hidden away behind \"cmake magic\" and curious defaults.\r\n\r\nIt is on by default, but qtcharts is not available for centos7 and so can't be assumed.", "date": "2023-12-22T00:31:11Z"}, {"author": "oharboe", "role": "assistant", "message": "A less anaemic slack histogram example:\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/aes/config.mk cts\r\n```\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/aes/config.mk gui_cts\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1caeb16b-836f-4ae5-b5a6-6b235791ab90)\r\n", "date": "2023-12-22T08:25:21Z"}, {"author": "lustefan97", "role": "assistant", "message": "@maliberty @oharboe Ok so I updated my OpenROAD to the latest version while having QT chart installed and enabled. After loading a database in that I knew had reported a slack, I tried to make a timing chart but resulted in the GUI crashing. \r\n\r\nI got a warning telling me that timing data was not stored  in the database and must be loaded separately if needed, are they not stored in the .odb ? Is the .odb file only \"geometric\" (would not be surprising since a .lef and .def files are needed), even if .lib files and RC rules have been used to produce the final result ?", "date": "2023-12-22T15:04:04Z"}, {"author": "maliberty", "role": "assistant", "message": "@AcKoucher FYI", "date": "2023-12-22T18:05:50Z"}, {"author": "oharboe", "role": "assistant", "message": "@AcKoucher Just one more example of where the horizontal labels are gone completely:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7fa91044-d0df-4ffe-84b2-b5a264d959db)\r\n", "date": "2023-12-27T11:19:42Z"}, {"author": "lustefan97", "role": "assistant", "message": "@oharboe @maliberty I have a quick but important question, right now I run my TCL scripts on a device that has no GUI, how would I need to proceed if I wanted to design a chip on it using OpenROAD but then move the results and generate the histogram on another computer (capable of opening a GUI).\r\n\r\nI ran a test script in which I saved the design in a .odb file and the timing results from OpenSTA in a .sdf file, but when I loaded the .odb back in another GUI session (as well as the .sdf file using `read_sdf`), multiple warnings were raised during loading and no histogram was created...", "date": "2023-12-27T19:37:28Z"}], "date": "2023-12-20T15:52:12Z", "category": "Feature Request", "subcategory": "Reporting enhancement", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4445", "id": 4445, "title": "Creating a mock 8192x64 SRAM for megaboom", "author": "oharboe", "description": "I'm trying to create a mock SRAM for the L2 in https://github.com/The-OpenROAD-Project/megaboom\r\n\r\nHere is the behavioral model:\r\n\r\n```verilog\r\nmodule cc_banks_8192x64(\r\n  input  [12:0] RW0_addr,\r\n  input         RW0_en,\r\n                RW0_clk,\r\n                RW0_wmode,\r\n  input  [63:0] RW0_wdata,\r\n  output [63:0] RW0_rdata\r\n);\r\n\r\n  reg [63:0] Memory[0:8191];\r\n  reg [12:0] _RW0_raddr_d0;\r\n  reg        _RW0_ren_d0;\r\n  reg        _RW0_rmode_d0;\r\n  always @(posedge RW0_clk) begin\r\n    _RW0_raddr_d0 <= RW0_addr;\r\n    _RW0_ren_d0 <= RW0_en;\r\n    _RW0_rmode_d0 <= RW0_wmode;\r\n    if (RW0_en & RW0_wmode)\r\n      Memory[RW0_addr] <= RW0_wdata;\r\n  end // always @(posedge)\r\n  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 64'bx;\r\nendmodule\r\n```\r\n\r\n`8192 rows x 64 bits = 5*10^5 bits`. This yields `2.7*10^6` instances. At CORE_UTILIZATION=40%, this yields the following floorplan 640um * 1400um.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c86a5532-5e36-4b32-a3aa-5bbf0f4396e1)\r\n\r\nThe build times for this module become prohibitive. Synthesis is ca. 6000s, 30000s for global placement, and at least as long for CTS. So I really don't want to run through more than the floorplan and at that point create an abstract.\r\n\r\nI have some work in progress where I can mock a smaller area: https://github.com/The-OpenROAD-Project/megaboom/pull/9\r\n\r\nI don't have a way to mock a realistic clock period for the .lib file that comes out of the floorplan, nor do I know exactly what is realistic for such an SRAM on ASAP7.\r\n\r\n90ps minimum clock period for a 8192x64 SRAM seems pretty good...\r\n\r\n```\r\n>>> report_clock_min_period\r\nRW0_clk period min = 89.24 fmax 11206.30\r\n```\r\n\r\nI can't reconcile the min period of 90ps with what is observed in Timing Report:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f397f170-1746-4e77-8dfc-f2fd34ef50d7)\r\n\r\nI wonder if the .lib file that comes out of the floorplan can be useful in architectural exploration.\r\n\r\nThis raises a rather open ended question...\r\n\r\nQ: How does the .lib file that comes out of the floorplan compare to a realistic .lib file?\r\n\r\nIs it a \"simple matter of scaling\" the .lib file, like I can scale area to get something that is something that is in the range of what I want in my architectural exploration?\r\n\r\n\r\n\r\n\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm trying to create a mock SRAM for the L2 in https://github.com/The-OpenROAD-Project/megaboom\r\n\r\nHere is the behavioral model:\r\n\r\n```verilog\r\nmodule cc_banks_8192x64(\r\n  input  [12:0] RW0_addr,\r\n  input         RW0_en,\r\n                RW0_clk,\r\n                RW0_wmode,\r\n  input  [63:0] RW0_wdata,\r\n  output [63:0] RW0_rdata\r\n);\r\n\r\n  reg [63:0] Memory[0:8191];\r\n  reg [12:0] _RW0_raddr_d0;\r\n  reg        _RW0_ren_d0;\r\n  reg        _RW0_rmode_d0;\r\n  always @(posedge RW0_clk) begin\r\n    _RW0_raddr_d0 <= RW0_addr;\r\n    _RW0_ren_d0 <= RW0_en;\r\n    _RW0_rmode_d0 <= RW0_wmode;\r\n    if (RW0_en & RW0_wmode)\r\n      Memory[RW0_addr] <= RW0_wdata;\r\n  end // always @(posedge)\r\n  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 64'bx;\r\nendmodule\r\n```\r\n\r\n`8192 rows x 64 bits = 5*10^5 bits`. This yields `2.7*10^6` instances. At CORE_UTILIZATION=40%, this yields the following floorplan 640um * 1400um.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c86a5532-5e36-4b32-a3aa-5bbf0f4396e1)\r\n\r\nThe build times for this module become prohibitive. Synthesis is ca. 6000s, 30000s for global placement, and at least as long for CTS. So I really don't want to run through more than the floorplan and at that point create an abstract.\r\n\r\nI have some work in progress where I can mock a smaller area: https://github.com/The-OpenROAD-Project/megaboom/pull/9\r\n\r\nI don't have a way to mock a realistic clock period for the .lib file that comes out of the floorplan, nor do I know exactly what is realistic for such an SRAM on ASAP7.\r\n\r\n90ps minimum clock period for a 8192x64 SRAM seems pretty good...\r\n\r\n```\r\n>>> report_clock_min_period\r\nRW0_clk period min = 89.24 fmax 11206.30\r\n```\r\n\r\nI can't reconcile the min period of 90ps with what is observed in Timing Report:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f397f170-1746-4e77-8dfc-f2fd34ef50d7)\r\n\r\nI wonder if the .lib file that comes out of the floorplan can be useful in architectural exploration.\r\n\r\nThis raises a rather open ended question...\r\n\r\nQ: How does the .lib file that comes out of the floorplan compare to a realistic .lib file?\r\n\r\nIs it a \"simple matter of scaling\" the .lib file, like I can scale area to get something that is something that is in the range of what I want in my architectural exploration?\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-12-26T11:06:06Z"}, {"author": "maliberty", "role": "assistant", "message": "I believe the min clock period is based on internal reg-to-reg paths and not reg-IO paths as shown above.\r\n\r\nUsing a memory generator is a better idea as this will only get worse the bigger you make the rams.  ", "date": "2023-12-26T15:55:04Z"}, {"author": "maliberty", "role": "assistant", "message": "Expecting to build to build 2.5M instance blocks quickly will be very difficult in any tool.", "date": "2023-12-26T21:25:49Z"}, {"author": "oharboe", "role": "assistant", "message": "Trying a different approach... Since all I care about is to mock area and timing(creating realistic SRAMs is a separate concern that I'm not tackling now), it doens't matter what the Verilog actually does. Below I have reduced the size of the Memory while I'm using all the address bits.\r\n\r\n```\r\nmodule cc_banks_8192x64(\r\n  input  [12:0] RW0_addr,\r\n  input         RW0_en,\r\n                RW0_clk,\r\n                RW0_wmode,\r\n  input  [63:0] RW0_wdata,\r\n  output [63:0] RW0_rdata\r\n);\r\n\r\n  reg [63:0] Memory[0:127]; // Smaller memory array\r\n  reg [12:0] _RW0_raddr_d0;\r\n  reg        _RW0_ren_d0;\r\n  reg        _RW0_rmode_d0;\r\n  // XOR high and low bits of the address to use all bits\r\n  wire [6:0] effective_addr = RW0_addr[6:0] ^ RW0_addr[12:7];\r\n  always @(posedge RW0_clk) begin\r\n    _RW0_raddr_d0 <= effective_addr;\r\n    _RW0_ren_d0 <= RW0_en;\r\n    _RW0_rmode_d0 <= RW0_wmode;\r\n    if (RW0_en & RW0_wmode)\r\n      Memory[effective_addr] <= RW0_wdata;\r\n  end // always @(posedge)\r\n  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 64'bx;\r\nendmodule\r\n```\r\n\r\nAfter a few minutes, I have some area and timing for a mock SRAM that should allow me to see what else is going on in this design...\r\n\r\nIf I want more aggressive timing, I can adjust the Verilog to be even simpler. Area can be scaled up and down, using the mock_area feature.\r\n\r\nAfter CTS:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e59c2ccd-b58f-4940-8c8c-96bf9286e638)\r\n\r\n", "date": "2023-12-26T22:37:53Z"}, {"author": "oharboe", "role": "assistant", "message": "So with the above approach, I can easily mock large SRAMs and I also have a way to mock the area.\r\n\r\nThis allows me to set aside the SRAM concerns to investigate what else is going on in the design and learn something interesting.\r\n\r\nSetting aside the SRAM concern, I can see a lot of logic and high fanout in the timing path for the FpPipeline in the megaboom design.\r\n\r\nWhat timing closure does this have in commercial tools at a small node? It seems like a lot to ask that PDK and improved post synthesis stages are going to get this to GHz frequencies. Could it be a synthesis problem? Perhaps this version of MegaBoom is missing a pipeline stage or two here? Could there be some structure that has to be specialized in floating point units just like SRAM must be?\r\n\r\nFrom `make DESIGN_NAME=FpPipeline gui_place`:\r\n\r\n```\r\n>>> report_checks -rise_from io_flush_pipeline -rise_through input504/A -rise_through input504/Y -rise_through wire12207/A -rise_through wire12207/Y -rise_through max_length12204/A -rise_through max_length12204/Y -rise_through fp_issue_unit/_46407_/B -fall_through fp_issue_unit/_46407_/Y -fall_through fp_issue_unit/_46408_/B -rise_through fp_issue_unit/_46408_/Y -rise_through max_length4078/A -rise_through max_length4078/Y -rise_through fp_issue_unit/_46439_/C -rise_through fp_issue_unit/_46439_/Y -rise_through fp_issue_unit/_46571_/A -fall_through fp_issue_unit/_46571_/Y -fall_through fp_issue_unit/_47883_/A -rise_through fp_issue_unit/_47883_/Y -rise_through fp_issue_unit/_47884_/B -rise_through fp_issue_unit/_47884_/Y -rise_through fp_issue_unit/_47885_/C -rise_through fp_issue_unit/_47885_/Y -rise_through fp_issue_unit/_47886_/D -rise_through fp_issue_unit/_47886_/Y -rise_through fp_issue_unit/_47887_/C -rise_through fp_issue_unit/_47887_/Y -rise_through fp_issue_unit/_47888_/C ...\r\nStartpoint: io_flush_pipeline (input port clocked by clock_vir)\r\nEndpoint: fp_issue_unit/_89827_\r\n          (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                  0.00    0.00    0.00   clock clock_vir (rise edge)\r\n                        400.00  400.00   clock network delay (ideal)\r\n                        300.00  700.00 ^ input external delay\r\n     1    0.79    0.00    0.00  700.00 ^ io_flush_pipeline (in)\r\n                                         io_flush_pipeline (net)\r\n                  0.06    0.02  700.02 ^ input504/A (BUFx2_ASAP7_75t_R)\r\n     1    4.55   17.58   15.46  715.48 ^ input504/Y (BUFx2_ASAP7_75t_R)\r\n                                         net504 (net)\r\n                 17.89    1.29  716.77 ^ wire12207/A (BUFx16f_ASAP7_75t_R)\r\n    24   53.86   28.61   18.16  734.93 ^ wire12207/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net12207 (net)\r\n                 83.92   25.50  760.43 ^ max_length12204/A (BUFx16f_ASAP7_75t_R)\r\n    32   49.26   12.98   29.13  789.57 ^ max_length12204/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net12204 (net)\r\n                220.31   69.86  859.42 ^ fp_issue_unit/_46407_/B (AOI211x1_ASAP7_75t_R)\r\n     3    3.74   59.98   45.43  904.85 v fp_issue_unit/_46407_/Y (AOI211x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44478_ (net)\r\n                 59.98    0.21  905.07 v fp_issue_unit/_46408_/B (NAND2x2_ASAP7_75t_R)\r\n    26   33.42  134.87   68.93  973.99 ^ fp_issue_unit/_46408_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44479_ (net)\r\n                134.89    1.12  975.12 ^ max_length4078/A (BUFx16f_ASAP7_75t_R)\r\n    22   31.72   20.83   33.87 1008.99 ^ max_length4078/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net4078 (net)\r\n                 22.31    2.51 1011.50 ^ fp_issue_unit/_46439_/C (AND4x2_ASAP7_75t_R)\r\n     5    7.55   36.45   46.10 1057.60 ^ fp_issue_unit/_46439_/Y (AND4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44510_ (net)\r\n                 36.56    1.15 1058.76 ^ fp_issue_unit/_46571_/A (NAND2x2_ASAP7_75t_R)\r\n     4    3.26   16.65   13.84 1072.59 v fp_issue_unit/_46571_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44641_ (net)\r\n                 16.66    0.11 1072.70 v fp_issue_unit/_47883_/A (INVx1_ASAP7_75t_R)\r\n     2    1.33   12.37   10.21 1082.91 ^ fp_issue_unit/_47883_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45951_ (net)\r\n                 12.37    0.02 1082.93 ^ fp_issue_unit/_47884_/B (AND4x2_ASAP7_75t_R)\r\n     3    5.96   30.73   40.69 1123.62 ^ fp_issue_unit/_47884_/Y (AND4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45952_ (net)\r\n                 30.87    1.14 1124.77 ^ fp_issue_unit/_47885_/C (AND3x4_ASAP7_75t_R)\r\n     3    5.79   18.52   31.17 1155.94 ^ fp_issue_unit/_47885_/Y (AND3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45953_ (net)\r\n                 19.20    1.89 1157.83 ^ fp_issue_unit/_47886_/D (AND4x2_ASAP7_75t_R)\r\n     3    5.98   31.11   42.40 1200.23 ^ fp_issue_unit/_47886_/Y (AND4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45954_ (net)\r\n                 31.45    1.82 1202.06 ^ fp_issue_unit/_47887_/C (AND3x4_ASAP7_75t_R)\r\n     3    5.71   17.88   31.40 1233.46 ^ fp_issue_unit/_47887_/Y (AND3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45955_ (net)\r\n                 18.17    1.22 1234.68 ^ fp_issue_unit/_47888_/C (AND3x4_ASAP7_75t_R)\r\n     2    5.25   17.00   29.05 1263.73 ^ fp_issue_unit/_47888_/Y (AND3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45956_ (net)\r\n                 17.11    0.76 1264.49 ^ fp_issue_unit/_47889_/B (NAND2x2_ASAP7_75t_R)\r\n     3    3.85   15.69   11.87 1276.36 v fp_issue_unit/_47889_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45957_ (net)\r\n                 15.84    0.84 1277.19 v fp_issue_unit/_47890_/B (OR2x2_ASAP7_75t_R)\r\n     2    3.01   13.61   25.21 1302.41 v fp_issue_unit/_47890_/Y (OR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45958_ (net)\r\n                 13.61    0.09 1302.50 v fp_issue_unit/_47907_/C (OR3x4_ASAP7_75t_R)\r\n   105   99.41  170.82   89.41 1391.91 v fp_issue_unit/_47907_/Y (OR3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45975_ (net)\r\n                172.27    9.22 1401.13 v fp_issue_unit/_47909_/C (NAND3x2_ASAP7_75t_R)\r\n     4    5.43   62.45   62.61 1463.73 ^ fp_issue_unit/_47909_/Y (NAND3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45977_ (net)\r\n                 62.45    0.14 1463.88 ^ fp_issue_unit/_47962_/A (NAND3x2_ASAP7_75t_R)\r\n     2    3.47   24.56   17.68 1481.56 v fp_issue_unit/_47962_/Y (NAND3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46030_ (net)\r\n                 24.59    0.45 1482.00 v fp_issue_unit/_47966_/B (OR3x2_ASAP7_75t_R)\r\n     3    3.30   17.68   37.03 1519.04 v fp_issue_unit/_47966_/Y (OR3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46034_ (net)\r\n                 17.73    0.51 1519.55 v fp_issue_unit/_47971_/C (OR4x2_ASAP7_75t_R)\r\n     7   20.75   71.34   71.67 1591.22 v fp_issue_unit/_47971_/Y (OR4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46039_ (net)\r\n                 71.41    1.35 1592.57 v fp_issue_unit/_47972_/A (CKINVDCx16_ASAP7_75t_R)\r\n    32   25.55   28.08   16.95 1609.51 ^ fp_issue_unit/_47972_/Y (CKINVDCx16_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46040_ (net)\r\n                 28.08    0.03 1609.55 ^ fp_issue_unit/_47975_/B (OR3x4_ASAP7_75t_R)\r\n     4    5.14   14.79   26.50 1636.05 ^ fp_issue_unit/_47975_/Y (OR3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46043_ (net)\r\n                 15.26    1.43 1637.47 ^ fp_issue_unit/_47976_/B (OR2x2_ASAP7_75t_R)\r\n     2    2.90   13.93   21.14 1658.61 ^ fp_issue_unit/_47976_/Y (OR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46044_ (net)\r\n                 13.93    0.13 1658.74 ^ fp_issue_unit/_47980_/B (OR3x2_ASAP7_75t_R)\r\n     2    3.24   14.84   19.30 1678.04 ^ fp_issue_unit/_47980_/Y (OR3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46048_ (net)\r\n                 14.93    0.63 1678.68 ^ fp_issue_unit/_47985_/C (OR4x2_ASAP7_75t_R)\r\n    21   25.71   98.46   51.90 1730.57 ^ fp_issue_unit/_47985_/Y (OR4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46053_ (net)\r\n                 98.46    0.42 1730.99 ^ load_slew1306/A (BUFx16f_ASAP7_75t_R)\r\n    28   30.02   16.08   30.35 1761.34 ^ load_slew1306/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1306 (net)\r\n                 17.27    1.57 1762.91 ^ fp_issue_unit/_48140_/B (NAND2x1_ASAP7_75t_R)\r\n     2    1.81   14.47   11.73 1774.64 v fp_issue_unit/_48140_/Y (NAND2x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06668_ (net)\r\n                 14.47    0.03 1774.67 v fp_issue_unit/_48141_/B (OR3x2_ASAP7_75t_R)\r\n     3    3.52   18.24   35.07 1809.73 v fp_issue_unit/_48141_/Y (OR3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06669_ (net)\r\n                 18.24    0.11 1809.84 v fp_issue_unit/_48142_/D (OR4x2_ASAP7_75t_R)\r\n    13   37.62  133.19   75.35 1885.19 v fp_issue_unit/_48142_/Y (OR4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06670_ (net)\r\n                133.22    1.49 1886.68 v load_slew1217/A (BUFx16f_ASAP7_75t_R)\r\n    25   39.76   25.02   40.53 1927.21 v load_slew1217/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1217 (net)\r\n                 25.03    0.48 1927.69 v fp_issue_unit/_48144_/B (AND2x2_ASAP7_75t_R)\r\n     3    3.40   13.73   25.88 1953.57 v fp_issue_unit/_48144_/Y (AND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06672_ (net)\r\n                 13.73    0.05 1953.63 v fp_issue_unit/_48145_/B (NOR2x2_ASAP7_75t_R)\r\n     3    2.92   20.73   12.02 1965.65 ^ fp_issue_unit/_48145_/Y (NOR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06673_ (net)\r\n                 20.73    0.02 1965.66 ^ fp_issue_unit/_48146_/A2 (AOI21x1_ASAP7_75t_R)\r\n     6   10.17   53.11   27.64 1993.30 v fp_issue_unit/_48146_/Y (AOI21x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06674_ (net)\r\n                 53.17    1.07 1994.37 v fp_issue_unit/_65458_/A (NAND2x2_ASAP7_75t_R)\r\n     7   16.17   72.15   46.53 2040.90 ^ fp_issue_unit/_65458_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_22642_ (net)\r\n                 72.97    4.40 2045.30 ^ wire1108/A (BUFx16f_ASAP7_75t_R)\r\n    30   37.30   21.35   27.72 2073.02 ^ wire1108/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1108 (net)\r\n                 75.70   23.26 2096.27 ^ fp_issue_unit/_65465_/A (NAND2x2_ASAP7_75t_R)\r\n    13   21.19   71.00   42.21 2138.48 v fp_issue_unit/_65465_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_22649_ (net)\r\n                 71.33    2.88 2141.36 v load_slew1091/A (BUFx16f_ASAP7_75t_R)\r\n    25   35.92   17.57   30.98 2172.34 v load_slew1091/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1091 (net)\r\n                 78.63   24.44 2196.78 v fp_issue_unit/_67437_/B (AO21x2_ASAP7_75t_R)\r\n     1    4.12   17.15   34.88 2231.66 v fp_issue_unit/_67437_/Y (AO21x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46219_ (net)\r\n                 17.44    1.21 2232.86 v fp_issue_unit/_89797_/A (FAx1_ASAP7_75t_R)\r\n     1    6.02  144.25  107.03 2339.89 v fp_issue_unit/_89797_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46223_ (net)\r\n                144.48    3.10 2343.00 v fp_issue_unit/_89798_/A (FAx1_ASAP7_75t_R)\r\n     1    2.72   73.82   58.15 2401.14 ^ fp_issue_unit/_89798_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46254_ (net)\r\n     1    1.06   45.86   22.62 2423.76 v fp_issue_unit/_89798_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00644_ (net)\r\n                 45.86    0.06 2423.83 v fp_issue_unit/_67461_/A (INVx1_ASAP7_75t_R)\r\n     1    2.41   25.51   20.41 2444.24 ^ fp_issue_unit/_67461_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46226_ (net)\r\n                 25.51    0.10 2444.34 ^ fp_issue_unit/_89799_/B (FAx1_ASAP7_75t_R)\r\n     1    1.65   36.10   24.28 2468.62 v fp_issue_unit/_89799_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46261_ (net)\r\n     1    0.86   37.25   19.10 2487.72 ^ fp_issue_unit/_89799_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46232_ (net)\r\n                 37.25    0.03 2487.75 ^ fp_issue_unit/_67462_/A (INVx1_ASAP7_75t_R)\r\n     1    2.56   21.51   16.75 2504.50 v fp_issue_unit/_67462_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46229_ (net)\r\n                 21.51    0.24 2504.74 v fp_issue_unit/_89800_/A (FAx1_ASAP7_75t_R)\r\n     1    1.68   39.83   26.98 2531.72 ^ fp_issue_unit/_89800_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46264_ (net)\r\n     1    0.90   25.69   17.11 2548.83 v fp_issue_unit/_89800_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46244_ (net)\r\n                 25.69    0.03 2548.86 v fp_issue_unit/_89787_/A (INVx1_ASAP7_75t_R)\r\n     1    2.56   21.35   16.40 2565.26 ^ fp_issue_unit/_89787_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46231_ (net)\r\n                 21.36    0.17 2565.43 ^ fp_issue_unit/_89803_/B (FAx1_ASAP7_75t_R)\r\n     1    2.30   44.45   26.10 2591.54 v fp_issue_unit/_89803_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46267_ (net)\r\n     1    0.78   39.67   20.18 2611.72 ^ fp_issue_unit/_89803_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46249_ (net)\r\n                 39.67    0.01 2611.73 ^ fp_issue_unit/_89786_/A (INVx1_ASAP7_75t_R)\r\n     1    1.74   17.87   14.14 2625.88 v fp_issue_unit/_89786_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46243_ (net)\r\n                 17.87    0.04 2625.92 v fp_issue_unit/_89804_/CI (FAx1_ASAP7_75t_R)\r\n     1    0.76   33.65   19.73 2645.65 ^ fp_issue_unit/_89804_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00646_ (net)\r\n     1    0.74   28.73   15.02 2660.67 v fp_issue_unit/_89804_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00645_ (net)\r\n                 28.73    0.01 2660.68 v fp_issue_unit/_67482_/A (INVx1_ASAP7_75t_R)\r\n     1    1.02   13.34   11.32 2672.00 ^ fp_issue_unit/_67482_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46248_ (net)\r\n                 13.34    0.02 2672.02 ^ fp_issue_unit/_89817_/B (HAxp5_ASAP7_75t_R)\r\n     1    0.78   21.67   12.77 2684.79 v fp_issue_unit/_89817_/CON (HAxp5_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00647_ (net)\r\n                 21.67    0.01 2684.80 v fp_issue_unit/_89769_/A (INVx1_ASAP7_75t_R)\r\n     1    2.06   17.70   13.87 2698.68 ^ fp_issue_unit/_89769_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46269_ (net)\r\n                 17.70    0.03 2698.70 ^ fp_issue_unit/_89811_/A (FAx1_ASAP7_75t_R)\r\n     2    2.91   47.02   26.02 2724.72 v fp_issue_unit/_89811_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46274_ (net)\r\n                 47.02    0.08 2724.80 v fp_issue_unit/_89814_/A (FAx1_ASAP7_75t_R)\r\n     1    1.69   43.76   33.26 2758.06 ^ fp_issue_unit/_89814_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_04309_ (net)\r\n                 43.76    0.01 2758.07 ^ fp_issue_unit/_48635_/B (XOR2x1_ASAP7_75t_R)\r\n     1    1.16   22.73   24.82 2782.89 ^ fp_issue_unit/_48635_/Y (XOR2x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_07145_ (net)\r\n                 22.73    0.02 2782.92 ^ fp_issue_unit/_48636_/B (NAND2x1_ASAP7_75t_R)\r\n     2    1.32   14.09   11.34 2794.26 v fp_issue_unit/_48636_/Y (NAND2x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_07146_ (net)\r\n                 14.09    0.02 2794.27 v fp_issue_unit/_48637_/B (OR2x2_ASAP7_75t_R)\r\n     3    2.18   11.43   23.11 2817.38 v fp_issue_unit/_48637_/Y (OR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_07147_ (net)\r\n                 11.43    0.05 2817.43 v fp_issue_unit/_48639_/C (OR3x1_ASAP7_75t_R)\r\n     1    0.71   10.68   24.49 2841.92 v fp_issue_unit/_48639_/Y (OR3x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00000_ (net)\r\n                 10.68    0.01 2841.93 v fp_issue_unit/_89827_/D (DFFHQNx2_ASAP7_75t_R)\r\n                               2841.93   data arrival time\r\n\r\n                  0.00 1500.00 1500.00   clock clock (rise edge)\r\n                          0.00 1500.00   clock network delay (ideal)\r\n                        -10.00 1490.00   clock uncertainty\r\n                          0.00 1490.00   clock reconvergence pessimism\r\n                               1490.00 ^ fp_issue_unit/_89827_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n                         -7.35 1482.65   library setup time\r\n                               1482.65   data required time\r\n-----------------------------------------------------------------------------\r\n                               1482.65   data required time\r\n                               -2841.93   data arrival time\r\n-----------------------------------------------------------------------------\r\n                               -1359.27   slack (VIOLATED)\r\n\r\n\r\n```\r\n ", "date": "2023-12-27T09:14:35Z"}], "date": "2023-12-26T11:06:06Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3943", "id": 3943, "title": "How to develop the \" setRC.tcl \"  file from a captable for a foreign PDK ?", "author": "faisaladilquadery", "description": "I have a foreign PDK which I want to invoke in openroad. But for that I need to develop the setRC.tcl file. How do I accurately input the resistance and capacitance for the setRC.tcl file . \r\n\r\nN.B : I have a captable for the pdk\r\nI can also generate a spef file from Innovus for the PDK", "content": [{"author": "faisaladilquadery", "role": "user", "message": "I have a foreign PDK which I want to invoke in openroad. But for that I need to develop the setRC.tcl file. How do I accurately input the resistance and capacitance for the setRC.tcl file . \r\n\r\nN.B : I have a captable for the pdk\r\nI can also generate a spef file from Innovus for the PDK", "date": "2023-09-05T04:21:21Z"}, {"author": "maliberty", "role": "assistant", "message": "@vvbandeira @luarss do we have any documentation for correlateRC ?\r\n\r\nNote that if you LEF res & cap has values you can use those without a setRC to get started.", "date": "2023-09-05T14:07:54Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@faisaladilquadery \r\nWe have a section on the `setRC.tcl` file configuration in our platform bring-up documentation.\r\nhttps://openroad-flow-scripts.readthedocs.io/en/latest/contrib/PlatformBringUp.html#setrc-configuration", "date": "2023-09-05T16:38:58Z"}, {"author": "faisaladilquadery", "role": "assistant", "message": "Thankyou! @maliberty @vvbandeira . I have used the lef file in replacement of the setRC.tcl file . But I am getting **net delay** mismatch between the same path with the same cells for Innovus and OpenRoad. Any Idea why ?", "date": "2023-09-07T03:40:38Z"}, {"author": "faisaladilquadery", "role": "assistant", "message": "Thankyou @maliberty I have used the the RCX flow you  mentioned to generate a rc tech file for my pdk and used the tech file to generate a spef in ORFS to obtain a more accurate RC.", "date": "2023-10-02T04:27:30Z"}, {"author": "b224hisl", "role": "assistant", "message": "> set_wire_rc is used to set a default layer to use when doing placement based parasitic estimation. There is no meaning to multiple layers here as there would be no way to divide up the estimate meaningfully.\r\n\r\nSo I'm confused why it needs to set jsut one layer, do you mean only placement based parasitic estimation is related to `set_wire_rc` ? If there' s no way to divide up the estimate meaningfully, the layer can be set randomly?", "date": "2023-12-16T12:57:32Z"}], "date": "2023-09-05T04:21:21Z", "category": "Configuration", "subcategory": "Setting up foreign PDK", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4269", "id": 4269, "title": "How to add new classes/structures to OpenROAD's schema?", "author": "fgaray", "description": "Hello OpenRoad devs,\r\n\r\nI am following https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3619 to implement a structure to share scan chain data between OpenROAD's components but I am blocked at an compile issue.\r\n\r\nSee: https://github.com/fgaray/OpenROAD/tree/ctl_db, path src/odb/src/codeGenerator/schema/scan\r\n\r\nI am adding 3 new *.json files: dbScanInst.json dbScanPartition.json dbScanPin.json\r\n\r\nIn dbScanPin.json I am defining an \"union\" of dbBTerm and dbITerm\r\n\r\nIn dbScanPartition.json I am trying to use dbScanPin for my \"start\" and \"stop\" fields.\r\n\r\n\r\nI am running the ./generate script in src/odb/src/codeGenerator to generate the C++ code but I am getting the following error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/fc8774d8-b742-4407-86ef-e877d347f5d3)\r\n\r\nLooks like it is trying to use dbScanPin in the private dbScanPartition.h class, but if I change it to _dbScanPin in my  dbScanPartition.json, then it fails in the public class definition in db.h.\r\n\r\nIs there an step that I am missing or maybe some config?\r\n\r\nThanks!\r\n", "content": [{"author": "fgaray", "role": "user", "message": "Hello OpenRoad devs,\r\n\r\nI am following https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3619 to implement a structure to share scan chain data between OpenROAD's components but I am blocked at an compile issue.\r\n\r\nSee: https://github.com/fgaray/OpenROAD/tree/ctl_db, path src/odb/src/codeGenerator/schema/scan\r\n\r\nI am adding 3 new *.json files: dbScanInst.json dbScanPartition.json dbScanPin.json\r\n\r\nIn dbScanPin.json I am defining an \"union\" of dbBTerm and dbITerm\r\n\r\nIn dbScanPartition.json I am trying to use dbScanPin for my \"start\" and \"stop\" fields.\r\n\r\n\r\nI am running the ./generate script in src/odb/src/codeGenerator to generate the C++ code but I am getting the following error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/fc8774d8-b742-4407-86ef-e877d347f5d3)\r\n\r\nLooks like it is trying to use dbScanPin in the private dbScanPartition.h class, but if I change it to _dbScanPin in my  dbScanPartition.json, then it fails in the public class definition in db.h.\r\n\r\nIs there an step that I am missing or maybe some config?\r\n\r\nThanks!\r\n", "date": "2023-11-15T18:46:43Z"}, {"author": "maliberty", "role": "assistant", "message": "Use dbId to store references to other db objects\r\n```\r\n       \"name\": \"start\",\r\n-      \"type\": \"dbScanPin\"\r\n+      \"type\": \"dbId<dbScanPin>\"\r\n     },\r\n     {\r\n       \"name\": \"stop\",\r\n-      \"type\": \"dbScanPin\"\r\n+      \"type\": \"dbId<dbScanPin>\"\r\n     },\r\n```", "date": "2023-11-15T22:45:11Z"}, {"author": "fgaray", "role": "assistant", "message": "I forgot to close this issue, but the answer was given by @maliberty .\r\n\r\nWriting the custom setter was the way to go when implementing this.", "date": "2023-12-14T23:30:30Z"}], "date": "2023-11-15T18:46:43Z", "category": "Build", "subcategory": "Code generation issue", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4329", "id": 4329, "title": "Design area utilization seems misleading", "author": "TanjIsGray", "description": "I realized that size of my designs is not matching \"design area\" reported.  On the GUI view I can see my design uses a rectangular space of around 24 um2 (not including the halo) but\r\n\r\n    finish report_design_area\r\n    Design area 15 u^2 60% utilization.\r\n\r\nwas in the log.  So, that seems to mean that the macros placed totaled 15 um2 of space but packed into 24 um2 of silicon.  It is useful to know both numbers but I think the size of the space inside the halo is more practical to know.  It certainly seems that space would be the most likely expectation for the meaning of \"design area\".\r\n\r\nJust calling attention to this.  Not a bug, but users could be easily misled about what it means.", "content": [{"author": "TanjIsGray", "role": "user", "message": "I realized that size of my designs is not matching \"design area\" reported.  On the GUI view I can see my design uses a rectangular space of around 24 um2 (not including the halo) but\r\n\r\n    finish report_design_area\r\n    Design area 15 u^2 60% utilization.\r\n\r\nwas in the log.  So, that seems to mean that the macros placed totaled 15 um2 of space but packed into 24 um2 of silicon.  It is useful to know both numbers but I think the size of the space inside the halo is more practical to know.  It certainly seems that space would be the most likely expectation for the meaning of \"design area\".\r\n\r\nJust calling attention to this.  Not a bug, but users could be easily misled about what it means.", "date": "2023-11-30T07:05:45Z"}, {"author": "rovinski", "role": "assistant", "message": "This is standard terminology.\r\n\"Design area\": total area consumed by instances.\r\n\"Core area\": total area in which instances can be placed.\r\n\"Die area\": the total area of the chip.\r\nDie area >= core area >= design area. Design area utilization (the 60% in the above) is also always expressed as (design area)/(core area)", "date": "2023-11-30T07:20:47Z"}, {"author": "maliberty", "role": "assistant", "message": "By 'halo' do you mean the area between the core and the die area?", "date": "2023-12-02T04:56:51Z"}], "date": "2023-11-30T07:05:45Z", "category": "Query", "subcategory": "Terminology clarification", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4325", "id": 4325, "title": "place_pins positional arguments not supported", "author": "TanjIsGray", "description": "I see from chatter here that some folks use place_pins, but it seems not to work for me, with the error message showing in the title.  My io.tcl is:\r\n-----\r\n\r\nset leftPins {}\r\nforeach port [get_ports _l_*] {\r\n    lappend leftPins [get_property $port name]\r\n}\r\n\r\nset_io_pin_constraint -region left:* -pin_names $leftPins\r\n\r\nset_io_pin_constraint -region right:* -pin_names {\r\n    _r_h_in _r_g_in _r_f_in _r_e_rot25 _r_e_rot11 _r_e_rot06 _r_e_in\r\n    _r_d_in _r_c_in _r_l_in _r_a_rot22 _r_a_rot13 _r_a_rot02 _r_a_in\r\n    _r_KW0_in\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names {\r\n    _t_aCarryIn0 _t_aCarryIn1 _t_aCpropIn\r\n    _t_eCarryIn0 _t_eCarryIn1 _t_eCarryIn2 _t_eCpropIn\r\n}\r\n\r\nset_io_pin_constraint -region bottom:* -pin_names {\r\n    _b_aCarryOut0 _b_aCarryOut1 _b_aCpropOut\r\n    _b_eCarryOut0 _b_eCarryOut1 _b_eCarryOut2 _b_eCpropOut\r\n}\r\n\r\nplace_pins -hor_layers metal4 -ver_layers metal5 -min_distance_in_tracks 4\r\n---\r\n\r\nwhich works fine until I added the place_pins command.\r\n\r\nI also used M4 and M5 for layer names (ASAP7) since those are what the openroad -gui viewer shows.\r\n\r\nIs this command blocked by something else?  Is the track-multiplier not supported?\r\nThanks!", "content": [{"author": "TanjIsGray", "role": "user", "message": "I see from chatter here that some folks use place_pins, but it seems not to work for me, with the error message showing in the title.  My io.tcl is:\r\n-----\r\n\r\nset leftPins {}\r\nforeach port [get_ports _l_*] {\r\n    lappend leftPins [get_property $port name]\r\n}\r\n\r\nset_io_pin_constraint -region left:* -pin_names $leftPins\r\n\r\nset_io_pin_constraint -region right:* -pin_names {\r\n    _r_h_in _r_g_in _r_f_in _r_e_rot25 _r_e_rot11 _r_e_rot06 _r_e_in\r\n    _r_d_in _r_c_in _r_l_in _r_a_rot22 _r_a_rot13 _r_a_rot02 _r_a_in\r\n    _r_KW0_in\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names {\r\n    _t_aCarryIn0 _t_aCarryIn1 _t_aCpropIn\r\n    _t_eCarryIn0 _t_eCarryIn1 _t_eCarryIn2 _t_eCpropIn\r\n}\r\n\r\nset_io_pin_constraint -region bottom:* -pin_names {\r\n    _b_aCarryOut0 _b_aCarryOut1 _b_aCpropOut\r\n    _b_eCarryOut0 _b_eCarryOut1 _b_eCarryOut2 _b_eCpropOut\r\n}\r\n\r\nplace_pins -hor_layers metal4 -ver_layers metal5 -min_distance_in_tracks 4\r\n---\r\n\r\nwhich works fine until I added the place_pins command.\r\n\r\nI also used M4 and M5 for layer names (ASAP7) since those are what the openroad -gui viewer shows.\r\n\r\nIs this command blocked by something else?  Is the track-multiplier not supported?\r\nThanks!", "date": "2023-11-28T22:02:39Z"}, {"author": "maliberty", "role": "assistant", "message": "You might try the recent -annealing options.  @eder-matheus any further comments?", "date": "2023-11-28T22:06:46Z"}, {"author": "maliberty", "role": "assistant", "message": "Would you include a screen shot of what you are seeing?  Note that -min_distance means pin can be that close together at a minimum, not that they will necessarily be that close together if there is extra space available.", "date": "2023-11-28T22:57:10Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@TanjIsGray Do you have a reproducible you can share regarding the minimum distance not being respected? We have a bunch of unit tests with different minimum distance values, and all seem to work properly.", "date": "2023-11-29T00:09:07Z"}, {"author": "TanjIsGray", "role": "assistant", "message": "I can share the source, make and tcl.  These are not large, a few hundred lines of verilog.", "date": "2023-11-29T01:59:15Z"}], "date": "2023-11-28T22:02:39Z", "category": "Runtime", "subcategory": "Tool behavior issue", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4287", "id": 4287, "title": "OpenRCX query", "author": "faisaladilquadery", "description": "I just want to know if OpenRCX a engine integrated in OpenRoad or is it a RC signoff tool  like Cadence Quantas ", "content": [{"author": "faisaladilquadery", "role": "user", "message": "I just want to know if OpenRCX a engine integrated in OpenRoad or is it a RC signoff tool  like Cadence Quantas ", "date": "2023-11-20T03:14:54Z"}, {"author": "maliberty", "role": "assistant", "message": "It is integrated with OR but aspires to be signoff quality.  During optimization we use estimated parasitics.", "date": "2023-11-20T03:16:46Z"}, {"author": "faisaladilquadery", "role": "assistant", "message": "thankyou @maliberty ", "date": "2023-11-24T08:33:55Z"}], "date": "2023-11-20T03:14:54Z", "category": "Query", "subcategory": "Tool functionality", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4289", "id": 4289, "title": "Disable LEF Warning Messages", "author": "abaababa", "description": "Hi all,\r\n\r\nI am trying to load custom lef/lib files for pnr, and my lef files contain some properties unsupported by openroad. I got too much warning messages from this and the unsupported properties didn't have effect on my pnr results. Is there any way to disable the LEF warning messages temporarily? I checked the documents but failed to find an option that can turn off the warnings. Sorry if I missed it from the documents.\r\n\r\nThanks in advance!\r\n\r\n", "content": [{"author": "abaababa", "role": "user", "message": "Hi all,\r\n\r\nI am trying to load custom lef/lib files for pnr, and my lef files contain some properties unsupported by openroad. I got too much warning messages from this and the unsupported properties didn't have effect on my pnr results. Is there any way to disable the LEF warning messages temporarily? I checked the documents but failed to find an option that can turn off the warnings. Sorry if I missed it from the documents.\r\n\r\nThanks in advance!\r\n\r\n", "date": "2023-11-20T21:58:57Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no method to do that currently.  No single message will print more than 1k times.", "date": "2023-11-20T22:06:15Z"}, {"author": "luarss", "role": "assistant", "message": "@maliberty  Correct me if I am wrong, but doesn't Tcl function `suppress_message` do this? \r\n\r\nEdit: i guess there's no function that achieves full suppression for all warnings, what OP requested\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/28892de3bef1af52f3371d547f752acf0af20021/test/helpers.tcl#L203\r\n\r\nCorresponding source:\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/utl/src/Logger.cpp\r\n", "date": "2023-11-21T06:07:17Z"}], "date": "2023-11-20T21:58:57Z", "category": "Configuration", "subcategory": "Warnings and messages", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4258", "id": 4258, "title": "Need help in custom cell placement since they overlap with power grip", "author": "OuDret", "description": "Hello,\r\n\r\nI'm trying to use openroad commands to place custom pdk cells but they overlap with power grid.\r\n\r\nHere in https://github.com/OuDret/my_pdk/tree/main you can see all the files I'm using. \r\n\r\nThere are also all the commands I'm running in ./flow.txt. You can simply copy-paste all the lines in flow.txt file into OpenRoad command line at once to reproduce the case. \r\n\r\nUnfortunately I'm using absolute path when loading tech and design so you may need to change it.\r\n\r\nI'm trying to simplify the flow as much as I can so I may have forgotten to run some important steps.\r\n\r\nThank you for any advice you can provide\r\n\r\n[EDIT] I forgot to show the 2 warnings that are raised when I run ```improve_placement``` which must be related to the overlap issue.\r\n```\r\n  [WARNING DPO-0201] Placement check failure during legalization.\r\n  [WARNING DPO-0381] Encountered 57 issues when orienting cells for rows.\r\n```\r\n\r\n![cell_overlap_power_grid](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/43d68ad2-28ab-4749-968d-c9cfd65a4397)\r\n![counter_design](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/849b8ffe-5426-4157-b8a2-60d43c628e38)\r\n", "content": [{"author": "OuDret", "role": "user", "message": "Hello,\r\n\r\nI'm trying to use openroad commands to place custom pdk cells but they overlap with power grid.\r\n\r\nHere in https://github.com/OuDret/my_pdk/tree/main you can see all the files I'm using. \r\n\r\nThere are also all the commands I'm running in ./flow.txt. You can simply copy-paste all the lines in flow.txt file into OpenRoad command line at once to reproduce the case. \r\n\r\nUnfortunately I'm using absolute path when loading tech and design so you may need to change it.\r\n\r\nI'm trying to simplify the flow as much as I can so I may have forgotten to run some important steps.\r\n\r\nThank you for any advice you can provide\r\n\r\n[EDIT] I forgot to show the 2 warnings that are raised when I run ```improve_placement``` which must be related to the overlap issue.\r\n```\r\n  [WARNING DPO-0201] Placement check failure during legalization.\r\n  [WARNING DPO-0381] Encountered 57 issues when orienting cells for rows.\r\n```\r\n\r\n![cell_overlap_power_grid](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/43d68ad2-28ab-4749-968d-c9cfd65a4397)\r\n![counter_design](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/849b8ffe-5426-4157-b8a2-60d43c628e38)\r\n", "date": "2023-11-13T11:46:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Where is this process are you manually placing these cells?  Are you marking them as fixed?", "date": "2023-11-13T16:50:33Z"}, {"author": "maliberty", "role": "assistant", "message": "I tried to run flow.txt but I get in global placement:\r\n```\r\n[ERROR GRT-0126] Layers met2 and met3 have the same preferred routing direction \r\n(VERTICAL).\r\n```\r\nThis seems wrong - can you explain what the intention is?", "date": "2023-11-15T16:31:17Z"}], "date": "2023-11-13T11:46:14Z", "category": "Runtime", "subcategory": "Placement conflict", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4249", "id": 4249, "title": "Unknown layer VV while reading tech file", "author": "msingh9", "description": "I am trying to use a proprietary pdk and I hit issue when running command pin_access.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n\r\nFrom the error message, it looks like layer \"VV\" is not recognized. However, while reading tech file (earlier in the flow), It did find this layer. There are lots of warnings during tech file read but I see similar warnings for other layers too.\r\n\r\nThis is the error message I get:\r\n[WARNING DRT-0124] Via VV with unused layer VV_XX_450_450_450_450_VV will be ignored.\r\n[ERROR DRT-0129] Unknown layer VV for viarule VV_VIAGEN.\r\n\r\nThese are some of information and warnings while reading tech file.\r\n[WARNING ODB-0279] parse mismatch in layer property LEF58_TYPE for layer II_QM_BOT : \"TYPE SPECIALCUT LAYER IA QM ;\"\r\n[INFO ODB-0388] unsupported LEF58_ANTENNAGATEPLUSDIFF property for layer VV :\"ANTENNAGATEPLUSDIFF OXIDE1 5.0 ; \"\r\n\r\nMy question is -\r\nIt seems to read tech file without error at the beginning of the flow. Then why is it reading tech and libs again with the command pin_access. First time it didn't error out, but it generates error during this step.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n[INFO DRT-0149] Reading tech and libs.\r\n\r\nI have checked that layer VV is defined in the tech file.\r\n\r\nAny suggestions and ideas on what I can try to bypass this error.\r\n\r\nI am only interested in rough timing and area results after global routing.\r\n\r\n\r\n\r\n", "content": [{"author": "msingh9", "role": "user", "message": "I am trying to use a proprietary pdk and I hit issue when running command pin_access.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n\r\nFrom the error message, it looks like layer \"VV\" is not recognized. However, while reading tech file (earlier in the flow), It did find this layer. There are lots of warnings during tech file read but I see similar warnings for other layers too.\r\n\r\nThis is the error message I get:\r\n[WARNING DRT-0124] Via VV with unused layer VV_XX_450_450_450_450_VV will be ignored.\r\n[ERROR DRT-0129] Unknown layer VV for viarule VV_VIAGEN.\r\n\r\nThese are some of information and warnings while reading tech file.\r\n[WARNING ODB-0279] parse mismatch in layer property LEF58_TYPE for layer II_QM_BOT : \"TYPE SPECIALCUT LAYER IA QM ;\"\r\n[INFO ODB-0388] unsupported LEF58_ANTENNAGATEPLUSDIFF property for layer VV :\"ANTENNAGATEPLUSDIFF OXIDE1 5.0 ; \"\r\n\r\nMy question is -\r\nIt seems to read tech file without error at the beginning of the flow. Then why is it reading tech and libs again with the command pin_access. First time it didn't error out, but it generates error during this step.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n[INFO DRT-0149] Reading tech and libs.\r\n\r\nI have checked that layer VV is defined in the tech file.\r\n\r\nAny suggestions and ideas on what I can try to bypass this error.\r\n\r\nI am only interested in rough timing and area results after global routing.\r\n\r\n\r\n\r\n", "date": "2023-11-10T22:25:15Z"}, {"author": "maliberty", "role": "assistant", "message": "If you only want rough results you can skip the pin_access command.  The LEF was read earlier but the interpretation is being made now and some issue is being flagged.  The exact issue is hard to say from this info.", "date": "2023-11-11T00:00:06Z"}, {"author": "msingh9", "role": "assistant", "message": "Thanks for suggestion. This enabled me to get past this point and finish global route. ", "date": "2023-11-11T02:09:06Z"}], "date": "2023-11-10T22:25:15Z", "category": "Runtime", "subcategory": "Layer parsing issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4155", "id": 4155, "title": "PPL vs PAD for IO", "author": "lustefan97", "description": "Hello,\r\n\r\nI have a question regarding the differences between the PPL and PAD tools, especially the PAD bump placement for flip chip designs. I don't really get the differences between the PPL and PAD tools when it comes to IO placed on the top metal layer, and their \"relationship\" with the GPL tool.\r\n\r\nI am right now doing some tests using different designs using the PPL tool. It is used with GPL first by placing the IO without considering GPL, then doing Global PLacement followed by a Pin PLacement after it, finishing by a final GPL. I read that it was due to some circular dependency between the two tools, so this was the way things were done. \r\nNow I am using PPL to do some 3D Face-to-Face implementation, and am using the `define_pin_shape_pattern` command to place the IO on the top metal layer.\r\n\r\nFrom what I understood PPL doesn't have/need a LEF object for the bump as it will create a metal shape in place of the pin, based off of the constraint given to the tool by the user before being routed in the subsequent steps.\r\n\r\n\r\nI am now trying to understand what the PAD tool really is about, how it differs from what PPL is and what his use case may be, but I am a bit confused when it comes to 3D interconnect.\r\n\r\nI understand that PAD is used for chip level connection, which raise a question for me (that is asked below), that requires a LEF object for top layer bumps.\r\nWhen it comes to flip chip design, the PAD tool seems to be the default candidate but something is bothering me,  it is simply that there is no pin position optimization in it as opposed to PPL (which would probably not give a minimal \"3D\" wire length), that the bump assignement is done manually, and that in the example script given in _OpenROAD/src/pad/test_ link the bumps to an IO ring which I don't think is the goal in my application.\r\n\r\nAbout the pin position optimization, I was told by @rovinski in #4061 that GPL will still do some HPWL optimization (and that the team would probably be interested in implementing 3D interconnect as part of the PPL tool), but at first sight it doesn't seem to be the most optimal way to proceed for \"3D\" routing since the assignement will be done manually. This leads me to the second question about assignment : Since I will probably need to have thousands of IOs on the top layer, manual assignment seems tedious if not even suboptimal due to the lack of automatic bump repositioning. \r\nI get that using a tool for flip-chip design would be make more sense but I must say that, when it comes to top layer bumps, I don't see really the interest in going for PAD rather than PPL\r\n\r\n\r\n\r\nMy questions thus are : \r\n\r\n0) What are the exact mechanisms that OpenROAD use to minimize wire length w.r.t. IO pins ?\r\n1) If PAD is used for chip level connections then what is the use case for PPL ?\r\n2) What are the inherent differences between PAD and PPL ?\r\n3) If PAD is the default for flip-chip design, why implementing such a thing as part of PPL ?\r\n4) Does will OpenROAD route differently when using PAD or PPL ? Especially when talking about memory usage ?\r\n5) Will the use of a LEF object in the PAD tool create a difference with regard to the pin created by PPL ? Could I use a LEF object for PPL instead to benefit from the placement optimization?\r\n6) Could we imaging eventually a flow mixing PAD and PPL, where the PPL tool is used for 3D interconnections ?\r\n\r\n\r\n", "content": [{"author": "lustefan97", "role": "user", "message": "Hello,\r\n\r\nI have a question regarding the differences between the PPL and PAD tools, especially the PAD bump placement for flip chip designs. I don't really get the differences between the PPL and PAD tools when it comes to IO placed on the top metal layer, and their \"relationship\" with the GPL tool.\r\n\r\nI am right now doing some tests using different designs using the PPL tool. It is used with GPL first by placing the IO without considering GPL, then doing Global PLacement followed by a Pin PLacement after it, finishing by a final GPL. I read that it was due to some circular dependency between the two tools, so this was the way things were done. \r\nNow I am using PPL to do some 3D Face-to-Face implementation, and am using the `define_pin_shape_pattern` command to place the IO on the top metal layer.\r\n\r\nFrom what I understood PPL doesn't have/need a LEF object for the bump as it will create a metal shape in place of the pin, based off of the constraint given to the tool by the user before being routed in the subsequent steps.\r\n\r\n\r\nI am now trying to understand what the PAD tool really is about, how it differs from what PPL is and what his use case may be, but I am a bit confused when it comes to 3D interconnect.\r\n\r\nI understand that PAD is used for chip level connection, which raise a question for me (that is asked below), that requires a LEF object for top layer bumps.\r\nWhen it comes to flip chip design, the PAD tool seems to be the default candidate but something is bothering me,  it is simply that there is no pin position optimization in it as opposed to PPL (which would probably not give a minimal \"3D\" wire length), that the bump assignement is done manually, and that in the example script given in _OpenROAD/src/pad/test_ link the bumps to an IO ring which I don't think is the goal in my application.\r\n\r\nAbout the pin position optimization, I was told by @rovinski in #4061 that GPL will still do some HPWL optimization (and that the team would probably be interested in implementing 3D interconnect as part of the PPL tool), but at first sight it doesn't seem to be the most optimal way to proceed for \"3D\" routing since the assignement will be done manually. This leads me to the second question about assignment : Since I will probably need to have thousands of IOs on the top layer, manual assignment seems tedious if not even suboptimal due to the lack of automatic bump repositioning. \r\nI get that using a tool for flip-chip design would be make more sense but I must say that, when it comes to top layer bumps, I don't see really the interest in going for PAD rather than PPL\r\n\r\n\r\n\r\nMy questions thus are : \r\n\r\n0) What are the exact mechanisms that OpenROAD use to minimize wire length w.r.t. IO pins ?\r\n1) If PAD is used for chip level connections then what is the use case for PPL ?\r\n2) What are the inherent differences between PAD and PPL ?\r\n3) If PAD is the default for flip-chip design, why implementing such a thing as part of PPL ?\r\n4) Does will OpenROAD route differently when using PAD or PPL ? Especially when talking about memory usage ?\r\n5) Will the use of a LEF object in the PAD tool create a difference with regard to the pin created by PPL ? Could I use a LEF object for PPL instead to benefit from the placement optimization?\r\n6) Could we imaging eventually a flow mixing PAD and PPL, where the PPL tool is used for 3D interconnections ?\r\n\r\n\r\n", "date": "2023-10-19T15:38:35Z"}, {"author": "maliberty", "role": "assistant", "message": "What is driving the bumps?   Usually you need an IO driver and that means you need to use pad.", "date": "2023-10-19T15:48:16Z"}, {"author": "QuantamHD", "role": "assistant", "message": "I think the biggest difference between pad and ppl is that pad tries to deal with io cells. Typically the foundry will require you to place specialized io cells that deal with esd and what not.\r\n\r\nppl does a similar pin placement, but doesn't deal with io cells. If you don't need io cells between your dies then ppl probably is the solution you should use or enhance ", "date": "2023-10-19T16:46:09Z"}], "date": "2023-10-19T15:38:35Z", "category": "Query", "subcategory": "Tool usage clarification", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4165", "id": 4165, "title": "fastroute: What is the minimum number of metal layers OpenROAD can route in?", "author": "Sleighbells64", "description": "My apologies if this is an obvious question. I am working with a fab trying to develop a new process that currently has 2 metal layers, and we were wondering if we could use OpenROAD/OpenLANE to build test chips. I was unable to find an answer in the documentation, but if it is there I would love to know where to look. Thank you for your help!", "content": [{"author": "Sleighbells64", "role": "user", "message": "My apologies if this is an obvious question. I am working with a fab trying to develop a new process that currently has 2 metal layers, and we were wondering if we could use OpenROAD/OpenLANE to build test chips. I was unable to find an answer in the documentation, but if it is there I would love to know where to look. Thank you for your help!", "date": "2023-10-23T15:05:32Z"}, {"author": "maliberty", "role": "assistant", "message": "In theory we could route in two layers but we've never tried it.  We don't have a specialized channel router.  My expectation is that we will hit some issues and have to iterate.  If the PDK is closed it will be harder to do so.", "date": "2023-10-23T15:32:18Z"}, {"author": "JackFz", "role": "assistant", "message": "I'm sure that Fastroute and TritonRoute are capable of routing on two layers. ", "date": "2023-10-29T03:34:28Z"}], "date": "2023-10-23T15:05:32Z", "category": "Query", "subcategory": "Routing capabilities", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4163", "id": 4163, "title": "[WARNING GRT-0350] Missing route to pin iregister_read/io_bypass_1_bits_data[0].", "author": "oharboe", "description": "This is for the top level of MegaBoom that I'm playing around with.\r\n\r\nIs this warning telling me that it can't find a route for the buffer tree for the pin in the warning?\r\n\r\nIt looks like this buffer tree is going from the iregister_read macro to the ALUExeUnit, which traverses Rob(reorder buffer), rename stage and the memory issue unit. The mpl2 macro placement is unfortunate here...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e3c6b965-bf83-403c-9dd5-70413735a8ca)\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2a76f06-f286-4b5a-8bc7-2fc0219bc9f8)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "This is for the top level of MegaBoom that I'm playing around with.\r\n\r\nIs this warning telling me that it can't find a route for the buffer tree for the pin in the warning?\r\n\r\nIt looks like this buffer tree is going from the iregister_read macro to the ALUExeUnit, which traverses Rob(reorder buffer), rename stage and the memory issue unit. The mpl2 macro placement is unfortunate here...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e3c6b965-bf83-403c-9dd5-70413735a8ca)\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2a76f06-f286-4b5a-8bc7-2fc0219bc9f8)\r\n", "date": "2023-10-23T05:32:30Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please respond", "date": "2023-10-23T06:06:52Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@oharboe @maliberty This warning is related to the estimate_parasitics using global route parasitics. It usually happens when a routing topology is not correctly translated to the parasitics estimation structures. I will look into the test case and fix the cause of this bug.", "date": "2023-10-23T15:13:41Z"}], "date": "2023-10-23T05:32:30Z", "category": "Bug", "subcategory": "Parasitics estimation issue", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4096", "id": 4096, "title": "Detailed Routing abort on libc.so.6", "author": "marcopoles", "description": "Hi ,\r\nI'm working on tsmc 40nm porting and the flow stops to work on detailed routing with this error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/24896919/7c4d6959-f126-4b62-940f-2b3ec59e3d26)\r\n\r\nDo you have any suggestion about the problem?\r\n\r\nThanks\r\n\r\nPS: working on not open source PDK I can't submit a testcase", "content": [{"author": "marcopoles", "role": "user", "message": "Hi ,\r\nI'm working on tsmc 40nm porting and the flow stops to work on detailed routing with this error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/24896919/7c4d6959-f126-4b62-940f-2b3ec59e3d26)\r\n\r\nDo you have any suggestion about the problem?\r\n\r\nThanks\r\n\r\nPS: working on not open source PDK I can't submit a testcase", "date": "2023-10-05T15:57:05Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 any guesses?\r\n", "date": "2023-10-05T16:28:44Z"}, {"author": "osamahammad21", "role": "assistant", "message": "@marcopoles Could you build openroad in DEBUG mode so that I can locate exactly at which line does this happen?", "date": "2023-10-05T17:00:16Z"}, {"author": "marcopoles", "role": "assistant", "message": "Hi, here the new output:\r\n<img width=\"883\" alt=\"image\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/24896919/bcd2041d-b033-47e4-a166-9304b0c63bfc\">\r\n", "date": "2023-10-06T07:11:26Z"}, {"author": "osamahammad21", "role": "assistant", "message": "@refaay Could you start a PR to ignore via definitions that include masterslice layers in DRT?", "date": "2023-10-10T12:09:10Z"}, {"author": "refaay", "role": "assistant", "message": "Submitted PR #4149 to ignore masterslice vias in drt.\r\nPR #4149 merged.", "date": "2023-10-23T16:30:31Z"}], "date": "2023-10-05T15:57:05Z", "category": "Runtime", "subcategory": "Crash report", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4162", "id": 4162, "title": "Libfmt v8 required for conda installation", "author": "chetanyagoyal", "description": "Trying to use \r\nopenroad==2.0_10145_g0de6f5131 installed with conda gives the following error -\r\n`openroad: error while loading shared libraries: libfmt.so.8: cannot open shared object file: No such file or directory`\r\n\r\nThis error occurs only on Ubuntu20.04 because libfmt version 8 does not exist for it. \r\nAre there any workarounds to this? ", "content": [{"author": "chetanyagoyal", "role": "user", "message": "Trying to use \r\nopenroad==2.0_10145_g0de6f5131 installed with conda gives the following error -\r\n`openroad: error while loading shared libraries: libfmt.so.8: cannot open shared object file: No such file or directory`\r\n\r\nThis error occurs only on Ubuntu20.04 because libfmt version 8 does not exist for it. \r\nAre there any workarounds to this? ", "date": "2023-10-22T06:40:23Z"}, {"author": "rovinski", "role": "assistant", "message": "I don't think we host a conda installation. The installer would be from a third party and you should ask them for support.", "date": "2023-10-22T06:42:56Z"}, {"author": "maliberty", "role": "assistant", "message": "@proppy is the conda installer something you support?", "date": "2023-10-22T15:13:26Z"}, {"author": "proppy", "role": "assistant", "message": "yes, it seems they already filed an issue over at https://github.com/hdl/conda-eda/issues/360 (so feel free to close the issue here).", "date": "2023-10-22T15:18:09Z"}], "date": "2023-10-22T06:40:23Z", "category": "Installation", "subcategory": "Dependency issue", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4137", "id": 4137, "title": "OpenROAD build issue", "author": "idokoike", "description": "\r\nI've been trying to fully install OpenROAD using the` ./build_openroad.sh --local --threads 1` command but I keep getting the error\r\n```\r\n[INFO FLW-0027] Saving logs to build_openroad.log\r\n[INFO FLW-0028] ./build_openroad.sh --local --threads 1\r\n[INFO FLW-0002] Updating git submodules.\r\n[INFO FLW-0001] Using local build method. This will create binaries at 'tools/install' unless overwritten.\r\n[INFO FLW-0017] Compiling Yosys.\r\nmake: Entering directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\ncp yosys yosys-config yosys-abc yosys-filterlib yosys-smtbmc /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\nstrip -S /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-abc\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-filterlib\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys\r\ncp -r share/. /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys/.\r\nmake: Leaving directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\n[INFO FLW-0018] Compiling OpenROAD.\r\n-- OpenROAD version: v2.0-10669-g436c7801a\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- C++ Standard: 17\r\n-- C++ Standard Required: ON\r\n-- C++ Extensions: OFF\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- TCL readline library: /usr/lib/x86_64-linux-gnu/libtclreadline.so\r\n-- TCL readline header: /usr/include/x86_64-linux-gnu\r\n-- boost: 1.74.0\r\n-- spdlog: 1.9.2\r\nCMake Warning at src/CMakeLists.txt:242 (message):\r\n  spdlog: SPDLOG_FMT_EXTERNAL=ON\r\n\r\n\r\n-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \r\n-- STA version: 2.4.0\r\n-- STA git sha: 44f06c521560e803859218732255b3259de048e1\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Build CXX_FLAGS: -O3 -DNDEBUG\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- SSTA: 0\r\n-- STA executable: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/OpenROAD/src/sta/app/sta\r\nCMake Error at src/gpl/CMakeLists.txt:44 (find_package):\r\n  By not providing \"Findortools.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"ortools\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"ortools\" with any\r\n  of the following names:\r\n\r\n    ortoolsConfig.cmake\r\n    ortools-config.cmake\r\n\r\n  Add the installation prefix of \"ortools\" to CMAKE_PREFIX_PATH or set\r\n  \"ortools_DIR\" to a directory containing one of the above files.  If\r\n  \"ortools\" provides a separate development package or SDK, be sure it has\r\n  been installed.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n\r\n```\r\nI've installed or-tools using `git clone  https://github.com/google/or-tools.git` and I'm still getting the error ", "content": [{"author": "idokoike", "role": "user", "message": "\r\nI've been trying to fully install OpenROAD using the` ./build_openroad.sh --local --threads 1` command but I keep getting the error\r\n```\r\n[INFO FLW-0027] Saving logs to build_openroad.log\r\n[INFO FLW-0028] ./build_openroad.sh --local --threads 1\r\n[INFO FLW-0002] Updating git submodules.\r\n[INFO FLW-0001] Using local build method. This will create binaries at 'tools/install' unless overwritten.\r\n[INFO FLW-0017] Compiling Yosys.\r\nmake: Entering directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\ncp yosys yosys-config yosys-abc yosys-filterlib yosys-smtbmc /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\nstrip -S /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-abc\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-filterlib\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys\r\ncp -r share/. /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys/.\r\nmake: Leaving directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\n[INFO FLW-0018] Compiling OpenROAD.\r\n-- OpenROAD version: v2.0-10669-g436c7801a\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- C++ Standard: 17\r\n-- C++ Standard Required: ON\r\n-- C++ Extensions: OFF\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- TCL readline library: /usr/lib/x86_64-linux-gnu/libtclreadline.so\r\n-- TCL readline header: /usr/include/x86_64-linux-gnu\r\n-- boost: 1.74.0\r\n-- spdlog: 1.9.2\r\nCMake Warning at src/CMakeLists.txt:242 (message):\r\n  spdlog: SPDLOG_FMT_EXTERNAL=ON\r\n\r\n\r\n-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \r\n-- STA version: 2.4.0\r\n-- STA git sha: 44f06c521560e803859218732255b3259de048e1\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Build CXX_FLAGS: -O3 -DNDEBUG\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- SSTA: 0\r\n-- STA executable: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/OpenROAD/src/sta/app/sta\r\nCMake Error at src/gpl/CMakeLists.txt:44 (find_package):\r\n  By not providing \"Findortools.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"ortools\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"ortools\" with any\r\n  of the following names:\r\n\r\n    ortoolsConfig.cmake\r\n    ortools-config.cmake\r\n\r\n  Add the installation prefix of \"ortools\" to CMAKE_PREFIX_PATH or set\r\n  \"ortools_DIR\" to a directory containing one of the above files.  If\r\n  \"ortools\" provides a separate development package or SDK, be sure it has\r\n  been installed.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n\r\n```\r\nI've installed or-tools using `git clone  https://github.com/google/or-tools.git` and I'm still getting the error ", "date": "2023-10-16T17:52:14Z"}, {"author": "rovinski", "role": "assistant", "message": "This is better to submit as an issue in order to get a better handle on your environment.\r\n\r\nThat being said, where are you installing ortools? The default location that CMake looks for is the default paths searched by CMake's `find_package` and also `/opt/or-tools/lib64/` and `/opt/or-tools/lib/`. If it's not in one of those locations, you should either install it there, or add `--openroad-args \"ortools_DIR=path/to/your/ortools/cmake/file\"` to your script invocation.", "date": "2023-10-16T18:08:17Z"}, {"author": "idokoike", "role": "assistant", "message": "Thanks. I've added `--openroad-args \"ortools_DIR=path/to/your/ortools/cmake/file\"` to my script, and it works kind of but I'm getting another error\r\n\r\n```\r\n[INFO FLW-0027] Saving logs to build_openroad.log\r\n[INFO FLW-0028] ./build_openroad.sh --local threads 2 --openroad-args /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build\r\n[INFO FLW-0002] Updating git submodules.\r\n[INFO FLW-0001] Using local build method. This will create binaries at 'tools/install' unless overwritten.\r\n[INFO FLW-0017] Compiling Yosys.\r\nmake: Entering directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\ncp yosys yosys-config yosys-abc yosys-filterlib yosys-smtbmc /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\nstrip -S /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-abc\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-filterlib\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys\r\ncp -r share/. /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys/.\r\nmake: Leaving directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\n[INFO FLW-0018] Compiling OpenROAD.\r\n-- ortools version: 9.7.3002\r\n-- Build type: Release\r\n-- Build C++ library: ON\r\n-- Build Python: OFF\r\n-- Build Java: OFF\r\n-- Build .Net: OFF\r\n-- Build Flatzinc: ON\r\n-- Build LP Parser: ON\r\n-- Build standalone Glop: OFF\r\n-- Build samples: ON\r\n-- Build C++ samples: ON\r\n-- Build Python samples: OFF\r\n-- Build Java samples: OFF\r\n-- Build .Net samples: OFF\r\n-- Build examples: ON\r\n-- Build C++ examples: ON\r\n-- Build Python examples: OFF\r\n-- Build Java examples: OFF\r\n-- Build .Net examples: OFF\r\n-- Build documentation: OFF\r\n-- Install doc: OFF\r\n-- Build all dependencies: ON\r\n-- Build ZLIB: ON\r\n-- Build abseil-cpp: ON\r\n-- Build protobuf: ON\r\n-- Build re2: ON\r\n-- Build googletest: ON\r\n-- COIN-OR support: OFF\r\n-- GLPK support: OFF\r\n-- HiGHS support: OFF\r\n-- PDLP support: ON\r\n-- Build PDLP: ON\r\n-- Build eigen3: ON\r\n-- SCIP support: OFF\r\n-- CPLEX support: OFF\r\n-- XPRESS support: OFF\r\n-- C++: Build doc: OFF\r\n-- Fetching ZLIB\r\n--   Populating zlib\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/zlib-subbuild\r\n[100%] Built target zlib-populate\r\n-- Fetching ZLIB - fetched\r\n-- Fetching Abseil-cpp\r\n--   Populating absl\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/absl-subbuild\r\n[100%] Built target absl-populate\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:605 (message):\r\n  ABSL_CXX_STANDARD:\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:606 (message):\r\n  CMAKE_CXX_STANDARD: 17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:607 (message):\r\n  CMAKE_CXX_STANDARD_REQUIRED: ON\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:608 (message):\r\n  CMAKE_CXX_FLAGS:\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/absl/copts/AbseilConfigureCopts.cmake:97 (message):\r\n  ABSL_CXX_STANDARD: 17.\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:18 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:605 (message):\r\n  ABSL_CXX_STANDARD: 17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:606 (message):\r\n  CMAKE_CXX_STANDARD: 17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:607 (message):\r\n  CMAKE_CXX_STANDARD_REQUIRED: ON\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:608 (message):\r\n  CMAKE_CXX_FLAGS:\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:20 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:33 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:44 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:58 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:76 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:95 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:107 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:121 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:140 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:161 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:177 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:220 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:249 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:428 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:539 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:591 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:623 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:649 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/algorithm/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/algorithm/CMakeLists.txt:42 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/cleanup/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/cleanup/CMakeLists.txt:30 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:91 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:120 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:170 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:186 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:204 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:277 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:313 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:351 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:387 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:423 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:453 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:530 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:556 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:581 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:613 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:625 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:638 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:664 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:679 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:691 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:760 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:31 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:56 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:97 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:109 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:150 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:19 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:61 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:115 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:132 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:169 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:191 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:223 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:285 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:18 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:34 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:54 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:75 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:96 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:113 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:133 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:151 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:174 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:199 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:224 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:250 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:269 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/functional/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/functional/CMakeLists.txt:53 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/functional/CMakeLists.txt:81 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/hash/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/hash/CMakeLists.txt:106 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/hash/CMakeLists.txt:134 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:18 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:36 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:56 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:74 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:89 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:103 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:127 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:147 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:163 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:182 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:219 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:248 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:264 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:281 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:363 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:377 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:394 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:409 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:424 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:444 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:463 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:487 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:507 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:526 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:541 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:563 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:580 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:597 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:643 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:658 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/memory/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/meta/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/meta/CMakeLists.txt:45 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:44 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:79 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:89 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/profiling/CMakeLists.txt:15 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/profiling/CMakeLists.txt:40 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/profiling/CMakeLists.txt:67 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:35 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:70 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:161 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:199 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:214 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:517 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:531 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:547 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:561 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:583 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:639 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:657 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:672 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:689 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:705 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:719 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:739 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:757 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:775 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:792 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:810 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:827 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:847 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:864 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:1155 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/status/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/status/CMakeLists.txt:58 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:77 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:396 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:409 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:579 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:620 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:647 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:676 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:691 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:725 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:794 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:833 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:866 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/synchronization/CMakeLists.txt:18 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/synchronization/CMakeLists.txt:37 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/synchronization/CMakeLists.txt:50 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/time/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/time/CMakeLists.txt:45 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/time/CMakeLists.txt:61 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:33 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:47 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:106 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:163 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:183 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:198 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:296 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:332 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/utility/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\n-- Fetching Abseil-cpp - fetched\r\n-- Fetching Protobuf\r\n--   Populating protobuf\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/protobuf-subbuild\r\n[100%] Built target protobuf-populate\r\n--   \r\n--   23.3.0\r\n-- Fetching Protobuf - fetched\r\n-- Fetching re2\r\n--   Populating re2\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/re2-subbuild\r\n[100%] Built target re2-populate\r\n-- Fetching re2 - fetched\r\n-- Fetching Eigen3\r\n--   Populating eigen3\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/eigen3-subbuild\r\n[100%] Built target eigen3-populate\r\n--   Performing Test COMPILER_SUPPORT_std=cpp03\r\n--   Performing Test COMPILER_SUPPORT_std=cpp03 - Success\r\n--   Standard libraries to link to explicitly: none\r\n--   Found unsuitable Qt version \"5.15.3\" from /usr/bin/qmake\r\n--   Qt4 not found, so disabling the mandelbrot and opengl demos\r\n--   Could NOT find CHOLMOD (missing: CHOLMOD_INCLUDES CHOLMOD_LIBRARIES) \r\n--   Could NOT find UMFPACK (missing: UMFPACK_INCLUDES UMFPACK_LIBRARIES) \r\n--   Could NOT find KLU (missing: KLU_INCLUDES KLU_LIBRARIES) \r\n--   Could NOT find SuperLU (missing: SUPERLU_INCLUDES SUPERLU_LIBRARIES SUPERLU_VERSION_OK) (Required is at least version \"4.0\")\r\n--   A version of Pastix has been found but pastix_nompi.h does not exist in the include directory. Because Eigen tests require a version without MPI, we disable the Pastix backend.\r\n--   \r\n--   Configured Eigen 3.4.0\r\n--   \r\n--   Available targets (use: make TARGET):\r\n--   ---------+--------------------------------------------------------------\r\n--   Target   |   Description\r\n--   ---------+--------------------------------------------------------------\r\n--   install  | Install Eigen. Headers will be installed to:\r\n--            |     <CMAKE_INSTALL_PREFIX>/<INCLUDE_INSTALL_DIR>\r\n--            |   Using the following values:\r\n--            |     CMAKE_INSTALL_PREFIX: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n--            |     INCLUDE_INSTALL_DIR:  include/eigen3\r\n--            |   Change the install location of Eigen headers using:\r\n--            |     cmake . -DCMAKE_INSTALL_PREFIX=yourprefix\r\n--            |   Or:\r\n--            |     cmake . -DINCLUDE_INSTALL_DIR=yourdir\r\n--   doc      | Generate the API documentation, requires Doxygen & LaTeX\r\n--   blas     | Build BLAS library (not the same thing as Eigen)\r\n--   uninstall| Remove files installed by the install target\r\n--   ---------+--------------------------------------------------------------\r\n--   \r\n-- Fetching Eigen3 - fetched\r\n-- Fetching googletest\r\n--   Populating googletest\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/googletest-subbuild\r\n[100%] Built target googletest-populate\r\n-- Fetching googletest - fetched\r\n-- Found long size: 8\r\n-- Found long long size: 8\r\n-- Found int64_t size: 8\r\n-- Found unsigned long size: 8\r\n-- Found unsigned long long size: 8\r\n-- Found uint64_t size: 8\r\n-- Found int * size: 8\r\n-- Adding proto path: $<BUILD_INTERFACE:/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/protobuf-src/src>\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/knapsack.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/knapsack.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/simple_knapsack_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/simple_knapsack_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_linear_sum_assignment.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_linear_sum_assignment.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_min_flow.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_min_flow.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/balance_min_flow.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/balance_min_flow.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_max_flow_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_max_flow_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_min_cost_flow_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_min_cost_flow_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/glop/samples/simple_glop_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/glop/samples/simple_glop_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/cp_is_fun_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/cp_is_fun_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/minimal_jobshop_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/minimal_jobshop_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nqueens_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nqueens_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nurses_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nurses_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/rabbits_and_pheasants_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/rabbits_and_pheasants_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_cp_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_cp_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_ls_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_ls_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_routing_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_routing_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_circuit_board.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_circuit_board.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities_routes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities_routes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_distance_matrix.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_distance_matrix.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_breaks.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_breaks.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_capacity.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_capacity.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_drop_nodes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_drop_nodes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_global_span.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_global_span.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_initial_routes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_initial_routes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_fifo.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_fifo.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_lifo.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_lifo.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_resources.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_resources.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_routes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_routes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_solution_callback.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_solution_callback.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_starts_ends.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_starts_ends.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_time_windows.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_time_windows.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_with_time_limit.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_with_time_limit.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrptw_store_solution_data.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrptw_store_solution_data.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_groups_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_groups_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_task_sizes_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_task_sizes_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_teams_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_teams_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/basic_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/basic_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/bin_packing_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/bin_packing_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/integer_programming_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/integer_programming_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/linear_programming_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/linear_programming_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/mip_var_array.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/mip_var_array.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/multiple_knapsack_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/multiple_knapsack_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_lp_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_lp_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_mip_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_mip_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/stigler_diet.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/stigler_diet.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/pdlp/samples/simple_pdlp_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/pdlp/samples/simple_pdlp_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_groups_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_groups_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_task_sizes_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_task_sizes_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_teams_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_teams_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assumptions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assumptions_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/binpacking_problem_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/binpacking_problem_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/bool_or_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/bool_or_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/channeling_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/channeling_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/copy_model_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/copy_model_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_is_fun_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_is_fun_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_sat_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_sat_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/earliness_tardiness_cost_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/earliness_tardiness_cost_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/interval_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/interval_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/literal_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/literal_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/minimal_jobshop_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/minimal_jobshop_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/multiple_knapsack_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/multiple_knapsack_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/no_overlap_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/no_overlap_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/non_linear_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/non_linear_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nqueens_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nqueens_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nurses_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nurses_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/optional_interval_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/optional_interval_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/rabbits_and_pheasants_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/rabbits_and_pheasants_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/ranking_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/ranking_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/reified_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/reified_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/schedule_requests_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/schedule_requests_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/search_for_all_solutions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/search_for_all_solutions_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/simple_sat_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/simple_sat_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solution_hinting_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solution_hinting_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_and_print_intermediate_solutions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_and_print_intermediate_solutions_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_with_time_limit_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_with_time_limit_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/step_function_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/step_function_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/stop_after_n_solutions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/stop_after_n_solutions_sample_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/constraint_programming_cp.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/constraint_programming_cp.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/costas_array_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/costas_array_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cryptarithm_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cryptarithm_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrp_disjoint_tw.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrp_disjoint_tw.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_resources.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_resources.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_stop_times_and_resources.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_stop_times_and_resources.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/flow_api.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/flow_api.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/golomb_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/golomb_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/integer_programming.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/integer_programming.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_assignment_api.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_assignment_api.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_programming.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_programming.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_solver_protocol_buffers.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_solver_protocol_buffers.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_sequence_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_sequence_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_square_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_square_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/max_flow.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/max_flow.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/min_cost_flow.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/min_cost_flow.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/nqueens.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/nqueens.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/qap_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/qap_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/random_tsp.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/random_tsp.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/slitherlink_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/slitherlink_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/uncapacitated_facility_location.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/uncapacitated_facility_location.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/variable_intervals_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/variable_intervals_sat.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/bug_fz1.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/bug_fz1.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/cpp11_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/cpp11_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/forbidden_intervals_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/forbidden_intervals_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/init_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/init_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue1303.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue1303.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue173.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue173.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue57.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue57.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/lp_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/lp_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/min_max_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/min_max_test.cc: ...DONE\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build\r\ngmake: Makefile: No such file or directory\r\ngmake: *** No rule to make target 'Makefile'.  Stop.\r\n\r\n```", "date": "2023-10-17T09:35:42Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@idokoike, please file a GitHub Issue and fill out our form which includes you environment and OS, also include which steps did you take, e.g., did you run the DependencyInstaller.sh? If not, any reason why?", "date": "2023-10-19T11:30:29Z"}], "date": "2023-10-16T17:52:14Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4061", "id": 4061, "title": "How does OpenROAD computes the number of possible locations for IO's ?", "author": "lustefan97", "description": "Hello,\r\n\r\nI have a question to know how does OpenROAD computes the possible IO pin locations, when placed on the top-most metal layer. I use the ASAP7 PDK, I already routed a \"hello world\" design using the ibex core which has 264 IO pins. Now I want to test a bit the capabilities of OpenROAD and start doing increasingly bigger designs. \r\n\r\nRight now I have a design that has 4100 IO pins to place on the top layer. The die size is 20um x 20um more or less which, since I want to place the IO's on the Pad Layer whose track pitch is 0.08um, would give me more or less 62 tracks on which I can place my pins (mind you I place the pins with a minimum width of 0.32um). The M9 metal layer also has a track pitch of 0.08, so I could think that I would also have 62 tracks  on which I could have a pin routed (on top). This would give me 62 x 62 = 3844 potential pin locations with this die size, but the tool give me the following error : \r\n\r\n`[ERROR PPL-0024] Number of IO pins (4100) exceeds maximum number of available positions (788).`\r\n\r\nWhich is far less than what I expect, so my questions are as follows : \r\n\r\n1. How does OpenROAD compute those available positions ?\r\n2. Could those locations be linked to an oversight/mistake in my synthesis script ?\r\n3. If I am mistaken in the way to compute the \"potential location\", how does one compute it properly based of the design size (number of cells/die area) ?", "content": [{"author": "lustefan97", "role": "user", "message": "Hello,\r\n\r\nI have a question to know how does OpenROAD computes the possible IO pin locations, when placed on the top-most metal layer. I use the ASAP7 PDK, I already routed a \"hello world\" design using the ibex core which has 264 IO pins. Now I want to test a bit the capabilities of OpenROAD and start doing increasingly bigger designs. \r\n\r\nRight now I have a design that has 4100 IO pins to place on the top layer. The die size is 20um x 20um more or less which, since I want to place the IO's on the Pad Layer whose track pitch is 0.08um, would give me more or less 62 tracks on which I can place my pins (mind you I place the pins with a minimum width of 0.32um). The M9 metal layer also has a track pitch of 0.08, so I could think that I would also have 62 tracks  on which I could have a pin routed (on top). This would give me 62 x 62 = 3844 potential pin locations with this die size, but the tool give me the following error : \r\n\r\n`[ERROR PPL-0024] Number of IO pins (4100) exceeds maximum number of available positions (788).`\r\n\r\nWhich is far less than what I expect, so my questions are as follows : \r\n\r\n1. How does OpenROAD compute those available positions ?\r\n2. Could those locations be linked to an oversight/mistake in my synthesis script ?\r\n3. If I am mistaken in the way to compute the \"potential location\", how does one compute it properly based of the design size (number of cells/die area) ?", "date": "2023-10-01T14:31:46Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please help", "date": "2023-10-02T03:33:31Z"}, {"author": "rovinski", "role": "assistant", "message": "I don't know how the pin capacity is calculated exactly, but I know that the pin placer only works on edges of the die, not across an area. The total pins on the top layer would be around the perimeter, i.e. 62 * 4 = 248.\r\nBut, usually PPL does not want to place pins on edges that do not correspond to the preferred direction of that layer. PAD layers may or may not have a preferred direction. The other pins in the 788 reported may be coming from other layers along the edge of the die.\r\n\r\nBut anyways, you are probably looking at the wrong tool. You want to be looking at the [PAD tool](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pad/README.md) which is meant for bump placement on flip-chip designs, which is much closer to what you are trying to do.", "date": "2023-10-02T05:39:36Z"}, {"author": "maliberty", "role": "assistant", "message": "We support pins over the top of the core area through define_pin_shape_pattern.  The number of pins locations will be determined by the region and the x/y step given.  If you need to actually place bumps at specific locations that is different than pin placement.  What is your goal?", "date": "2023-10-02T17:16:52Z"}], "date": "2023-10-01T14:31:46Z", "category": "Query", "subcategory": "Pin placement", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4062", "id": 4062, "title": "Openroad compatibility with multi vt cells and mmmc", "author": "faisaladilquadery", "description": "Can openroad work with multi VT cells ( HVT , LVT , SVT ) and swap between them in a single run ? \r\nalso can openroad work with MultiModeMulti Corner File (mmmc) ?", "content": [{"author": "faisaladilquadery", "role": "user", "message": "Can openroad work with multi VT cells ( HVT , LVT , SVT ) and swap between them in a single run ? \r\nalso can openroad work with MultiModeMulti Corner File (mmmc) ?", "date": "2023-10-02T04:24:06Z"}, {"author": "maliberty", "role": "assistant", "message": "OR can swap between VT cells.  OR supports multi-corner but not multi-mode STA.", "date": "2023-10-02T04:54:31Z"}, {"author": "rovinski", "role": "assistant", "message": "> can openroad work with MultiModeMulti Corner File (mmmc) ?\r\n\r\nIf you are asking about MMMC files from commercial vendors, those are proprietary formats which we don't support. We support multi-corner analysis as mentioned. You can look in the [OpenSTA manual](https://github.com/The-OpenROAD-Project/OpenSTA/blob/master/doc/OpenSTA.pdf) to find the relevant commands.", "date": "2023-10-02T05:46:04Z"}], "date": "2023-10-02T04:24:06Z", "category": "Query", "subcategory": "Tool compatibility", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3846", "id": 3846, "title": "Does TritonRoute support all design rules in  ISPD 2014/2015 tech files?", "author": "liangrj2014", "description": "We wonder whether TritonRoute support all design rules in ISPD 2014/2015 tech files (https://www.ispd.cc/contests/14/web/benchmarks.html)? Example design rules are as follows:\r\n\r\n1. PROPERTY LEF57_MINSTEP \"MINSTEP 0.100 MAXEDGES 1 ;\" ;\r\n2. MINIMUMCUT 2 WIDTH 0.400 ;\r\n3. MINENCLOSEDAREA 0.30 ;\r\n4. PROPERTY LEF57_SPACING \"SPACING 0.13 PARALLELOVERLAP ;\u201d;\r\n", "content": [{"author": "liangrj2014", "role": "user", "message": "We wonder whether TritonRoute support all design rules in ISPD 2014/2015 tech files (https://www.ispd.cc/contests/14/web/benchmarks.html)? Example design rules are as follows:\r\n\r\n1. PROPERTY LEF57_MINSTEP \"MINSTEP 0.100 MAXEDGES 1 ;\" ;\r\n2. MINIMUMCUT 2 WIDTH 0.400 ;\r\n3. MINENCLOSEDAREA 0.30 ;\r\n4. PROPERTY LEF57_SPACING \"SPACING 0.13 PARALLELOVERLAP ;\u201d;\r\n", "date": "2023-08-11T15:35:04Z"}, {"author": "maliberty", "role": "assistant", "message": "We test with ispd 18&19 but not those.  2 is only relevant for pdn and I know we support 3.  @osamahammad21 would you check on 1 & 4", "date": "2023-08-11T16:27:43Z"}, {"author": "refaay", "role": "assistant", "message": "We currently parse for LEF58 rules. We don't parse LEF57 (by looking at /src/odb/src/lefin/lefin.cpp and /src/drt/src/io/io.cpp).\r\nI will start a PR for parsing LEF57.\r\n\r\nAlso, we don't support PARALLELOVERLAP option for LEF58_SPACING in drt according to io.cpp:\r\n\r\n```\r\ncase odb::dbTechLayerCutSpacingRule::CutSpacingType::PARALLELOVERLAP:\r\n        logger_->warn(utl::DRT,\r\n                      260,\r\n                      \"Unsupported LEF58_SPACING rule for layer {} of type \"\r\n                      \"PARALLELOVERLAP.\",\r\n                      layer->getName());\r\n        break;\r\n```\r\n\r\nWe support MAXEDGES for LEF58_MINSTEP as in io.cpp:\r\n\r\n```\r\nfor (auto rule : layer->getTechLayerMinStepRules()) {\r\n    auto con = make_unique<frLef58MinStepConstraint>();\r\n    con->setMinStepLength(rule->getMinStepLength());\r\n    con->setMaxEdges(rule->isMaxEdgesValid() ? rule->getMaxEdges() : -1);\r\n    con->setMinAdjacentLength(\r\n        rule->isMinAdjLength1Valid() ? rule->getMinAdjLength1() : -1);\r\n    con->setEolWidth(rule->isNoBetweenEol() ? rule->getEolWidth() : -1);\r\n    tmpLayer->addLef58MinStepConstraint(con.get());\r\n    tech_->addUConstraint(std::move(con));\r\n  }\r\n```", "date": "2023-08-15T15:24:01Z"}, {"author": "maliberty", "role": "assistant", "message": "We could add support for new rules if there is strong interest", "date": "2023-08-16T03:24:15Z"}, {"author": "refaay", "role": "assistant", "message": "Hi @liangrj2014 , we added support for PROPERTY LEF57_MINSTEP & PROPERTY LEF57_SPACING.\r\nAlso, support for PARALLELOVERLAP will be added soon.", "date": "2023-08-29T17:11:19Z"}, {"author": "refaay", "role": "assistant", "message": "@liangrj2014 PARALLELOVERLAP is now supported for LEF57_SPACING &LEF58_SPACING properties.", "date": "2023-09-24T22:23:55Z"}], "date": "2023-08-11T15:35:04Z", "category": "Query", "subcategory": "Design rule support", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4001", "id": 4001, "title": "I have some trouble when running Openroad tools for foreign pdk.", "author": "OuDret", "description": "Hello, I have been reading documentation and trying stuff with given pdks for about two weeks. My goal was to run OpenRoadFlowScripts but, since there is a lot of stuff, I\u2019ve took its makefile, config files and scripts and just extracted the openroad commands that I really need, so I can exactly know what args and what files i need and create them. Also running the commands 1 by 1 alongside GUI application helps me understanding what\u2019s going on.\r\n\r\nWhen calling the commands tho, I had some issues i could not solve. If you have an idea of any of the following problems I'm facing or any advice let me know.\r\n\r\n**1. I didn\u2019t manage to initialize floorplan with custom die area. It doesn\u2019t matter which values I use as die_are or core_area, it just doesn\u2019t work properly.** \r\n\r\nWhen I run something like the command below, having stdSite size defined as 400 by 400 um it just does nothing. The verilog file provided is a simple inverter already synthesized using yosys into a single NAND cell which size is set in .lef as 200 by 200. \r\n\r\n<img width=\"368\" alt=\"Screenshot 2023-09-15 101107\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/3e31cb25-5394-40b2-86be-92df69e3e751\">\r\n\r\n\r\nMeanwhile, if I just let openroad to decide what size to give it just works for small core utilization value, which kinda makes sense.\r\n\r\n<img width=\"356\" alt=\"Screenshot 2023-09-15 101209\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/e4fb9b00-9224-44a5-8771-2688296f0bf6\">\r\n\r\n\r\nDo you think I\u2019m forgetting any step? The commands I run before getting to that point are the following:\r\n\r\n```\r\nread_liberty /path/lib/NandCellLibrary.lib\r\nread_lef /path/lef/NandCellLibrary.tech.lef\r\nread_lef /path/lef/NandCellLibrary.macro.lef  \r\nread_verilog /path//inverter.v\r\nlink_design inverter\r\nread_sdc /path/constraint.sdc\r\n\r\ninitialize_floorplan -die_area {0 0 10000 10000} -core_area {1000 1000 5000 5000} -site stdSite\r\n```\r\n\r\n**2. I have no macros stored in odb despite having them declared in lef/NandCellLibrary.macro.lef**  \r\n\r\nIf I just use utilization_area **floorplan_initialization** and keep running the following commands all seems to be working properly\r\n\r\n```\r\nmake_tracks met1 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met2 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met3 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nremove_buffers\r\nplace_pins -hor_layer met2 -ver_layer met3 -random\r\nglobal_placement -density 0.5 -pad_left 0 -pad_right 0\r\n```\r\n\r\n<img width=\"343\" alt=\"Screenshot 2023-09-15 101442\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/5367aa8f-4e66-4fe4-97b1-a0e7fed6f10d\">\r\n\r\nuntil I try to run macro placement\r\n\r\n<img width=\"350\" alt=\"Screenshot 2023-09-15 101654\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/35713305-ea34-4e1e-b481-b7402269ea8e\">\r\n\r\nthe error raised means that when running the following tcl procedure it has not found any macro\r\n```\r\nproc find_macros {} {\r\n  set macros \"\"\r\n\r\n  set db [ord::get_db]\r\n  set block [[$db getChip] getBlock]\r\n  foreach inst [$block getInsts] {\r\n\tset inst_master [$inst getMaster]\r\n\r\n\t# BLOCK means MACRO cells\r\n\tif { [string match [$inst_master getType] \"BLOCK\"] } {\r\n  \tappend macros \" \" $inst\r\n\t}\r\n  }\r\n  return $macros\r\n}\r\n```\r\n\r\nthe thing is that I have the NAND macro and another one called FILL defined in my .lefs and .lib . Then why could it be that there is no macro in db ?\r\n\r\n**Some things to be said.**\r\nWhen running  **read_liberty**, it prints 1 into terminal. Does it mean that there\u2019s an error? It seems I can keep running things. If so, is there any way to properly debug it?\r\nIt also happens if I run **check_status** command after reading all input files, which I didn\u2019t even find in documentation, so I just ignored it.\r\n\r\nAgain, if you had any idea or advice of what I\u2019m doing wrong, if I skipt some important step, etc. let me know, please.\r\n\r\nIf i manage to make it work i will try to post the whole flow command by command. It may help someone someday\r\n\r\nThank you.\r\n\r\n", "content": [{"author": "OuDret", "role": "user", "message": "Hello, I have been reading documentation and trying stuff with given pdks for about two weeks. My goal was to run OpenRoadFlowScripts but, since there is a lot of stuff, I\u2019ve took its makefile, config files and scripts and just extracted the openroad commands that I really need, so I can exactly know what args and what files i need and create them. Also running the commands 1 by 1 alongside GUI application helps me understanding what\u2019s going on.\r\n\r\nWhen calling the commands tho, I had some issues i could not solve. If you have an idea of any of the following problems I'm facing or any advice let me know.\r\n\r\n**1. I didn\u2019t manage to initialize floorplan with custom die area. It doesn\u2019t matter which values I use as die_are or core_area, it just doesn\u2019t work properly.** \r\n\r\nWhen I run something like the command below, having stdSite size defined as 400 by 400 um it just does nothing. The verilog file provided is a simple inverter already synthesized using yosys into a single NAND cell which size is set in .lef as 200 by 200. \r\n\r\n<img width=\"368\" alt=\"Screenshot 2023-09-15 101107\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/3e31cb25-5394-40b2-86be-92df69e3e751\">\r\n\r\n\r\nMeanwhile, if I just let openroad to decide what size to give it just works for small core utilization value, which kinda makes sense.\r\n\r\n<img width=\"356\" alt=\"Screenshot 2023-09-15 101209\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/e4fb9b00-9224-44a5-8771-2688296f0bf6\">\r\n\r\n\r\nDo you think I\u2019m forgetting any step? The commands I run before getting to that point are the following:\r\n\r\n```\r\nread_liberty /path/lib/NandCellLibrary.lib\r\nread_lef /path/lef/NandCellLibrary.tech.lef\r\nread_lef /path/lef/NandCellLibrary.macro.lef  \r\nread_verilog /path//inverter.v\r\nlink_design inverter\r\nread_sdc /path/constraint.sdc\r\n\r\ninitialize_floorplan -die_area {0 0 10000 10000} -core_area {1000 1000 5000 5000} -site stdSite\r\n```\r\n\r\n**2. I have no macros stored in odb despite having them declared in lef/NandCellLibrary.macro.lef**  \r\n\r\nIf I just use utilization_area **floorplan_initialization** and keep running the following commands all seems to be working properly\r\n\r\n```\r\nmake_tracks met1 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met2 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met3 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nremove_buffers\r\nplace_pins -hor_layer met2 -ver_layer met3 -random\r\nglobal_placement -density 0.5 -pad_left 0 -pad_right 0\r\n```\r\n\r\n<img width=\"343\" alt=\"Screenshot 2023-09-15 101442\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/5367aa8f-4e66-4fe4-97b1-a0e7fed6f10d\">\r\n\r\nuntil I try to run macro placement\r\n\r\n<img width=\"350\" alt=\"Screenshot 2023-09-15 101654\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/35713305-ea34-4e1e-b481-b7402269ea8e\">\r\n\r\nthe error raised means that when running the following tcl procedure it has not found any macro\r\n```\r\nproc find_macros {} {\r\n  set macros \"\"\r\n\r\n  set db [ord::get_db]\r\n  set block [[$db getChip] getBlock]\r\n  foreach inst [$block getInsts] {\r\n\tset inst_master [$inst getMaster]\r\n\r\n\t# BLOCK means MACRO cells\r\n\tif { [string match [$inst_master getType] \"BLOCK\"] } {\r\n  \tappend macros \" \" $inst\r\n\t}\r\n  }\r\n  return $macros\r\n}\r\n```\r\n\r\nthe thing is that I have the NAND macro and another one called FILL defined in my .lefs and .lib . Then why could it be that there is no macro in db ?\r\n\r\n**Some things to be said.**\r\nWhen running  **read_liberty**, it prints 1 into terminal. Does it mean that there\u2019s an error? It seems I can keep running things. If so, is there any way to properly debug it?\r\nIt also happens if I run **check_status** command after reading all input files, which I didn\u2019t even find in documentation, so I just ignored it.\r\n\r\nAgain, if you had any idea or advice of what I\u2019m doing wrong, if I skipt some important step, etc. let me know, please.\r\n\r\nIf i manage to make it work i will try to post the whole flow command by command. It may help someone someday\r\n\r\nThank you.\r\n\r\n", "date": "2023-09-15T08:30:16Z"}, {"author": "maliberty", "role": "assistant", "message": "What is the size of stdSite?  Is this a PDK you can share or is it proprietary?\r\n\r\nDo you have any instances of the macro in your netlist?", "date": "2023-09-15T15:11:43Z"}, {"author": "maliberty", "role": "assistant", "message": "```\r\nSITE stdSite\r\n  SYMMETRY Y ;\r\n  CLASS CORE ;\r\n  SIZE 500 BY 500 ;\r\nEND stdSite\r\n```\r\nis a huge site (500um x 500um) - I'm guessing that is a mistake though it doesn't explain the problem.", "date": "2023-09-18T20:24:47Z"}, {"author": "maliberty", "role": "assistant", "message": "Your LEF is missing the units for \"  DATABASE MICRONS \\<val\\>;\".  There is a bug when this is unspecified that I'll fix but you should set it (the LEF default value is very old).", "date": "2023-09-18T20:46:40Z"}], "date": "2023-09-15T08:30:16Z", "category": "Runtime", "subcategory": "Floorplan initialization issue", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3974", "id": 3974, "title": "Scaling the detailed router to handle circuits with 50 million cells", "author": "liangrj2014", "description": "Any ideas in scaling the detailed router to handle circuits with 50 million cells? The memory footprint and runtime will be serious concerns. Blows are suggestions from ChatGPT :) \r\n\r\n1.\tParallelization: Leverage parallel processing techniques to distribute the routing tasks across multiple CPU cores or GPUs. Multithreading and GPU acceleration can significantly speed up the routing process.\r\n2.\tHierarchical Routing: Implement hierarchical routing techniques that break down the routing problem into smaller, more manageable subproblems. This reduces the complexity of routing large circuits.\r\n3.\tIncremental Routing: Instead of routing the entire circuit in one go, use incremental routing where you route smaller sections of the circuit at a time. This can improve efficiency and reduce memory requirements.\r\n4.\tAdvanced Algorithms: Explore advanced routing algorithms that are optimized for large-scale circuits. Some algorithms are specifically designed to handle massive designs efficiently.\r\n5.\tMemory Management: Optimize memory usage by employing data structures and algorithms that reduce memory overhead. Use memory-efficient representations of the circuit.\r\n6.\tDistributed Computing: Consider distributed computing approaches where the routing task is distributed across multiple machines or nodes in a cluster. This can further speed up routing for large circuits.\r\n7.\tMachine Learning: Investigate the use of machine learning techniques to predict and guide the routing process. Machine learning can help in making routing decisions more efficiently.\r\n8.\tResource-Aware Routing: Develop routing algorithms that are aware of available resources (e.g., routing tracks, vias) and can make intelligent decisions to optimize routing.\r\n9.\tAlgorithmic Improvements: Continuously research and implement algorithmic improvements and optimizations specific to global and detailed routing for large-scale circuits.\r\n10.\tHardware Acceleration: Explore the use of specialized hardware accelerators, such as FPGA-based routers, to handle the routing tasks efficiently.\r\n11.\tCircuit Abstraction: Utilize abstraction techniques to reduce the complexity of the circuit during routing without sacrificing the quality of the final solution.\r\n12.\tMemory Hierarchy: Optimize the use of cache and memory hierarchies to minimize data access latencies during the routing process.\r\n13.\tBenchmarking and Profiling: Regularly benchmark and profile the routing tool to identify performance bottlenecks and areas for improvement.\r\n14.\tUser Guidance: Provide options for users to guide the router's behavior, allowing them to make trade-offs between runtime and routing quality.\r\n15.\tIncremental Updates: Implement mechanisms for incremental updates, allowing users to modify parts of the design without rerouting the entire circuit.\r\n", "content": [{"author": "liangrj2014", "role": "user", "message": "Any ideas in scaling the detailed router to handle circuits with 50 million cells? The memory footprint and runtime will be serious concerns. Blows are suggestions from ChatGPT :) \r\n\r\n1.\tParallelization: Leverage parallel processing techniques to distribute the routing tasks across multiple CPU cores or GPUs. Multithreading and GPU acceleration can significantly speed up the routing process.\r\n2.\tHierarchical Routing: Implement hierarchical routing techniques that break down the routing problem into smaller, more manageable subproblems. This reduces the complexity of routing large circuits.\r\n3.\tIncremental Routing: Instead of routing the entire circuit in one go, use incremental routing where you route smaller sections of the circuit at a time. This can improve efficiency and reduce memory requirements.\r\n4.\tAdvanced Algorithms: Explore advanced routing algorithms that are optimized for large-scale circuits. Some algorithms are specifically designed to handle massive designs efficiently.\r\n5.\tMemory Management: Optimize memory usage by employing data structures and algorithms that reduce memory overhead. Use memory-efficient representations of the circuit.\r\n6.\tDistributed Computing: Consider distributed computing approaches where the routing task is distributed across multiple machines or nodes in a cluster. This can further speed up routing for large circuits.\r\n7.\tMachine Learning: Investigate the use of machine learning techniques to predict and guide the routing process. Machine learning can help in making routing decisions more efficiently.\r\n8.\tResource-Aware Routing: Develop routing algorithms that are aware of available resources (e.g., routing tracks, vias) and can make intelligent decisions to optimize routing.\r\n9.\tAlgorithmic Improvements: Continuously research and implement algorithmic improvements and optimizations specific to global and detailed routing for large-scale circuits.\r\n10.\tHardware Acceleration: Explore the use of specialized hardware accelerators, such as FPGA-based routers, to handle the routing tasks efficiently.\r\n11.\tCircuit Abstraction: Utilize abstraction techniques to reduce the complexity of the circuit during routing without sacrificing the quality of the final solution.\r\n12.\tMemory Hierarchy: Optimize the use of cache and memory hierarchies to minimize data access latencies during the routing process.\r\n13.\tBenchmarking and Profiling: Regularly benchmark and profile the routing tool to identify performance bottlenecks and areas for improvement.\r\n14.\tUser Guidance: Provide options for users to guide the router's behavior, allowing them to make trade-offs between runtime and routing quality.\r\n15.\tIncremental Updates: Implement mechanisms for incremental updates, allowing users to modify parts of the design without rerouting the entire circuit.\r\n", "date": "2023-09-12T02:34:04Z"}, {"author": "maliberty", "role": "assistant", "message": "If the goal is detailed routing then you could look at the work we have done for distributed detailed routing.  It doesn't solve the memory concern but it does allow you to apply a lot more CPU to the runtime.", "date": "2023-09-12T04:09:28Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 would you run (or have Ahmed run) bsg_chip and mempool_group from [ISPD2024_benchmarks](https://drive.google.com/drive/u/2/folders/1afrsbeS_KuSeHEVfuQOuLWPuuZqlDVlw) on a 96-core machine on GCP to get a runtime & memory baseline.  Also run with the distributed router to see how much it helps with runtime as you have before.", "date": "2023-09-12T15:52:09Z"}, {"author": "osamahammad21", "role": "assistant", "message": "bsg_chip:\r\n\r\n- Machine: 96-CPU 360GB RAM\r\n- Total RUNTIME: 04:14:16\r\n- Peak Memory: 24.5GB\r\n- Pin Access:\r\n  - [INFO DRT-0267] cpu time = 18:12:07, elapsed time = 00:33:37, memory = 8956.00 (MB), peak = 9547.98 (MB)\r\n- Detailed Routing:\r\n  - [INFO DRT-0267] cpu time = 80:21:46, elapsed time = 03:26:59, memory = 19989.62 (MB), peak = 24497.96 (MB)\r\n- Converged After 57 Iterations\r\n- Did not set a min/max routing layer", "date": "2023-09-13T17:57:03Z"}], "date": "2023-09-12T02:34:04Z", "category": "Runtime", "subcategory": "Performance scalability", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3619", "id": 3619, "title": "DFT: Storing scan chain information in odb", "author": "fgaray", "description": "Hello everyone,\r\n\r\nTo support drawing scan chains in OpenROAD in the gui and CTL ([Core Test Language](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626)) parser/generator we need to make the scan info available in odb. Here I describe a DB schema to represent CTLs in odb.\r\n\r\n## Objective\r\n\r\n* Make scan chains available to the gui to be able to highlight scan structures and display information related to scan.\r\n* Provide a common source of true for other commands to query and find scan structures on the design.\r\n* Provide support for a future parser for CTLs files.\r\n\r\n## Out of scope\r\n\r\n* Parsing and writing a CTL file at this time.\r\n* Handling test patterns.\r\n\r\n## CTLs\r\n\r\nCTLs are files based on the [STIL standard](https://grouper.ieee.org/groups/1450/dot1/p1450.1-D14.pdf) that allow us to share information between DFT tools for optimizations and interoperability between different vendors. They describe the internal scan structures and they are useful too to share information between internal commands inside OpenROAD, like scan insertion and the GUI.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/b513ec9c-4575-45c4-bac0-0401ab164da2)\r\n\r\nSource: CTL for Test Information of Digital ICs, Rohit Kapur\r\n\r\n**The schema described here is not a 1:1 map of a CTL file but should be enough to create one or to store the information coming from a CTL.**\r\n\r\n## dbScanChain\r\n\r\n* name: string\r\n* length: uint\r\n* cells: list\\<dbInst\\>\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* scanClock: dbScanPin\r\n* scanEnable: dbScanPin\r\n* testMode: string\r\n* partitions: list\\<dbScanPartition\\>\r\n* scanInsts: list\\<dbScanInst\\>\r\n\r\n## dbScanPin\r\n\r\nWrapper to handle either dbBTerm or dbITerm:\r\n\r\n* bterm: dbBTerm\r\n* iterm: dbITerm\r\n\r\n## dbScanPartition\r\n\r\n* start: dbScanPin\r\n* stop: dbScanPin\r\n* name: string\r\n\r\n## dbScanInst\r\n\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* bits: uint\r\n* type: enum [OneBit, ShiftRegister, BlackBox]\r\n\r\n\r\n## Flow\r\n\r\nAt the end of *insert_dft* we will be storing the scan chain information into odb using the created dbCTL object. The gui will be able to query this information and display it. dbScanChain will be attached to the dbBlock that contains the scan chains that are inside it.\r\n\r\n\r\n## Open Questions\r\n\r\n* Where can I add a new dbObject (dbCTL) to dbBlock? \r\n* How can I represent maps (will std::map work?) string-> dbObject in the json db format?\r\n* I am creating a wrapper for dbBTerm and dbITerm for cases where the scan pins are not coming from the block, is there any way to handle this in the json db format? \r\n\r\n", "content": [{"author": "fgaray", "role": "user", "message": "Hello everyone,\r\n\r\nTo support drawing scan chains in OpenROAD in the gui and CTL ([Core Test Language](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626)) parser/generator we need to make the scan info available in odb. Here I describe a DB schema to represent CTLs in odb.\r\n\r\n## Objective\r\n\r\n* Make scan chains available to the gui to be able to highlight scan structures and display information related to scan.\r\n* Provide a common source of true for other commands to query and find scan structures on the design.\r\n* Provide support for a future parser for CTLs files.\r\n\r\n## Out of scope\r\n\r\n* Parsing and writing a CTL file at this time.\r\n* Handling test patterns.\r\n\r\n## CTLs\r\n\r\nCTLs are files based on the [STIL standard](https://grouper.ieee.org/groups/1450/dot1/p1450.1-D14.pdf) that allow us to share information between DFT tools for optimizations and interoperability between different vendors. They describe the internal scan structures and they are useful too to share information between internal commands inside OpenROAD, like scan insertion and the GUI.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/b513ec9c-4575-45c4-bac0-0401ab164da2)\r\n\r\nSource: CTL for Test Information of Digital ICs, Rohit Kapur\r\n\r\n**The schema described here is not a 1:1 map of a CTL file but should be enough to create one or to store the information coming from a CTL.**\r\n\r\n## dbScanChain\r\n\r\n* name: string\r\n* length: uint\r\n* cells: list\\<dbInst\\>\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* scanClock: dbScanPin\r\n* scanEnable: dbScanPin\r\n* testMode: string\r\n* partitions: list\\<dbScanPartition\\>\r\n* scanInsts: list\\<dbScanInst\\>\r\n\r\n## dbScanPin\r\n\r\nWrapper to handle either dbBTerm or dbITerm:\r\n\r\n* bterm: dbBTerm\r\n* iterm: dbITerm\r\n\r\n## dbScanPartition\r\n\r\n* start: dbScanPin\r\n* stop: dbScanPin\r\n* name: string\r\n\r\n## dbScanInst\r\n\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* bits: uint\r\n* type: enum [OneBit, ShiftRegister, BlackBox]\r\n\r\n\r\n## Flow\r\n\r\nAt the end of *insert_dft* we will be storing the scan chain information into odb using the created dbCTL object. The gui will be able to query this information and display it. dbScanChain will be attached to the dbBlock that contains the scan chains that are inside it.\r\n\r\n\r\n## Open Questions\r\n\r\n* Where can I add a new dbObject (dbCTL) to dbBlock? \r\n* How can I represent maps (will std::map work?) string-> dbObject in the json db format?\r\n* I am creating a wrapper for dbBTerm and dbITerm for cases where the scan pins are not coming from the block, is there any way to handle this in the json db format? \r\n\r\n", "date": "2023-07-14T21:21:09Z"}, {"author": "fgaray", "role": "assistant", "message": "Hi @maliberty , who do you think is the right person to review this? Specially the open questions at the end.\r\n\r\nThanks!", "date": "2023-07-20T16:27:46Z"}, {"author": "maliberty", "role": "assistant", "message": "Scan chain is used in both CTL and in DEF.  Can dbScanChain accommodate both or do we need to consider having two classes?  If the later, how would you suggest naming them ?", "date": "2023-08-02T20:06:48Z"}, {"author": "maliberty", "role": "assistant", "message": "Looking at DEF:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/6a7a39c4-e9b0-44e5-8beb-0fe450c7928d)\r\n\r\nIt looks like the dbScanPartition needs a way to store MAXBITS.  \r\n\r\nEach element of the chain also has a BITS field which seems hard to represent here.  Perhaps we need a dbScanInst?\r\n\r\nHow would you infer FLOATING or ORDERED from the design?", "date": "2023-08-02T23:21:57Z"}, {"author": "fgaray", "role": "assistant", "message": "Hi @maliberty ,\r\n\r\nDo you think we are ready to start the implementation?\r\n\r\nThanks!,\r\nFelipe", "date": "2023-08-09T23:13:53Z"}, {"author": "QuantamHD", "role": "assistant", "message": "LGTM. Thanks for the contirbution @fgaray ", "date": "2023-09-15T17:08:21Z"}], "date": "2023-07-14T21:21:09Z", "category": "Feature Request", "subcategory": "Scan chain representation", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3953", "id": 3953, "title": "Odd looking placement density in designs/nangate45/gcd", "author": "oharboe", "description": "Run `make designs/nangate45/gcd/config.mk &&  make designs/nangate45/gcd/config.mk gui_final` and enable placement heat map.\r\n\r\nThis looks odd. There is less going on in the top and right edges, but it still \"looks wrong\" to me.\r\n\r\nThoughts?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/532929ca-34bd-4bce-b3b2-df547ff91e26)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Run `make designs/nangate45/gcd/config.mk &&  make designs/nangate45/gcd/config.mk gui_final` and enable placement heat map.\r\n\r\nThis looks odd. There is less going on in the top and right edges, but it still \"looks wrong\" to me.\r\n\r\nThoughts?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/532929ca-34bd-4bce-b3b2-df547ff91e26)\r\n", "date": "2023-09-06T05:25:04Z"}, {"author": "maliberty", "role": "assistant", "message": "It does look a bit odd.  @AcKoucher can you take a look?", "date": "2023-09-06T15:20:11Z"}, {"author": "AcKoucher", "role": "assistant", "message": "With nets being draw it's a bit hard to see. I just ran master in nangate45/gcd and as far as I see, everything looks ok.\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/104802710/28693f96-c91d-4b92-a1af-4985741156c5)\r\n\r\n\r\n", "date": "2023-09-06T17:23:50Z"}, {"author": "AcKoucher", "role": "assistant", "message": "I just realized in the discussion name it says Placement Density, but in your image we see Routing Congestion. ", "date": "2023-09-06T17:27:02Z"}], "date": "2023-09-06T05:25:04Z", "category": "Runtime", "subcategory": "Visualization issue", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3955", "id": 3955, "title": "`-balance_levels`", "author": "kareefardi", "description": "`-balance_levels` is not documented. What is does this flag do and what are the uses of it?\r\nEdit: \r\nMore context: It is a flag for `clock_tree_synthesis` command ", "content": [{"author": "kareefardi", "role": "user", "message": "`-balance_levels` is not documented. What is does this flag do and what are the uses of it?\r\nEdit: \r\nMore context: It is a flag for `clock_tree_synthesis` command ", "date": "2023-09-06T14:36:02Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@luarss\r\ndid we miss this flag?", "date": "2023-09-06T14:46:12Z"}, {"author": "maliberty", "role": "assistant", "message": "When you have a non-register in the clock tree (eg clock-gate or inverter) then it attempts to ensure the are similar number of levels in the tree across that object.  The idea is captured in this image\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/eddb3913-086a-4c3f-8744-7a3cadc90543)\r\n", "date": "2023-09-06T15:30:54Z"}], "date": "2023-09-06T14:36:02Z", "category": "Query", "subcategory": "Tool usage", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3939", "id": 3939, "title": "Possible summary of changes format", "author": "vvbandeira", "description": "While discussion #3856 has leaned to whether there should be a release and how frequent it should be, this discussion thread is to help guide the format and the process we would use to do such releases. We are considering using an automated way to generate \"release notes\" or at least a summary of recent changes. One proposed way to achieve this is to use PR titles and \"Merge commit\" messages. We would define and enforce a style of PR title, e.g., `[<TYPE>] <TOOL>: <SUMMARY>` where `[FEAT] drt: added shiny router cmd`. While `<TOOL>` is well defined (i.e., any module under `src/third-party` and `<SUMMARY>` will depend on the PR, what would be the most relevant values `<TYPE>` to include and their definition? As a starter point:\r\n\r\n- `[FEAT]` or `[NEW]`: for when we add new features, either in the form of Tcl/Python API changes -- e.g., new commands or flags.\r\n- `[DOCS]` or `[DOC]`: for documentation only changes.\r\n- `[BUGF]` or `[FIX]`: when fixing bugs or issues.\r\n- `[UPGR]` or `[ENH]`: upgrade/enhance -- not very sure about this, but it was what I thought with 4/3 letters to keep similar to above, mostly a self-imposed restriction, open to feedback.\r\n\r\n\r\ncc/ @maliberty @dralabeing @luarss @rovinski @QuantamHD ", "content": [{"author": "vvbandeira", "role": "user", "message": "While discussion #3856 has leaned to whether there should be a release and how frequent it should be, this discussion thread is to help guide the format and the process we would use to do such releases. We are considering using an automated way to generate \"release notes\" or at least a summary of recent changes. One proposed way to achieve this is to use PR titles and \"Merge commit\" messages. We would define and enforce a style of PR title, e.g., `[<TYPE>] <TOOL>: <SUMMARY>` where `[FEAT] drt: added shiny router cmd`. While `<TOOL>` is well defined (i.e., any module under `src/third-party` and `<SUMMARY>` will depend on the PR, what would be the most relevant values `<TYPE>` to include and their definition? As a starter point:\r\n\r\n- `[FEAT]` or `[NEW]`: for when we add new features, either in the form of Tcl/Python API changes -- e.g., new commands or flags.\r\n- `[DOCS]` or `[DOC]`: for documentation only changes.\r\n- `[BUGF]` or `[FIX]`: when fixing bugs or issues.\r\n- `[UPGR]` or `[ENH]`: upgrade/enhance -- not very sure about this, but it was what I thought with 4/3 letters to keep similar to above, mostly a self-imposed restriction, open to feedback.\r\n\r\n\r\ncc/ @maliberty @dralabeing @luarss @rovinski @QuantamHD ", "date": "2023-09-04T18:15:29Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't think of it as \"summary of recent changes\" as we still don't plan to do releases.  <TOOL> is also optional as some changes may span multiple tools though that should be less common.", "date": "2023-09-04T21:32:22Z"}, {"author": "rovinski", "role": "assistant", "message": "I like the spirit, but I can foresee a few issues:\r\n\r\n1. A PR might span multiple tools, in which case it's hard to accommodate the format\r\n2. A PR might implement a feature only partially, in which case it's not ready for full use yet\r\n3. A PR might span multiple types (e.g. both feature and enhancement).\r\n4. If we want this scheme to stick, we will likely need a bot to enforce it or at least remind PR authors\r\n\r\nAs such,\r\n\r\n* I think that enhancement and feature should probably just be one tag. I think PRs end up being both too often to distinguish\r\n* We need some sort of mechanism or identifying a feature as not ready for general use yet.", "date": "2023-09-06T04:06:07Z"}], "date": "2023-09-04T18:15:29Z", "category": "Feature Request", "subcategory": "Release process enhancement", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3931", "id": 3931, "title": "about the meaning of frBlockObjectEnum", "author": "gilgamsh", "description": "in src/frBaseTypes.h , there is a enum class called frBlockObjectEnum, and it has lots of types. I want to know the prefix meanings. Such as `frc`,`drc`,`tac`,`gcc`", "content": [{"author": "gilgamsh", "role": "user", "message": "in src/frBaseTypes.h , there is a enum class called frBlockObjectEnum, and it has lots of types. I want to know the prefix meanings. Such as `frc`,`drc`,`tac`,`gcc`", "date": "2023-08-31T06:02:17Z"}, {"author": "maliberty", "role": "assistant", "message": "The c is for constant.  fr = base types, dr = detailed router, ta = track assignment, gc = drc  (these correspond to the subdirs of src/).\r\n", "date": "2023-08-31T14:05:06Z"}, {"author": "gilgamsh", "role": "assistant", "message": "Thank you very much", "date": "2023-09-05T08:21:52Z"}], "date": "2023-08-31T06:02:17Z", "category": "Query", "subcategory": "Code understanding", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3589", "id": 3589, "title": "how to fix metal spacing DRCs", "author": "gkamendje", "description": "After 64 iterations DRT stopped on my design a generated a DRC report. It turns out that most of the DRC are related to METAL1 spacing  (with net VSS) and Metal SpacingTableTw. The design is not very congested so I wonder why the tool could not fix these rules. Could it be that I am missing something here (maybe something in my platform definition)? Is there a way to fix these violations? \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/af73acfe-92fb-4590-baaf-31be8548e95e)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/4ed7f795-fef7-4d49-9f78-76b85c9cae37)\r\n\r\n", "content": [{"author": "gkamendje", "role": "user", "message": "After 64 iterations DRT stopped on my design a generated a DRC report. It turns out that most of the DRC are related to METAL1 spacing  (with net VSS) and Metal SpacingTableTw. The design is not very congested so I wonder why the tool could not fix these rules. Could it be that I am missing something here (maybe something in my platform definition)? Is there a way to fix these violations? \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/af73acfe-92fb-4590-baaf-31be8548e95e)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/4ed7f795-fef7-4d49-9f78-76b85c9cae37)\r\n\r\n", "date": "2023-07-08T04:13:11Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you provide a test case?  ", "date": "2023-07-08T04:28:06Z"}, {"author": "maliberty", "role": "assistant", "message": "You have very wide METAL1 power stripes:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/ec146977-bcb3-4725-8140-4bef3c0137ef)\r\n\r\nThe pin is less than the min space (0.19 < 0.23) from the stripe so there is always going to be a DRC error here.   You need to adjust your PDN definition to be resolve this.", "date": "2023-09-05T04:01:19Z"}], "date": "2023-07-08T04:13:11Z", "category": "Bug", "subcategory": "DRC violation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3881", "id": 3881, "title": "Comparing ASAP7 and sky130hd with respect to ALU operations", "author": "oharboe", "description": "The [mock-alu](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/src/mock-alu) allows studying the speed and area of various typical ALU operations.\r\n\r\nThe mock-alu has two 64 bit inputs and one 64 bit output. The inputs and outputs are registered within the mock-alu. This is to have clear boundary conditions when studying the guts of the mock-alu.\r\n\r\nThe mock-alu implements a number of operations and variants of these operations to study the area and minimum clock period for these operations.\r\n\r\nThe operations fall into a couple of categories:\r\n\r\n- *add, subtract and compare*: ADD, SUB, SETCC_EQ(equal), SETCC_NE (not equal), SETCC_LT (less than), SETT_LE (less than or equal), SETCC_ULT (unsigned less than), SETCC_ULE(unsigned less than or equal)\r\n- *barrel shifter*: SHR(logical shift right), SRA(arithmetic shift right), SHL(shift left)\r\n- *bitwise logic*: OR(bitwise or), AND(bitwise and), XOR(bitwise xor)\r\n- *multiplication*: 64 bit multiply. There are various algorithms used, default Han Carlson. The implementation is PDK specific and comes from https://github.com/antonblanchard/vlsiffra/\r\n- *multiplexor*: MUX1..8. This is not really an ALU operation. All that is happening here is that bits from the input as selected using a mux and put into the output. This allows studying the performance of the mux that sits before the output of an ALU, which is selecting between the various supported operations.\r\n\r\nNext, the mock-alu allows implementing any combination of these operations. This allows implementing an ALU that only supports the shift operations, which can be labelled \"SHR,SHL,SRA\". This shift operation only mock-alu has a single shared barrelshifter. Similarly, a bitwise logic only mock-alu, can be labelled \"OR,AND,XOR\".\r\n\r\nAt this point, we can plot various mock-alu implementations for ASAP7 and sky130hd:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b9234684-43f4-4a74-98dd-81cf8b74f9ce)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/fefae238-58ed-4bfe-a307-780046acdb83)\r\n\r\nHere 8,16,32 and 64 wide ADD operations are plotted:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f4a837e6-700c-4436-81ac-221bdfafdb57)\r\n\r\nVarious multiplication algorithms for 64 bit multiplication, 4 pipeline stages:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/0a8d6518-5999-4d18-87fa-38a13857764f)\r\n\r\nPlotting Han Carlson multiply algorithm with 8, 16, 32 and 64 bit bit width:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97fb01d7-e535-4578-9fe9-cdb80a4e945f)\r\n\r\nThoughts?", "content": [{"author": "oharboe", "role": "user", "message": "The [mock-alu](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/src/mock-alu) allows studying the speed and area of various typical ALU operations.\r\n\r\nThe mock-alu has two 64 bit inputs and one 64 bit output. The inputs and outputs are registered within the mock-alu. This is to have clear boundary conditions when studying the guts of the mock-alu.\r\n\r\nThe mock-alu implements a number of operations and variants of these operations to study the area and minimum clock period for these operations.\r\n\r\nThe operations fall into a couple of categories:\r\n\r\n- *add, subtract and compare*: ADD, SUB, SETCC_EQ(equal), SETCC_NE (not equal), SETCC_LT (less than), SETT_LE (less than or equal), SETCC_ULT (unsigned less than), SETCC_ULE(unsigned less than or equal)\r\n- *barrel shifter*: SHR(logical shift right), SRA(arithmetic shift right), SHL(shift left)\r\n- *bitwise logic*: OR(bitwise or), AND(bitwise and), XOR(bitwise xor)\r\n- *multiplication*: 64 bit multiply. There are various algorithms used, default Han Carlson. The implementation is PDK specific and comes from https://github.com/antonblanchard/vlsiffra/\r\n- *multiplexor*: MUX1..8. This is not really an ALU operation. All that is happening here is that bits from the input as selected using a mux and put into the output. This allows studying the performance of the mux that sits before the output of an ALU, which is selecting between the various supported operations.\r\n\r\nNext, the mock-alu allows implementing any combination of these operations. This allows implementing an ALU that only supports the shift operations, which can be labelled \"SHR,SHL,SRA\". This shift operation only mock-alu has a single shared barrelshifter. Similarly, a bitwise logic only mock-alu, can be labelled \"OR,AND,XOR\".\r\n\r\nAt this point, we can plot various mock-alu implementations for ASAP7 and sky130hd:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b9234684-43f4-4a74-98dd-81cf8b74f9ce)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/fefae238-58ed-4bfe-a307-780046acdb83)\r\n\r\nHere 8,16,32 and 64 wide ADD operations are plotted:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f4a837e6-700c-4436-81ac-221bdfafdb57)\r\n\r\nVarious multiplication algorithms for 64 bit multiplication, 4 pipeline stages:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/0a8d6518-5999-4d18-87fa-38a13857764f)\r\n\r\nPlotting Han Carlson multiply algorithm with 8, 16, 32 and 64 bit bit width:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97fb01d7-e535-4578-9fe9-cdb80a4e945f)\r\n\r\nThoughts?", "date": "2023-08-20T09:26:49Z"}, {"author": "maliberty", "role": "assistant", "message": "Its interesting that the various multiply algorithms have the same delay (excluding ripple).\r\n\r\nI don't see a MULT for sky130", "date": "2023-08-20T14:12:30Z"}, {"author": "oharboe", "role": "assistant", "message": "Here are the `vlsi-adder` algorith, excluding ripple that was ca. 2000+ ps. It would have made the graph harder to read:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/07c8e764-81d1-48fe-858a-39175a1d3c68)\r\n", "date": "2023-08-21T17:31:48Z"}, {"author": "maliberty", "role": "assistant", "message": "Do all your runs end in negative slack at the end of the cts & the complete flow?  Once we reach zero slack we stop optimizing.", "date": "2023-08-21T17:34:41Z"}, {"author": "maliberty", "role": "assistant", "message": "One thing worth noting is that asap7 doesn't have a full or half adder cells in the library (sky130 does).", "date": "2023-08-21T20:46:50Z"}, {"author": "mithro", "role": "assistant", "message": "BTW Have you seen Teo's spreadsheet @ https://docs.google.com/spreadsheets/d/1pTGzZo5XYU7iuUryxorfzJwNuE9rM3le5t44wmLohy4/edit#gid=126548956 ?", "date": "2023-08-21T23:31:43Z"}, {"author": "mithro", "role": "assistant", "message": "BTW I would love to get a similar spreadsheet to Teo's for GF180MCU and ASAP7 too. \r\n\r\nSadly, Teo got distracted by the mathematical theory and then was stolen by NVIDIA before he could get to that.", "date": "2023-08-22T21:47:32Z"}, {"author": "tspyrou", "role": "assistant", "message": "@oharboe did you try using set_clock_uncertainty to force the slack to be negative and make the tool work harder.\r\nAs @maliberty mentioned optimization will stop once timing passes. ", "date": "2023-08-23T15:25:48Z"}, {"author": "mithro", "role": "assistant", "message": "@oharboe - Any chance you could do a write up of what you discovered?", "date": "2023-09-01T22:40:33Z"}, {"author": "oharboe", "role": "assistant", "message": "> There is a lot bunch of back and forth and I'm unclear what the final results are (and exactly how you produced them).\r\n> \r\n> Various questions include;\r\n> \r\n> * How do I reproduce your results and graphs?\r\n\r\nRun this script:  https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/master/flow/designs/src/mock-alu/plot-area-min-clock-period.py\r\n\r\nSome tinkering required.\r\n\r\n> * What settings did you end up using and why did you end up using those settings? (Particularly around making the tool work harder?)\r\n\r\nI didn't study how to make a best possible ALU, I was only interested the relationship between the ALU operations.\r\n\r\n> * How do the various implementations compare? Do you understand why the compare this way?\r\n\r\nThe various implementation of additions and multiplications?\r\n\r\nIt is a mystery why there is essentially no difference between multiplication implementation clock periods...\r\n\r\n> * How do SKY130 and ASAP7 compare in the end here?\r\n\r\nThe lessons learned on the relative size and speed of ALU operations appear to be much the same with SKY130 and ASAP7. Which is surprising. Ca. 15 years separate them...\r\n\r\n> * Do the relative \"positions\" between the implementations hold across SKY130 and ASAP7?\r\n\r\nPretty much.\r\n\r\n> * What was the most interesting / unexpected thing you discovered?\r\n\r\nThat relative size and speed of simple ALU operations are essentially unchanged across process nodes.\r\n\r\nAlso, it would appear that if an ALU operation is 200ps on x86 7nm, yielding 5GHz, then one could choose to divide clock period of ASAP7+OpenROAD by 4 for simple ALU operations when one models and decide to take the lessons learned and apply them to architectural exploration. Further choose to treat the speed of ASAP7+OpenROAD as not terribly important in terms of making architctural choices as the choices will be the same if everything is optimized.\r\n\r\nBy this I mean that to drive your architctural exploration, as a [first order approximation](https://en.wikipedia.org/wiki/Order_of_approximation#First-order), write the RTL in an idiomatic way, run them through ASAP7+OpenROAD and if your design is 4x the desired clock period, your design isn't completely off.\r\n\r\nNobody who have information on commercial tools and PDKs can challenge me here. :-) Not because I'm right, but because PDKs and commercial tools are under strict NDAs... This also explains why there are a lot of unsaid things in this thread...\r\n\r\n> Writing it up as a nice coherent blog post would be pretty awesome but totally understand if you do nt have the time to do so.\r\n\r\nAgreed. At least I summarize a bit here. I'm happy to hear that there are some that are interested in this.\r\n\r\nPerhaps you would like to write a blog-post using the script above?\r\n", "date": "2023-09-03T08:22:17Z"}], "date": "2023-08-20T09:26:49Z", "category": "Query", "subcategory": "Usage question", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3856", "id": 3856, "title": "Release scheme", "author": "Blebowski", "description": "Hello,\r\n\r\nI see there is a lot of development going on. I am wondering whether there are any opinions/plans about introducing a release scheme (e.g. once a month or quarterly, or after major feature changes / enhancements) ? Maintaining something like `CHANGES.md` or `NEWS.md` would be also very handy. Once user does not follow the development almost day-to-day, it is easy to get lost.\r\n\r\n", "content": [{"author": "Blebowski", "role": "user", "message": "Hello,\r\n\r\nI see there is a lot of development going on. I am wondering whether there are any opinions/plans about introducing a release scheme (e.g. once a month or quarterly, or after major feature changes / enhancements) ? Maintaining something like `CHANGES.md` or `NEWS.md` would be also very handy. Once user does not follow the development almost day-to-day, it is easy to get lost.\r\n\r\n", "date": "2023-08-14T19:14:12Z"}, {"author": "QuantamHD", "role": "assistant", "message": "I would be in favor of a news/changes file, but I'm a little bit more hesitant on slow releases. \r\n\r\nPrecision Innovations provides a daily release https://github.com/Precision-Innovations/OpenROAD/releases which I feel like is a good cadence given the fast pace of developement.\r\n\r\nI think slower stable releases make sense when you have an entity that's willing to cherry pick bug fixes into older releases, which we don't have yet. I feel like if we embraced a slower release process at this point in time the net result would be people stuck with bugs for longer.\r\n\r\n", "date": "2023-08-14T19:41:59Z"}, {"author": "mithro", "role": "assistant", "message": "A monthly newsletter might be a good way to let people see the improvements.", "date": "2023-08-14T19:49:12Z"}, {"author": "dralabeing", "role": "assistant", "message": "Daily releases are good to get the best , updated and stable versions especially with prebuilt binaries from the Precision releases.  I do think it would be good to add some sort of updates that are not yet in the docs or clear in the commit histories. For e.g mpl2 works well but this is not yet reflected in the default flow or docs but can be flagged in an Updates.md for users to try out --somewhat like a beta version. Similar any new features that are ready for use (partitioning, pin swapping,  gate cloning etc.) can be mentioned along with a special release tag .\r\nMonthly update frequency should be good as in special cases when an update is done sooner on a major feature.", "date": "2023-08-17T21:32:46Z"}, {"author": "rovinski", "role": "assistant", "message": "I really like the [KLayout release notes](https://www.klayout.de/development.html) which have a list of PRs in that release (with hyperlinks) and a one-line description, as well as classifying as a bugfix or enhancement. It doesn't sound like we're moving from daily releases, but it could form a semi-automatically generated monthly newsletter or similar.", "date": "2023-08-31T07:19:37Z"}], "date": "2023-08-14T19:14:12Z", "category": "Feature Request", "subcategory": "Release management", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3915", "id": 3915, "title": "Slack histogram horizontal axis", "author": "oharboe", "description": "What is the horizontal axis?\r\n\r\nI would have thought picoseconds, but the horizontal axis is not labeled...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9b5c6daa-25f6-42b7-adf4-e11c30bf3234)\r\n\r\nThis is from `make gui_place` in #3910", "content": [{"author": "oharboe", "role": "user", "message": "What is the horizontal axis?\r\n\r\nI would have thought picoseconds, but the horizontal axis is not labeled...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9b5c6daa-25f6-42b7-adf4-e11c30bf3234)\r\n\r\nThis is from `make gui_place` in #3910", "date": "2023-08-28T05:19:11Z"}, {"author": "oharboe", "role": "assistant", "message": "Also, when I click on \"Endpoint slack\" upper left corner, it looks like there should have been more than one choice?\r\n\r\nhttps://drive.google.com/file/d/1xCo_SBrhFjxZfQ-IOakjJyKaGkyZcZIP/view?usp=sharing", "date": "2023-08-28T05:22:22Z"}, {"author": "maliberty", "role": "assistant", "message": "It looks like \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/202fee93-b91e-4c1c-a8da-65d0e27a213c)\r\n is in the wrong place  @AcKoucher any idea why?", "date": "2023-08-28T14:17:17Z"}], "date": "2023-08-28T05:19:11Z", "category": "Query", "subcategory": "Visualization issue", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3800", "id": 3800, "title": "Why three buffers for a through signal in mock-array/Element?", "author": "oharboe", "description": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1322(soon to be merged, but the same issue exists in master), I looked at a path going through Element (no registers, just a signal going from left to right through the Element):\r\n\r\nThere are three buffers in this path: input, a middle buffer inserted by synthesis, and an output buffer. The input and output buffers are introduced by OpenROAD. What motivates synthesis to introduce this middle buffer? Isn't that the job of resizing?\r\n\r\nFrom 1_synth.v we see the middle buffer:\r\n\r\n```\r\n  BUFx2_ASAP7_75t_R _776_ (\r\n    .A(io_lsbIns_5),\r\n    .Y(io_lsbOuts_4)\r\n  );\r\n```\r\n\r\nThe buffer is inserted by this code: \r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 v input external delay\r\n                  6.80    0.80    0.80 v io_lsbIns_5 (in)\r\n     1    0.83                           io_lsbIns_5 (net)\r\n                  4.97   12.72   13.52 v input261/Y (BUFx2_ASAP7_75t_R)\r\n     1    0.79                           net261 (net)\r\n                 13.54   15.20   28.72 v _776_/Y (BUFx3_ASAP7_75t_R)\r\n     1    5.63                           net268 (net)\r\n                 17.44   23.37   52.09 v output268/Y (BUFx4f_ASAP7_75t_R)\r\n     1   10.23                           io_lsbOuts_4 (net)\r\n                 17.59    0.91   53.00 v io_lsbOuts_4 (out)\r\n                                 53.00   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -53.00   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                -23.40   slack (VIOLATED)\r\n\r\n```\r\n\r\nOverview:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/bd71b9bc-4f8e-4b36-a922-825c52c25fbd)\r\n\r\nThe two nearly back-to-back buffers on the output:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c5eb763c-10c1-4be0-8b8d-1279242608c7)\r\n\r\n\r\nMoreover: there are two buffers(synthesis introduced buffer + output buffer) nearly back to back at the output. The Element is routed by abutment horizontall, so we get a third input buffer immediately from the Element to the right.\r\n\r\n\r\nIf I disable https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96, I get no buffers, which was unexpected as OpenROAD, not synthesis inserts input and output buffers...\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 ^ input external delay\r\n                 31.60   16.96   16.96 ^ io_lsbIns_5 (in)\r\n     1   15.09                           io_lsbIns_5 (net)\r\n                 42.77    0.00   16.96 ^ io_lsbOuts_4 (out)\r\n                                 16.96   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -16.96   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                 12.64   slack (MET)\r\n```\r\n\r\nAt the mock-array level, I see something unexpected, 0 delay for the in-out paths:\r\n\r\n```\r\n>>> report_checks -path_delay max -through ces_7_1/io_lsbIns_* -fields {net cap slew}\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: ces_7_4 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                        287.91  287.91   clock network delay (propagated)\r\n                 83.67    0.00  287.91 ^ ces_7_0/clock (Element)\r\n                  3.44  164.65  452.56 v ces_7_0/io_lsbOuts_7 (Element)\r\n     1    0.00                           ces_7_0_io_lsbOuts_7 (net)\r\n                  5.80    0.00  452.56 v ces_7_1/io_lsbOuts_6 (Element)\r\n     1    0.00                           ces_7_1_io_lsbOuts_6 (net)\r\n                  5.80    0.00  452.56 v ces_7_2/io_lsbOuts_5 (Element)\r\n     1    0.00                           ces_7_2_io_lsbOuts_5 (net)\r\n                  5.80    0.00  452.56 v ces_7_3/io_lsbOuts_4 (Element)\r\n     1    0.69                           ces_7_3_io_lsbOuts_4 (net)\r\n                  5.80    0.00  452.56 v ces_7_4/io_lsbIns_4 (Element)\r\n                                452.56   data arrival time\r\n\r\n                        300.00  300.00   clock clock (rise edge)\r\n                        238.74  538.74   clock network delay (propagated)\r\n                        -10.00  528.74   clock uncertainty\r\n                          1.40  530.14   clock reconvergence pessimism\r\n                                530.14 ^ ces_7_4/clock (Element)\r\n                         70.02  600.16   library setup time\r\n                                600.16   data required time\r\n-----------------------------------------------------------------------------\r\n                                600.16   data required time\r\n                               -452.56   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                147.59   slack (MET)\r\n```\r\n\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1322(soon to be merged, but the same issue exists in master), I looked at a path going through Element (no registers, just a signal going from left to right through the Element):\r\n\r\nThere are three buffers in this path: input, a middle buffer inserted by synthesis, and an output buffer. The input and output buffers are introduced by OpenROAD. What motivates synthesis to introduce this middle buffer? Isn't that the job of resizing?\r\n\r\nFrom 1_synth.v we see the middle buffer:\r\n\r\n```\r\n  BUFx2_ASAP7_75t_R _776_ (\r\n    .A(io_lsbIns_5),\r\n    .Y(io_lsbOuts_4)\r\n  );\r\n```\r\n\r\nThe buffer is inserted by this code: \r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 v input external delay\r\n                  6.80    0.80    0.80 v io_lsbIns_5 (in)\r\n     1    0.83                           io_lsbIns_5 (net)\r\n                  4.97   12.72   13.52 v input261/Y (BUFx2_ASAP7_75t_R)\r\n     1    0.79                           net261 (net)\r\n                 13.54   15.20   28.72 v _776_/Y (BUFx3_ASAP7_75t_R)\r\n     1    5.63                           net268 (net)\r\n                 17.44   23.37   52.09 v output268/Y (BUFx4f_ASAP7_75t_R)\r\n     1   10.23                           io_lsbOuts_4 (net)\r\n                 17.59    0.91   53.00 v io_lsbOuts_4 (out)\r\n                                 53.00   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -53.00   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                -23.40   slack (VIOLATED)\r\n\r\n```\r\n\r\nOverview:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/bd71b9bc-4f8e-4b36-a922-825c52c25fbd)\r\n\r\nThe two nearly back-to-back buffers on the output:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c5eb763c-10c1-4be0-8b8d-1279242608c7)\r\n\r\n\r\nMoreover: there are two buffers(synthesis introduced buffer + output buffer) nearly back to back at the output. The Element is routed by abutment horizontall, so we get a third input buffer immediately from the Element to the right.\r\n\r\n\r\nIf I disable https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96, I get no buffers, which was unexpected as OpenROAD, not synthesis inserts input and output buffers...\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 ^ input external delay\r\n                 31.60   16.96   16.96 ^ io_lsbIns_5 (in)\r\n     1   15.09                           io_lsbIns_5 (net)\r\n                 42.77    0.00   16.96 ^ io_lsbOuts_4 (out)\r\n                                 16.96   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -16.96   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                 12.64   slack (MET)\r\n```\r\n\r\nAt the mock-array level, I see something unexpected, 0 delay for the in-out paths:\r\n\r\n```\r\n>>> report_checks -path_delay max -through ces_7_1/io_lsbIns_* -fields {net cap slew}\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: ces_7_4 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                        287.91  287.91   clock network delay (propagated)\r\n                 83.67    0.00  287.91 ^ ces_7_0/clock (Element)\r\n                  3.44  164.65  452.56 v ces_7_0/io_lsbOuts_7 (Element)\r\n     1    0.00                           ces_7_0_io_lsbOuts_7 (net)\r\n                  5.80    0.00  452.56 v ces_7_1/io_lsbOuts_6 (Element)\r\n     1    0.00                           ces_7_1_io_lsbOuts_6 (net)\r\n                  5.80    0.00  452.56 v ces_7_2/io_lsbOuts_5 (Element)\r\n     1    0.00                           ces_7_2_io_lsbOuts_5 (net)\r\n                  5.80    0.00  452.56 v ces_7_3/io_lsbOuts_4 (Element)\r\n     1    0.69                           ces_7_3_io_lsbOuts_4 (net)\r\n                  5.80    0.00  452.56 v ces_7_4/io_lsbIns_4 (Element)\r\n                                452.56   data arrival time\r\n\r\n                        300.00  300.00   clock clock (rise edge)\r\n                        238.74  538.74   clock network delay (propagated)\r\n                        -10.00  528.74   clock uncertainty\r\n                          1.40  530.14   clock reconvergence pessimism\r\n                                530.14 ^ ces_7_4/clock (Element)\r\n                         70.02  600.16   library setup time\r\n                                600.16   data required time\r\n-----------------------------------------------------------------------------\r\n                                600.16   data required time\r\n                               -452.56   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                147.59   slack (MET)\r\n```\r\n\r\n\r\n", "date": "2023-08-06T11:52:32Z"}, {"author": "maliberty", "role": "assistant", "message": "The third buffer buffer looks to have been from yosys.  I imagine the incoming netlist was a single buffer (_776_).   The other two come from buffer_ports.  You could skip that if you want a single buffer.", "date": "2023-08-07T02:09:09Z"}, {"author": "oharboe", "role": "assistant", "message": "> The third buffer buffer looks to have been from yosys.\r\n\r\nYep.\r\n\r\n> I imagine the incoming netlist was a single buffer (_776_). The other two come from buffer_ports. You could skip that if you want a single buffer.\r\n\r\nSurprisingly, the input output buffers go away if I disable yosys buffer insertions. Any thoughts about why that is happening?\r\n\r\nIt sounds like you only expected input/output buffers in this case...\r\n\r\nHow can I disable output/input buffers for only in-out paths and is it a good idea in this case?\r\n\r\nAlso, I didn't expect zero propagation time when there are no buffers, is that expected?\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-08-07T04:41:47Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty One last question, why is this line in synth.tcl? I understand what it does, I just don't know why it is there.\r\n\r\n```\r\ninsbuf -buf {*}$::env(MIN_BUF_CELL_AND_PORTS)\r\n```", "date": "2023-08-08T05:03:56Z"}], "date": "2023-08-06T11:52:32Z", "category": "Query", "subcategory": "Usage question", "Tool": "Verilog to DB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3871", "id": 3871, "title": "Where can I find the block findInst implementation?", "author": "oharboe", "description": "Silly question: where do I find the source code for `findInst`?\r\n\r\nI seem unable to find it in the OpenROAD source code.\r\n\r\n```\r\n    set inst [$block findInst [format \"ces_%d_%d\" $row $col]]\r\n```\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/f90d853b3705338fa2d142acd20ac57626c71f12/flow/designs/asap7/mock-array/macro-placement.tcl#L10\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Silly question: where do I find the source code for `findInst`?\r\n\r\nI seem unable to find it in the OpenROAD source code.\r\n\r\n```\r\n    set inst [$block findInst [format \"ces_%d_%d\" $row $col]]\r\n```\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/f90d853b3705338fa2d142acd20ac57626c71f12/flow/designs/asap7/mock-array/macro-placement.tcl#L10\r\n\r\n", "date": "2023-08-16T20:42:44Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Header: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/include/odb/db.h#L992\r\nImpl: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/src/db/dbBlock.cpp#L1790\r\nHidden Impl: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/src/db/dbBlock.h#L173", "date": "2023-08-16T20:50:08Z"}, {"author": "oharboe", "role": "assistant", "message": "So `findInst` doesn't throw an exception if the element doesn't exist, like https://cplusplus.com/reference/map/map/at/ does.\r\n\r\nThis leads to a lot of repetition and context unique error messages and in tcl very poor error messages like:\r\n\r\n```\r\nError: macro-placement.tcl, 27 invalid command name \"NULL\"\r\n```\r\n\r\n`std::map` has explicit accessors that either creates an element if it doesn't exist(returns empty by default) and another that throws an exception if it doesn't exist.\r\n\r\nThe equivalent here would be that findInst() threw an exception with an error message and the name, and that another hasInst() that doesn't and allows the user to handle it. try/catch is not approperiate because both findInst() that throws exception and hasInst() that checks for presence would both be part of normal exception.", "date": "2023-08-16T21:02:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The odb code is old and was written without the use of exceptions.  I would be fine to change that but it will require testing the full app to see if problems arise and resolving them.  There are a number of similar APIs that return nullptr on failure.", "date": "2023-08-16T21:48:22Z"}, {"author": "oharboe", "role": "assistant", "message": "I see. I was just curious and surprised: there are LOT of methods in that .h file that are exposed in .tcl.\r\n\r\nNot all of them are obviously compatible with a .tcl calling convention or even intended for .tcl?", "date": "2023-08-17T15:19:38Z"}], "date": "2023-08-16T20:42:44Z", "category": "Query", "subcategory": "Implementation details", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3694", "id": 3694, "title": "report_worst_slack returns INF", "author": "xiaosinju", "description": "I have run the following script:\r\n```\r\nread_lef ispd19_test6.input.lef\r\nread_def ispd19_test6.input.def\r\nset thread_count 8\r\nglobal_route\r\ndetailed_route\r\nwrite_db route.db\r\nreport wns\r\n>> wns 0\r\nreport tns\r\n>> tns 0\r\nreport worst_slack\r\n>> worst slack INF\r\n```\r\nDid anything go wrong? How can I get correct metrics? Thanks a lot!", "content": [{"author": "xiaosinju", "role": "user", "message": "I have run the following script:\r\n```\r\nread_lef ispd19_test6.input.lef\r\nread_def ispd19_test6.input.def\r\nset thread_count 8\r\nglobal_route\r\ndetailed_route\r\nwrite_db route.db\r\nreport wns\r\n>> wns 0\r\nreport tns\r\n>> tns 0\r\nreport worst_slack\r\n>> worst slack INF\r\n```\r\nDid anything go wrong? How can I get correct metrics? Thanks a lot!", "date": "2023-07-22T04:42:51Z"}, {"author": "vijayank88", "role": "assistant", "message": "Do estimate parasitic and then report the metrics. Refer here: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/test/flow.tcl#L264-L280 @xiaosinju ", "date": "2023-07-22T07:09:18Z"}, {"author": "maliberty", "role": "assistant", "message": "This is a routing test case and has no timing information (no .lib or .sdc).  What are you trying to accomplish?", "date": "2023-07-22T10:37:34Z"}], "date": "2023-07-22T04:42:51Z", "category": "Runtime", "subcategory": "Timing analysis issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3812", "id": 3812, "title": "Feature to OpenROAD that lets us drag views with the mouse?", "author": "oharboe", "description": "It would make moving around the design a lot easier.\r\n\r\nIs there a way to do this already?\r\n\r\nThe arrow keys is a bit clunky compared to dragging the view with the mouse.", "content": [{"author": "oharboe", "role": "user", "message": "It would make moving around the design a lot easier.\r\n\r\nIs there a way to do this already?\r\n\r\nThe arrow keys is a bit clunky compared to dragging the view with the mouse.", "date": "2023-08-08T07:07:48Z"}, {"author": "stefanottili", "role": "assistant", "message": "OpenRoad will hopefully take hint's from KLayout's layout view controls instead of inventing yet another scheme.\r\n\r\nzoom in/out at the cursor position (mouse wheel zoom in/out)\r\nmake the cursor key \"shift width\" adjustable (40% seem like a better value then the defaults)\r\nhave \"gestures\" for fit, zoom in, zoom out (move mouse right-up, down, left-up), so no \"mouse drag viewpoint\".\r\n\r\nThere doesn't seem to be a consensus for zoom in/out, fit, level down/up keys.\r\nI override the klayout defaults and use z/Z, f, l/L, curious what other people use.", "date": "2023-08-08T15:44:26Z"}, {"author": "stefanottili", "role": "assistant", "message": "I stand corrected, there is dragging the view in Klayout, on a Mac is \"right mouse + shift\"", "date": "2023-08-08T16:27:03Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no method currently.  It could be an enhancement request as could gestures.", "date": "2023-08-08T18:16:14Z"}, {"author": "oharboe", "role": "assistant", "message": "Added feature request https://github.com/The-OpenROAD-Project/OpenROAD/issues/3840", "date": "2023-08-10T06:33:27Z"}], "date": "2023-08-08T07:07:48Z", "category": "Feature Request", "subcategory": "User interface enhancement", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3811", "id": 3811, "title": "A lot of slew in asap7/sram-64x16", "author": "oharboe", "description": "Is this amount of slew expected on the clock pin to the SRAM? \r\n\r\n`SRAM2RW16x32_2/CE2` is one of two clocks to the SRAM, the SRAM has one read and one write port.\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk\r\n```\r\n\r\n```\r\n>>> report_checks -path_delay max -fields {slew net cap} -to _351_/D\r\nStartpoint: SRAM2RW16x32_2 (rising edge-triggered flip-flop clocked by io_clk)\r\nEndpoint: _351_ (falling edge-triggered flip-flop clocked by io_clk')\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock io_clk (rise edge)\r\n                        241.44  241.44   clock network delay (propagated)\r\n                150.83    0.00  241.44 ^ SRAM2RW16x32_2/CE2 (SRAM2RW16x32)\r\n                 40.24  202.07  443.51 v SRAM2RW16x32_2/O2[4] (SRAM2RW16x32)\r\n     1    9.73                           _SRAM2RW16x32_2_O2[4] (net)\r\n                 53.97    5.14  448.65 v _351_/D (DFFLQNx1_ASAP7_75t_R)\r\n                                448.65   data arrival time\r\n\r\n                        500.00  500.00   clock io_clk' (fall edge)\r\n                        186.47  686.47   clock network delay (propagated)\r\n                          0.52  686.99   clock reconvergence pessimism\r\n                                686.99 v _351_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                        -22.88  664.11   library setup time\r\n                                664.11   data required time\r\n-----------------------------------------------------------------------------\r\n                                664.11   data required time\r\n                               -448.65   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                215.46   slack (MET)\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Is this amount of slew expected on the clock pin to the SRAM? \r\n\r\n`SRAM2RW16x32_2/CE2` is one of two clocks to the SRAM, the SRAM has one read and one write port.\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk\r\n```\r\n\r\n```\r\n>>> report_checks -path_delay max -fields {slew net cap} -to _351_/D\r\nStartpoint: SRAM2RW16x32_2 (rising edge-triggered flip-flop clocked by io_clk)\r\nEndpoint: _351_ (falling edge-triggered flip-flop clocked by io_clk')\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock io_clk (rise edge)\r\n                        241.44  241.44   clock network delay (propagated)\r\n                150.83    0.00  241.44 ^ SRAM2RW16x32_2/CE2 (SRAM2RW16x32)\r\n                 40.24  202.07  443.51 v SRAM2RW16x32_2/O2[4] (SRAM2RW16x32)\r\n     1    9.73                           _SRAM2RW16x32_2_O2[4] (net)\r\n                 53.97    5.14  448.65 v _351_/D (DFFLQNx1_ASAP7_75t_R)\r\n                                448.65   data arrival time\r\n\r\n                        500.00  500.00   clock io_clk' (fall edge)\r\n                        186.47  686.47   clock network delay (propagated)\r\n                          0.52  686.99   clock reconvergence pessimism\r\n                                686.99 v _351_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                        -22.88  664.11   library setup time\r\n                                664.11   data required time\r\n-----------------------------------------------------------------------------\r\n                                664.11   data required time\r\n                               -448.65   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                215.46   slack (MET)\r\n```\r\n", "date": "2023-08-08T06:06:42Z"}, {"author": "maliberty", "role": "assistant", "message": "Probably not but without a test case not much more can be said.", "date": "2023-08-08T16:28:15Z"}, {"author": "oharboe", "role": "assistant", "message": "`make DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk issue_cts` standalone testcase:\r\n\r\n1. Unzip (note! bzip2 compression so that it would fit into github limit) [slew.zip](https://github.com/The-OpenROAD-Project/OpenROAD/files/12294012/slew.zip)\r\n2. run `./run*.sh`\r\n3. Enter `report_checks -path_delay max -fields {slew net cap} -to _351_/D` in the GUI\r\n\r\nYou should get:\r\n\r\n\r\n```\r\n>>> report_checks -path_delay max -fields {slew net cap} -to _351_/D\r\nStartpoint: SRAM2RW16x32_2 (rising edge-triggered flip-flop clocked by io_clk)\r\nEndpoint: _351_ (falling edge-triggered flip-flop clocked by io_clk')\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock io_clk (rise edge)\r\n                        274.66  274.66   clock network delay (propagated)\r\n                186.64    0.00  274.66 ^ SRAM2RW16x32_2/CE2 (SRAM2RW16x32)\r\n                 35.53  205.56  480.22 v SRAM2RW16x32_2/O2[4] (SRAM2RW16x32)\r\n     1    7.54                           _SRAM2RW16x32_2_O2[4] (net)\r\n                 47.76    5.26  485.49 v _351_/D (DFFLQNx1_ASAP7_75t_R)\r\n                                485.49   data arrival time\r\n\r\n                        500.00  500.00   clock io_clk' (fall edge)\r\n                        212.33  712.33   clock network delay (propagated)\r\n                          0.00  712.33   clock reconvergence pessimism\r\n                                712.33 v _351_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                        -21.20  691.13   library setup time\r\n                                691.13   data required time\r\n-----------------------------------------------------------------------------\r\n                                691.13   data required time\r\n                               -485.49   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                205.64   slack (MET)\r\n\r\n```\r\n\r\n", "date": "2023-08-08T16:53:04Z"}, {"author": "maliberty", "role": "assistant", "message": "Converted to an issue https://github.com/The-OpenROAD-Project/OpenROAD/issues/3817", "date": "2023-08-08T18:11:02Z"}], "date": "2023-08-08T06:06:42Z", "category": "Runtime", "subcategory": "Timing analysis issue", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3788", "id": 3788, "title": "Clock Tree Viewer and trying to get to the information in the tooltips", "author": "oharboe", "description": "The tooltips in the Clock Tree Viewer contain interesting information: which macro or flip flop has how much clock network latency.\r\n\r\nHowever, the tooltip information is hard to get to and it is not searchable.\r\n\r\nI mocked a text report that is printed when I click update...\r\n\r\nI think perhaps a better approach to this is to have a tcl utility procedure that navigates the clock tree and print out this information. Perhaps that is possible today, but I don't know how to...\r\n\r\nChange I used to mock the report below: https://github.com/Pinata-Consulting/OpenROAD/commit/17283788372d98cafc1e6bbd056f1074a1539bc6\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1a874efa-2b66-41f2-b365-7990f3ed5399)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "The tooltips in the Clock Tree Viewer contain interesting information: which macro or flip flop has how much clock network latency.\r\n\r\nHowever, the tooltip information is hard to get to and it is not searchable.\r\n\r\nI mocked a text report that is printed when I click update...\r\n\r\nI think perhaps a better approach to this is to have a tcl utility procedure that navigates the clock tree and print out this information. Perhaps that is possible today, but I don't know how to...\r\n\r\nChange I used to mock the report below: https://github.com/Pinata-Consulting/OpenROAD/commit/17283788372d98cafc1e6bbd056f1074a1539bc6\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1a874efa-2b66-41f2-b365-7990f3ed5399)\r\n", "date": "2023-08-04T09:01:31Z"}, {"author": "oharboe", "role": "assistant", "message": "Mocking a heatmap of arrival times. I only have location information for the Elements. Got the idea here. https://www.eng.biu.ac.il/temanad/files/2017/02/Lecture-8-CTS.pdf\r\n\r\n```\r\nimport re\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\n# Extracting data from the text\r\ntext = \"\"\"\r\n# Your log content goes here\r\n\"\"\"\r\n\r\nlines = text.strip().split('\\n')\r\nfiltered_lines = [line for line in lines if \"ces\" in line]\r\n\r\n# Finding the maximum indices for rows and columns\r\nmax_row = max_col = 0\r\ndata_dict = {}\r\nfor line in filtered_lines:\r\n    match = re.search(r\"ces_(\\d+)_(\\d+)/clock\\s*Arrival:\\s*(\\d+\\.\\d+)\", line)\r\n    if match:\r\n        row, col, value = map(int, map(float, match.groups()))\r\n        max_row = max(max_row, row)\r\n        max_col = max(max_col, col)\r\n        data_dict[(row, col)] = value\r\n\r\n# Constructing the data matrix\r\ndata_matrix = np.zeros((max_row + 1, max_col + 1))\r\nfor (row, col), value in data_dict.items():\r\n    data_matrix[row, col] = value\r\n\r\n# Plotting the heatmap\r\nplt.imshow(data_matrix, origin='upper', cmap='viridis', aspect='auto')\r\nplt.colorbar(label='Arrival (ps)')\r\nplt.title('Heatmap of Arrival Times')\r\nplt.xlabel('Column')\r\nplt.ylabel('Row')\r\nplt.show()\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/aceb47d0-d673-461d-a0f0-e0b3df96a8d6)\r\n", "date": "2023-08-04T09:14:14Z"}, {"author": "oharboe", "role": "assistant", "message": "Adding some 3d bling...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/ad5b4839-f77e-4643-89d8-4426b4137f89)\r\n\r\n\r\n```\r\n# Sample data\r\ntext = \"\"\"\r\n[INFO GUI-0088] Register                                 _131_/CLK                                Arrival: 258.115 ps\r\n[INFO GUI-0088] Register                                 _132_/CLK                                Arrival: 257.882 ps\r\n[INFO GUI-0088] Register                                 _133_/CLK                                Arrival: 258.944 ps\r\n[INFO GUI-0088] Register                                 _134_/CLK                                Arrival: 258.636 ps\r\n[INFO GUI-0088] Register                                 _135_/CLK                                Arrival: 258.069 ps\r\n[INFO GUI-0088] Register                                 _137_/CLK                                Arrival: 257.527 ps\r\n[INFO GUI-0088] Register                                 _139_/CLK                                Arrival: 246.072 ps\r\n[INFO GUI-0088] Register                                 _143_/CLK                                Arrival: 245.541 ps\r\n[INFO GUI-0088] Register                                 _145_/CLK                                Arrival: 245.360 ps\r\n[INFO GUI-0088] Register                                 ces_0_7/clock                            Arrival: 232.150 ps\r\n[INFO GUI-0088] Register                                 ces_1_7/clock                            Arrival: 225.713 ps\r\n[INFO GUI-0088] Register                                 _136_/CLK                                Arrival: 250.476 ps\r\n[INFO GUI-0088] Register                                 _138_/CLK                                Arrival: 250.337 ps\r\n[INFO GUI-0088] Register                                 _140_/CLK                                Arrival: 246.845 ps\r\n[INFO GUI-0088] Register                                 _141_/CLK                                Arrival: 246.075 ps\r\n[INFO GUI-0088] Register                                 _142_/CLK                                Arrival: 246.461 ps\r\n[INFO GUI-0088] Register                                 _144_/CLK                                Arrival: 246.885 ps\r\n[INFO GUI-0088] Register                                 _146_/CLK                                Arrival: 245.560 ps\r\n[INFO GUI-0088] Register                                 ces_0_6/clock                            Arrival: 235.587 ps\r\n[INFO GUI-0088] Register                                 _147_/CLK                                Arrival: 239.633 ps\r\n[INFO GUI-0088] Register                                 _148_/CLK                                Arrival: 238.903 ps\r\n[INFO GUI-0088] Register                                 _149_/CLK                                Arrival: 239.580 ps\r\n[INFO GUI-0088] Register                                 _150_/CLK                                Arrival: 238.791 ps\r\n[INFO GUI-0088] Register                                 _151_/CLK                                Arrival: 239.418 ps\r\n[INFO GUI-0088] Register                                 _152_/CLK                                Arrival: 239.304 ps\r\n[INFO GUI-0088] Register                                 _153_/CLK                                Arrival: 238.755 ps\r\n[INFO GUI-0088] Register                                 _154_/CLK                                Arrival: 238.495 ps\r\n[INFO GUI-0088] Register                                 _155_/CLK                                Arrival: 250.283 ps\r\n[INFO GUI-0088] Register                                 _156_/CLK                                Arrival: 250.061 ps\r\n[INFO GUI-0088] Register                                 _157_/CLK                                Arrival: 250.546 ps\r\n[INFO GUI-0088] Register                                 _158_/CLK                                Arrival: 250.032 ps\r\n[INFO GUI-0088] Register                                 _159_/CLK                                Arrival: 250.760 ps\r\n[INFO GUI-0088] Register                                 _160_/CLK                                Arrival: 249.826 ps\r\n[INFO GUI-0088] Register                                 _161_/CLK                                Arrival: 250.433 ps\r\n[INFO GUI-0088] Register                                 _162_/CLK                                Arrival: 249.956 ps\r\n[INFO GUI-0088] Register                                 ces_2_7/clock                            Arrival: 233.829 ps\r\n[INFO GUI-0088] Register                                 ces_3_6/clock                            Arrival: 243.645 ps\r\n[INFO GUI-0088] Register                                 ces_3_7/clock                            Arrival: 239.027 ps\r\n[INFO GUI-0088] Register                                 ces_0_0/clock                            Arrival: 290.815 ps\r\n[INFO GUI-0088] Register                                 ces_0_1/clock                            Arrival: 287.224 ps\r\n[INFO GUI-0088] Register                                 ces_0_2/clock                            Arrival: 276.359 ps\r\n[INFO GUI-0088] Register                                 ces_1_0/clock                            Arrival: 262.155 ps\r\n[INFO GUI-0088] Register                                 ces_1_1/clock                            Arrival: 258.349 ps\r\n[INFO GUI-0088] Register                                 ces_1_2/clock                            Arrival: 248.148 ps\r\n[INFO GUI-0088] Register                                 ces_0_3/clock                            Arrival: 226.049 ps\r\n[INFO GUI-0088] Register                                 ces_1_3/clock                            Arrival: 224.760 ps\r\n[INFO GUI-0088] Register                                 ces_0_4/clock                            Arrival: 242.883 ps\r\n[INFO GUI-0088] Register                                 ces_0_5/clock                            Arrival: 247.124 ps\r\n[INFO GUI-0088] Register                                 ces_1_4/clock                            Arrival: 237.497 ps\r\n[INFO GUI-0088] Register                                 ces_1_5/clock                            Arrival: 249.241 ps\r\n[INFO GUI-0088] Register                                 ces_1_6/clock                            Arrival: 253.384 ps\r\n[INFO GUI-0088] Register                                 ces_2_0/clock                            Arrival: 253.191 ps\r\n[INFO GUI-0088] Register                                 ces_2_1/clock                            Arrival: 248.850 ps\r\n[INFO GUI-0088] Register                                 ces_2_2/clock                            Arrival: 236.498 ps\r\n[INFO GUI-0088] Register                                 ces_3_0/clock                            Arrival: 261.042 ps\r\n[INFO GUI-0088] Register                                 ces_3_1/clock                            Arrival: 257.075 ps\r\n[INFO GUI-0088] Register                                 ces_3_2/clock                            Arrival: 244.640 ps\r\n[INFO GUI-0088] Register                                 ces_2_3/clock                            Arrival: 225.582 ps\r\n[INFO GUI-0088] Register                                 ces_2_4/clock                            Arrival: 239.450 ps\r\n[INFO GUI-0088] Register                                 ces_2_5/clock                            Arrival: 251.290 ps\r\n[INFO GUI-0088] Register                                 ces_2_6/clock                            Arrival: 255.456 ps\r\n[INFO GUI-0088] Register                                 ces_3_3/clock                            Arrival: 227.135 ps\r\n[INFO GUI-0088] Register                                 ces_3_4/clock                            Arrival: 243.496 ps\r\n[INFO GUI-0088] Register                                 ces_3_5/clock                            Arrival: 248.000 ps\r\n[INFO GUI-0088] Register                                 _163_/CLK                                Arrival: 253.020 ps\r\n[INFO GUI-0088] Register                                 _164_/CLK                                Arrival: 253.796 ps\r\n[INFO GUI-0088] Register                                 _165_/CLK                                Arrival: 254.691 ps\r\n[INFO GUI-0088] Register                                 _166_/CLK                                Arrival: 254.356 ps\r\n[INFO GUI-0088] Register                                 _167_/CLK                                Arrival: 254.200 ps\r\n[INFO GUI-0088] Register                                 _168_/CLK                                Arrival: 253.308 ps\r\n[INFO GUI-0088] Register                                 _169_/CLK                                Arrival: 252.967 ps\r\n[INFO GUI-0088] Register                                 _170_/CLK                                Arrival: 253.566 ps\r\n[INFO GUI-0088] Register                                 ces_4_6/clock                            Arrival: 236.291 ps\r\n[INFO GUI-0088] Register                                 ces_4_7/clock                            Arrival: 232.063 ps\r\n[INFO GUI-0088] Register                                 _171_/CLK                                Arrival: 231.291 ps\r\n[INFO GUI-0088] Register                                 _172_/CLK                                Arrival: 231.543 ps\r\n[INFO GUI-0088] Register                                 _173_/CLK                                Arrival: 231.174 ps\r\n[INFO GUI-0088] Register                                 _174_/CLK                                Arrival: 230.426 ps\r\n[INFO GUI-0088] Register                                 _175_/CLK                                Arrival: 231.306 ps\r\n[INFO GUI-0088] Register                                 _176_/CLK                                Arrival: 231.412 ps\r\n[INFO GUI-0088] Register                                 _177_/CLK                                Arrival: 231.484 ps\r\n[INFO GUI-0088] Register                                 _178_/CLK                                Arrival: 231.182 ps\r\n[INFO GUI-0088] Register                                 _179_/CLK                                Arrival: 244.957 ps\r\n[INFO GUI-0088] Register                                 _180_/CLK                                Arrival: 242.174 ps\r\n[INFO GUI-0088] Register                                 _181_/CLK                                Arrival: 244.902 ps\r\n[INFO GUI-0088] Register                                 _182_/CLK                                Arrival: 242.804 ps\r\n[INFO GUI-0088] Register                                 _183_/CLK                                Arrival: 244.575 ps\r\n[INFO GUI-0088] Register                                 _184_/CLK                                Arrival: 243.857 ps\r\n[INFO GUI-0088] Register                                 _185_/CLK                                Arrival: 242.949 ps\r\n[INFO GUI-0088] Register                                 _186_/CLK                                Arrival: 244.352 ps\r\n[INFO GUI-0088] Register                                 _187_/CLK                                Arrival: 253.289 ps\r\n[INFO GUI-0088] Register                                 _189_/CLK                                Arrival: 253.454 ps\r\n[INFO GUI-0088] Register                                 _193_/CLK                                Arrival: 253.757 ps\r\n[INFO GUI-0088] Register                                 _194_/CLK                                Arrival: 253.377 ps\r\n[INFO GUI-0088] Register                                 _188_/CLK                                Arrival: 249.940 ps\r\n[INFO GUI-0088] Register                                 _190_/CLK                                Arrival: 250.214 ps\r\n[INFO GUI-0088] Register                                 _191_/CLK                                Arrival: 250.193 ps\r\n[INFO GUI-0088] Register                                 _192_/CLK                                Arrival: 250.440 ps\r\n[INFO GUI-0088] Register                                 ces_6_6/clock                            Arrival: 237.794 ps\r\n[INFO GUI-0088] Register                                 ces_6_7/clock                            Arrival: 237.428 ps\r\n[INFO GUI-0088] Register                                 ces_7_6/clock                            Arrival: 248.387 ps\r\n[INFO GUI-0088] Register                                 ces_7_7/clock                            Arrival: 243.904 ps\r\n[INFO GUI-0088] Register                                 ces_4_0/clock                            Arrival: 269.870 ps\r\n[INFO GUI-0088] Register                                 ces_4_1/clock                            Arrival: 265.959 ps\r\n[INFO GUI-0088] Register                                 ces_4_2/clock                            Arrival: 254.121 ps\r\n[INFO GUI-0088] Register                                 ces_4_3/clock                            Arrival: 227.621 ps\r\n[INFO GUI-0088] Register                                 ces_5_0/clock                            Arrival: 260.539 ps\r\n[INFO GUI-0088] Register                                 ces_5_1/clock                            Arrival: 256.515 ps\r\n[INFO GUI-0088] Register                                 ces_5_2/clock                            Arrival: 245.174 ps\r\n[INFO GUI-0088] Register                                 ces_5_3/clock                            Arrival: 225.957 ps\r\n[INFO GUI-0088] Register                                 ces_5_4/clock                            Arrival: 233.418 ps\r\n[INFO GUI-0088] Register                                 ces_5_5/clock                            Arrival: 250.130 ps\r\n[INFO GUI-0088] Register                                 ces_5_6/clock                            Arrival: 260.323 ps\r\n[INFO GUI-0088] Register                                 ces_5_7/clock                            Arrival: 263.816 ps\r\n[INFO GUI-0088] Register                                 ces_4_4/clock                            Arrival: 219.267 ps\r\n[INFO GUI-0088] Register                                 ces_4_5/clock                            Arrival: 223.542 ps\r\n[INFO GUI-0088] Register                                 ces_7_0/clock                            Arrival: 287.112 ps\r\n[INFO GUI-0088] Register                                 ces_7_1/clock                            Arrival: 283.560 ps\r\n[INFO GUI-0088] Register                                 ces_7_2/clock                            Arrival: 273.081 ps\r\n[INFO GUI-0088] Register                                 ces_7_3/clock                            Arrival: 272.904 ps\r\n[INFO GUI-0088] Register                                 ces_6_0/clock                            Arrival: 250.403 ps\r\n[INFO GUI-0088] Register                                 ces_6_1/clock                            Arrival: 246.424 ps\r\n[INFO GUI-0088] Register                                 ces_6_2/clock                            Arrival: 235.488 ps\r\n[INFO GUI-0088] Register                                 ces_6_3/clock                            Arrival: 230.871 ps\r\n[INFO GUI-0088] Register                                 ces_6_4/clock                            Arrival: 234.553 ps\r\n[INFO GUI-0088] Register                                 ces_6_5/clock                            Arrival: 238.808 ps\r\n[INFO GUI-0088] Register                                 ces_7_4/clock                            Arrival: 240.051 ps\r\n[INFO GUI-0088] Register                                 ces_7_5/clock                            Arrival: 244.454 ps\r\n\"\"\"\r\n\r\nimport re\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\nlines = text.strip().split('\\n')\r\nfiltered_lines = [line for line in lines if \"ces\" in line]\r\n\r\n# Finding the maximum indices for rows and columns\r\nmax_row = max_col = 0\r\ndata_dict = {}\r\nfor line in filtered_lines:\r\n    match = re.search(r\"ces_(\\d+)_(\\d+)/clock\\s*Arrival:\\s*(\\d+\\.\\d+)\", line)\r\n    if match:\r\n        row, col, value = map(int, map(float, match.groups()))\r\n        max_row = max(max_row, row)\r\n        max_col = max(max_col, col)\r\n        data_dict[(row, col)] = value\r\n\r\n# Constructing the data matrix\r\ndata_matrix = np.zeros((max_row + 1, max_col + 1))\r\nfor (row, col), value in data_dict.items():\r\n    data_matrix[row, col] = value\r\n\r\n# Plotting the heatmap\r\nplt.imshow(data_matrix, origin='upper', cmap='viridis', aspect='auto')\r\nplt.colorbar(label='Arrival (ps)')\r\nplt.title('Heatmap of Arrival Times')\r\nplt.xlabel('Column')\r\nplt.ylabel('Row')\r\nplt.show()\r\n```\r\n\r\n", "date": "2023-08-04T09:25:04Z"}, {"author": "oharboe", "role": "assistant", "message": "The reason I was interested in the skew heatmap as a function of location, is that for the mock-array, it is more important to have low skew at the edges, where the input/output pins are, than in the center... If I understand the presentation correctly...\r\n\r\nFrom the heatmap, I can see that I get the \"inverse\" of what I am looking for: I get high latency/skew at the edges and lowest clock network latency in the middle of the array.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/2a02ed4e-16d1-40cf-87cb-b356f6942acb)\r\n", "date": "2023-08-04T09:28:04Z"}, {"author": "oharboe", "role": "assistant", "message": "Export to yaml everywhere? Then ask ChatGPT to write a program to graph whatever you want :-)", "date": "2023-08-04T09:58:05Z"}, {"author": "oharboe", "role": "assistant", "message": "One more round of tinkering, extracting leaf latency (macros & flip flops) for mock-array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f9324f3c-9b7d-4186-b202-73ddd958e478)\r\n\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom scipy.interpolate import griddata\r\nfrom mpl_toolkits.mplot3d import Axes3D\r\n\r\n# Extract data from the table\r\ndata = \"\"\"\r\n[INFO GUI-0090] 353016 31894 _131_/CLK 2.5811525e-10\r\n[INFO GUI-0090] 353610 32704 _132_/CLK 2.578819e-10\r\n[INFO GUI-0090] 353448 29734 _133_/CLK 2.589441e-10\r\n[INFO GUI-0090] 353232 30004 _134_/CLK 2.5863567e-10\r\n[INFO GUI-0090] 353232 32164 _135_/CLK 2.5806945e-10\r\n[INFO GUI-0090] 353232 33514 _137_/CLK 2.5752672e-10\r\n[INFO GUI-0090] 352962 73474 _139_/CLK 2.4607233e-10\r\n[INFO GUI-0090] 353070 75094 _143_/CLK 2.455407e-10\r\n[INFO GUI-0090] 353232 74554 _145_/CLK 2.4536023e-10\r\n[INFO GUI-0090] 325488 49596 ces_0_7/clock 2.3215012e-10\r\n[INFO GUI-0090] 325488 97116 ces_1_7/clock 2.2571323e-10\r\n[INFO GUI-0090] 353070 30274 _136_/CLK 2.504758e-10\r\n[INFO GUI-0090] 353232 32974 _138_/CLK 2.5033728e-10\r\n[INFO GUI-0090] 353988 74824 _140_/CLK 2.468455e-10\r\n[INFO GUI-0090] 353070 74284 _141_/CLK 2.4607524e-10\r\n[INFO GUI-0090] 353124 73744 _142_/CLK 2.4646146e-10\r\n[INFO GUI-0090] 353718 74014 _144_/CLK 2.4688515e-10\r\n[INFO GUI-0090] 353070 75364 _146_/CLK 2.455602e-10\r\n[INFO GUI-0090] 282288 49596 ces_0_6/clock 2.3558674e-10\r\n[INFO GUI-0090] 354312 120724 _147_/CLK 2.396328e-10\r\n[INFO GUI-0090] 353070 120184 _148_/CLK 2.389033e-10\r\n[INFO GUI-0090] 353070 120724 _149_/CLK 2.3958044e-10\r\n[INFO GUI-0090] 353070 120454 _150_/CLK 2.3879088e-10\r\n[INFO GUI-0090] 352908 120994 _151_/CLK 2.3941804e-10\r\n[INFO GUI-0090] 354150 120994 _152_/CLK 2.3930402e-10\r\n[INFO GUI-0090] 353070 121264 _153_/CLK 2.387552e-10\r\n[INFO GUI-0090] 353070 121534 _154_/CLK 2.3849495e-10\r\n[INFO GUI-0090] 354312 167704 _155_/CLK 2.5028343e-10\r\n[INFO GUI-0090] 353070 167434 _156_/CLK 2.5006122e-10\r\n[INFO GUI-0090] 354312 167974 _157_/CLK 2.5054644e-10\r\n[INFO GUI-0090] 353070 167704 _158_/CLK 2.5003247e-10\r\n[INFO GUI-0090] 353502 168244 _159_/CLK 2.5076013e-10\r\n[INFO GUI-0090] 353070 167974 _160_/CLK 2.4982605e-10\r\n[INFO GUI-0090] 353070 168514 _161_/CLK 2.504333e-10\r\n[INFO GUI-0090] 353070 168784 _162_/CLK 2.4995647e-10\r\n[INFO GUI-0090] 325488 144636 ces_2_7/clock 2.3382915e-10\r\n[INFO GUI-0090] 282288 192156 ces_3_6/clock 2.4364535e-10\r\n[INFO GUI-0090] 325488 192156 ces_3_7/clock 2.3902733e-10\r\n[INFO GUI-0090] 23088 49596 ces_0_0/clock 2.908152e-10\r\n[INFO GUI-0090] 66288 49596 ces_0_1/clock 2.8722372e-10\r\n[INFO GUI-0090] 109488 49596 ces_0_2/clock 2.7635877e-10\r\n[INFO GUI-0090] 23088 97116 ces_1_0/clock 2.6215496e-10\r\n[INFO GUI-0090] 66288 97116 ces_1_1/clock 2.5834934e-10\r\n[INFO GUI-0090] 109488 97116 ces_1_2/clock 2.481484e-10\r\n[INFO GUI-0090] 152688 49596 ces_0_3/clock 2.2604922e-10\r\n[INFO GUI-0090] 152688 97116 ces_1_3/clock 2.2475981e-10\r\n[INFO GUI-0090] 195888 49596 ces_0_4/clock 2.4288263e-10\r\n[INFO GUI-0090] 239088 49596 ces_0_5/clock 2.4712393e-10\r\n[INFO GUI-0090] 195888 97116 ces_1_4/clock 2.3749708e-10\r\n[INFO GUI-0090] 239088 97116 ces_1_5/clock 2.492415e-10\r\n[INFO GUI-0090] 282288 97116 ces_1_6/clock 2.5338398e-10\r\n[INFO GUI-0090] 23088 144636 ces_2_0/clock 2.5319144e-10\r\n[INFO GUI-0090] 66288 144636 ces_2_1/clock 2.488505e-10\r\n[INFO GUI-0090] 109488 144636 ces_2_2/clock 2.3649802e-10\r\n[INFO GUI-0090] 23088 192156 ces_3_0/clock 2.6104152e-10\r\n[INFO GUI-0090] 66288 192156 ces_3_1/clock 2.5707544e-10\r\n[INFO GUI-0090] 109488 192156 ces_3_2/clock 2.4463978e-10\r\n[INFO GUI-0090] 152688 144636 ces_2_3/clock 2.2558208e-10\r\n[INFO GUI-0090] 195888 144636 ces_2_4/clock 2.394501e-10\r\n[INFO GUI-0090] 239088 144636 ces_2_5/clock 2.5129004e-10\r\n[INFO GUI-0090] 282288 144636 ces_2_6/clock 2.5545635e-10\r\n[INFO GUI-0090] 152688 192156 ces_3_3/clock 2.271353e-10\r\n[INFO GUI-0090] 195888 192156 ces_3_4/clock 2.4349614e-10\r\n[INFO GUI-0090] 239088 192156 ces_3_5/clock 2.4800043e-10\r\n[INFO GUI-0090] 353070 215224 _163_/CLK 2.5301994e-10\r\n[INFO GUI-0090] 354150 215764 _164_/CLK 2.5379573e-10\r\n[INFO GUI-0090] 352908 215764 _165_/CLK 2.546915e-10\r\n[INFO GUI-0090] 353016 215494 _166_/CLK 2.543563e-10\r\n[INFO GUI-0090] 352908 216034 _167_/CLK 2.5420016e-10\r\n[INFO GUI-0090] 353016 216304 _168_/CLK 2.53308e-10\r\n[INFO GUI-0090] 353070 216844 _169_/CLK 2.529667e-10\r\n[INFO GUI-0090] 353070 216574 _170_/CLK 2.5356642e-10\r\n[INFO GUI-0090] 282288 239676 ces_4_6/clock 2.362913e-10\r\n[INFO GUI-0090] 325488 239676 ces_4_7/clock 2.3206259e-10\r\n[INFO GUI-0090] 353556 262474 _171_/CLK 2.312914e-10\r\n[INFO GUI-0090] 353070 263014 _172_/CLK 2.3154262e-10\r\n[INFO GUI-0090] 353070 263284 _173_/CLK 2.3117369e-10\r\n[INFO GUI-0090] 353070 262744 _174_/CLK 2.3042566e-10\r\n[INFO GUI-0090] 353070 263824 _175_/CLK 2.3130639e-10\r\n[INFO GUI-0090] 353070 263554 _176_/CLK 2.3141243e-10\r\n[INFO GUI-0090] 353124 264094 _177_/CLK 2.3148382e-10\r\n[INFO GUI-0090] 354312 263554 _178_/CLK 2.3118188e-10\r\n[INFO GUI-0090] 353502 308644 _179_/CLK 2.4495708e-10\r\n[INFO GUI-0090] 353232 308914 _180_/CLK 2.421735e-10\r\n[INFO GUI-0090] 353394 309184 _181_/CLK 2.449023e-10\r\n[INFO GUI-0090] 352962 309454 _182_/CLK 2.428038e-10\r\n[INFO GUI-0090] 354204 309454 _183_/CLK 2.4457464e-10\r\n[INFO GUI-0090] 353664 309994 _184_/CLK 2.4385688e-10\r\n[INFO GUI-0090] 353070 309724 _185_/CLK 2.4294902e-10\r\n[INFO GUI-0090] 353664 310264 _186_/CLK 2.443524e-10\r\n[INFO GUI-0090] 353934 351844 _187_/CLK 2.53289e-10\r\n[INFO GUI-0090] 353016 353734 _189_/CLK 2.5345356e-10\r\n[INFO GUI-0090] 353016 354274 _193_/CLK 2.5375743e-10\r\n[INFO GUI-0090] 353556 352114 _194_/CLK 2.533773e-10\r\n[INFO GUI-0090] 353880 349684 _188_/CLK 2.4994018e-10\r\n[INFO GUI-0090] 353286 351574 _190_/CLK 2.502142e-10\r\n[INFO GUI-0090] 354042 349414 _191_/CLK 2.501929e-10\r\n[INFO GUI-0090] 353016 354004 _192_/CLK 2.5043992e-10\r\n[INFO GUI-0090] 282288 334716 ces_6_6/clock 2.3779426e-10\r\n[INFO GUI-0090] 325488 334716 ces_6_7/clock 2.374277e-10\r\n[INFO GUI-0090] 282288 382236 ces_7_6/clock 2.4838717e-10\r\n[INFO GUI-0090] 325488 382236 ces_7_7/clock 2.4390354e-10\r\n[INFO GUI-0090] 23088 239676 ces_4_0/clock 2.6987032e-10\r\n[INFO GUI-0090] 66288 239676 ces_4_1/clock 2.6595942e-10\r\n[INFO GUI-0090] 109488 239676 ces_4_2/clock 2.5412097e-10\r\n[INFO GUI-0090] 152688 239676 ces_4_3/clock 2.2762146e-10\r\n[INFO GUI-0090] 23088 287196 ces_5_0/clock 2.6053942e-10\r\n[INFO GUI-0090] 66288 287196 ces_5_1/clock 2.5651453e-10\r\n[INFO GUI-0090] 109488 287196 ces_5_2/clock 2.451736e-10\r\n[INFO GUI-0090] 152688 287196 ces_5_3/clock 2.2595725e-10\r\n[INFO GUI-0090] 195888 287196 ces_5_4/clock 2.334176e-10\r\n[INFO GUI-0090] 239088 287196 ces_5_5/clock 2.501299e-10\r\n[INFO GUI-0090] 282288 287196 ces_5_6/clock 2.6032337e-10\r\n[INFO GUI-0090] 325488 287196 ces_5_7/clock 2.6381633e-10\r\n[INFO GUI-0090] 195888 239676 ces_4_4/clock 2.1926745e-10\r\n[INFO GUI-0090] 239088 239676 ces_4_5/clock 2.2354223e-10\r\n[INFO GUI-0090] 23088 382236 ces_7_0/clock 2.871124e-10\r\n[INFO GUI-0090] 66288 382236 ces_7_1/clock 2.8355954e-10\r\n[INFO GUI-0090] 109488 382236 ces_7_2/clock 2.7308103e-10\r\n[INFO GUI-0090] 152688 382236 ces_7_3/clock 2.729042e-10\r\n[INFO GUI-0090] 23088 334716 ces_6_0/clock 2.504028e-10\r\n[INFO GUI-0090] 66288 334716 ces_6_1/clock 2.464243e-10\r\n[INFO GUI-0090] 109488 334716 ces_6_2/clock 2.3548827e-10\r\n[INFO GUI-0090] 152688 334716 ces_6_3/clock 2.3087125e-10\r\n[INFO GUI-0090] 195888 334716 ces_6_4/clock 2.3455274e-10\r\n[INFO GUI-0090] 239088 334716 ces_6_5/clock 2.388076e-10\r\n[INFO GUI-0090] 195888 382236 ces_7_4/clock 2.4005137e-10\r\n[INFO GUI-0090] 239088 382236 ces_7_5/clock 2.4445432e-10\r\n\"\"\"\r\nrows = data.strip().split(\"\\n\")\r\nx = []\r\ny = []\r\nz = []\r\nfor row in rows:\r\n    _, _, x_val, y_val, _, z_val = row.split()\r\n    x.append(float(x_val))\r\n    y.append(float(y_val))\r\n    z.append(float(z_val)/1E-12)\r\n\r\n# Prepare grid for interpolation\r\nxi = np.linspace(min(x), max(x), 100)\r\nyi = np.linspace(min(y), max(y), 100)\r\nxi, yi = np.meshgrid(xi, yi)\r\n\r\n# Interpolate the z values\r\nzi = griddata((x, y), z, (xi, yi), method='linear')\r\n\r\n# Plot the 3D heatmap\r\nfig = plt.figure()\r\nax = fig.add_subplot(111, projection='3d')\r\nsurf = ax.plot_surface(xi, yi, zi, rstride=1, cstride=1, cmap=plt.cm.jet,\r\n                       linewidth=0, antialiased=False)\r\n\r\nfig.colorbar(surf)\r\n\r\nplt.show()\r\n```\r\n", "date": "2023-08-04T12:44:23Z"}, {"author": "oharboe", "role": "assistant", "message": "asap7/sha3 using python snippet above...\r\n\r\nAnimation: https://drive.google.com/file/d/1k64ew7QkB9AeRaFs9ZOX09EqzeMZupMG/view\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/01ef0594-b8dd-4188-b35d-1978d9ec762e)\r\n", "date": "2023-08-04T12:56:26Z"}, {"author": "maliberty", "role": "assistant", "message": "@precisionmoon any thoughts here as I know you want more visualization as well.", "date": "2023-08-04T17:25:43Z"}], "date": "2023-08-04T09:01:31Z", "category": "Feature Request", "subcategory": "Data visualization improvement", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3771", "id": 3771, "title": "Generate report", "author": "AayushiRV", "description": "Is there any way to generate a report for max cap, max fanout and max slew after \u201crepair_design\u201d is applied?", "content": [{"author": "AayushiRV", "role": "user", "message": "Is there any way to generate a report for max cap, max fanout and max slew after \u201crepair_design\u201d is applied?", "date": "2023-08-03T10:26:09Z"}, {"author": "maliberty", "role": "assistant", "message": "If you are using ORFS then we already do that in 3_4_place_resized.log.  If any flow you can insert the relevant commands.", "date": "2023-08-03T12:37:34Z"}, {"author": "AayushiRV", "role": "assistant", "message": "I am not using ORFS.", "date": "2023-08-04T04:57:30Z"}, {"author": "maliberty", "role": "assistant", "message": "You can add ``` report_check_types -max_slew -max_capacitance -max_fanout``` to whatever you are using then", "date": "2023-08-04T05:28:58Z"}, {"author": "AayushiRV", "role": "assistant", "message": "OK, I am using this, if after using this command nothing is shown does that means all the violations are cleared? \r\n", "date": "2023-08-04T05:32:17Z"}], "date": "2023-08-03T10:26:09Z", "category": "Query", "subcategory": "Reporting", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3779", "id": 3779, "title": "arm64 release for Ubuntu", "author": "ilyaext", "description": "I'm looking for an arm64 OpenROAD architecture release to install on Linux AWS EC2 arm64.\r\nCan anyone give me a link or suggest how to compile?", "content": [{"author": "ilyaext", "role": "user", "message": "I'm looking for an arm64 OpenROAD architecture release to install on Linux AWS EC2 arm64.\r\nCan anyone give me a link or suggest how to compile?", "date": "2023-08-03T20:02:32Z"}, {"author": "maliberty", "role": "assistant", "message": "We don't test or release on arm64 but you can probably build from source.", "date": "2023-08-03T22:00:56Z"}, {"author": "maliberty", "role": "assistant", "message": "https://openroad.readthedocs.io/en/latest/user/Build.html", "date": "2023-08-03T22:01:30Z"}, {"author": "maliberty", "role": "assistant", "message": "https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildLocally.html for ORFS", "date": "2023-08-03T22:02:22Z"}], "date": "2023-08-03T20:02:32Z", "category": "Build", "subcategory": "Cross-platform compilation", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3772", "id": 3772, "title": "Reducing slew on clock tree with set_max_transition?", "author": "oharboe", "description": "With `make DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk` I get a lot of slew and I heard about `set_max_transition` and found it used in some designs in ORFS, so I thought I would see what it did...\r\n\r\n\r\n```\r\n==========================================================================\r\nresizer pre report_checks -path_delay max\r\n--------------------------------------------------------------------------\r\nStartpoint: _358_ (falling edge-triggered flip-flop clocked by io_clk')\r\nEndpoint: io_ram_dout2[43] (output port clocked by io_clk)\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                  0.00    0.00    0.00   clock io_clk' (fall edge)\r\n                          0.00    0.00   clock network delay (ideal)\r\n                  0.00    0.00    0.00 v _358_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                 95.79  123.37  123.37 v _358_/QN (DFFLQNx1_ASAP7_75t_R)\r\n     1    6.79                           _038_ (net)\r\n                 96.33    4.05  127.42 v _173_/A (INVx3_ASAP7_75t_R)\r\n                 45.29   35.23  162.65 ^ _173_/Y (INVx3_ASAP7_75t_R)\r\n     1    3.94                           io_ram_dout2[43] (net)\r\n                 45.43    1.45  164.10 ^ io_ram_dout2[43] (out)\r\n                                164.10   data arrival time\r\n\r\n                  0.00  500.00  500.00   clock io_clk (rise edge)\r\n                          0.00  500.00   clock network delay (ideal)\r\n                          0.00  500.00   clock reconvergence pessimism\r\n                       -100.00  400.00   output external delay\r\n                                400.00   data required time\r\n-----------------------------------------------------------------------------\r\n                                400.00   data required time\r\n                               -164.10   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                235.90   slack (MET)\r\n```\r\n\r\n\r\n0.050 ns seems to be a good place to start to bring down the slew from 95.79 above.\r\n\r\nWhen I add `set_max_transition 0.05 [current_design]` to the constraints.sdc, the flow seems to get stuck:\r\n\r\n```\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 79 input buffers.\r\n[INFO RSZ-0028] Inserted 128 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 232um.\r\n[no further output after 10 minutes or so]\r\n```\r\n\r\nmaybe the units are picoseconds? `set_max_transition 50 [current_design]`, same result, resizing doesn't seem to complete.\r\n\r\nCreated a draft pull request to check if it completes... https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1315\r\n", "content": [{"author": "oharboe", "role": "user", "message": "With `make DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk` I get a lot of slew and I heard about `set_max_transition` and found it used in some designs in ORFS, so I thought I would see what it did...\r\n\r\n\r\n```\r\n==========================================================================\r\nresizer pre report_checks -path_delay max\r\n--------------------------------------------------------------------------\r\nStartpoint: _358_ (falling edge-triggered flip-flop clocked by io_clk')\r\nEndpoint: io_ram_dout2[43] (output port clocked by io_clk)\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                  0.00    0.00    0.00   clock io_clk' (fall edge)\r\n                          0.00    0.00   clock network delay (ideal)\r\n                  0.00    0.00    0.00 v _358_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                 95.79  123.37  123.37 v _358_/QN (DFFLQNx1_ASAP7_75t_R)\r\n     1    6.79                           _038_ (net)\r\n                 96.33    4.05  127.42 v _173_/A (INVx3_ASAP7_75t_R)\r\n                 45.29   35.23  162.65 ^ _173_/Y (INVx3_ASAP7_75t_R)\r\n     1    3.94                           io_ram_dout2[43] (net)\r\n                 45.43    1.45  164.10 ^ io_ram_dout2[43] (out)\r\n                                164.10   data arrival time\r\n\r\n                  0.00  500.00  500.00   clock io_clk (rise edge)\r\n                          0.00  500.00   clock network delay (ideal)\r\n                          0.00  500.00   clock reconvergence pessimism\r\n                       -100.00  400.00   output external delay\r\n                                400.00   data required time\r\n-----------------------------------------------------------------------------\r\n                                400.00   data required time\r\n                               -164.10   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                235.90   slack (MET)\r\n```\r\n\r\n\r\n0.050 ns seems to be a good place to start to bring down the slew from 95.79 above.\r\n\r\nWhen I add `set_max_transition 0.05 [current_design]` to the constraints.sdc, the flow seems to get stuck:\r\n\r\n```\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 79 input buffers.\r\n[INFO RSZ-0028] Inserted 128 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 232um.\r\n[no further output after 10 minutes or so]\r\n```\r\n\r\nmaybe the units are picoseconds? `set_max_transition 50 [current_design]`, same result, resizing doesn't seem to complete.\r\n\r\nCreated a draft pull request to check if it completes... https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1315\r\n", "date": "2023-08-03T11:38:18Z"}, {"author": "maliberty", "role": "assistant", "message": "You are setting it 0.05ps not ns which is an impossibly fast target.", "date": "2023-08-03T12:39:44Z"}, {"author": "oharboe", "role": "assistant", "message": "`set_max_transition 80 [current_design]` is as low as I could get and `make cts` completing in a reasonable amount of time.\r\n\r\nLots of violations:\r\n\r\n```\r\n==========================================================================\r\ncts final report_check_types -max_slew -max_cap -max_fanout -violators\r\n--------------------------------------------------------------------------\r\nmax slew\r\n\r\nPin                                    Limit    Slew   Slack\r\n------------------------------------------------------------\r\n_8_44/A                                80.00  330.31 -250.31 (VIOLATED)\r\n_8_46/A                                80.00  309.18 -229.18 (VIOLATED)\r\nclkbuf_4_4_0_io_clk/Y                  80.00  294.55 -214.55 (VIOLATED)\r\nSRAM2RW16x32_2/CE1                     80.00  249.22 -169.22 (VIOLATED)\r\nSRAM2RW16x32_2/CE2                     80.00  249.17 -169.17 (VIOLATED)\r\nSRAM2RW16x32/CE1                       80.00  224.86 -144.86 (VIOLATED)\r\nSRAM2RW16x32/CE2                       80.00  224.83 -144.83 (VIOLATED)\r\n_58_73/A                               80.00  193.42 -113.42 (VIOLATED)\r\n_58_74/A                               80.00  193.40 -113.40 (VIOLATED)\r\n_8_52/A                                80.00  193.35 -113.35 (VIOLATED)\r\n_8_51/A                                80.00  193.32 -113.32 (VIOLATED)\r\n_8_48/A                                80.00  193.25 -113.25 (VIOLATED)\r\n_8_53/A                                80.00  193.22 -113.22 (VIOLATED)\r\n_8_50/A                                80.00  193.03 -113.03 (VIOLATED)\r\n_58_66/A                               80.00  192.96 -112.96 (VIOLATED)\r\n_58/A                                  80.00  192.91 -112.91 (VIOLATED)\r\n_58_71/A                               80.00  192.76 -112.76 (VIOLATED)\r\n_58_60/A                               80.00  192.65 -112.65 (VIOLATED)\r\n_58_67/A                               80.00  192.64 -112.64 (VIOLATED)\r\n_8_17/A                                80.00  192.28 -112.28 (VIOLATED)\r\n_8_18/A                                80.00  192.23 -112.23 (VIOLATED)\r\nclkbuf_4_11_0_io_clk/Y                 80.00  191.85 -111.85 (VIOLATED)\r\n_8_55/A                                80.00  154.73  -74.73 (VIOLATED)\r\n_8_24/A                                80.00  154.72  -74.72 (VIOLATED)\r\n_58_70/A                               80.00  154.72  -74.72 (VIOLATED)\r\n_58_77/A                               80.00  154.71  -74.71 (VIOLATED)\r\n_8_54/A                                80.00  154.67  -74.67 (VIOLATED)\r\n_8_49/A                                80.00  154.66  -74.66 (VIOLATED)\r\n_8_57/A                                80.00  154.55  -74.55 (VIOLATED)\r\n_58_75/A                               80.00  154.42  -74.42 (VIOLATED)\r\n_58_63/A                               80.00  154.36  -74.36 (VIOLATED)\r\nclkbuf_4_10_0_io_clk/Y                 80.00  153.74  -73.74 (VIOLATED)\r\nSRAM2RW16x32_3/CE1                     80.00  148.30  -68.30 (VIOLATED)\r\n_8_19/A                                80.00  142.96  -62.96 (VIOLATED)\r\n_8_36/A                                80.00  142.96  -62.96 (VIOLATED)\r\nclkbuf_4_2_0_io_clk/Y                  80.00  142.96  -62.96 (VIOLATED)\r\nclkbuf_4_9_0_io_clk/A                  80.00  140.76  -60.76 (VIOLATED)\r\nclkbuf_4_8_0_io_clk/A                  80.00  140.75  -60.75 (VIOLATED)\r\nclkbuf_4_10_0_io_clk/A                 80.00  139.69  -59.69 (VIOLATED)\r\nclkbuf_4_4_0_io_clk/A                  80.00  139.66  -59.66 (VIOLATED)\r\nclkbuf_4_5_0_io_clk/A                  80.00  139.65  -59.65 (VIOLATED)\r\nclkbuf_4_11_0_io_clk/A                 80.00  139.64  -59.64 (VIOLATED)\r\nclkbuf_4_6_0_io_clk/A                  80.00  139.22  -59.22 (VIOLATED)\r\nclkbuf_4_7_0_io_clk/A                  80.00  139.19  -59.19 (VIOLATED)\r\nclkbuf_4_0_0_io_clk/A                  80.00  138.58  -58.58 (VIOLATED)\r\nclkbuf_4_1_0_io_clk/A                  80.00  138.12  -58.12 (VIOLATED)\r\nclkbuf_4_15_0_io_clk/A                 80.00  137.02  -57.02 (VIOLATED)\r\nclkbuf_4_14_0_io_clk/A                 80.00  137.02  -57.02 (VIOLATED)\r\nclkbuf_4_13_0_io_clk/A                 80.00  137.01  -57.01 (VIOLATED)\r\nclkbuf_4_12_0_io_clk/A                 80.00  136.99  -56.99 (VIOLATED)\r\nclkbuf_4_3_0_io_clk/A                  80.00  136.86  -56.86 (VIOLATED)\r\nclkbuf_4_2_0_io_clk/A                  80.00  136.22  -56.22 (VIOLATED)\r\nclkbuf_0_io_clk/Y                      80.00  132.32  -52.32 (VIOLATED)\r\nSRAM2RW16x32_2/O2[23]                   0.23   45.42  -45.19 (VIOLATED)\r\nSRAM2RW16x32_2/O2[24]                   0.23   45.26  -45.04 (VIOLATED)\r\nSRAM2RW16x32_2/O2[16]                   0.23   41.77  -41.54 (VIOLATED)\r\nSRAM2RW16x32_3/CE2                     80.00  120.37  -40.37 (VIOLATED)\r\nSRAM2RW16x32_2/O2[30]                   0.23   40.24  -40.01 (VIOLATED)\r\nSRAM2RW16x32_2/O2[26]                   0.23   38.87  -38.65 (VIOLATED)\r\nSRAM2RW16x32_2/O2[29]                   0.23   38.54  -38.31 (VIOLATED)\r\nSRAM2RW16x32_2/O2[12]                   0.23   38.16  -37.93 (VIOLATED)\r\nSRAM2RW16x32_2/O2[17]                   0.23   36.78  -36.55 (VIOLATED)\r\nSRAM2RW16x32_2/O2[7]                    0.23   36.69  -36.46 (VIOLATED)\r\n```", "date": "2023-08-03T12:46:17Z"}, {"author": "oharboe", "role": "assistant", "message": "This PR uses set_max_transition. I have an example to study now, so closing.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1311", "date": "2023-08-03T15:26:55Z"}], "date": "2023-08-03T11:38:18Z", "category": "Query", "subcategory": "Usage question", "Tool": "Gate Resizer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3766", "id": 3766, "title": "What does \"time given to startpoint\" mean?", "author": "oharboe", "description": "Silly question...\r\n\r\n```\r\n>>> report_checks -path_delay max -through [get_pins foo*] -format full_clock_expanded -fields {net slew cap}\r\nStartpoint: yyy (positive level-sensitive latch clocked by clock)\r\nEndpoint: zzz (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                          0.00    0.00   clock source latency\r\n                  0.00    0.00    0.00 ^ clock (in)\r\n[deleted]\r\n                        580.10 4606.57   time given to startpoint\r\n[deleted]\r\n\u00b4\u00b4\u00b4\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Silly question...\r\n\r\n```\r\n>>> report_checks -path_delay max -through [get_pins foo*] -format full_clock_expanded -fields {net slew cap}\r\nStartpoint: yyy (positive level-sensitive latch clocked by clock)\r\nEndpoint: zzz (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                          0.00    0.00   clock source latency\r\n                  0.00    0.00    0.00 ^ clock (in)\r\n[deleted]\r\n                        580.10 4606.57   time given to startpoint\r\n[deleted]\r\n\u00b4\u00b4\u00b4\r\n", "date": "2023-08-02T16:06:15Z"}, {"author": "maliberty", "role": "assistant", "message": "I think you want to resolve \"positive level-sensitive latch\" first.  I think it relates to latch transparency.", "date": "2023-08-02T16:09:24Z"}, {"author": "oharboe", "role": "assistant", "message": "Fixed in #3762", "date": "2023-08-02T16:45:50Z"}], "date": "2023-08-02T16:06:15Z", "category": "Query", "subcategory": "Timing analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3763", "id": 3763, "title": "How can I set a false path within a macro?", "author": "oharboe", "description": "I want to set a false path for two pins on a macro, but not at the macro's level, but rather at the containing macros level.\r\n\r\nI looked at\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/bf9f1e81bfabb85c0bfe794d18a4ea82dda83872/flow/designs/tsmc65lp/vanilla5/constraint.sdc#L724\r\n\r\nand thought it was supported. Though when I read https://github.com/The-OpenROAD-Project/OpenSTA/blob/3275a304e17092895b7d7721148edc7dc67ba3aa/search/Sta.cc#L2080, it looks like I can only use the ports of the macro for the constraints.sdc file as `-to` and `-from`. \r\n\r\nNo changes are intended for mock-array w.r.t. this, I'm only using mock-array to illustrate what I'm trying to find the syntax for:\r\n\r\n```\r\n>>> set_false_path -from [get_pins ces_6_6/io_ins_right*] -to [get_pins ces_6_6/io_outs_right*]\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[0]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[10]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[11]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[12]' is not a valid start point.\r\n```\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65c8550d-3187-4503-a1b7-2e35c81ccba6)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I want to set a false path for two pins on a macro, but not at the macro's level, but rather at the containing macros level.\r\n\r\nI looked at\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/bf9f1e81bfabb85c0bfe794d18a4ea82dda83872/flow/designs/tsmc65lp/vanilla5/constraint.sdc#L724\r\n\r\nand thought it was supported. Though when I read https://github.com/The-OpenROAD-Project/OpenSTA/blob/3275a304e17092895b7d7721148edc7dc67ba3aa/search/Sta.cc#L2080, it looks like I can only use the ports of the macro for the constraints.sdc file as `-to` and `-from`. \r\n\r\nNo changes are intended for mock-array w.r.t. this, I'm only using mock-array to illustrate what I'm trying to find the syntax for:\r\n\r\n```\r\n>>> set_false_path -from [get_pins ces_6_6/io_ins_right*] -to [get_pins ces_6_6/io_outs_right*]\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[0]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[10]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[11]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[12]' is not a valid start point.\r\n```\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65c8550d-3187-4503-a1b7-2e35c81ccba6)\r\n", "date": "2023-08-02T08:27:43Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nI got this from OpenSTA user guide:\r\n```\r\nfrom_list A list of clocks, instances, ports or pins.\r\nthrough_list A list of instances, pins or nets.\r\nto_list A list of clocks, instances, ports or pins.\r\n```\r\nSo as per this you can provide `pins` also.\r\n```\r\nThe **set_false_path** command disables timing along a path from, through and to a group of design objects.\r\n\r\nObjects in **from_list** can be clocks, register/latch instances, or register/latch clock pins. The -rise_from\r\nand -fall_from keywords restrict the false paths to a specific clock edge.\r\n\r\nObjects in **through_list** can be nets, instances, instance pins, or hierarchical pins,. The -rise_through\r\nand -fall_through keywords restrict the false paths to a specific path edge that traverses through the\r\nobject.\r\n\r\nObjects in **to_list** can be clocks, register/latch instances, or register/latch clock pins. The -rise_to and -\r\nfall_to keywords restrict the false paths to a specific transition at the path end.\r\n```", "date": "2023-08-02T13:01:02Z"}, {"author": "maliberty", "role": "assistant", "message": "You probably need to use -through as those points are not the beginning or end of a timing path.", "date": "2023-08-02T14:11:14Z"}, {"author": "maliberty", "role": "assistant", "message": "I suspect you want \r\n\r\nset_false_path -through [get_pins ces_6_6/io_ins_right*] -through [get_pins ces_6_6/io_outs_right*]\r\n\r\n", "date": "2023-08-02T15:04:44Z"}], "date": "2023-08-02T08:27:43Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3732", "id": 3732, "title": "insert_buffer", "author": "AayushiRV", "description": "I am inserting buffers to my design. How can I find that buffers are being inserted? I cannot find anything in my design's netlist.", "content": [{"author": "AayushiRV", "role": "user", "message": "I am inserting buffers to my design. How can I find that buffers are being inserted? I cannot find anything in my design's netlist.", "date": "2023-07-27T11:02:09Z"}, {"author": "maliberty", "role": "assistant", "message": "How are you inserting the buffers?", "date": "2023-07-27T13:56:03Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no such command in OR:\r\n```\r\nopenroad> insert_buffer\r\ninvalid command name \"insert_buffer\"\r\nwhile evaluating insert_buffer\r\n```", "date": "2023-07-29T13:31:31Z"}, {"author": "vijayank88", "role": "assistant", "message": "@AayushiRV \r\n`insert_buffer` is maintained by OpenLane. Check this example: https://github.com/The-OpenROAD-Project/OpenLane/blob/master/tests/1007/interactive.tcl\r\nSo OpenROAD nothing to do with that.", "date": "2023-08-02T10:08:27Z"}], "date": "2023-07-27T11:02:09Z", "category": "Query", "subcategory": "Usage question", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3745", "id": 3745, "title": "mock-array placement is very different from row to row", "author": "oharboe", "description": "I'm curious as to why the placement gives so different results for a situation that should be identical.\r\n\r\nThe rows in mock-array are identical and there are io_lsbs_* on the right of mock-array that are fed flip flops.\r\n\r\nA snapshot from `make gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/91c718ad-7392-4af6-8ed4-ce2184e6ef80)\r\n\r\nIf I zoom in on the upper right row, I see that the io_lsbs_*, fed by a flipflop that is placed right next to the outputs are somewhat spread out:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/25d2393c-d316-4ca0-a50c-9bdeef629066)\r\n\r\nIf I look at the row below and to the right, I see that the io_lsbs_* are clustered together, which looks neat.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f5530a21-1135-4ad3-9f60-3304f2538d2f)\r\n\r\nAt the bottom row to the right, the io_lsbs_* are mixed into the other pins:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5b4d25a7-567f-480f-bf58-736cb65bb0e3)\r\n\r\n\r\n\r\nSide-note: make foo_issue doesn't work out of the box on mock-array because the size of the tar.gz file is ca. 100mBytes. This complicates filing bug reports and feature requests.\r\n\r\nSide-note: the io_lsbs_* are driven by a flip flop, then go to an output cell and are finally buffered before they go to the pin of the macro. Silly question: what does an output cell do and why does it need to be buffered? Can't the flip-flop drive the output pin directly?\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm curious as to why the placement gives so different results for a situation that should be identical.\r\n\r\nThe rows in mock-array are identical and there are io_lsbs_* on the right of mock-array that are fed flip flops.\r\n\r\nA snapshot from `make gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/91c718ad-7392-4af6-8ed4-ce2184e6ef80)\r\n\r\nIf I zoom in on the upper right row, I see that the io_lsbs_*, fed by a flipflop that is placed right next to the outputs are somewhat spread out:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/25d2393c-d316-4ca0-a50c-9bdeef629066)\r\n\r\nIf I look at the row below and to the right, I see that the io_lsbs_* are clustered together, which looks neat.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f5530a21-1135-4ad3-9f60-3304f2538d2f)\r\n\r\nAt the bottom row to the right, the io_lsbs_* are mixed into the other pins:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5b4d25a7-567f-480f-bf58-736cb65bb0e3)\r\n\r\n\r\n\r\nSide-note: make foo_issue doesn't work out of the box on mock-array because the size of the tar.gz file is ca. 100mBytes. This complicates filing bug reports and feature requests.\r\n\r\nSide-note: the io_lsbs_* are driven by a flip flop, then go to an output cell and are finally buffered before they go to the pin of the macro. Silly question: what does an output cell do and why does it need to be buffered? Can't the flip-flop drive the output pin directly?\r\n", "date": "2023-07-30T08:45:43Z"}, {"author": "maliberty", "role": "assistant", "message": "Global placement isn't a process that will produce identical results in all areas, even if they have symmetry.  We could look at specific areas if they seem to be suboptimal.\r\n\r\nYou can put the issue in google drive and put a link in the issue.\r\n\r\nWe buffer the inputs and outputs by default but it isn't strictly mandatory.  FF often don't have a large amount of drive strength for driving output signals.  However with no output loading in the sdc it probably doesn't matter but is a bit unrealistic.\r\n\r\nBtw, I still find there is too much hold buffering due to the unrealistically io constraints.", "date": "2023-07-31T21:34:53Z"}, {"author": "oharboe", "role": "assistant", "message": "> Global placement isn't a process that will produce identical results in all areas, even if they have symmetry. We could look at specific areas if they seem to be suboptimal.\r\n\r\nI was just curious how much difference is considered pathological. If, looking at the pictures, this variation is expected, then I don't think there is anything more to investigate here.\r\n\r\n`make global_place_issue` generated a 120mByte .tar.gz file, but zipping just the 3_place.odb file gave me 2 mByte .zip file: [place.zip](https://github.com/The-OpenROAD-Project/OpenROAD/files/12225008/place.zip)\r\n\r\nTo generate it locally, run `make DESIGN_CONFIG=designs/asap7/mock-array/config.mk place`\r\n\r\nIf there is something interesting here, then this discussion can be converted to a feature request with the click of a button...\r\n\r\n> You can put the issue in google drive and put a link in the issue.\r\n> \r\n> We buffer the inputs and outputs by default but it isn't strictly mandatory. FF often don't have a large amount of drive strength for driving output signals. However with no output loading in the sdc it probably doesn't matter but is a bit unrealistic.\r\n\r\nI imagine that a flip flop with a lot of drive strength would be bigger and slower... seems sensible to create a small, fast and weak flip flop and leave buffering to buffers and inverters...\r\n\r\n> \r\n> Btw, I still find there is too much hold buffering due to the unrealistically io constraints.\r\n\r\nYes... I've got changes locally removes that, but I need to understand the clock tree generation better first. That's separate concern to placement though.", "date": "2023-08-01T05:47:38Z"}, {"author": "maliberty", "role": "assistant", "message": "If I look at the current mock array the areas around the IOs are so filled with hold cells that the variation isn't as interesting as you show above as they are packed with cell, eg\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/85c19478-10dc-4e52-98e0-79af467df0f0)\r\n\r\nAlso the IOs are not placed symmetrically with respect to the macros which will influence global placement.", "date": "2023-08-01T21:11:12Z"}, {"author": "oharboe", "role": "assistant", "message": "If this behavior exists when the hold cells are gone, then it's worth a second look.", "date": "2023-08-01T21:32:38Z"}], "date": "2023-07-30T08:45:43Z", "category": "Runtime", "subcategory": "Unexpected placement behavior", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3746", "id": 3746, "title": "Can I calculate the delay for a macro based on the .lib file?", "author": "oharboe", "description": "I would like to understand the .lib file format a bit better. It is my understanding that I should be able to calculate the delay of the macro output based on what is in the .lib file.\r\n\r\nFor the mock-array, we have 183.19 ps delay for driving the io_outs_left[0] output. Looking at the .lib file, I can't figure out where 183.19ps comes from.\r\n\r\n```\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n```\r\n\r\nFrom mock-array:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left_7[0] -format full -format full_clock_expanded\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_outs_left_7[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock source latency\r\n   0.00    0.00 ^ clock (in)\r\n  38.29   38.29 ^ wire65/Y (BUFx16f_ASAP7_75t_R)\r\n  43.22   81.50 ^ clkbuf_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.84  121.35 ^ clkbuf_1_1_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  29.43  150.78 ^ clkbuf_2_2_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  32.00  182.78 ^ clkbuf_3_5_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.23  222.00 ^ clkbuf_4_10_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  16.70  238.70 ^ max_length67/Y (BUFx12f_ASAP7_75t_R)\r\n  30.80  269.51 ^ max_length66/Y (BUFx12f_ASAP7_75t_R)\r\n  33.73  303.24 ^ ces_7_0/clock (Element)\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n  18.46  504.89 ^ output3073/Y (BUFx2_ASAP7_75t_R)\r\n   0.88  505.77 ^ io_outs_left_7[0] (out)\r\n         505.77   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n   0.00 1000.00   clock reconvergence pessimism\r\n-200.00  800.00   output external delay\r\n         800.00   data required time\r\n---------------------------------------------------------\r\n         800.00   data required time\r\n        -505.77   data arrival time\r\n---------------------------------------------------------\r\n         294.23   slack (MET)\r\n```\r\n\r\nIf I look in the Element, I can get a full report of what is driving that pin. However, my understanding is that some detail(I don't know what) is lost in the Element.lib representation:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left[0]\r\nStartpoint: _749_ (falling edge-triggered flip-flop clocked by clock')\r\nEndpoint: io_outs_left[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock' (fall edge)\r\n 108.94  108.94   clock network delay (propagated)\r\n   0.00  108.94 v _749_/CLK (DFFLQNx2_ASAP7_75t_R)\r\n  47.39  156.33 v _749_/QN (DFFLQNx2_ASAP7_75t_R)\r\n  12.65  168.98 ^ _496_/Y (INVx3_ASAP7_75t_R)\r\n  18.89  187.86 ^ _777_/Y (BUFx2_ASAP7_75t_R)\r\n  18.21  206.07 ^ output336/Y (BUFx2_ASAP7_75t_R)\r\n   0.75  206.82 ^ io_outs_left[0] (out)\r\n         206.82   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n -20.00  980.00   clock uncertainty\r\n   0.00  980.00   clock reconvergence pessimism\r\n -50.00  930.00   output external delay\r\n         930.00   data required time\r\n---------------------------------------------------------\r\n         930.00   data required time\r\n        -206.82   data arrival time\r\n---------------------------------------------------------\r\n         723.18   slack (MET)\r\n```\r\n\r\nHere the latency is 206.82, so that's not the same as 183.19 above...\r\n\r\n\r\nHere is the pin from the .lib file... Since the above is a rising transition, I think something in the \"rise\" part should add up to 183.19?\r\n\r\n```\r\nlibrary (Element) {\r\n  comment                        : \"\";\r\n  delay_model                    : table_lookup;\r\n  simulation                     : false;\r\n  capacitive_load_unit (1,fF);\r\n  leakage_power_unit             : 1pW;\r\n  current_unit                   : \"1A\";\r\n  pulling_resistance_unit        : \"1kohm\";\r\n  time_unit                      : \"1ps\";\r\n  voltage_unit                   : \"1v\";\r\n  library_features(report_delay_calculation);\r\n\r\n  input_threshold_pct_rise : 50;\r\n  input_threshold_pct_fall : 50;\r\n  output_threshold_pct_rise : 50;\r\n  output_threshold_pct_fall : 50;\r\n  slew_lower_threshold_pct_rise : 10;\r\n  slew_lower_threshold_pct_fall : 10;\r\n  slew_upper_threshold_pct_rise : 90;\r\n  slew_upper_threshold_pct_fall : 90;\r\n  slew_derate_from_library : 1.0;\r\n\r\n\r\n  nom_process                    : 1.0;\r\n  nom_temperature                : 0.0;\r\n  nom_voltage                    : 0.77;\r\n\r\n  lu_table_template(template_1) {\r\n    variable_1 : total_output_net_capacitance;\r\n    index_1 (\"1.44000,  2.88000,  5.76000,  11.52000,  23.04000,  46.08000,  92.16000\");\r\n  }\r\n[deleted]\r\n  type (\"io_outs_left\") {\r\n    base_type : array;\r\n    data_type : bit;\r\n    bit_width : 64;\r\n    bit_from : 63;\r\n    bit_to : 0;\r\n  }\r\n[deleted]\r\n    pin(\"io_outs_left[0]\") {\r\n      direction : output;\r\n      capacitance : 0.0000;\r\n      timing() {\r\n        related_pin : \"clock\";\r\n        timing_type : rising_edge;\r\n\tcell_rise(template_1) {\r\n          values(\"179.22894,181.54152,185.64272,193.40265,208.65739,239.04976,299.74982\");\r\n\t}\r\n\trise_transition(template_1) {\r\n          values(\"7.61338,11.68247,19.95989,36.84301,71.06670,139.93100,277.88907\");\r\n\t}\r\n\tcell_fall(template_1) {\r\n          values(\"176.95767,179.16806,182.98384,189.92587,203.38441,230.16859,283.65878\");\r\n\t}\r\n\tfall_transition(template_1) {\r\n          values(\"6.99804,10.42909,17.26771,31.14958,59.35967,116.35495,230.77396\");\r\n\t}\r\n      }\r\n    }\r\n```\r\n\r\nWhen I look at mock-array, I see that the wire is highlighted in yellow when I clock on the Element delay.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/092fe3d1-a379-4937-b6b3-408fa28d3000)\r\n\r\nBut when I click on the next line, that wire segment is also highlighted.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5c812814-acfc-4093-9238-6ef7af09c91b)\r\n\r\n\r\nSo I guess the wire segments are associated with some of the lines in the timing list, but I can't see what the delay is due to the wire and I don't know which item that delay is associated with. I have seen separate \"wire\" lines in the timing report for `make gui_final`, but not in this case...\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I would like to understand the .lib file format a bit better. It is my understanding that I should be able to calculate the delay of the macro output based on what is in the .lib file.\r\n\r\nFor the mock-array, we have 183.19 ps delay for driving the io_outs_left[0] output. Looking at the .lib file, I can't figure out where 183.19ps comes from.\r\n\r\n```\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n```\r\n\r\nFrom mock-array:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left_7[0] -format full -format full_clock_expanded\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_outs_left_7[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock source latency\r\n   0.00    0.00 ^ clock (in)\r\n  38.29   38.29 ^ wire65/Y (BUFx16f_ASAP7_75t_R)\r\n  43.22   81.50 ^ clkbuf_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.84  121.35 ^ clkbuf_1_1_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  29.43  150.78 ^ clkbuf_2_2_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  32.00  182.78 ^ clkbuf_3_5_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.23  222.00 ^ clkbuf_4_10_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  16.70  238.70 ^ max_length67/Y (BUFx12f_ASAP7_75t_R)\r\n  30.80  269.51 ^ max_length66/Y (BUFx12f_ASAP7_75t_R)\r\n  33.73  303.24 ^ ces_7_0/clock (Element)\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n  18.46  504.89 ^ output3073/Y (BUFx2_ASAP7_75t_R)\r\n   0.88  505.77 ^ io_outs_left_7[0] (out)\r\n         505.77   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n   0.00 1000.00   clock reconvergence pessimism\r\n-200.00  800.00   output external delay\r\n         800.00   data required time\r\n---------------------------------------------------------\r\n         800.00   data required time\r\n        -505.77   data arrival time\r\n---------------------------------------------------------\r\n         294.23   slack (MET)\r\n```\r\n\r\nIf I look in the Element, I can get a full report of what is driving that pin. However, my understanding is that some detail(I don't know what) is lost in the Element.lib representation:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left[0]\r\nStartpoint: _749_ (falling edge-triggered flip-flop clocked by clock')\r\nEndpoint: io_outs_left[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock' (fall edge)\r\n 108.94  108.94   clock network delay (propagated)\r\n   0.00  108.94 v _749_/CLK (DFFLQNx2_ASAP7_75t_R)\r\n  47.39  156.33 v _749_/QN (DFFLQNx2_ASAP7_75t_R)\r\n  12.65  168.98 ^ _496_/Y (INVx3_ASAP7_75t_R)\r\n  18.89  187.86 ^ _777_/Y (BUFx2_ASAP7_75t_R)\r\n  18.21  206.07 ^ output336/Y (BUFx2_ASAP7_75t_R)\r\n   0.75  206.82 ^ io_outs_left[0] (out)\r\n         206.82   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n -20.00  980.00   clock uncertainty\r\n   0.00  980.00   clock reconvergence pessimism\r\n -50.00  930.00   output external delay\r\n         930.00   data required time\r\n---------------------------------------------------------\r\n         930.00   data required time\r\n        -206.82   data arrival time\r\n---------------------------------------------------------\r\n         723.18   slack (MET)\r\n```\r\n\r\nHere the latency is 206.82, so that's not the same as 183.19 above...\r\n\r\n\r\nHere is the pin from the .lib file... Since the above is a rising transition, I think something in the \"rise\" part should add up to 183.19?\r\n\r\n```\r\nlibrary (Element) {\r\n  comment                        : \"\";\r\n  delay_model                    : table_lookup;\r\n  simulation                     : false;\r\n  capacitive_load_unit (1,fF);\r\n  leakage_power_unit             : 1pW;\r\n  current_unit                   : \"1A\";\r\n  pulling_resistance_unit        : \"1kohm\";\r\n  time_unit                      : \"1ps\";\r\n  voltage_unit                   : \"1v\";\r\n  library_features(report_delay_calculation);\r\n\r\n  input_threshold_pct_rise : 50;\r\n  input_threshold_pct_fall : 50;\r\n  output_threshold_pct_rise : 50;\r\n  output_threshold_pct_fall : 50;\r\n  slew_lower_threshold_pct_rise : 10;\r\n  slew_lower_threshold_pct_fall : 10;\r\n  slew_upper_threshold_pct_rise : 90;\r\n  slew_upper_threshold_pct_fall : 90;\r\n  slew_derate_from_library : 1.0;\r\n\r\n\r\n  nom_process                    : 1.0;\r\n  nom_temperature                : 0.0;\r\n  nom_voltage                    : 0.77;\r\n\r\n  lu_table_template(template_1) {\r\n    variable_1 : total_output_net_capacitance;\r\n    index_1 (\"1.44000,  2.88000,  5.76000,  11.52000,  23.04000,  46.08000,  92.16000\");\r\n  }\r\n[deleted]\r\n  type (\"io_outs_left\") {\r\n    base_type : array;\r\n    data_type : bit;\r\n    bit_width : 64;\r\n    bit_from : 63;\r\n    bit_to : 0;\r\n  }\r\n[deleted]\r\n    pin(\"io_outs_left[0]\") {\r\n      direction : output;\r\n      capacitance : 0.0000;\r\n      timing() {\r\n        related_pin : \"clock\";\r\n        timing_type : rising_edge;\r\n\tcell_rise(template_1) {\r\n          values(\"179.22894,181.54152,185.64272,193.40265,208.65739,239.04976,299.74982\");\r\n\t}\r\n\trise_transition(template_1) {\r\n          values(\"7.61338,11.68247,19.95989,36.84301,71.06670,139.93100,277.88907\");\r\n\t}\r\n\tcell_fall(template_1) {\r\n          values(\"176.95767,179.16806,182.98384,189.92587,203.38441,230.16859,283.65878\");\r\n\t}\r\n\tfall_transition(template_1) {\r\n          values(\"6.99804,10.42909,17.26771,31.14958,59.35967,116.35495,230.77396\");\r\n\t}\r\n      }\r\n    }\r\n```\r\n\r\nWhen I look at mock-array, I see that the wire is highlighted in yellow when I clock on the Element delay.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/092fe3d1-a379-4937-b6b3-408fa28d3000)\r\n\r\nBut when I click on the next line, that wire segment is also highlighted.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5c812814-acfc-4093-9238-6ef7af09c91b)\r\n\r\n\r\nSo I guess the wire segments are associated with some of the lines in the timing list, but I can't see what the delay is due to the wire and I don't know which item that delay is associated with. I have seen separate \"wire\" lines in the timing report for `make gui_final`, but not in this case...\r\n\r\n", "date": "2023-07-30T15:49:45Z"}, {"author": "maliberty", "role": "assistant", "message": "You might try report_dcalc.  Also ```report_checks -path_delay min -fields {slew cap input nets fanout} ``` helps to break out the gate and net delay.\r\n\r\nIn general it isn't a simple calculation when there are wire parasitics.  With a simple capacitive load you just look at the table and interpolate.\r\n\r\nIn this case I would suspect input slews might be different between block and top level.", "date": "2023-07-30T16:54:28Z"}, {"author": "rovinski", "role": "assistant", "message": "Maybe take a read of this article to help understand the non-linear delay model (NLDM) for .lib:\r\nhttps://www.physicaldesign4u.com/2020/05/non-linear-delay-model-nldm-in-vlsi.html\r\n\r\nThe \"exact number\" will never appear in the .lib file. The .lib file creates a series of lookup tables. The inputs to those lookup tables are the capacitance of the wiring on the output and the input slew. If the inputs are not exactly one of the keys in the lookup table (which they usually aren't because of floating point numbers) then the output is interpolated. You will almost never see the \"exact\" delay value appear in the .lib file itself.", "date": "2023-07-30T18:24:29Z"}, {"author": "maliberty", "role": "assistant", "message": "```report_dcalc -from output3073/A -to output3073/Y```\r\nworks but the report is not simple to interpret ", "date": "2023-07-30T20:39:59Z"}, {"author": "maliberty", "role": "assistant", "message": "What is your goal in this process?  Likely there is more calculation in the interconnect side of the delay.\r\n\r\nYou can only use it on a single arc and not along a path.", "date": "2023-07-31T21:35:53Z"}, {"author": "oharboe", "role": "assistant", "message": "I am looking at some numbers that are concerning and I wanted to understand this well enough that I can find out if OpenROAD/STA are probably working correctly or if the numbers are off and it is worth digging in to.\r\n\r\nI think I do now.", "date": "2023-08-01T05:50:18Z"}], "date": "2023-07-30T15:49:45Z", "category": "Query", "subcategory": "Understanding delay calculation", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3562", "id": 3562, "title": "About Local Density Penalty Described in the Original RePlace Paper", "author": "by1e11", "description": "Hi, guys\r\n\r\nAfter reading the paper and browsing the source codes, I cannot figure out which parts of the codes reflect the local density penalty described in the paper, could you please suggest where can I find that in the implementation?\r\n\r\nThanks a lot for the nice work.\r\n\r\nBo", "content": [{"author": "by1e11", "role": "user", "message": "Hi, guys\r\n\r\nAfter reading the paper and browsing the source codes, I cannot figure out which parts of the codes reflect the local density penalty described in the paper, could you please suggest where can I find that in the implementation?\r\n\r\nThanks a lot for the nice work.\r\n\r\nBo", "date": "2023-07-02T14:40:40Z"}, {"author": "maliberty", "role": "assistant", "message": "@mgwoo can you answer this?", "date": "2023-07-02T14:50:27Z"}, {"author": "mangohehe", "role": "assistant", "message": "A method related density computation seems to be removed in the CL https://github.com/The-OpenROAD-Project/OpenROAD/commit/0f82f83049733938c2fb5d6141b291409aa4678f , in which the original design calls updateDensityForceBin inside NesterovPlace::doNesterovPlace. (not sure if this can be related)\r\n\r\n@ahmadelrouby could you help understand the changes? thanks", "date": "2023-07-19T23:17:10Z"}, {"author": "mgwoo", "role": "assistant", "message": "I didn't decipher the local density features because of unstable issues. \r\nPlease check the standalone repo for the local density calculation:  https://github.com/The-OpenROAD-Project/RePlAce/blob/7c07cffdf419c4dbd315c73c235ec5d670fb0240/src/ns.cpp#L1011", "date": "2023-07-20T07:27:20Z"}], "date": "2023-07-02T14:40:40Z", "category": "Query", "subcategory": "Code implementation query", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3593", "id": 3593, "title": "Running times for 6_report as a function of area", "author": "oharboe", "description": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and executing `python util/plot-running-times.py`, I've plotted some running times against area:\r\n\r\n`6_report` running time in seconds below. Note that the x axis is um^2, but that it is multiplied by 1e6 (as can be seen in the lower right corner).\r\n\r\nAs can be seen, the running time is worse than proportional to area and I imagine that there could be some low hanging fruit as I would expect reporting not to be on the order of detailed routing times.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/499880aa-0e07-4772-9e10-73dddcf9ef51)\r\n\r\n\r\n```\r\ncat /proc/cpuinfo | grep processor | wc -l \r\n12\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and executing `python util/plot-running-times.py`, I've plotted some running times against area:\r\n\r\n`6_report` running time in seconds below. Note that the x axis is um^2, but that it is multiplied by 1e6 (as can be seen in the lower right corner).\r\n\r\nAs can be seen, the running time is worse than proportional to area and I imagine that there could be some low hanging fruit as I would expect reporting not to be on the order of detailed routing times.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/499880aa-0e07-4772-9e10-73dddcf9ef51)\r\n\r\n\r\n```\r\ncat /proc/cpuinfo | grep processor | wc -l \r\n12\r\n```", "date": "2023-07-08T19:57:36Z"}, {"author": "oharboe", "role": "assistant", "message": "Same for `2_6_pdn`, here running time is proportional to area:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/12bf57a3-9670-47d3-a19e-98c35f023ac1)\r\n", "date": "2023-07-08T19:58:16Z"}, {"author": "oharboe", "role": "assistant", "message": "`5_2_TritonRoute` running times are misleading as there's some sort of problem with DRC errors #3592\r\n\r\nHowever, since I have the data, I include the plot here anyway.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/80e6d705-994a-408d-9847-461b75cfaa37)\r\n", "date": "2023-07-08T20:00:16Z"}, {"author": "oharboe", "role": "assistant", "message": "A feature request has been filed to improve reporting times #3599", "date": "2023-07-30T08:35:14Z"}], "date": "2023-07-08T19:57:36Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3598", "id": 3598, "title": "Detailed routing time for mock-array as a function of area", "author": "oharboe", "description": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1212, I've plotted detailed routing times for the same Verilog 8x8 8 bit datapath mock-array, changing only the size of the element macros.\r\n\r\nAny thoughts on these running times for the mock-array for detailed routing? Expected? Unexpected?\r\n\r\nThe algorithm seems to be MUCH faster for smaller areas\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2e92b32-302f-4ac5-9381-1178c6520b76)\r\n\r\n\r\nBiggest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a7ca8cb1-030d-488a-99c7-c80809e46529)\r\n\r\nThe element-element wires are not straight, lots of little deviations from horizontal/vertical:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/67bb32ef-cd99-4369-bd27-becaabd73e8d)\r\n\r\nSmallest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b5ce6e6-c647-4623-9fa9-26420ec0d7a8)\r\n\r\n\r\n\"All\" element to element wires are horizontal/vertical (didn't check exhaustively):\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4e3f7f0e-ae10-451e-bb61-a012a48c28bd)\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1212, I've plotted detailed routing times for the same Verilog 8x8 8 bit datapath mock-array, changing only the size of the element macros.\r\n\r\nAny thoughts on these running times for the mock-array for detailed routing? Expected? Unexpected?\r\n\r\nThe algorithm seems to be MUCH faster for smaller areas\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2e92b32-302f-4ac5-9381-1178c6520b76)\r\n\r\n\r\nBiggest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a7ca8cb1-030d-488a-99c7-c80809e46529)\r\n\r\nThe element-element wires are not straight, lots of little deviations from horizontal/vertical:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/67bb32ef-cd99-4369-bd27-becaabd73e8d)\r\n\r\nSmallest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b5ce6e6-c647-4623-9fa9-26420ec0d7a8)\r\n\r\n\r\n\"All\" element to element wires are horizontal/vertical (didn't check exhaustively):\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4e3f7f0e-ae10-451e-bb61-a012a48c28bd)\r\n\r\n", "date": "2023-07-09T08:05:58Z"}, {"author": "maliberty", "role": "assistant", "message": "How do the number of routing iterations and iter0 DRCs compare between datapoints? ", "date": "2023-07-09T21:06:25Z"}, {"author": "oharboe", "role": "assistant", "message": "I wasn't able to follow up on this in a timely manner.", "date": "2023-07-30T08:34:04Z"}], "date": "2023-07-09T08:05:58Z", "category": "Query", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3733", "id": 3733, "title": "Why invertors in front of the flip-flops in a mock-array clock tree?", "author": "oharboe", "description": "For mock-array, I ran `make cts && make gui_cts` and pasted the clock tree below.\r\n\r\nI'm curious: why is there an inverter in front of every flip-flop and no invertor in front of the macros?\r\n \r\nI checked by hovering over a number of the pink dots at the leaf of the clock tree that the flip-flops are the leaf points with an invertor in front.\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9a268a21-6f3b-4777-b10d-940090081cbb)\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8a96024d-9038-445b-8826-c13354ca9264)\r\n\r\n\r\nThe clock period is 1000ps and the skew is 50ps, by gleaning at the clockd tree.\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "For mock-array, I ran `make cts && make gui_cts` and pasted the clock tree below.\r\n\r\nI'm curious: why is there an inverter in front of every flip-flop and no invertor in front of the macros?\r\n \r\nI checked by hovering over a number of the pink dots at the leaf of the clock tree that the flip-flops are the leaf points with an invertor in front.\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9a268a21-6f3b-4777-b10d-940090081cbb)\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8a96024d-9038-445b-8826-c13354ca9264)\r\n\r\n\r\nThe clock period is 1000ps and the skew is 50ps, by gleaning at the clockd tree.\r\n\r\n", "date": "2023-07-27T14:05:49Z"}, {"author": "oharboe", "role": "assistant", "message": "I have tried to find some documentation on the `report_checks` output format, but lacking that I'm making some guesses....\r\n\r\nThe below is a report from mock-array/Element, where I notice the `clock clock' (fall edge)`, but mock-array is positive edge triggered, so why falling edge?\r\n\r\nCould it be that my design is positive edge triggered, but that the flip-flop is in fact negative edge triggered?\r\n\r\nThat would explain the inverter in front of every flip-flop in the clock-tree above too...\r\n\r\nI beleve the first path below is the data required path from macro input pin to the flip flop input pin and that the second path is the clock input pin on the macro to the flip flop input pin.\r\n\r\nWhat does `(propagated)` mean?\r\n\r\nI find  `data required time` a bit confusing for the clock propagation path, but my guess that's just the chosen terminology and that the `data required time` for the clock is in fact the clock required time in my mind of thinking.\r\n\r\n```\r\n>>> report_checks -path_delay min -from io_ins_right[0]\r\nStartpoint: io_ins_right[0] (input port clocked by clock)\r\nEndpoint: _557_ (falling edge-triggered flip-flop clocked by clock')\r\nPath Group: clock\r\nPath Type: min\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (propagated)\r\n  50.00   50.00 ^ input external delay\r\n   2.24   52.24 ^ io_ins_right[0] (in)\r\n  11.98   64.22 ^ hold1749/Y (BUFx2_ASAP7_75t_R)\r\n  11.38   75.59 ^ hold745/Y (BUFx2_ASAP7_75t_R)\r\n  11.43   87.02 ^ hold1750/Y (BUFx2_ASAP7_75t_R)\r\n  11.95   98.97 ^ input129/Y (BUFx2_ASAP7_75t_R)\r\n  12.69  111.66 ^ hold1751/Y (BUFx2_ASAP7_75t_R)\r\n  12.88  124.54 ^ hold746/Y (BUFx2_ASAP7_75t_R)\r\n  12.83  137.37 ^ hold1752/Y (BUFx2_ASAP7_75t_R)\r\n   0.18  137.55 ^ _557_/D (DFFLQNx2_ASAP7_75t_R)\r\n         137.55   data arrival time\r\n\r\n   0.00    0.00   clock clock' (fall edge)\r\n  99.73   99.73   clock network delay (propagated)\r\n  20.00  119.73   clock uncertainty\r\n   0.00  119.73   clock reconvergence pessimism\r\n         119.73 v _557_/CLK (DFFLQNx2_ASAP7_75t_R)\r\n  10.65  130.38   library hold time\r\n         130.38   data required time\r\n---------------------------------------------------------\r\n         130.38   data required time\r\n        -137.55   data arrival time\r\n---------------------------------------------------------\r\n           7.16   slack (MET)\r\n\r\n```\r\n", "date": "2023-07-27T14:37:30Z"}, {"author": "maliberty", "role": "assistant", "message": "Is this at the top or in the element?", "date": "2023-07-27T15:13:39Z"}, {"author": "maliberty", "role": "assistant", "message": "propagated means you are post-cts and \"set_propagated_clock [all_clocks]\" has been used.  The delay is calculated from the actual clock network.  The opposite is ideal clocks from before CTS.", "date": "2023-07-27T15:16:00Z"}, {"author": "maliberty", "role": "assistant", "message": "If you look at DFFLQNx2_ASAP7_75t_R you'll see\r\n```\r\n    ff (IQN,IQNN) {\r\n      clocked_on : \"!CLK\";\r\n      next_state : \"!D\";\r\n      power_down_function : \"(!VDD) + (VSS)\";\r\n    }\r\n```\r\nso it is on the negative edge.  The ff choice is made during synthesis", "date": "2023-07-27T15:23:33Z"}], "date": "2023-07-27T14:05:49Z", "category": "Query", "subcategory": "Design explanation", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3731", "id": 3731, "title": "Meta file/format to describe a PDK?", "author": "nrichaud", "description": "Hello everyone,\r\nI am new to the project but I have some experience with with PDK and enablement PDK in design flow.\r\n\r\nI was wondering how is structured the interface between the PDK file and the flow.\r\n\r\n>Do you know if there is a kind of **meta file/format** to describe the PDK and maybe \"explain\" to the flow where to pick the right file/tools?\r\nLike a kind of python `requirement.txt` file so it could be easy to integrate new PDK and switch from one technology to an other?\r\n\r\nToday, my impression is that it is still kind of challenging to have all the pieces or components of a PDK working together with the right version and right place to pick the files.\r\n\r\nThanks \r\n", "content": [{"author": "nrichaud", "role": "user", "message": "Hello everyone,\r\nI am new to the project but I have some experience with with PDK and enablement PDK in design flow.\r\n\r\nI was wondering how is structured the interface between the PDK file and the flow.\r\n\r\n>Do you know if there is a kind of **meta file/format** to describe the PDK and maybe \"explain\" to the flow where to pick the right file/tools?\r\nLike a kind of python `requirement.txt` file so it could be easy to integrate new PDK and switch from one technology to an other?\r\n\r\nToday, my impression is that it is still kind of challenging to have all the pieces or components of a PDK working together with the right version and right place to pick the files.\r\n\r\nThanks \r\n", "date": "2023-07-27T09:23:12Z"}, {"author": "rovinski", "role": "assistant", "message": "I don't know of any specific standard for PDK distribution. The main issue is that tools / formats are continuously coming in and out of vogue based on the process technology. Many PDKs may be \"incomplete\" due to lack of enablement for certain tools.\r\n\r\nhttps://github.com/RTimothyEdwards/open_pdks tries to create a standardized directory structure and format for PDKs, but of course there is effort in taking what the vendor provides and trying to fit it into that model because every PDK vendor is different.\r\n\r\n[ORFS](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts) simply uses Make variables to point at the necessary files.", "date": "2023-07-27T09:53:22Z"}, {"author": "maliberty", "role": "assistant", "message": "I think it is better to accept the PDK as provided than to mess with it as open_pdks requires.  PDKs should be read-only.", "date": "2023-07-27T13:48:30Z"}], "date": "2023-07-27T09:23:12Z", "category": "Query", "subcategory": "PDK integration", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3644", "id": 3644, "title": "ODB:: Is there any way to unfrozen the master? (Changing the size of dbMaster during the code is running)", "author": "ApeachM", "description": "```c++\r\n// master setting\r\ndbMaster *master = dbMaster::create(db_lib, lib_cell_name.c_str());\r\nmaster->setWidth(width);\r\nmaster->setHeight(height);\r\nmaster->setType(dbMasterType::CORE);\r\n...\r\nmaster->setFrozen();\r\n// connect inst to the master\r\n    \r\ndbInst* inst = dbInst::create(db_block, master, instance_info->inst_name.c_str());\r\n\r\n// now I want to change the size of inst, by unfrozen master and resize width and height\r\n// Is my intention of the below pseudo-code possible?\r\nmaster->setUnFrozen();\r\nmaster->setWidth(new_width);\r\nmaster->setHeight(new_height);\r\nmaster->setFrozen();\r\n```\r\n\r\n**I would like to know whether the above pseudo-code is possible.**\r\n\r\n**I want to resize the cell size** after the cell size is already determined. (For example, after parsing lef and def).\r\nBut it seems like not to exist function for unfreezing.\r\n\r\nIf I want to change the cell size, then should I \r\n1. re-construct the instance,\r\n2. re-construct the new dbMaster, \r\n3. deleting the original instance, \r\n4. and re-connecting the new dbInst to the nets, which was connected with the original one?\r\n\r\nI would like to know whether **is there another way, which is more simple**.\r\n\r\n\r\nThanks for the time for reading my question.\r\n\r\nSincerely.", "content": [{"author": "ApeachM", "role": "user", "message": "```c++\r\n// master setting\r\ndbMaster *master = dbMaster::create(db_lib, lib_cell_name.c_str());\r\nmaster->setWidth(width);\r\nmaster->setHeight(height);\r\nmaster->setType(dbMasterType::CORE);\r\n...\r\nmaster->setFrozen();\r\n// connect inst to the master\r\n    \r\ndbInst* inst = dbInst::create(db_block, master, instance_info->inst_name.c_str());\r\n\r\n// now I want to change the size of inst, by unfrozen master and resize width and height\r\n// Is my intention of the below pseudo-code possible?\r\nmaster->setUnFrozen();\r\nmaster->setWidth(new_width);\r\nmaster->setHeight(new_height);\r\nmaster->setFrozen();\r\n```\r\n\r\n**I would like to know whether the above pseudo-code is possible.**\r\n\r\n**I want to resize the cell size** after the cell size is already determined. (For example, after parsing lef and def).\r\nBut it seems like not to exist function for unfreezing.\r\n\r\nIf I want to change the cell size, then should I \r\n1. re-construct the instance,\r\n2. re-construct the new dbMaster, \r\n3. deleting the original instance, \r\n4. and re-connecting the new dbInst to the nets, which was connected with the original one?\r\n\r\nI would like to know whether **is there another way, which is more simple**.\r\n\r\n\r\nThanks for the time for reading my question.\r\n\r\nSincerely.", "date": "2023-07-17T23:12:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Why are you freezing it in the first place?", "date": "2023-07-17T23:21:43Z"}, {"author": "maliberty", "role": "assistant", "message": "setWidth & setHeight don't care about the frozen status afaik.  The key thing is that the port list is frozen.  You can't add a dbMTerm to a frozen master.", "date": "2023-07-18T04:28:50Z"}], "date": "2023-07-17T23:12:18Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3298", "id": 3298, "title": "Running times in detailed routing as a function of design parameters", "author": "oharboe", "description": "mock-array-big has 3 essential parameters that can be adjusted: array area(number of elements), element size (area) and data width (bits).\r\n\r\nI thought it would be interesting to see how detailed routing (TritonRoute) varies across these parameters, so I made a python snippet(https://github.com/Pinata-Consulting/OpenROAD-flow-scripts/commits/plot-running-times) to gather some data and plot them\r\n\r\nThe graph below is interactive(measured on a machine with 16 threads and 64gByte of RAM, where memory consumption appears to peak at 20gByte), which helps in terms of understanding the 4 dimensions being represented:\r\n\r\nVideo: https://drive.google.com/file/d/1pmkIZh6tUOrWhAkVRgm0fxCD7yaf766Q/view\r\n\r\nSnapshot:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236807617-6c48df46-609a-4614-937e-539cbf7c5ce7.png)\r\n\r\n**8 x 8 64 bit array detailed route times plotted against threads**\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236921035-c2ac6218-b515-4c83-b342-0c3d2f677f99.png)\r\n\r\n**Conclusion so far**\r\n\r\nDetailed routing is surprisingly slow when the area is large, but everything else is the same.\r\n\r\nThis run takes 40 minutes or so, `APTOS_MOCK_PITCH_SCALE=20 make FLOW_VARIANT=scale-20 route DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` whereas `APTOS_MOCK_PITCH_SCALE=2 make FLOW_VARIANT=scale-2 DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` completes in a few minutes\r\n\r\n\r\n**Detailed of testing...**\r\n\r\nIt looks like the performance of detailed routing is sensitive to area:\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=2 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-2 route\r\n```\r\n\r\n```\r\nSamples: 15M of event 'cycles', Event count (approx.): 14285585618565\r\nOverhead  Command   Shared Object           Symbol\r\n  16,94%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n   8,38%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   7,46%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   5,92%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   4,62%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   4,23%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   4,20%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   3,31%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   3,22%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,93%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   2,48%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   2,46%  openroad  openroad                [.] box2boxDistSquareNew\r\n   2,37%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   2,17%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,71%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,45%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,43%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,28%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedVia\r\n   1,25%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n ```\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236752880-91dadf5a-3715-4afa-b51f-3a568bb4d8cd.png)\r\n\r\n**Same run, but bigger area**\r\n\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=20 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-20 route\r\n```\r\n\r\n2_4_floorplan_macro.odb:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b1972e9e-6724-4b87-9b22-c438bfc0365b)\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236757786-f74ac20a-8cdf-4708-a5a1-add3357b116a.png)\r\n\r\n```\r\nOverhead  Command   Shared Object           Symbol\r\n  15,25%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n  14,39%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   7,94%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   7,67%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   6,08%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   3,98%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   3,80%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   2,84%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   2,64%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,62%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   2,11%  openroad  openroad                [.] box2boxDistSquareNew\r\n   1,66%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   1,45%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,40%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,36%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n   1,31%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,25%  openroad  openroad                [.] boost::geometry::index::detail::rtree::visitors::spatial_qu\r\n   1,20%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,15%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   0,88%  openroad  openroad                [.] fr::frSpacingTablePrlConstraint::typeId\r\n   0,86%  openroad  libc.so.6               [.] malloc\r\n```\r\n\r\n\r\nIt's interesting thing that the 1st run with 1200 violations takes 20 minutes, the 2nd run with 700 violations takes 12 seconds:\r\n\r\n```\r\n[INFO DRT-0195] Start 1st optimization iteration.\r\n    Completing 10% with 5729 violations.\r\n    elapsed time = 00:02:00, memory = 29854.12 (MB).\r\n    Completing 20% with 4647 violations.\r\n    elapsed time = 00:04:04, memory = 30005.05 (MB).\r\n    Completing 30% with 3871 violations.\r\n    elapsed time = 00:06:04, memory = 30034.33 (MB).\r\n    Completing 40% with 3694 violations.\r\n    elapsed time = 00:08:04, memory = 30100.05 (MB).\r\n    Completing 50% with 1899 violations.\r\n    elapsed time = 00:10:00, memory = 28813.91 (MB).\r\n    Completing 60% with 1471 violations.\r\n    elapsed time = 00:11:58, memory = 29945.56 (MB).\r\n    Completing 70% with 1042 violations.\r\n    elapsed time = 00:13:55, memory = 29941.39 (MB).\r\n    Completing 80% with 908 violations.\r\n    elapsed time = 00:15:49, memory = 29953.07 (MB).\r\n    Completing 90% with 805 violations.\r\n    elapsed time = 00:17:44, memory = 30011.33 (MB).\r\n    Completing 100% with 738 violations.\r\n    elapsed time = 00:19:38, memory = 28749.75 (MB).\r\n[INFO DRT-0199]   Number of violations = 1176.\r\nViol/Layer          M2     M3     V3     M4     V4     M5     M6     M7\r\nCorner Spacing       0      0      0      2      0      0      0      0\r\nCutSpcTbl            0      0      5      0      2      0      0      0\r\nEOL                  0      0      0      4      0      1      0      0\r\nMetal Spacing      209    105      0     92      0      2      0      0\r\nRecheck             12      0      0     91      0    247      2     86\r\nShort              157    153      0      0      0      0      0      0\r\neolKeepOut           0      0      0      3      0      3      0      0\r\n[INFO DRT-0267] cpu time = 11:11:56, elapsed time = 00:19:39, memory = 28720.20 (MB), peak = 30179.07 (MB)\r\nTotal wire length = 330230 um.\r\nTotal wire length on LAYER M1 = 0 um.\r\nTotal wire length on LAYER M2 = 32835 um.\r\nTotal wire length on LAYER M3 = 28341 um.\r\nTotal wire length on LAYER M4 = 130089 um.\r\nTotal wire length on LAYER M5 = 91062 um.\r\nTotal wire length on LAYER M6 = 30826 um.\r\nTotal wire length on LAYER M7 = 17074 um.\r\nTotal wire length on LAYER M8 = 0 um.\r\nTotal wire length on LAYER M9 = 0 um.\r\nTotal wire length on LAYER Pad = 0 um.\r\nTotal number of vias = 41385.\r\nUp-via summary (total 41385):.\r\n\r\n----------------\r\n Active        0\r\n     M1     1424\r\n     M2     5855\r\n     M3    20852\r\n     M4    11321\r\n     M5     1354\r\n     M6      579\r\n     M7        0\r\n     M8        0\r\n     M9        0\r\n----------------\r\n           41385\r\n\r\n\r\n[INFO DRT-0195] Start 2nd optimization iteration.\r\n    Completing 10% with 1154 violations.\r\n    elapsed time = 00:00:02, memory = 28720.20 (MB).\r\n    Completing 20% with 1135 violations.\r\n    elapsed time = 00:00:03, memory = 28720.20 (MB).\r\n    Completing 30% with 1116 violations.\r\n    elapsed time = 00:00:06, memory = 28720.20 (MB).\r\n    Completing 40% with 1078 violations.\r\n    elapsed time = 00:00:10, memory = 28716.63 (MB).\r\n    Completing 50% with 1059 violations.\r\n    elapsed time = 00:00:13, memory = 28716.63 (MB).\r\n    Completing 60% with 978 violations.\r\n    elapsed time = 00:00:16, memory = 28716.63 (MB).\r\n    Completing 70% with 945 violations.\r\n    elapsed time = 00:00:17, memory = 28716.63 (MB).\r\n    Completing 80% with 920 violations.\r\n    elapsed time = 00:00:20, memory = 28716.63 (MB).\r\n    Completing 90% with 755 violations.\r\n    elapsed time = 00:00:24, memory = 28716.63 (MB).\r\n    Completing 100% with 717 violations.\r\n    elapsed time = 00:00:27, memory = 28716.63 (MB).\r\n[INFO DRT-0199]   Number of violations = 755.\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "mock-array-big has 3 essential parameters that can be adjusted: array area(number of elements), element size (area) and data width (bits).\r\n\r\nI thought it would be interesting to see how detailed routing (TritonRoute) varies across these parameters, so I made a python snippet(https://github.com/Pinata-Consulting/OpenROAD-flow-scripts/commits/plot-running-times) to gather some data and plot them\r\n\r\nThe graph below is interactive(measured on a machine with 16 threads and 64gByte of RAM, where memory consumption appears to peak at 20gByte), which helps in terms of understanding the 4 dimensions being represented:\r\n\r\nVideo: https://drive.google.com/file/d/1pmkIZh6tUOrWhAkVRgm0fxCD7yaf766Q/view\r\n\r\nSnapshot:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236807617-6c48df46-609a-4614-937e-539cbf7c5ce7.png)\r\n\r\n**8 x 8 64 bit array detailed route times plotted against threads**\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236921035-c2ac6218-b515-4c83-b342-0c3d2f677f99.png)\r\n\r\n**Conclusion so far**\r\n\r\nDetailed routing is surprisingly slow when the area is large, but everything else is the same.\r\n\r\nThis run takes 40 minutes or so, `APTOS_MOCK_PITCH_SCALE=20 make FLOW_VARIANT=scale-20 route DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` whereas `APTOS_MOCK_PITCH_SCALE=2 make FLOW_VARIANT=scale-2 DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` completes in a few minutes\r\n\r\n\r\n**Detailed of testing...**\r\n\r\nIt looks like the performance of detailed routing is sensitive to area:\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=2 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-2 route\r\n```\r\n\r\n```\r\nSamples: 15M of event 'cycles', Event count (approx.): 14285585618565\r\nOverhead  Command   Shared Object           Symbol\r\n  16,94%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n   8,38%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   7,46%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   5,92%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   4,62%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   4,23%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   4,20%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   3,31%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   3,22%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,93%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   2,48%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   2,46%  openroad  openroad                [.] box2boxDistSquareNew\r\n   2,37%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   2,17%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,71%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,45%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,43%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,28%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedVia\r\n   1,25%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n ```\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236752880-91dadf5a-3715-4afa-b51f-3a568bb4d8cd.png)\r\n\r\n**Same run, but bigger area**\r\n\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=20 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-20 route\r\n```\r\n\r\n2_4_floorplan_macro.odb:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b1972e9e-6724-4b87-9b22-c438bfc0365b)\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236757786-f74ac20a-8cdf-4708-a5a1-add3357b116a.png)\r\n\r\n```\r\nOverhead  Command   Shared Object           Symbol\r\n  15,25%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n  14,39%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   7,94%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   7,67%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   6,08%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   3,98%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   3,80%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   2,84%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   2,64%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,62%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   2,11%  openroad  openroad                [.] box2boxDistSquareNew\r\n   1,66%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   1,45%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,40%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,36%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n   1,31%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,25%  openroad  openroad                [.] boost::geometry::index::detail::rtree::visitors::spatial_qu\r\n   1,20%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,15%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   0,88%  openroad  openroad                [.] fr::frSpacingTablePrlConstraint::typeId\r\n   0,86%  openroad  libc.so.6               [.] malloc\r\n```\r\n\r\n\r\nIt's interesting thing that the 1st run with 1200 violations takes 20 minutes, the 2nd run with 700 violations takes 12 seconds:\r\n\r\n```\r\n[INFO DRT-0195] Start 1st optimization iteration.\r\n    Completing 10% with 5729 violations.\r\n    elapsed time = 00:02:00, memory = 29854.12 (MB).\r\n    Completing 20% with 4647 violations.\r\n    elapsed time = 00:04:04, memory = 30005.05 (MB).\r\n    Completing 30% with 3871 violations.\r\n    elapsed time = 00:06:04, memory = 30034.33 (MB).\r\n    Completing 40% with 3694 violations.\r\n    elapsed time = 00:08:04, memory = 30100.05 (MB).\r\n    Completing 50% with 1899 violations.\r\n    elapsed time = 00:10:00, memory = 28813.91 (MB).\r\n    Completing 60% with 1471 violations.\r\n    elapsed time = 00:11:58, memory = 29945.56 (MB).\r\n    Completing 70% with 1042 violations.\r\n    elapsed time = 00:13:55, memory = 29941.39 (MB).\r\n    Completing 80% with 908 violations.\r\n    elapsed time = 00:15:49, memory = 29953.07 (MB).\r\n    Completing 90% with 805 violations.\r\n    elapsed time = 00:17:44, memory = 30011.33 (MB).\r\n    Completing 100% with 738 violations.\r\n    elapsed time = 00:19:38, memory = 28749.75 (MB).\r\n[INFO DRT-0199]   Number of violations = 1176.\r\nViol/Layer          M2     M3     V3     M4     V4     M5     M6     M7\r\nCorner Spacing       0      0      0      2      0      0      0      0\r\nCutSpcTbl            0      0      5      0      2      0      0      0\r\nEOL                  0      0      0      4      0      1      0      0\r\nMetal Spacing      209    105      0     92      0      2      0      0\r\nRecheck             12      0      0     91      0    247      2     86\r\nShort              157    153      0      0      0      0      0      0\r\neolKeepOut           0      0      0      3      0      3      0      0\r\n[INFO DRT-0267] cpu time = 11:11:56, elapsed time = 00:19:39, memory = 28720.20 (MB), peak = 30179.07 (MB)\r\nTotal wire length = 330230 um.\r\nTotal wire length on LAYER M1 = 0 um.\r\nTotal wire length on LAYER M2 = 32835 um.\r\nTotal wire length on LAYER M3 = 28341 um.\r\nTotal wire length on LAYER M4 = 130089 um.\r\nTotal wire length on LAYER M5 = 91062 um.\r\nTotal wire length on LAYER M6 = 30826 um.\r\nTotal wire length on LAYER M7 = 17074 um.\r\nTotal wire length on LAYER M8 = 0 um.\r\nTotal wire length on LAYER M9 = 0 um.\r\nTotal wire length on LAYER Pad = 0 um.\r\nTotal number of vias = 41385.\r\nUp-via summary (total 41385):.\r\n\r\n----------------\r\n Active        0\r\n     M1     1424\r\n     M2     5855\r\n     M3    20852\r\n     M4    11321\r\n     M5     1354\r\n     M6      579\r\n     M7        0\r\n     M8        0\r\n     M9        0\r\n----------------\r\n           41385\r\n\r\n\r\n[INFO DRT-0195] Start 2nd optimization iteration.\r\n    Completing 10% with 1154 violations.\r\n    elapsed time = 00:00:02, memory = 28720.20 (MB).\r\n    Completing 20% with 1135 violations.\r\n    elapsed time = 00:00:03, memory = 28720.20 (MB).\r\n    Completing 30% with 1116 violations.\r\n    elapsed time = 00:00:06, memory = 28720.20 (MB).\r\n    Completing 40% with 1078 violations.\r\n    elapsed time = 00:00:10, memory = 28716.63 (MB).\r\n    Completing 50% with 1059 violations.\r\n    elapsed time = 00:00:13, memory = 28716.63 (MB).\r\n    Completing 60% with 978 violations.\r\n    elapsed time = 00:00:16, memory = 28716.63 (MB).\r\n    Completing 70% with 945 violations.\r\n    elapsed time = 00:00:17, memory = 28716.63 (MB).\r\n    Completing 80% with 920 violations.\r\n    elapsed time = 00:00:20, memory = 28716.63 (MB).\r\n    Completing 90% with 755 violations.\r\n    elapsed time = 00:00:24, memory = 28716.63 (MB).\r\n    Completing 100% with 717 violations.\r\n    elapsed time = 00:00:27, memory = 28716.63 (MB).\r\n[INFO DRT-0199]   Number of violations = 755.\r\n```\r\n\r\n", "date": "2023-05-07T18:41:42Z"}, {"author": "maliberty", "role": "assistant", "message": "How many threads in your experiment? ", "date": "2023-05-07T21:24:56Z"}, {"author": "oharboe", "role": "assistant", "message": "@rovinski I would not have guessed that the *area* of the design is what really drives up the time of detailed routing.\r\n", "date": "2023-05-08T04:50:15Z"}, {"author": "maliberty", "role": "assistant", "message": "The area of the design will definitely matter.   You will have tracks at the same pitch and have to traverse more of them during routing a larger area.", "date": "2023-05-08T18:37:25Z"}, {"author": "maliberty", "role": "assistant", "message": "Rather than plot \"detailed route times plotted against threads\" it is usually easier to look at speedup (t(1)/t(N)) vs threads.  It makes it clearer how close to ideal scaling you are getting (the 45 degree line is perfect).", "date": "2023-05-08T19:57:45Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @rovinski I fixed the image for the 1000x1000um when I took a snapshot. I accidentally used the small macro, the spacing between the macros should be very short, nearly abutment.", "date": "2023-05-09T18:33:44Z"}, {"author": "oharboe", "role": "assistant", "message": "It looks like the expected behavior is that the 0th and the 1st iteration will take a long time for top level designs with lots of wires and little contention, even if these routes are horizontal and vertical and that the low hanging fruit has already been picked.", "date": "2023-05-18T06:52:10Z"}, {"author": "binsa7261", "role": "assistant", "message": "wow this looks very impressive, bravo!", "date": "2023-06-30T18:04:20Z"}, {"author": "v11sman", "role": "assistant", "message": "I learned a lot of interesting things", "date": "2023-07-17T17:16:59Z"}], "date": "2023-05-07T18:41:42Z", "category": "Query", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3597", "id": 3597, "title": "Detailed routing loops instead of straight wire...", "author": "oharboe", "description": "I've been fixing some problems in mock-array in positioning of macros and pins not being aligned and now things are working well.\r\n\r\nHowever, I found this curious thing when inspecting, a detailed routing loop :-)\r\n\r\nI don't see any reason why a horizontal wire wouldn't work here...\r\n\r\nAny ideas or insights?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/381a3158-6635-452c-a270-247df28a6dae)\r\n\r\n\r\nThe above can be found if creating a `flow/settings.mk` file:\r\n\r\n```\r\nexport DESIGN_CONFIG?=designs/asap7/mock-array/config.mk\r\nexport MOCK_ARRAY_DATAWIDTH?=8\r\nexport MOCK_ARRAY_TABLE?=8 8 4 4 5 5\r\nexport MOCK_ARRAY_SCALE?=80\r\n```\r\n\r\nand running `make verilog` and `make`\r\n\r\n\r\nVarious interesting things can be seen in detailed routing:\r\n\r\n- almost all the wires are vertical/horizontal between \"Element\" macros. The loop above is untypical, usually it's just a slight horizontal/vertical deviation.\r\n- there are hold cells in the middle to the right\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e9bca2da-5e41-4ee6-b279-e7ca375bb26a)\r\n\r\n\r\n\r\nHold cells have to be placed *outside* to the right of the array, hence many non-vertical vertical wires between those two elements.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3a17be46-8604-498c-901f-ce375cbed5cc)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I've been fixing some problems in mock-array in positioning of macros and pins not being aligned and now things are working well.\r\n\r\nHowever, I found this curious thing when inspecting, a detailed routing loop :-)\r\n\r\nI don't see any reason why a horizontal wire wouldn't work here...\r\n\r\nAny ideas or insights?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/381a3158-6635-452c-a270-247df28a6dae)\r\n\r\n\r\nThe above can be found if creating a `flow/settings.mk` file:\r\n\r\n```\r\nexport DESIGN_CONFIG?=designs/asap7/mock-array/config.mk\r\nexport MOCK_ARRAY_DATAWIDTH?=8\r\nexport MOCK_ARRAY_TABLE?=8 8 4 4 5 5\r\nexport MOCK_ARRAY_SCALE?=80\r\n```\r\n\r\nand running `make verilog` and `make`\r\n\r\n\r\nVarious interesting things can be seen in detailed routing:\r\n\r\n- almost all the wires are vertical/horizontal between \"Element\" macros. The loop above is untypical, usually it's just a slight horizontal/vertical deviation.\r\n- there are hold cells in the middle to the right\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e9bca2da-5e41-4ee6-b279-e7ca375bb26a)\r\n\r\n\r\n\r\nHold cells have to be placed *outside* to the right of the array, hence many non-vertical vertical wires between those two elements.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3a17be46-8604-498c-901f-ce375cbed5cc)\r\n", "date": "2023-07-09T07:41:59Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 any thoughts on the loop?", "date": "2023-07-09T22:45:18Z"}, {"author": "oharboe", "role": "assistant", "message": "A feature request filed: https://github.com/The-OpenROAD-Project/OpenROAD/issues/3634", "date": "2023-07-17T05:29:23Z"}], "date": "2023-07-09T07:41:59Z", "category": "Bug", "subcategory": "Routing pattern anomaly", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3359", "id": 3359, "title": "Ideas for multithreaded rendering", "author": "rovinski", "description": "I saw the conversation in #3330, #3342, #3348, etc. and started thinking about how the rendering time might be improved aside from not drawing objects that aren't useful.\r\n\r\nIt seems that the rendering, for the most part, is embarrassingly parallel. In `LayoutViewer::drawInstanceOutlines()` for example (the most expensive layer measured in #3348), a function is applied to every instance in a vector to determine how / if it gets drawn, and then it makes a draw call.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2041-L2091\r\n\r\nThis is essentially a [map reduce](https://en.wikipedia.org/wiki/MapReduce) paradigm which should be extremely parallel, except that Qt painter objects aren't thread safe. There was discussion in #3279 that the database is not \"thread safe\", but I think that was in the context of read/write operations and not read-only operations.\r\n\r\nBeyond that, each layer is independently but sequentially rendered:\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2555-L2599\r\n\r\nThere may or may not be ordering required on draw calls to these layers, I'm not sure.\r\n\r\nI looked at a few [Qt guides](https://doc.qt.io/qt-5/qtcore-threads-mandelbrot-example.html) and they all recommend separating computation from rendering in separate threads for better performance (and interactivity).\r\n\r\nI think some of these things were mentioned by @QuantamHD in #1930 but the PR itself seems to be unrelated (and abandoned).\r\n\r\nI have some interest in looking into this, but I wonder what the best approach would be for this? Qt has [QThread](https://doc.qt.io/qt-5/qthread.html) and [QThreadPool](https://doc.qt.io/qt-5/qthreadpool.html) for this exact purpose. There's also [QtConcurrent](https://doc.qt.io/qt-5/qtconcurrent.html) which may have some uses.\r\n\r\nIn an ideal world, it seems like there should be a thread pool with `getThreadCount()-1` threads and the main thread. The main thread has a render queue which atomically pops the queue for draw calls and does nothing else until all worker threads yield. The worker threads can parallelize at the granularity of layer or instance/shape depending on what's optimal. But this could take a lot of refactoring, possibly be overkill, or possibly be difficult to tune the amount of threading correctly.\r\n\r\nAn intermediate step could be to simply parallelize some of the heavy-weight tasks that block the GUI thread, such as using `std::transform(std::execution::par)` or `std::for_each(std::execution::par)` and separating the draw calls from the filtering. But also these functions don't seem to be well supported on old versions of GCC/Clang (it requires Intel `libtbb` and may error or just use a serial version if it isn't linked, but I think it also think it doesn't work on Apple silicon). Maybe using OpenMP would work?\r\n\r\nAny thoughts or opinions?\r\n@gadfort @maliberty @oharboe @QuantamHD ", "content": [{"author": "rovinski", "role": "user", "message": "I saw the conversation in #3330, #3342, #3348, etc. and started thinking about how the rendering time might be improved aside from not drawing objects that aren't useful.\r\n\r\nIt seems that the rendering, for the most part, is embarrassingly parallel. In `LayoutViewer::drawInstanceOutlines()` for example (the most expensive layer measured in #3348), a function is applied to every instance in a vector to determine how / if it gets drawn, and then it makes a draw call.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2041-L2091\r\n\r\nThis is essentially a [map reduce](https://en.wikipedia.org/wiki/MapReduce) paradigm which should be extremely parallel, except that Qt painter objects aren't thread safe. There was discussion in #3279 that the database is not \"thread safe\", but I think that was in the context of read/write operations and not read-only operations.\r\n\r\nBeyond that, each layer is independently but sequentially rendered:\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2555-L2599\r\n\r\nThere may or may not be ordering required on draw calls to these layers, I'm not sure.\r\n\r\nI looked at a few [Qt guides](https://doc.qt.io/qt-5/qtcore-threads-mandelbrot-example.html) and they all recommend separating computation from rendering in separate threads for better performance (and interactivity).\r\n\r\nI think some of these things were mentioned by @QuantamHD in #1930 but the PR itself seems to be unrelated (and abandoned).\r\n\r\nI have some interest in looking into this, but I wonder what the best approach would be for this? Qt has [QThread](https://doc.qt.io/qt-5/qthread.html) and [QThreadPool](https://doc.qt.io/qt-5/qthreadpool.html) for this exact purpose. There's also [QtConcurrent](https://doc.qt.io/qt-5/qtconcurrent.html) which may have some uses.\r\n\r\nIn an ideal world, it seems like there should be a thread pool with `getThreadCount()-1` threads and the main thread. The main thread has a render queue which atomically pops the queue for draw calls and does nothing else until all worker threads yield. The worker threads can parallelize at the granularity of layer or instance/shape depending on what's optimal. But this could take a lot of refactoring, possibly be overkill, or possibly be difficult to tune the amount of threading correctly.\r\n\r\nAn intermediate step could be to simply parallelize some of the heavy-weight tasks that block the GUI thread, such as using `std::transform(std::execution::par)` or `std::for_each(std::execution::par)` and separating the draw calls from the filtering. But also these functions don't seem to be well supported on old versions of GCC/Clang (it requires Intel `libtbb` and may error or just use a serial version if it isn't linked, but I think it also think it doesn't work on Apple silicon). Maybe using OpenMP would work?\r\n\r\nAny thoughts or opinions?\r\n@gadfort @maliberty @oharboe @QuantamHD ", "date": "2023-05-19T09:05:49Z"}, {"author": "oharboe", "role": "assistant", "message": "After the recent performance improvement, the biggest performance problem currently for us, is that all intermediate zoom levels are rendered https://github.com/The-OpenROAD-Project/OpenROAD/issues/3278\r\n\r\nSo if that could be fixed FIRST... :-)\r\n\r\nAfterwards, the suggestions that you propose sound wicked!\r\n\r\nIt is true that Qt nor the database is thread safe, then on the other hand, this means that the GUI is single threaded, so I suppose that you are right that you can use as many or few threads as you like as long as Qt nor the database functions are non-the-wiser. Rendering should be especially amenable to this since it is a read only operation...\r\n\r\nAlso, rendering doesn't have to be perfect.  I have been thinking that a draft could be rendered while zooming and then when the user stops giving input, more detail can be rendered.\r\n", "date": "2023-05-19T09:19:25Z"}, {"author": "maliberty", "role": "assistant", "message": "@rovinski I've considered all these ideas but lack the time to implement them all.  Right now I'm looking at moving the rendering to a separate thread and making it interruptible.  The main challenge is figuring out how to trigger the right events at the right time to make Qt happy.  It is very particular that you can only paint in paintEvent.\r\n\r\nAssuming I can land this then it is more straightforward to split that worker thread into multiple threads.  KLayout works in a similar fashion where they render per layer in each thread and composite in the main thread.", "date": "2023-05-20T04:40:31Z"}], "date": "2023-05-19T09:05:49Z", "category": "Feature Request", "subcategory": "Performance enhancement", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3608", "id": 3608, "title": "How do I find and view the nets that are causing hold and setup violations?", "author": "oharboe", "description": "It want to find and view nets that cause hold violations.\r\n\r\nToday I have to wait and hope for a global routing failure to be able to view the nets that cause hold violations in DRC viewer there.\r\n\r\n```\r\nRepair setup and hold violations...\r\nTNS end percent 5\r\n[INFO RSZ-0041] Resized 2 instances.\r\n[WARNING RSZ-0062] Unable to repair all setup violations.\r\n[INFO RSZ-0046] Found 2957 endpoints with hold violations.\r\n[INFO RSZ-0032] Inserted 40106 hold buffers.\r\nPlacement Analysis\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "It want to find and view nets that cause hold violations.\r\n\r\nToday I have to wait and hope for a global routing failure to be able to view the nets that cause hold violations in DRC viewer there.\r\n\r\n```\r\nRepair setup and hold violations...\r\nTNS end percent 5\r\n[INFO RSZ-0041] Resized 2 instances.\r\n[WARNING RSZ-0062] Unable to repair all setup violations.\r\n[INFO RSZ-0046] Found 2957 endpoints with hold violations.\r\n[INFO RSZ-0032] Inserted 40106 hold buffers.\r\nPlacement Analysis\r\n```\r\n", "date": "2023-07-12T06:18:21Z"}, {"author": "vvbandeira", "role": "assistant", "message": "```tcl\r\nfind_timing_paths -path_delay min -slack_max 0\r\n```\r\n@oharboe, Would this work for you?\r\nNote that RSZ just said it had found `2957` hold violations; after inserting the `40106` buffers, there's no warning.\r\nSo it is likely that all have been fixed -- see the warning in the line above for a contrast about setup violations.\r\n\r\nFor setup you would do:\r\n```tcl\r\nfind_timing_paths -path_delay max -slack_max 0\r\n```", "date": "2023-07-12T14:44:56Z"}, {"author": "oharboe", "role": "assistant", "message": "Found an approach... Here is what I did:\r\n\r\n1. create some hold failures by reducing the clock period from 2000 to 1000ps in mock-array, using diff below.\r\n2. There are no timing violations in placement, the timing violations happen after CTS.\r\n3. Modify cts.tcl to write out an ODB file *before* hold cells are inserted and the design is repair. Post repair in CTS there are no violations.\r\n\r\nNow I can run commands to examine minimum hold time violations, which will lead to hold cells being inserted.\r\n\r\n\r\n```\r\nreport_checks -path_delay min\r\nStartpoint: io_insRight_0[61] (input port clocked by clock)\r\nEndpoint: ces_0_0 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: min\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (propagated)\r\n 200.00  200.00 ^ input external delay\r\n   0.00  200.00 ^ io_insRight_0[61] (in)\r\n  10.45  210.45 ^ input1082/Y (BUFx2_ASAP7_75t_R)\r\n   0.04  210.48 ^ ces_0_0/io_ins_right[61] (Element)\r\n         210.48   data arrival time\r\n\r\n   0.00    0.00   clock clock (rise edge)\r\n 337.72  337.72   clock network delay (propagated)\r\n   0.00  337.72   clock reconvergence pessimism\r\n         337.72 ^ ces_0_0/clock (Element)\r\n 102.40  440.11   library hold time\r\n         440.11   data required time\r\n---------------------------------------------------------\r\n         440.11   data required time\r\n        -210.48   data arrival time\r\n---------------------------------------------------------\r\n        -229.63   slack (VIOLATED)\r\n```\r\n\r\n```\r\nforeach path [find_timing_paths -slack_max 0 -group_count 10 -path_delay min] {puts \"[get_property $path slack] [get_property [get_property $path endpoint] full_name]\"}\r\n-229.630280 ces_0_0/io_ins_right[61]\r\n-229.599152 ces_0_0/io_ins_right[3]\r\n-229.596451 ces_0_0/io_ins_right[56]\r\n-229.570663 ces_0_0/io_ins_right[51]\r\n-229.570786 ces_0_0/io_ins_right[53]\r\n-229.568649 ces_0_0/io_ins_right[1]\r\n-229.561371 ces_0_0/io_ins_right[14]\r\n-229.517380 ces_0_0/io_ins_right[30]\r\n-229.512604 ces_0_0/io_ins_right[5]\r\n-229.509186 ces_7_0/io_ins_right[61]\r\n```\r\n\r\n\r\n\r\n```\r\ndiff --git a/flow/designs/asap7/mock-array/Element/constraints.sdc b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\nindex be545b8f..0a66e62e 100644\r\n--- a/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n@@ -4,7 +4,7 @@ set cols [expr {[info exists ::env(MOCK_ARRAY_COLS)] ? $::env(MOCK_ARRAY_COLS) :\r\n \r\n set clk_name clock\r\n set clk_port_name clock\r\n-set clk_period 2000\r\n+set clk_period 1000\r\n \r\n set clk_port [get_ports $clk_port_name]\r\n create_clock -period $clk_period -waveform [list 0 [expr $clk_period / 2]] -name $clk_name $clk_port\r\ndiff --git a/flow/designs/asap7/mock-array/constraints.sdc b/flow/designs/asap7/mock-array/constraints.sdc\r\nindex 5d33c792..46b20e5b 100644\r\n--- a/flow/designs/asap7/mock-array/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/constraints.sdc\r\n@@ -1,6 +1,6 @@\r\n set sdc_version 2.0\r\n \r\n-set clk_period 2000\r\n+set clk_period 1000\r\n create_clock [get_ports clock] -period $clk_period -waveform [list 0 [expr $clk_period/2]]\r\n \r\n set clk_name  clock\r\ndiff --git a/flow/scripts/cts.tcl b/flow/scripts/cts.tcl\r\nindex 0b7c56b8..2c0c6fef 100644\r\n--- a/flow/scripts/cts.tcl\r\n+++ b/flow/scripts/cts.tcl\r\n@@ -45,6 +45,8 @@ estimate_parasitics -placement\r\n report_metrics \"cts pre-repair\"\r\n utl::pop_metrics_stage\r\n \r\n+write_db $::env(RESULTS_DIR)/4_1_cts_pre_repair.odb\r\n+\r\n repair_clock_nets\r\n \r\n utl::push_metrics_stage \"cts__{}__post_repair\"\r\n```\r\n", "date": "2023-07-13T08:58:43Z"}, {"author": "oharboe", "role": "assistant", "message": "`make gui_cts` ctrl-f and searching for instance `*hold*` is helpful. :-)\r\n\r\nFrom there I can go to the buffer tree, then find the endpoints.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/bcfc601b-55b6-4a91-aa4c-e58f630c647e)\r\n", "date": "2023-07-13T09:11:31Z"}, {"author": "maliberty", "role": "assistant", "message": "Various useful patterns at https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/2734e98ee7c0f6888a686c2ef2445c0bb837ed0f/flow/scripts/save_images.tcl#L59", "date": "2023-07-13T16:41:43Z"}], "date": "2023-07-12T06:18:21Z", "category": "Query", "subcategory": "Timing analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3604", "id": 3604, "title": "How do I find out which nets detailed placed failed on?", "author": "oharboe", "description": "If I try to bump mock-array frequency from 8000ps to 1000ps, I get detailed placement errors.\r\n\r\nHow do I find out which nets detailed placement is failing for?\r\n\r\n```\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold19172\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33346\r\n[INFO DPL-0035]  hold1805\r\n[INFO DPL-0035]  hold19173\r\n[INFO DPL-0035]  hold7528\r\n[INFO DPL-0035]  input2044\r\n[ERROR DPL-0036] Detailed placement failed.\r\nError: cts.tcl, 90 DPL-0036\r\nCommand exited with non-zero status 1\r\nElapsed time: 1:53.31[h:]min:sec. CPU time: user 113.09 sys 0.19 (99%). Peak memory: 792296KB.\r\nmake: *** [Makefile:579: results/asap7/mock-array/base/4_1_cts.odb] Error 1\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "If I try to bump mock-array frequency from 8000ps to 1000ps, I get detailed placement errors.\r\n\r\nHow do I find out which nets detailed placement is failing for?\r\n\r\n```\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold19172\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33346\r\n[INFO DPL-0035]  hold1805\r\n[INFO DPL-0035]  hold19173\r\n[INFO DPL-0035]  hold7528\r\n[INFO DPL-0035]  input2044\r\n[ERROR DPL-0036] Detailed placement failed.\r\nError: cts.tcl, 90 DPL-0036\r\nCommand exited with non-zero status 1\r\nElapsed time: 1:53.31[h:]min:sec. CPU time: user 113.09 sys 0.19 (99%). Peak memory: 792296KB.\r\nmake: *** [Makefile:579: results/asap7/mock-array/base/4_1_cts.odb] Error 1\r\n```\r\n", "date": "2023-07-11T07:08:37Z"}, {"author": "oharboe", "role": "assistant", "message": "Change I tried:\r\n\r\n```\r\n$ git show\r\ncommit be3fd43658747fa25b16fd7fb7317a36e92d7362 (HEAD)\r\nAuthor: \u00d8yvind Harboe <oyvind.harboe@zylin.com>\r\nDate:   Tue Jul 11 09:01:30 2023 +0200\r\n\r\n    mock-array: reduce clock period to 1000ps from 8000ps\r\n    \r\n    Signed-off-by: \u00d8yvind Harboe <oyvind.harboe@zylin.com>\r\n\r\ndiff --git a/flow/designs/asap7/mock-array/Element/constraints.sdc b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\nindex 1d817bb8..0a66e62e 100644\r\n--- a/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n@@ -4,7 +4,7 @@ set cols [expr {[info exists ::env(MOCK_ARRAY_COLS)] ? $::env(MOCK_ARRAY_COLS) :\r\n \r\n set clk_name clock\r\n set clk_port_name clock\r\n-set clk_period 8000\r\n+set clk_period 1000\r\n \r\n set clk_port [get_ports $clk_port_name]\r\n create_clock -period $clk_period -waveform [list 0 [expr $clk_period / 2]] -name $clk_name $clk_port\r\ndiff --git a/flow/designs/asap7/mock-array/constraints.sdc b/flow/designs/asap7/mock-array/constraints.sdc\r\nindex ad66e12c..7370cc7f 100644\r\n--- a/flow/designs/asap7/mock-array/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/constraints.sdc\r\n@@ -1,6 +1,6 @@\r\n set sdc_version 2.0\r\n \r\n-set clk_period 8000\r\n+set clk_period 1000\r\n create_clock [get_ports clock] -period $clk_period -waveform [list 0 [expr $clk_period/2]]\r\n \r\n set clk_name  clock\r\n```\r\n", "date": "2023-07-11T07:09:11Z"}, {"author": "maliberty", "role": "assistant", "message": "Was this after the abutment PR?  If so you should retry again after https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1221 as that opens up rows in the core.", "date": "2023-07-11T14:31:44Z"}], "date": "2023-07-11T07:08:37Z", "category": "Runtime", "subcategory": "Timing constraint issue", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3513", "id": 3513, "title": "Build problems. Missing gmock.h", "author": "oharboe", "description": "There has been a lot of activity concerning build errors, but I tried with latest master merged with #3512\r\n\r\nIs it enough to update to latest master or do I need to purge something or other locally?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_CXX_FLAGS=-g\"\r\n```\r\n\r\n```\r\n[ 25%] Building CXX object src/odb/test/cpp/CMakeFiles/TestGuide.dir/TestGuide.cpp.o\r\n/home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD/src/odb/test/cpp/TestAbstractLef.cc:13:10: fatal error: gmock/gmock.h: No such file or directory\r\n   13 | #include \"gmock/gmock.h\"\r\n      |          ^~~~~~~~~~~~~~~\r\ncompilation terminated.\r\ngmake[2]: *** [src/odb/test/cpp/CMakeFiles/OdbGTests.dir/build.make:90: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/TestAbstractLef.cc.o] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:2331: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/all] Error 2\r\ngmake[1]: *** Waiting for unfinished jobs...\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "There has been a lot of activity concerning build errors, but I tried with latest master merged with #3512\r\n\r\nIs it enough to update to latest master or do I need to purge something or other locally?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_CXX_FLAGS=-g\"\r\n```\r\n\r\n```\r\n[ 25%] Building CXX object src/odb/test/cpp/CMakeFiles/TestGuide.dir/TestGuide.cpp.o\r\n/home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD/src/odb/test/cpp/TestAbstractLef.cc:13:10: fatal error: gmock/gmock.h: No such file or directory\r\n   13 | #include \"gmock/gmock.h\"\r\n      |          ^~~~~~~~~~~~~~~\r\ncompilation terminated.\r\ngmake[2]: *** [src/odb/test/cpp/CMakeFiles/OdbGTests.dir/build.make:90: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/TestAbstractLef.cc.o] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:2331: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/all] Error 2\r\ngmake[1]: *** Waiting for unfinished jobs...\r\n```\r\n", "date": "2023-06-23T20:04:47Z"}, {"author": "QuantamHD", "role": "assistant", "message": "This ones my bad. It seems that some installations of libgtest-dev don't include google mock. If you uninstall your system gtest it will fix this error, but I'll see if there's something else we could do to fix this.", "date": "2023-06-23T20:14:07Z"}, {"author": "vvbandeira", "role": "assistant", "message": "Fixed on #3514 ", "date": "2023-06-25T22:17:30Z"}], "date": "2023-06-23T20:04:47Z", "category": "Build", "subcategory": "Missing dependency", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3489", "id": 3489, "title": "ABC contains local modifications!", "author": "Simonliudan", "description": "[ 12%] Building abc/abc-bafd2a7\r\nDebug: ABCREV=bafd2a7\r\n[ 22%] Building passes/techmap/filterlib.o\r\n[ 22%] Building yosys-smtbmc\r\nERROR: ABC contains local modifications! Set ABCREV=default in Yosys Makefile!\r\nmake: *** [Makefile:749: abc/abc-bafd2a7] Error 1\r\n\r\nin Centos, I have set ABCREV = default, but the debug info is bafd2a7\r\n", "content": [{"author": "Simonliudan", "role": "user", "message": "[ 12%] Building abc/abc-bafd2a7\r\nDebug: ABCREV=bafd2a7\r\n[ 22%] Building passes/techmap/filterlib.o\r\n[ 22%] Building yosys-smtbmc\r\nERROR: ABC contains local modifications! Set ABCREV=default in Yosys Makefile!\r\nmake: *** [Makefile:749: abc/abc-bafd2a7] Error 1\r\n\r\nin Centos, I have set ABCREV = default, but the debug info is bafd2a7\r\n", "date": "2023-06-20T01:54:57Z"}, {"author": "vijayank88", "role": "assistant", "message": "Is this installation issue?\r\nCan you provide steps to reproduce the same?", "date": "2023-06-20T06:18:54Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@Simonliudan, this looks more like an issue than a discussion. Please file an Issue and follow the Issue template, the template give us important information to help you.", "date": "2023-06-20T18:28:02Z"}], "date": "2023-06-20T01:54:57Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Verilog to DB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3447", "id": 3447, "title": "A few questions about the capabilities of OpenROAD-Flow-Scripts", "author": "lokki11199", "description": "Hello! I have a few questions about ORFS capabilities.\r\n\r\n1)\tDoes OpenROAD support libraries with CCS driver model?\r\n2)\tIs incremental flow supported?\r\n3)\tDoes OpenSTA in OpenROAD support all sdc commands?\r\n4)\tIs SystemVerilog support limited to the constructs that Yosys supports?\r\n5)\tDoes OpenROAD do only DRC analysis or also DRV and DFM? Of the DFM analysis I have only seen an antenna rule check.\r\n6)\tDoes OpenROAD provide corner-based optimisation, or it can only show us the characteristics, like wns, for different corners?\r\n7)\tAre OCVs supported?\r\n8)\tDoes OpenROAD support crosstalk delay/noise analysis?\r\n\r\nThank you for your answers!", "content": [{"author": "lokki11199", "role": "user", "message": "Hello! I have a few questions about ORFS capabilities.\r\n\r\n1)\tDoes OpenROAD support libraries with CCS driver model?\r\n2)\tIs incremental flow supported?\r\n3)\tDoes OpenSTA in OpenROAD support all sdc commands?\r\n4)\tIs SystemVerilog support limited to the constructs that Yosys supports?\r\n5)\tDoes OpenROAD do only DRC analysis or also DRV and DFM? Of the DFM analysis I have only seen an antenna rule check.\r\n6)\tDoes OpenROAD provide corner-based optimisation, or it can only show us the characteristics, like wns, for different corners?\r\n7)\tAre OCVs supported?\r\n8)\tDoes OpenROAD support crosstalk delay/noise analysis?\r\n\r\nThank you for your answers!", "date": "2023-06-10T13:58:50Z"}, {"author": "maliberty", "role": "assistant", "message": "> Hello! I have a few questions about ORFS capabilities.\r\n> \r\n> 1. Does OpenROAD support libraries with CCS driver model?\r\n\r\nOnly NLDM is currently supported but CCS is under development.\r\n\r\n> 2. Is incremental flow supported?\r\n\r\nThat can have a lot of meanings.  We do support restarting the flow at a given step.\r\n\r\n> 3. Does OpenSTA in OpenROAD support all sdc commands?\r\n\r\nYes afaik but be careful that there are many proprietary commands that are not in SDC.\r\n\r\n> 4. Is SystemVerilog support limited to the constructs that Yosys supports?\r\n\r\nYes.  The is the surelog plugin that has a good amount of SV support\r\n\r\n> 5. Does OpenROAD do only DRC analysis or also DRV and DFM? Of the DFM analysis I have only seen an antenna rule check.\r\n\r\nOR does max slew/cap/fanout if that's what you mean by DRV.  There is no DFM.\r\n\r\n> 6. Does OpenROAD provide corner-based optimisation, or it can only show us the characteristics, like wns, for different corners?\r\n\r\nOR can be setup for multi-corner analysis.  ORFS doesn't take advantage of that today.\r\n\r\n> 7. Are OCVs supported?\r\n\r\nYes but see 6\r\n\r\n> 8. Does OpenROAD support crosstalk delay/noise analysis?\r\n\r\nNo.  Once we have CCS for delay it would be natural to tackle this next.\r\n\r\n> \r\n> Thank you for your answers!\r\n\r\n", "date": "2023-06-10T19:12:53Z"}, {"author": "dralabeing", "role": "assistant", "message": "> @dralabeing. Should we curate this and ask Jack to add it to OR and ORFS FAQs?\r\n\r\nYes, this is a good idea. Let's add this to the FAQs", "date": "2023-06-16T04:31:36Z"}], "date": "2023-06-10T13:58:50Z", "category": "Query", "subcategory": "Capability questions", "Tool": "OpenROAD-Flow-Scripts"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3454", "id": 3454, "title": "How can I go from timing reports to Verilog?", "author": "oharboe", "description": "I have a timing path in the OpenROAD GUI that I want to understand.\r\n\r\nHow can I go from the timing report in the GUI to the Verilog?", "content": [{"author": "oharboe", "role": "user", "message": "I have a timing path in the OpenROAD GUI that I want to understand.\r\n\r\nHow can I go from the timing report in the GUI to the Verilog?", "date": "2023-06-13T06:59:44Z"}, {"author": "maliberty", "role": "assistant", "message": "https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1129 should help with naming once merged.\r\n\r\nThere is no direct link today so you'll have to work back from the names.  @QuantamHD has some work to store line numbers that is hopefully going to land but has been tied up in OSS licensing issues.", "date": "2023-06-13T11:42:50Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty Here is an example of how it is hard to get from the static timing report to the Verilog:\r\n\r\nBuild the design with ` make DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk`, then look at the Element `make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk gui_final`.\r\n\r\nHow, in general, do I find my way to the Verilog code?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/840713c0-f33a-484f-b156-9a79e4aad50d)\r\n\r\n\r\n", "date": "2023-06-14T07:01:39Z"}, {"author": "maliberty", "role": "assistant", "message": "If you use the rename PR I mentioned then the register should have a name matching the Element.v to some degree.  Does that work here?", "date": "2023-06-14T14:55:39Z"}, {"author": "oharboe", "role": "assistant", "message": "What I've heard is that tracking from timing reports back to RTL is an \"unsolved problem in EDA tools\", so https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1129 is probably as good as it gets for now.\r\n\r\nTo go beyond this, I suppose Yosys has to grow some sophistication w.r.t. tracking back to the original Verilog.\r\n\r\nOne of the goals of https://circt.llvm.org/ is to provide an improved infrastructure for RTL as it goes through a number of tools in a flow. Perhaps, one day, yosys will support https://circt.llvm.org/. Ideally this would give Yosys more input languages and better \"debug information\" through synthesis and technology mapping...", "date": "2023-06-15T05:29:49Z"}], "date": "2023-06-13T06:59:44Z", "category": "Query", "subcategory": "Tracing timing paths", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3445", "id": 3445, "title": "how to suppress specific warnings", "author": "gkamendje", "description": "I would like to temporarily suppress some warnings like `[WARNING STA-0122]`. Is there a way to do that? Is there a place to look for the full meaning of warnings and error messages? Some of them are cryptic. ", "content": [{"author": "gkamendje", "role": "user", "message": "I would like to temporarily suppress some warnings like `[WARNING STA-0122]`. Is there a way to do that? Is there a place to look for the full meaning of warnings and error messages? Some of them are cryptic. ", "date": "2023-06-09T20:11:43Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no suppression mechanism.  There is no catalog of messages though you can always look at the source code to get more ideas.  Is there a particular message that you are finding cryptic?", "date": "2023-06-10T05:02:33Z"}, {"author": "maliberty", "role": "assistant", "message": "I forgot we had that.  I wrote it with unit tests in mind but I guess it works here too.", "date": "2023-06-10T23:48:16Z"}], "date": "2023-06-09T20:11:43Z", "category": "Query", "subcategory": "Warning suppression", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3390", "id": 3390, "title": "How to generate a SPEF (`write_spef`) including coordinate information?", "author": "xlindo", "description": "As the default flow, there is no coordinate information in `*CONN` following each `PORT` in the generated `6_final.spef`, which is not in coincidence with a normal SPEF format.\r\n\r\nE.g., no `*C` bolow,\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/8579640/488691da-2217-4dae-980b-da833f9bbf79)\r\n\r\n```\r\n...\r\n\r\n*CONN\r\n*I *572:B I *D sky130_fd_sc_hd__nand2_1\r\n*I *571:Y O *D sky130_fd_sc_hd__nand2_1\r\n\r\n...\r\n```\r\n\r\nCompared with another example in a book,\r\n\r\n```\r\n*D_NET *5423 2.69358 \r\n\r\n*CONN \r\n*I *14207:D I *C 21.7450 94.3150 \r\n*I *14205:D I *C 21.7450 90.4900 \r\n*I *14211:Q O *C 21.4900 83.8800 *D DFFQX1 \r\n\r\n*CAP \r\n1 *5423:10107 *547:12722 0.202686 \r\n2 *5423:10107 *5116:10594 0.104195\r\n\r\n....\r\n```\r\n\r\n\r\nAny boss help me?", "content": [{"author": "xlindo", "role": "user", "message": "As the default flow, there is no coordinate information in `*CONN` following each `PORT` in the generated `6_final.spef`, which is not in coincidence with a normal SPEF format.\r\n\r\nE.g., no `*C` bolow,\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/8579640/488691da-2217-4dae-980b-da833f9bbf79)\r\n\r\n```\r\n...\r\n\r\n*CONN\r\n*I *572:B I *D sky130_fd_sc_hd__nand2_1\r\n*I *571:Y O *D sky130_fd_sc_hd__nand2_1\r\n\r\n...\r\n```\r\n\r\nCompared with another example in a book,\r\n\r\n```\r\n*D_NET *5423 2.69358 \r\n\r\n*CONN \r\n*I *14207:D I *C 21.7450 94.3150 \r\n*I *14205:D I *C 21.7450 90.4900 \r\n*I *14211:Q O *C 21.4900 83.8800 *D DFFQX1 \r\n\r\n*CAP \r\n1 *5423:10107 *547:12722 0.202686 \r\n2 *5423:10107 *5116:10594 0.104195\r\n\r\n....\r\n```\r\n\r\n\r\nAny boss help me?", "date": "2023-05-26T03:20:13Z"}, {"author": "maliberty", "role": "assistant", "message": "Coordinates are optional in spef so this is valid.  There is code to generate coordinates but we've never used it.  We could try enabling but I can't make any guarantees about what it will produce.  Do you have a use model for these or are you just comparing to what a book shows?", "date": "2023-05-26T05:06:58Z"}, {"author": "maliberty", "role": "assistant", "message": "I've added a -coordinates option to write_spef in https://github.com/The-OpenROAD-Project/OpenROAD/pull/3434", "date": "2023-06-07T04:18:59Z"}], "date": "2023-05-26T03:20:13Z", "category": "Query", "subcategory": "SPEF format", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3395", "id": 3395, "title": "Any reference paper for the psm tool?", "author": "Pzy-ss", "description": "Did the psm module refer to any academic research? If so, it would be better to cite the paper for us to learn the ir-solver and make some improvement. If not, any recommendation for freshmen to understand the whole ir-drop thing? Appreciate it!", "content": [{"author": "Pzy-ss", "role": "user", "message": "Did the psm module refer to any academic research? If so, it would be better to cite the paper for us to learn the ir-solver and make some improvement. If not, any recommendation for freshmen to understand the whole ir-drop thing? Appreciate it!", "date": "2023-05-29T03:55:58Z"}, {"author": "vijayank88", "role": "assistant", "message": "@Pzy-ss \r\nHave you referred [this](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/psm)?\r\nhttps://theopenroadproject.org/an-ml-based-iccad-contest-for-static-ir-drop-estimation/", "date": "2023-05-29T05:53:22Z"}, {"author": "maliberty", "role": "assistant", "message": "@VidyaChhabria is the author - would you comment.", "date": "2023-05-30T01:57:37Z"}, {"author": "maliberty", "role": "assistant", "message": "@VidyaChhabria provided the doc in #3405 ", "date": "2023-05-30T22:45:36Z"}, {"author": "VidyaChhabria", "role": "assistant", "message": "Look at PR: https://github.com/The-OpenROAD-Project/OpenROAD/pull/3428 should update the document to have the citations.", "date": "2023-06-05T23:09:07Z"}], "date": "2023-05-29T03:55:58Z", "category": "Query", "subcategory": "Reference materials", "Tool": "IR Drop Analysis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3407", "id": 3407, "title": "How do I trace global routing congestion to net?", "author": "oharboe", "description": "How can I trace global routing congestion to the net that is causing the problem?\r\n\r\nI have routing congestion on top of my macro, but I'm struggling to find out which net is causing the problem.\r\n\r\nI *think* the problem is that some pin is on the wrong side of the macro and that a net is being routed around the macro.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/29c9571b-1fe1-48a0-b70c-b73b151f7d3f)\r\n\r\nClicking on the routing congestion doesn't leave me with much of a clue to track down the net that is causing the problem:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b060f66-f907-4707-8841-9772ffa5f7a5)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I trace global routing congestion to the net that is causing the problem?\r\n\r\nI have routing congestion on top of my macro, but I'm struggling to find out which net is causing the problem.\r\n\r\nI *think* the problem is that some pin is on the wrong side of the macro and that a net is being routed around the macro.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/29c9571b-1fe1-48a0-b70c-b73b151f7d3f)\r\n\r\nClicking on the routing congestion doesn't leave me with much of a clue to track down the net that is causing the problem:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b060f66-f907-4707-8841-9772ffa5f7a5)\r\n", "date": "2023-05-31T11:29:37Z"}, {"author": "maliberty", "role": "assistant", "message": "Short term I would select all nets and see if you can spot the one crossing the macro.  Then go to one end and see what pin it is coming from\r\n\r\n@eder-matheus @luis201420 can we add the set of nets in the gcell to the congestion marker?", "date": "2023-05-31T15:57:21Z"}, {"author": "oharboe", "role": "assistant", "message": "Some tips and some ideas for new features to improve this experience, so I think this is answered.", "date": "2023-05-31T18:41:56Z"}], "date": "2023-05-31T11:29:37Z", "category": "Query", "subcategory": "Usage question", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3417", "id": 3417, "title": "Where do I find the endpoint slack histogram?", "author": "oharboe", "description": "I'm running OpenROAD v2.0-8374-g5235ee26c, but I can't find the endpoint slack histogram. I thought it would be in the Windows menu...\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/pull/3344\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/d979d815-5fee-4951-b4c4-dfb58c45e7a7)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm running OpenROAD v2.0-8374-g5235ee26c, but I can't find the endpoint slack histogram. I thought it would be in the Windows menu...\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/pull/3344\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/d979d815-5fee-4951-b4c4-dfb58c45e7a7)\r\n", "date": "2023-06-01T04:25:52Z"}, {"author": "rovinski", "role": "assistant", "message": "Do you have Qt5 charts installed? Your CMake log should have:\r\n```\r\n-- Charts widget is enabled\r\n```\r\nIt requires a new optional dependency. On Ubuntu you should be able to do `apt install libqt5charts5-dev`.", "date": "2023-06-01T05:24:06Z"}, {"author": "oharboe", "role": "assistant", "message": "Very cool!\r\n\r\nSome nits:\r\n\r\nNo legend on horizontal axis and I have to undock it and increase the size to see what's going on(no numbers visible when it is a tiny chartlet in the default position).\r\n\r\nAlso, I think the scripting window could leave space for the vertical column where the timing report is, instead of taking the full width of the window.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/cbe9a37a-0eba-4cf6-8e5d-df51c58e2457)\r\n", "date": "2023-06-01T05:40:38Z"}], "date": "2023-06-01T04:25:52Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2784", "id": 2784, "title": "New DFT Tool: Starting with scan replace", "author": "fgaray", "description": "Hello OpenROAD devs,\r\n\r\nI am planning on contributing a new tool (following  https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/docs/contrib/DeveloperGuide.md, I will call this \"dft\") for DFT insertion into OpenROAD and I would like to discuss the user facing API.\r\n\r\n# User facing API\r\n\r\nI think we should create two new main commands for DFT: preview_dft and insert_dft:\r\n\r\n* preview_dft: will show a summary of what scan chains are we going to create (after scan architect) but will not apply any changes to the design. This is an immutable command and will not perform any modifications to the design or database. This is useful for debugging proposes and to help users to iterate any DFT option that could change the creation of the scan chains.\r\n* insert_dft: will run again from scratch the immutable part of preview_dft, including scan architect and perform scan stitching. The result of insert_dft should be the same that the one presented by preview_dft but applied to the design.\r\n\r\nI would say that it is better to configure the DFT compiler with commands like \"set_dft_*\" instead of receiving any argument in \"preview_dft\" or \"insert_dft\". For example: set_dft_no_scan (for cells that we don't want to scan replace), set_dft_chain_count (for the number of scan chains to be created) or set_dft_clock_mix (if we want or not to mix clock domains).\r\n\r\nNow, I am not sure if this is going to be something you expect to see in the Python interface, this is a very TCL oriented API and I would like to see if you have any suggestion on doing this more programmatically for Python scripting (maybe this is totally fine as we can have a different API for Python?).\r\n\r\n# Where in the flow is DFT insertion going to be?\r\n\r\n![OpenROAD's flow](https://user-images.githubusercontent.com/1619948/213331834-76ea8bb9-a63b-4576-90ff-5e6eca6e5647.png)\r\n\r\nLooking into OpenROAD's flow, I think the best part to perform DFT insertion is between \"Logic Synthesis\" and \"Floorplanning\". That way we floorplanning will have all the info about DFT to perform optimizations in the design.\r\n\r\nFeel free to suggest something different here :).\r\n\r\n# What is the plan?\r\n\r\nFor now, I will only be creating \"insert_dft\" and \"set_no_scan\" for scan replacement: I will replace sequential cells (excluding black boxes as we don't have support for [CTLs](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626) yet!) in the design with scan equivalents if they are available and nothing more inside insert_dft. I will keep of of the scope adding scan muxes or any other kind of scan stitching as this is my first approach to OpenROAD.\r\n\r\nPlease, let me know if there is something I should be aware of or anything related to this idea or the user interface.\r\n\r\nThanks!,\r\nFelipe\r\n", "content": [{"author": "fgaray", "role": "user", "message": "Hello OpenROAD devs,\r\n\r\nI am planning on contributing a new tool (following  https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/docs/contrib/DeveloperGuide.md, I will call this \"dft\") for DFT insertion into OpenROAD and I would like to discuss the user facing API.\r\n\r\n# User facing API\r\n\r\nI think we should create two new main commands for DFT: preview_dft and insert_dft:\r\n\r\n* preview_dft: will show a summary of what scan chains are we going to create (after scan architect) but will not apply any changes to the design. This is an immutable command and will not perform any modifications to the design or database. This is useful for debugging proposes and to help users to iterate any DFT option that could change the creation of the scan chains.\r\n* insert_dft: will run again from scratch the immutable part of preview_dft, including scan architect and perform scan stitching. The result of insert_dft should be the same that the one presented by preview_dft but applied to the design.\r\n\r\nI would say that it is better to configure the DFT compiler with commands like \"set_dft_*\" instead of receiving any argument in \"preview_dft\" or \"insert_dft\". For example: set_dft_no_scan (for cells that we don't want to scan replace), set_dft_chain_count (for the number of scan chains to be created) or set_dft_clock_mix (if we want or not to mix clock domains).\r\n\r\nNow, I am not sure if this is going to be something you expect to see in the Python interface, this is a very TCL oriented API and I would like to see if you have any suggestion on doing this more programmatically for Python scripting (maybe this is totally fine as we can have a different API for Python?).\r\n\r\n# Where in the flow is DFT insertion going to be?\r\n\r\n![OpenROAD's flow](https://user-images.githubusercontent.com/1619948/213331834-76ea8bb9-a63b-4576-90ff-5e6eca6e5647.png)\r\n\r\nLooking into OpenROAD's flow, I think the best part to perform DFT insertion is between \"Logic Synthesis\" and \"Floorplanning\". That way we floorplanning will have all the info about DFT to perform optimizations in the design.\r\n\r\nFeel free to suggest something different here :).\r\n\r\n# What is the plan?\r\n\r\nFor now, I will only be creating \"insert_dft\" and \"set_no_scan\" for scan replacement: I will replace sequential cells (excluding black boxes as we don't have support for [CTLs](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626) yet!) in the design with scan equivalents if they are available and nothing more inside insert_dft. I will keep of of the scope adding scan muxes or any other kind of scan stitching as this is my first approach to OpenROAD.\r\n\r\nPlease, let me know if there is something I should be aware of or anything related to this idea or the user interface.\r\n\r\nThanks!,\r\nFelipe\r\n", "date": "2023-01-19T01:20:43Z"}, {"author": "maliberty", "role": "assistant", "message": "I think it is best to do scan chain after global placement.  You want to put the ff in the best placement for timing and only then construct the chain ordering based on neighbors.  \r\n\r\nIt would be helpful to know what commands you intend to implement to define the chains.  A small complete example would clarify the use model.\r\n\r\nFor python API please see the discussion in https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2745", "date": "2023-01-19T05:45:23Z"}, {"author": "maliberty", "role": "assistant", "message": "@rovinski @msaligane @louiic @Colin-Holehouse  any comments?", "date": "2023-01-19T18:12:32Z"}, {"author": "rovinski", "role": "assistant", "message": "Very cool! Always excited to see more functionality contributed \ud83d\ude03", "date": "2023-01-21T10:42:57Z"}, {"author": "maliberty", "role": "assistant", "message": "Would you say more about scandef and how you intend to generate it?", "date": "2023-01-22T22:17:10Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that odb doesn't store any scan information from DEF today so you'll have to plan on enhancing it as part of this project.", "date": "2023-01-23T01:31:56Z"}, {"author": "maliberty", "role": "assistant", "message": "In case its useful: http://vlsicad.eecs.umich.edu/BK/Slots/cache/vlsicad.ucsd.edu/GSRC/Bookshelf/Slots/ScanOpt/", "date": "2023-01-26T06:25:47Z"}, {"author": "fgaray", "role": "assistant", "message": "Hey @maliberty , \r\n\r\nI am trying to write a function to perform the scan replace and I need to find a scan equivalent cell in the DB.\r\n\r\nI am iterating over the libs in the odb::dbDatabase like this:\r\n\r\n```\r\nbool IsLibScanCell(odb::dbLib* lib) {\r\n  for (odb::dbMaster* master: lib->getMasters()) {\r\n    for (odb::dbMTerm* mterm: master->getMTerms()) {\r\n        std::cout << mterm->getSigType().getString() << std::endl;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n```\r\n\r\nBut looks like the enum of getSigType does not have enough information to see if a pin is scan_enable or scan_in. Is this something that I need to implement or is there another way to access this information inside the lib? I see that in sta/ there are some parsing to detect scan signals, but I do not see them being used in any place outside sta/.\r\n\r\n", "date": "2023-01-27T00:46:52Z"}, {"author": "fgaray", "role": "assistant", "message": "For scan replace, I have a working demo where I collect the scan lib cells and then I try to iterate over the design's blocks applying \"sta::dbNetwork\" replaceCell, but I found that this and some methods in sta:: check before performing the replace if both cells are \"equivalent\" by counting the number of ports in each cell (See inDbInstSwapMasterBefore in dbSta/src/dbSta.cc ).\r\n\r\nThis is not really true when you try to replace a cell with an scan equivalent because the scan one will have additional ports like scan in and scan enable.\r\n\r\nI was wondering if there is a function that I am missing that could help me with this kind of replace.\r\n\r\nIf not, should I provide a new method for dbSta and odb that checks for functional equivalent ports instead of index/name based matching (See swapMaster in odb/src/db/dbInst.cpp) or roll one myself just for DFT? Would you prefer this method to be available in odb or maybe just complete change the way we do the replaceCell?\r\n\r\nThanks!", "date": "2023-02-03T01:25:31Z"}, {"author": "fgaray", "role": "assistant", "message": "Hi @maliberty,\r\n\r\nDo you know how to test if two ports/pins are functional equivalent?, I am trying to use sta::LibertyPort's function() and sta::FuncExpr::equiv() but looks like sta::LibertyPort's function() returns most of the time nullptr. I see that in odb/src/db/dbInst.cpp:1201, we test that mterms are equivalent by checking that the name of the ports is the same (line 1236). \r\n\r\nI can work with that but I think my scan replace function will be more robust if I can check if the ports are functional equivalent.\r\n", "date": "2023-02-08T01:21:22Z"}, {"author": "fgaray", "role": "assistant", "message": "Implemented basic DFT in #2900, #3079 and #3356", "date": "2023-05-31T18:14:55Z"}], "date": "2023-01-19T01:20:43Z", "category": "Feature Request", "subcategory": "New tool addition", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3350", "id": 3350, "title": "Which distros to support", "author": "maliberty", "description": "Currently OR CI is built with\r\n* Local centos7 gcc8\r\n* Local centos7 gcc8 without GUI\r\n* Docker centos7 gcc8\r\n* Docker ubuntu20.04 gcc9\r\n\r\nPRs additionally have GH actions that test:\r\n* macOS (x86)\r\n* c++20 (using clang-16)\r\n\r\nCentos7 is getting quite dated and I think it is time to replace it with a more modern distro.  #3344 shows an example problem where qt5charts is not available in this older distro.  I think Ubuntu 22 or Debian 11 are good contenders.\r\n\r\nI'd like community input as to what distro others are using with OR to help guide our choice.  @antonblanchard @gadfort @QuantamHD @rovinski @msaligane @oharboe @donn @nayiri-k\r\n\r\nThe default compiler version would be updated to match the distro default.\r\n\r\nFYI @vvbandeira @tspyrou ", "content": [{"author": "maliberty", "role": "user", "message": "Currently OR CI is built with\r\n* Local centos7 gcc8\r\n* Local centos7 gcc8 without GUI\r\n* Docker centos7 gcc8\r\n* Docker ubuntu20.04 gcc9\r\n\r\nPRs additionally have GH actions that test:\r\n* macOS (x86)\r\n* c++20 (using clang-16)\r\n\r\nCentos7 is getting quite dated and I think it is time to replace it with a more modern distro.  #3344 shows an example problem where qt5charts is not available in this older distro.  I think Ubuntu 22 or Debian 11 are good contenders.\r\n\r\nI'd like community input as to what distro others are using with OR to help guide our choice.  @antonblanchard @gadfort @QuantamHD @rovinski @msaligane @oharboe @donn @nayiri-k\r\n\r\nThe default compiler version would be updated to match the distro default.\r\n\r\nFYI @vvbandeira @tspyrou ", "date": "2023-05-17T21:59:34Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Google is on Debian test called [Glinux](https://en.wikipedia.org/wiki/GLinux). Ubuntu 22 or Debian 11 seem like reasonable choices to me.\r\n\r\nBut we use bazel to build everything from source so the biggest issue for me is if we start requiring very new versions of widely used libraries like Boost, because then I have to upgrade all of Google to use that version of software which can be a big pain.\r\n\r\nGoogle has a one version policy for any piece of software in the universe, and it's all stored in a monorepo.", "date": "2023-05-17T22:04:38Z"}, {"author": "donn", "role": "assistant", "message": "I use Nix as a build system, so as long as the CMakeFiles are generic enough to compile on both macOS, Ubuntu and CentOS I have no issues with the specific versions of the operating system.", "date": "2023-05-18T00:09:34Z"}, {"author": "rovinski", "role": "assistant", "message": "CentOS 7 is EOL on 2024-06-30. I know of machines that are still running it, so maybe it would be a good idea to hold off removing support until then.", "date": "2023-05-18T01:23:22Z"}, {"author": "olofk", "role": "assistant", "message": "As a data point, I wanted to mention that I just got it running on Gentoo, depending only on system packages except for or-tools", "date": "2023-05-23T11:42:30Z"}], "date": "2023-05-17T21:59:34Z", "category": "Configuration", "subcategory": "Environment setup", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3355", "id": 3355, "title": "set_io_pin_constraint and pin distance", "author": "oharboe", "description": "@nerriav It looks like minimum pin distance is only availble globally for a macro, not per set_io_pin_constraint?\r\n\r\nhttps://openroad.readthedocs.io/en/latest/main/src/ppl/README.html\r\n\r\nWe would like pins to use the entire(initially) width/height of the macro edge to minimize contention at the top level where the macro is used. Currently we add extra horizontal distance in the example below to handle routing congestion at the top level. Routing congestion happens even with horizontal routes, because the horizontal routes will intersect a bit with the PDN.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/83012711-df0f-4b41-bdae-d05d3e3fbc8b)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "@nerriav It looks like minimum pin distance is only availble globally for a macro, not per set_io_pin_constraint?\r\n\r\nhttps://openroad.readthedocs.io/en/latest/main/src/ppl/README.html\r\n\r\nWe would like pins to use the entire(initially) width/height of the macro edge to minimize contention at the top level where the macro is used. Currently we add extra horizontal distance in the example below to handle routing congestion at the top level. Routing congestion happens even with horizontal routes, because the horizontal routes will intersect a bit with the PDN.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/83012711-df0f-4b41-bdae-d05d3e3fbc8b)\r\n", "date": "2023-05-18T08:46:26Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't understand what you are asking here.  Are you talking about -corner_avoidance ?", "date": "2023-05-18T14:06:15Z"}, {"author": "oharboe", "role": "assistant", "message": "@nerriav discovered that `-region:*` and `-region:0-100` to is not identical if the regions is 100 wide. The pins are spread evenly when a range is specified (latter) and bunched together more closely if `*` is specified.\r\n\r\n@maliberty Is this intentional?", "date": "2023-05-21T17:44:59Z"}], "date": "2023-05-18T08:46:26Z", "category": "Query", "subcategory": "Pin placement behavior", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3362", "id": 3362, "title": "Where does \"Error: tdms_place.tcl, 35 cannot create std::vector larger than max_size()\"", "author": "oharboe", "description": "I want to debug it, but I searched the code and couldn't find this error message in the source.\r\n\r\n```\r\n[INFO GPL-0003] SiteSize: 54 270\r\n[INFO GPL-0004] CoreAreaLxLy: 2160 2160\r\n[INFO GPL-0005] CoreAreaUxUy: 25922160 25922160\r\nError: tdms_place.tcl, 35 cannot create std::vector larger than max_size()\r\nCommand exited with non-zero status 1\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I want to debug it, but I searched the code and couldn't find this error message in the source.\r\n\r\n```\r\n[INFO GPL-0003] SiteSize: 54 270\r\n[INFO GPL-0004] CoreAreaLxLy: 2160 2160\r\n[INFO GPL-0005] CoreAreaUxUy: 25922160 25922160\r\nError: tdms_place.tcl, 35 cannot create std::vector larger than max_size()\r\nCommand exited with non-zero status 1\r\n```\r\n", "date": "2023-05-20T19:31:49Z"}, {"author": "maliberty", "role": "assistant", "message": "My guess is this is an STL exception and not in the OR code.  In gdb try 'catch throw' to see when it is being thrown.", "date": "2023-05-20T20:57:10Z"}, {"author": "oharboe", "role": "assistant", "message": "This is odd... 48000*96000 = 4608000000. Ah. overflow.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/ca384a53-04da-42fd-9039-014b3bdd89f9)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a0156546-48aa-4c6c-84a1-ee9b89647226)\r\n\r\n\r\n```\r\nD$ git diff\r\ndiff --git a/src/gpl/src/placerBase.cpp b/src/gpl/src/placerBase.cpp\r\nindex 30ff82771..4f2c10b4e 100644\r\n--- a/src/gpl/src/placerBase.cpp\r\n+++ b/src/gpl/src/placerBase.cpp\r\n@@ -1002,8 +1002,8 @@ void PlacerBase::initInstsForUnusableSites()\r\n {\r\n   dbSet<dbRow> rows = db_->getChip()->getBlock()->getRows();\r\n \r\n-  int siteCountX = (die_.coreUx() - die_.coreLx()) / siteSizeX_;\r\n-  int siteCountY = (die_.coreUy() - die_.coreLy()) / siteSizeY_;\r\n+  long siteCountX = (die_.coreUx() - die_.coreLx()) / siteSizeX_;\r\n+  long siteCountY = (die_.coreUy() - die_.coreLy()) / siteSizeY_;\r\n \r\n   enum PlaceInfo\r\n   {\r\n```\r\n\r\ngives me:\r\n\r\n```\r\n[INFO GPL-0002] DBU: 1000\r\n[INFO GPL-0003] SiteSize: 54 270\r\n[INFO GPL-0004] CoreAreaLxLy: 2160 2160\r\n[INFO GPL-0005] CoreAreaUxUy: 25922160 25922160\r\nError: out of memory.\r\n```", "date": "2023-05-21T15:32:51Z"}], "date": "2023-05-20T19:31:49Z", "category": "Bug", "subcategory": "Memory allocation error", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3353", "id": 3353, "title": "Build times for our design", "author": "oharboe", "description": "There is no question here, just a demonstration of the use of the build time summary for a design that has one top level macro and 5 macros at the top level. What is being built here are mock abstracts for the macros at the top level as we are only interested in regression testing the top level on our build servers.\r\n\r\nThe top level is the slowest in detailed routing and we have 5 macros at the top level.\r\n\r\nWe are not currently building the macros at the top level in parallel, though we intend to, but it would only cut the running time by 50%.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4cf1cdad-6896-4d2f-9ad2-af2944e50761)\r\n\r\n\r\nThis is the command I run to build a summary of all the build times `find -regex ./logs/.*/base -type d -exec python3 util/genElapsedTime.py -d {} \\; | sort -hr -k2`\r\n\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n\r\nStage | time/s\r\n-- | --\r\n5_2_TritonRoute | 21313\r\n5_2_TritonRoute | 7284\r\n5_2_TritonRoute | 4744\r\n5_2_TritonRoute | 2964\r\n5_2_TritonRoute | 1825\r\n5_2_TritonRoute | 1482\r\n3_3_place_gp | 1274\r\n4_1_cts | 1158\r\n3_3_place_gp | 666\r\n1_1_yosys | 617\r\n4_1_cts | 379\r\n6_report | 332\r\n3_3_place_gp | 312\r\n5_2_TritonRoute | 294\r\n3_5_opendp | 293\r\n1_1_yosys | 287\r\n5_2_TritonRoute | 282\r\n3_3_place_gp | 278\r\n4_1_cts | 273\r\n3_4_resizer | 224\r\n4_1_cts | 203\r\n5_1_fastroute | 198\r\n6_report | 164\r\n5_1_fastroute | 164\r\n1_1_yosys | 160\r\n5_1_fastroute | 142\r\n3_1_place_gp_skip_io | 132\r\n5_1_fastroute | 126\r\n3_4_resizer | 123\r\n6_report | 116\r\n3_5_opendp | 109\r\n... | ...\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n", "content": [{"author": "oharboe", "role": "user", "message": "There is no question here, just a demonstration of the use of the build time summary for a design that has one top level macro and 5 macros at the top level. What is being built here are mock abstracts for the macros at the top level as we are only interested in regression testing the top level on our build servers.\r\n\r\nThe top level is the slowest in detailed routing and we have 5 macros at the top level.\r\n\r\nWe are not currently building the macros at the top level in parallel, though we intend to, but it would only cut the running time by 50%.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4cf1cdad-6896-4d2f-9ad2-af2944e50761)\r\n\r\n\r\nThis is the command I run to build a summary of all the build times `find -regex ./logs/.*/base -type d -exec python3 util/genElapsedTime.py -d {} \\; | sort -hr -k2`\r\n\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n\r\nStage | time/s\r\n-- | --\r\n5_2_TritonRoute | 21313\r\n5_2_TritonRoute | 7284\r\n5_2_TritonRoute | 4744\r\n5_2_TritonRoute | 2964\r\n5_2_TritonRoute | 1825\r\n5_2_TritonRoute | 1482\r\n3_3_place_gp | 1274\r\n4_1_cts | 1158\r\n3_3_place_gp | 666\r\n1_1_yosys | 617\r\n4_1_cts | 379\r\n6_report | 332\r\n3_3_place_gp | 312\r\n5_2_TritonRoute | 294\r\n3_5_opendp | 293\r\n1_1_yosys | 287\r\n5_2_TritonRoute | 282\r\n3_3_place_gp | 278\r\n4_1_cts | 273\r\n3_4_resizer | 224\r\n4_1_cts | 203\r\n5_1_fastroute | 198\r\n6_report | 164\r\n5_1_fastroute | 164\r\n1_1_yosys | 160\r\n5_1_fastroute | 142\r\n3_1_place_gp_skip_io | 132\r\n5_1_fastroute | 126\r\n3_4_resizer | 123\r\n6_report | 116\r\n3_5_opendp | 109\r\n... | ...\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n", "date": "2023-05-18T06:49:38Z"}, {"author": "maliberty", "role": "assistant", "message": "That is average behaviour as drt is costly.  It does scale pretty well with threads so more CPUs helps.  We do have some work to do distributed drt if you want to test it out but it isn't in the flow currently due to the extra setup overhead.", "date": "2023-05-18T14:08:30Z"}, {"author": "maliberty", "role": "assistant", "message": "How many threads in your data above?", "date": "2023-05-18T14:08:48Z"}, {"author": "oharboe", "role": "assistant", "message": "No question or suggestions here, just a datapoint that I thought it might have some value in sharing.", "date": "2023-05-18T14:26:17Z"}, {"author": "maliberty", "role": "assistant", "message": "Fwiw we test with 40 cpus and I know Google often uses 96.   We have tested with several hundred in distributed mode.", "date": "2023-05-18T14:31:25Z"}], "date": "2023-05-18T06:49:38Z", "category": "Runtime", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3346", "id": 3346, "title": "Can I ask global route to fail early?", "author": "oharboe", "description": "@nerriav Global routing takes very little time for the project I am working on. However, when I make changes, these sometimes can make global routing impossible and I have to tweak my change.\r\n\r\nWhen global routing fails, it doesnt fail quickly, it just runs \"forever\"(hours compared to minutes) before it ultimately fails.\r\n\r\nCan I adjust a setting such that global route fails quickly so that I dont waste server build resources and I can quickly load the routing congestion report in the DRC viewer to drill down to the problem?", "content": [{"author": "oharboe", "role": "user", "message": "@nerriav Global routing takes very little time for the project I am working on. However, when I make changes, these sometimes can make global routing impossible and I have to tweak my change.\r\n\r\nWhen global routing fails, it doesnt fail quickly, it just runs \"forever\"(hours compared to minutes) before it ultimately fails.\r\n\r\nCan I adjust a setting such that global route fails quickly so that I dont waste server build resources and I can quickly load the routing congestion report in the DRC viewer to drill down to the problem?", "date": "2023-05-17T10:14:52Z"}, {"author": "rovinski", "role": "assistant", "message": "In OR you can use the `-congestion_interations` argument which translates to `GLOBAL_ROUTE_ARGS=\" -congestion_iterations X \"` in ORFS. X is a positive integer. The default is 100.", "date": "2023-05-17T10:41:27Z"}, {"author": "oharboe", "role": "assistant", "message": "Syntax subtleties... `export GLOBAL_ROUTE_ARGS=\"-congestion_iterations 10 -verbose\"`, failed with `[ERROR STA-0402] global_route -congestion_iterations 10 -verbose is not a known keyword or flag.`\r\n\r\n`export GLOBAL_ROUTE_ARGS=-congestion_iterations 10 -verbose` worked...\r\n\r\nIt is still stuck on:\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n```\r\n\r\nWith `export GLOBAL_ROUTE_ARGS=-congestion_iterations 2 -verbose` it fails after 2:30 minutes.\r\n\r\nI'll see how high I can make it until it \"runs forever\". If it fails after 10 minutes, then I have something I can try out. If there is nothing wrong, I would expect it to complete in ca. 3 minutes.\r\n\r\nI'm curious if 10 iterations is enough for all the designs under test... https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1076", "date": "2023-05-18T08:43:30Z"}], "date": "2023-05-17T10:14:52Z", "category": "Runtime", "subcategory": "Global routing timeout", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3314", "id": 3314, "title": "[WARNING STA-0139] ... 63.3687 is not a float.", "author": "oharboe", "description": "I get a lot of these warnings when I run `make gui_final`\r\n\r\nThis is with the latest ORFS.\r\n\r\nWhat are they?\r\n\r\n```\r\n$ make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk place\r\n```\r\n\r\n\r\n```\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 63.3687 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 79.0805 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 106.935 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 156.622 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 248.596 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 432.982 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.36 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.72 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 1.44 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 2.88 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 5.76 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 11.52 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 23.04 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 12.8576 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 15.7364 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 21.3969 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 32.5931 is not a float.\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "I get a lot of these warnings when I run `make gui_final`\r\n\r\nThis is with the latest ORFS.\r\n\r\nWhat are they?\r\n\r\n```\r\n$ make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk place\r\n```\r\n\r\n\r\n```\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 63.3687 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 79.0805 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 106.935 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 156.622 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 248.596 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 432.982 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.36 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.72 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 1.44 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 2.88 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 5.76 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 11.52 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 23.04 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 12.8576 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 15.7364 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 21.3969 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 32.5931 is not a float.\r\n```", "date": "2023-05-10T05:39:19Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nI ran with latest commit and not able to get similar logs.", "date": "2023-05-11T07:20:10Z"}, {"author": "maliberty", "role": "assistant", "message": "The report says 'make place' and 'make gui_final' which are not a compatible pair.   I can't reproduce this either even running all the way through.", "date": "2023-05-11T16:26:42Z"}, {"author": "oharboe", "role": "assistant", "message": "```\r\nrm -rf results/\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk place\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk gui_place\r\n```\r\n\r\n```\r\n$ make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk gui_place\r\n[INFO][FLOW] Using platform directory ./platforms/asap7\r\n[INFO-FLOW] ASU ASAP7 - version 2\r\nDefault PVT selection: BC\r\nODB_FILE=./results/asap7/mock-array-big_Element/base/3_place.odb /home/oyvind/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad -gui  ./scripts/gui.tcl\r\nWarning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on Wayland anyway.\r\nThis plugin does not support propagateSizeHints()\r\nOpenROAD v2.0-8114-gaa1f8060d \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 0.72 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 1.44 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 2.88 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 5.76 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 11.52 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 23.04 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 46.08 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 0.72 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 1.44 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 2.88 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 5.76 is not a float.\r\n```\r\n", "date": "2023-05-12T09:16:10Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty Aha! This is a locale issue. In their wisdom a hundred years ago, Norwegians decided to use \",\" to separate integers from fractions in floating point... So \"12.34\" is not a valid float in Norwegian locale, rather \"12,34\" is.\r\n\r\nThe evidence that this is the problem is that setting `LC_NUMERIC=\"en_GB.UTF-8\"` fixes the problem.\r\n\r\nIn this case, the locale is decided by the format that is being parsed, it is not a human readable/writeable number.\r\n\r\nLet's see if this works: https://github.com/Pinata-Consulting/OpenSTA/tree/lock-down-strtof-locale\r\n\r\nYep :-)\r\n\r\nThis also explains why we don't see this when we run from docker, only local install.", "date": "2023-05-17T17:03:22Z"}, {"author": "maliberty", "role": "assistant", "message": "Brazil has the same issue.  https://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/Main.cc#L217  attempts to solve this.  Do none of the locales exist on your systems?", "date": "2023-05-17T17:47:34Z"}, {"author": "maliberty", "role": "assistant", "message": "Would you try your strtof check along with getlocale after these various points to try to see what's going on.  I think this works in Brazil so I'm trying to understand what's different here.  @luis201420 any insights?\r\n", "date": "2023-05-17T20:34:20Z"}, {"author": "maliberty", "role": "assistant", "message": "Perhaps it relates to LC_NUMERIC or another.  Can you try unsetting all LC_* but LC_ALL in your environment to see if that matters?", "date": "2023-05-17T20:36:26Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @luis201420 With this change, I no longer get the warnings.\r\n\r\nThis is just a quick hack, I think it would be better if someone who knows what is going on and are aware of other edgecases articulates the pull request :-)\r\n\r\n```\r\ndiff --git a/src/gui/src/gui.cpp b/src/gui/src/gui.cpp\r\nindex 355aa6842..7d79d99a3 100644\r\n--- a/src/gui/src/gui.cpp\r\n+++ b/src/gui/src/gui.cpp\r\n@@ -1141,6 +1141,16 @@ int startGui(int& argc,\r\n   }\r\n   main_window->show();\r\n \r\n+  // This avoids problems with locale setting dependent\r\n+  // C functions like strtod (e.g. 0.5 vs 0,5).\r\n+  std::array locales = {\"en_US.UTF-8\", \"C.UTF-8\", \"C\"};\r\n+  for (auto locale : locales) {\r\n+    if (std::setlocale(LC_ALL, locale) != nullptr) {\r\n+      break;\r\n+    }\r\n+  }\r\n+\r\n+\r\n   gui->setLogger(open_road->getLogger());\r\n \r\n   main_window->setDatabase(open_road->getDb());\r\n```\r\n", "date": "2023-05-17T21:13:00Z"}, {"author": "maliberty", "role": "assistant", "message": "@luis201420 will you look at this since you can reproduce it", "date": "2023-05-18T05:25:42Z"}, {"author": "oharboe", "role": "assistant", "message": "I guess this has been identified as a bug in OpenROAD, given that there are frameworks that set the locale after OpenROAD has set the locale.", "date": "2023-05-18T06:50:33Z"}], "date": "2023-05-10T05:39:19Z", "category": "Bug", "subcategory": "Locale issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1610", "id": 1610, "title": "How to get heatmap data?", "author": "gudeh", "description": "Hi guys, congratulations on all the great job done with the OpenROAD project!! I want to use it to develop my ideas during my Ph.D.\r\n\r\nI am trying to build a dataset for graph neural network training. My idea is to perform physical design predictions with a mapped circuit before P&R. I am trying to extract features from Verilog with Yosys, send them to the DGL python library and perform training with DGL. These steps are already operational, but I am missing an essential aspect of the prediction: the label! \r\n\r\nTo solve the mentioned issue **I would like to have the data shown by the heatmaps in the GUI, such as placement density and routing congestion**. I would like them not as images but the actual numeric values. The positions of the cells and wires would also be essential. \r\n\r\n- Can anyone point me to which path I should go to get this data? I understand all of it is already processed by the code to show the images in the GUI. I just need to find it. \r\n- Would there be any TCL command which could help me with that? \r\n- Or my best shot is to try and use the odb database and edit some code? \r\n\r\nI noticed there are some heatmap codes in [./src/gui/src](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gui/src), but there are so many attributes and methods. Also, I am not used to the odb database yet. Any help is welcome.", "content": [{"author": "gudeh", "role": "user", "message": "Hi guys, congratulations on all the great job done with the OpenROAD project!! I want to use it to develop my ideas during my Ph.D.\r\n\r\nI am trying to build a dataset for graph neural network training. My idea is to perform physical design predictions with a mapped circuit before P&R. I am trying to extract features from Verilog with Yosys, send them to the DGL python library and perform training with DGL. These steps are already operational, but I am missing an essential aspect of the prediction: the label! \r\n\r\nTo solve the mentioned issue **I would like to have the data shown by the heatmaps in the GUI, such as placement density and routing congestion**. I would like them not as images but the actual numeric values. The positions of the cells and wires would also be essential. \r\n\r\n- Can anyone point me to which path I should go to get this data? I understand all of it is already processed by the code to show the images in the GUI. I just need to find it. \r\n- Would there be any TCL command which could help me with that? \r\n- Or my best shot is to try and use the odb database and edit some code? \r\n\r\nI noticed there are some heatmap codes in [./src/gui/src](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gui/src), but there are so many attributes and methods. Also, I am not used to the odb database yet. Any help is welcome.", "date": "2022-02-02T22:00:07Z"}, {"author": "gudeh", "role": "assistant", "message": "By the way I couldn't find the path `./build/src/swig/tcl/opendbtcl` and `./build/src/swig/tcl/opendb_wrapper.cpp` as mentioned in [the documentation](https://openroad.readthedocs.io/en/latest/main/src/odb/README.html).", "date": "2022-02-02T22:01:34Z"}, {"author": "maliberty", "role": "assistant", "message": "The bit of documentation is out of date as we now include the tcl functionality in openroad itself and no longer build standalone executables for odb.  (@vvbandeira)\r\n\r\n@arlpetergadfort My first thought was to look at each engine but maybe it would be easier to provide a dump_heatmap command in the GUI since it has already abstracted the interface to each engine.  Does that seem reasonable to you?", "date": "2022-02-02T22:06:33Z"}, {"author": "maliberty", "role": "assistant", "message": "#1612 is merged so you should be good to go.", "date": "2022-02-04T19:55:30Z"}, {"author": "maliberty", "role": "assistant", "message": "You are repeating the previous rule and probably want something like:\r\n\r\nmy_gui: my_gui_6_final.def\r\n$(foreach file,$(RESULTS_DEF),my_gui_$(file)): my_gui_%:\r\n\r\nYou are getting the bbox of each instance.  You'll have to map that back to the grid you are working with (an instance may be across a boundary as well).", "date": "2022-02-13T04:44:20Z"}, {"author": "gudeh", "role": "assistant", "message": "Hey guys, I have some issues with the heatmap features. I noticed that running the GCD project from a fresh OpenROAD-flow with this exact sequence of commands:\r\n```\r\ngit clone --recursive https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts.git\r\ncd OpenROAD-flow-scripts/\r\nsudo ./build_openroad.sh --local\r\ncd flow\r\nmake\r\nmake gui_final\r\n```\r\nRenders no output on the circuit's image when clicking on the checkbox for `Placement Density`. The `Power Density` checkbox works fine. Furthermore,  clicking on `Routing Congestion` and `IR Drop` gives the error message bellow and shows no heatmap in the image.\r\n```\r\n[WARNING GUI-0066] Heat map \"Routing Congestion\" has not been populated with data.\r\n[WARNING GUI-0066] Heat map \"IR Drop\" has not been populated with data.\r\n```\r\n\r\nIf I run the AES project I can see the Placement and Power heatmaps. Although I have the same errors with Routing and IR Drop.\r\n\r\nThe Routing and IR Drop also gives errors when trying to call gui::dump_heatmap: `[ERROR GUI-0072] \"Routing Congestion\" is not populated with data.`\r\nI also noticed that the CSVs provided by the gui::dump_heatmap command gives bouding boxes with different sizes for Placement and Power, is this expected?\r\n", "date": "2022-02-14T16:51:15Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't see any issue with placement density.  This is gcd/ng45:\r\n![image](https://user-images.githubusercontent.com/761514/153918958-d33becda-6a06-417a-a685-463e6076575a.png)\r\n", "date": "2022-02-14T17:51:33Z"}, {"author": "maliberty", "role": "assistant", "message": "@arlpetergadfort I'm seeing:\r\n```\r\n>>> read_guides results/nangate45/gcd/base/route.guide\r\n[WARNING GUI-0066] Heat map \"Routing Congestion\" has not been populated with data.\r\n```\r\nThis used to work - do you know what has changed?", "date": "2022-02-14T17:59:53Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi again! I am progressing with my dataset generation. Looking real promising. I am only having issues trying to close the gui. Even if I use gui::hide it goes to the `openroad>` command option in terminal. How can I exit it the gui AND the openroad afterwards via a TCL file? [This is what I have tried](https://github.com/gudeh/OpenROAD-flow-scripts/blob/master/flow/scripts/getLabels.tcl). As seen in the last lines.\r\n\r\nBy the way if you uncoment the part where I try to use the Routing and IRdrop heatmaps the gui::hide doesn't work.", "date": "2022-02-15T23:58:28Z"}, {"author": "gudeh", "role": "assistant", "message": "", "date": "2022-03-01T20:23:15Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi everyone! I am coming back to this project. I was focusing on other tasks the last months. \r\n \r\nI wanted to share with you an example of what my code is able to generate by editing Yosys and OpenROAD: https://drive.google.com/drive/folders/1xTz4iTuGx0bDD-ZWAOV-MDQWKI0a8XA8?usp=sharing . \r\n\r\nThis pair of CSV files can be used as input for DGL Python library and create a GNN. \r\n\r\nThere is an issue though, I created a [Python script to check for collisions among the heatmaps and logic gate locations,](https://github.com/gudeh/OpenROAD-flow-scripts/blob/master/flow/myStuff/gateToHeat.py) and it is really slow. I made it by comparing the location of all the gates against each of the 4 heat types. I would like to ask any suggestions on how to improve this. Is this able to be solved on the OpenROAD db?", "date": "2022-05-13T23:40:25Z"}, {"author": "maliberty", "role": "assistant", "message": "The link to your script is broken.  The heatmaps are a grid so it should be easy to compute the index into the map.\r\n\r\nMatt", "date": "2022-05-16T16:18:31Z"}, {"author": "gudeh", "role": "assistant", "message": "Hello again! I found a bug on my code to retrieve learning data using OpenROAD. The logic gate names don't match!\r\n\r\nMy machine learning model features come from the verilog generated during the flow. Optionally I can use the 1_1_yosys.v ( post tech map ) or the 6_final.v ( post route ). Afterwards I get the labels using some TCL commands discussed previously in this post. For example:\r\n\r\n\r\n> set dut gatesPosition_\r\n> set fileName ${designPath}/${dut}${::env(DESIGN_NAME)}.csv\r\n> set outFile [open $fileName w]\r\n> puts $outFile \"Name,xMin,yMin,xMax,yMax\"\r\n> set block [ord::get_db_block]\r\n> foreach inst [$block getInsts] { \r\n>   set box [$inst getBBox] \r\n>   puts $outFile \"[$inst getName], [ord::dbu_to_microns [$box xMin]], [ord::dbu_to_microns [$box yMin]], [ord::dbu_to_microns [$box xMax]], [ord::dbu_to_microns [$box yMax]]\" \r\n> }\r\n> close $outFile\r\n\r\nAt last, I have to build up my dataset by matching the logic gates names from the verilog,  the logic gate names(from the TCL snippet pasted here and the heatmap dumps (positions). **But there is a problem:**\r\n\r\nI noticed that sometimes the flow changes the names of the gates between the verilog and the names retrieved from the TCL command ( `[$inst getName]`) causing unexpected behavior when I build the dataset. For example, the design bp_be_top with nangate45, there is a gate called `\\be_calculator/_09864_` in the 6_final.v, and the name I get with the TCL command is `be_calculator/_09864_` without the `\\`. \r\n\r\n**My question is:** Is there anyway to be sure that OR flow won't change the names of the gates? If not when and how does the tool changes the names of the gates, does it simply remove the starting `\\` or are there any other possible modifications?", "date": "2023-03-30T22:41:14Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi guys, I have another doubt regarding the heatmaps provided by OR. I would like to make sure the behavior is as intended. This is the routing congestion heatmap when executing the Rocket Tile design with standard values (config.mk) given by the repository:\r\n![image](https://user-images.githubusercontent.com/37420320/230185344-17959d7b-05b3-4ee8-ab04-6865fb097f41.png)\r\n\r\nAfter executing the flow, OR inserts a lot of Filler Cells. It seems that the standard core size for Rocket Tile is extremely large, is there a reason for that?\r\n\r\nI ran the flow with the same design, although dividing the max X and max Y core area values in half and leaving the die area as is:\r\n\r\n> export DIE_AREA    = 0 0 924.92 799.4\r\n> #export CORE_AREA   = 10.07 9.8 914.85 789.6\r\n> export CORE_AREA   = 10.07 9.8 457.425 394.8\r\n\r\nAnd this is the routing congestion heatmap after execution. There is still a considerably high congestion between core and die:\r\n![image](https://user-images.githubusercontent.com/37420320/230186482-44fd0f4f-85d4-4fcc-afa1-ed0b05a1635d.png)\r\n\r\nTo confirm, this is the placement density after the same run:\r\n![image](https://user-images.githubusercontent.com/37420320/230188189-c3be97c8-c7a9-4f42-b78d-03918a202baf.png)\r\n\r\n\r\nThis seems strange to me. I wouldn't expect so much routing congestion between die and core area. Furthermore, I couldn't even see metal wires on the green congested area. Is this as supposed to?", "date": "2023-04-05T19:45:12Z"}, {"author": "gudeh", "role": "assistant", "message": "Hello again. I wonder if there is a way to get the heatmaps considering only certain metal layers, is that possible?", "date": "2023-05-16T14:08:49Z"}], "date": "2022-02-02T22:00:07Z", "category": "Query", "subcategory": "Data extraction", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3331", "id": 3331, "title": "Synthesis support", "author": "Blebowski", "description": "Hello, Is there any idea whether eventually OpenRoad would like to support also synthesis as part of the tool (instead of using Yosys externally) ?", "content": [{"author": "Blebowski", "role": "user", "message": "Hello, Is there any idea whether eventually OpenRoad would like to support also synthesis as part of the tool (instead of using Yosys externally) ?", "date": "2023-05-13T09:41:36Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no plan for that.  At most we would integrate yosys.  What motivates your question?", "date": "2023-05-13T14:03:21Z"}, {"author": "Blebowski", "role": "assistant", "message": "Hi, @maliberty , several points:\r\n- Yosys does not support full System Verilog (AFAIK, only with proprietary parser). Nor it supports VHDL (only via GHDL yosys plugin, and  getting this to work is tricky)\r\n- Synthesis is mentioned several times in: https://github.com/The-OpenROAD-Project/OpenROAD/issues/1759\r\n1. Hard to get netlist that passes the timing\r\n2. Possible QoR gains\r\n\r\n- Generally, placement / routing aware synthesis reaches better results in lower geometries\r\n- Industry high-end goes this direction\r\n- Easier user interface (single database, simpler to pass information from synthesis to PnR)\r\n", "date": "2023-05-13T21:15:55Z"}, {"author": "Blebowski", "role": "assistant", "message": "However,\r\nI need to note that I am not actively using nor developing OpenRoad. As for the usage, in company where I work, we use Synopsys for Synthesis and PnR tools due to stability, documentation, good performance and vast features available. We are looking forward for the day when we will be able to use open source.\r\nAs for the development, I would really like to join, but I already have little time for the open-source work due to my daily job.", "date": "2023-05-13T21:21:16Z"}, {"author": "maliberty", "role": "assistant", "message": "SV support is unrelated to OR and is being addressed in https://github.com/chipsalliance/Surelog.  The pain is mostly related to missing ASIC oriented features in yosys/abc (eg operator mapping).  \r\n\r\nIn general its a large effort and would need dedicated resources to work on it.  There isn't enough bandwidth to make it a priority.  If you want to start addressing some of these concerns I'd be happy to discuss further.", "date": "2023-05-13T21:24:48Z"}, {"author": "maliberty", "role": "assistant", "message": "OR has already integrated abc which handles the technology dependent operations.  Its less clear that there is a big advantage to the technology independent operations in yosys itself.  There is some work slowly progressing on remapping in OR using abc.", "date": "2023-05-15T02:27:10Z"}], "date": "2023-05-13T09:41:36Z", "category": "Feature Request", "subcategory": "Synthesis support", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3327", "id": 3327, "title": "What is the order of pins for get_ports?", "author": "oharboe", "description": "I'm using `-group -order` with `set_io_constraints` and I'm using the tcl snippet below to enumerate pins.\r\n\r\nHowever, this brings up the question: what order does `get_ports` return pins in?\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [get_ports -regexp $regex] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm using `-group -order` with `set_io_constraints` and I'm using the tcl snippet below to enumerate pins.\r\n\r\nHowever, this brings up the question: what order does `get_ports` return pins in?\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [get_ports -regexp $regex] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n```\r\n", "date": "2023-05-12T09:31:58Z"}, {"author": "oharboe", "role": "assistant", "message": "@nerriav FYI", "date": "2023-05-12T09:32:12Z"}, {"author": "maliberty", "role": "assistant", "message": "arbitrary order, no assumptions should be made", "date": "2023-05-12T14:07:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The command comes from SDC and such an option would be non-standard and non-portable.", "date": "2023-05-12T21:29:11Z"}, {"author": "oharboe", "role": "assistant", "message": "In mock-array-big, I introduced a designs/asap7/mock-array-big/util.tcl function, which is shared between macros and top level of the design.\r\n\r\nI'm thinking that a shared util.tcl function will be required for non-trivial designs anyway.\r\n\r\nPerhaps it is sufficient to provide an example of this in mock-array-big for now?\r\n\r\nI see this somewhat tying into how one would have a centralized method to calculate properties of macros and the top level design: manual placement of macros relative to eachother, sizes of macros calculated based on environment variables, etc.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/discussions/1067", "date": "2023-05-15T04:50:58Z"}], "date": "2023-05-12T09:31:58Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3291", "id": 3291, "title": "Can these warnings be removed?", "author": "oharboe", "description": "I've found myself ignoring warnings when I shouldn't...\r\n\r\nIn that regard, it would be helpful to fix some warnings that are always there, so I pay more attention...\r\n\r\nCan these be fixed?\r\n\r\n```\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13178, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13211, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13244, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13277, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13310, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13343, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13376, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14772, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14805, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14838, timing group from output port.\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I've found myself ignoring warnings when I shouldn't...\r\n\r\nIn that regard, it would be helpful to fix some warnings that are always there, so I pay more attention...\r\n\r\nCan these be fixed?\r\n\r\n```\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13178, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13211, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13244, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13277, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13310, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13343, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13376, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14772, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14805, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14838, timing group from output port.\r\n```\r\n", "date": "2023-05-04T05:27:04Z"}, {"author": "rovinski", "role": "assistant", "message": "They cannot, the warnings are due to the structure of the cells in the PDK and the way they were characterized into a timing model. You can, however, stop the warnings from showing up by using `suppress_message STA 164`.", "date": "2023-05-04T06:24:34Z"}, {"author": "vijayank88", "role": "assistant", "message": "I have discussed about this `WARNING STA-016` month back with Tom. Replied:\r\n```\r\nThe output to output timing edges in the liberty cause this warning.\r\nIf it's just this one cell, you could add it to the don't use list. \r\nI think this warning means the timing will be less accurate.\r\nIf you are doing experiments it may also be safe to ignore.\r\n```", "date": "2023-05-04T09:35:49Z"}], "date": "2023-05-04T05:27:04Z", "category": "Query", "subcategory": "Warning handling", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2971", "id": 2971, "title": "Arm64 Support", "author": "DylanTom", "description": "Hi, I am looking to use OpenROAD and have tried to install it on my computer.\r\n\r\nIt is an M2 Pro Macbook Pro, 32 GB RAM, 1TB SSD. I am running an Ubuntu VM through UTM which has 8GB RAM and 64 GB SSD. \r\n\r\nI am having trouble with building OpenROAD because one of the dependencies is `or-tools`, which does not appear to have Ubuntu support for the ARM architecture. I was wondering if anyone had similar issues or would know how to resolve this.\r\n\r\nSpecifically, does OpenROAD support the ARM architecture, and if not, is that a priority in the future? \r\n\r\nThanks!", "content": [{"author": "DylanTom", "role": "user", "message": "Hi, I am looking to use OpenROAD and have tried to install it on my computer.\r\n\r\nIt is an M2 Pro Macbook Pro, 32 GB RAM, 1TB SSD. I am running an Ubuntu VM through UTM which has 8GB RAM and 64 GB SSD. \r\n\r\nI am having trouble with building OpenROAD because one of the dependencies is `or-tools`, which does not appear to have Ubuntu support for the ARM architecture. I was wondering if anyone had similar issues or would know how to resolve this.\r\n\r\nSpecifically, does OpenROAD support the ARM architecture, and if not, is that a priority in the future? \r\n\r\nThanks!", "date": "2023-03-05T18:35:14Z"}, {"author": "vijayank88", "role": "assistant", "message": "Can you try OpenROAD-flow-scripts with docker based: https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildWithDocker.html#clone-and-build", "date": "2023-03-06T11:11:43Z"}, {"author": "maliberty", "role": "assistant", "message": "We do not officially support it as we don't have the hardware resources to test on that platform.  We do try to make sure we can compile on mac M1 based systems.  That said or-tools is available for arm64 as Vijayan pointed out.", "date": "2023-03-06T16:22:13Z"}, {"author": "vvbandeira", "role": "assistant", "message": "> Note: OR-Tools only provides archives for the x86_64 (also known as amd64) architecture.\r\nSource: https://developers.google.com/optimization/install/cpp/binary_linux\r\n\r\n@DylanTom If you are already using a VM, you can create a x86_64 VM and avoid this issue.", "date": "2023-03-21T14:52:30Z"}, {"author": "stefanottili", "role": "assistant", "message": "If you're on M2, why not give \"native\" OR a try ?\r\n\r\nI've been compiling it on and off using HomeBrew for dependencies (including or-tools) for a while now.\r\nor-tools and mpl2 keep on breaking the build and mpl2 is still be disabled.\r\n>> -- Removing MPL2 and PAR to avoid run time fatal error.\r\n\r\nSo occasionally it doesn't work, but most of the times I got it to compile in < 15min on a M1.\r\n\r\netc/DependencyInstaller.sh     (unforunately now installs x86 klayout, I prefer building it natively)\r\n./build_openroad.sh --local --latest --clean-force   (breaks today in a mpl2 test)\r\n./build_openroad.sh --local   (when run again it finishes, go figure)\r\n", "date": "2023-04-28T18:46:09Z"}], "date": "2023-03-05T18:35:14Z", "category": "Installation", "subcategory": "Architecture compatibility", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3208", "id": 3208, "title": "About the runtime of   archived TritonRoute  and TritonRoute in OpenROAD", "author": "gilgamsh", "description": "I have tried both of them and running the same ispd19 benchmark. I have noticed that the runtime of TritonRoute in OpenROAD is quite larger than that in archived TritonRoute. \r\nThe specific data is\r\nIn ispd19_testcase1 , with single thread\r\n  TritonRoute in OpenROAD  : Elapsed Time:\t643.091s\r\n  archived TritonRoute. :Elapsed Time:\t236.032s\r\n\r\nI have noticed that, in TritonRoute in OpenROAD ,the pin analysis time and design rule checking time increase dramatically.\r\npin analysis time in OpenROAD, about 300s, pin analysis time in archived TritonRoute, about 10s.\r\nIs there a normal situation? Maybe there is something wrong about my scripts.\r\n\r\nI use the openroad scripts like below\r\n```\r\nread_lef ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.lef\r\nread_def ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.def\r\nread_guides ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.guide\r\ndetailed_route\r\nwrite_def ispd19_test1.solution.def\r\nexit\r\n```\r\n\r\n\r\n", "content": [{"author": "gilgamsh", "role": "user", "message": "I have tried both of them and running the same ispd19 benchmark. I have noticed that the runtime of TritonRoute in OpenROAD is quite larger than that in archived TritonRoute. \r\nThe specific data is\r\nIn ispd19_testcase1 , with single thread\r\n  TritonRoute in OpenROAD  : Elapsed Time:\t643.091s\r\n  archived TritonRoute. :Elapsed Time:\t236.032s\r\n\r\nI have noticed that, in TritonRoute in OpenROAD ,the pin analysis time and design rule checking time increase dramatically.\r\npin analysis time in OpenROAD, about 300s, pin analysis time in archived TritonRoute, about 10s.\r\nIs there a normal situation? Maybe there is something wrong about my scripts.\r\n\r\nI use the openroad scripts like below\r\n```\r\nread_lef ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.lef\r\nread_def ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.def\r\nread_guides ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.guide\r\ndetailed_route\r\nwrite_def ispd19_test1.solution.def\r\nexit\r\n```\r\n\r\n\r\n", "date": "2023-04-19T11:44:41Z"}, {"author": "gilgamsh", "role": "assistant", "message": "another question, If i want to learn the code of `TritonRoute-WXL: The Open Source Router with Integrated DRC Engine`. Can i use the archived TritonRoute, thinking it implemented the functions mentioned in this paper(not including the gr)?", "date": "2023-04-19T11:49:01Z"}, {"author": "maliberty", "role": "assistant", "message": "Have you enabled a similar number of threads in both runs?  In OR use ```set_thread_count <n>```\r\n\r\nThe archived version should match the paper but any further improvements will not be present.", "date": "2023-04-19T13:55:38Z"}, {"author": "maliberty", "role": "assistant", "message": "That should be fine.  Are you using a similar number of threads in standalone TR?", "date": "2023-04-19T15:53:22Z"}, {"author": "antonblanchard", "role": "assistant", "message": "Are you running a recent version of OpenROAD with the following fix: https://github.com/The-OpenROAD-Project/OpenROAD/commit/0cf19963d358347bcf06a2cd803ea883f8c46f27\r\n\r\nThat issue isn't in the original TritonRoute source, and can cause significantly more runtime in the pin access code.", "date": "2023-04-19T23:35:50Z"}, {"author": "antonblanchard", "role": "assistant", "message": "@vijayank88 did you mean to close this? I just checked, and we are spending significantly more time in genInstRowPattern vs TritonRoute.", "date": "2023-04-21T08:13:07Z"}, {"author": "antonblanchard", "role": "assistant", "message": "Most of the problem appears to be 5fada4c44b2d4aba09185eb1217f928645c32c4b. Start up time for ispd19_test1 goes from 17 seconds to 280 seconds. I haven't got far enough to understand if all that overhead is required. FYI @maliberty @osamahammad21 \r\n", "date": "2023-04-23T11:32:10Z"}, {"author": "maliberty", "role": "assistant", "message": "Its not obvious to me how that change triggers the issue but its @osamahammad21 change so he might have an idea.", "date": "2023-04-23T15:46:51Z"}, {"author": "antonblanchard", "role": "assistant", "message": "I'm not sure why, but the problem is caused by filtering out other instances when generating our preferred access points:\r\n\r\n```\r\n-  hasVio = !genPatterns_gc({prevInst, currInst}, objs, Edge);\r\n+  // hasVio = !genPatterns_gc({prevInst, currInst}, objs, Edge);\r\n+  hasVio = !genPatterns_gc({}, objs, Edge);\r\n```\r\n\r\nI would have expected this to take less time, unless the act of filtering out other instances is taking lots of time.", "date": "2023-04-24T01:11:17Z"}, {"author": "oharboe", "role": "assistant", "message": "@gilgamsh It would be interesting to see a profile of both cases to see where the difference in time is. That should tell us something of the nature of the difference to corroborate the suspicions on what differences in code that can cause this.", "date": "2023-05-01T08:00:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that a fair number of enhancements and bug fixes have gone into the OR version.  It is possible you are not observing equivalent results.", "date": "2023-05-01T15:26:50Z"}], "date": "2023-04-19T11:44:41Z", "category": "Runtime", "subcategory": "Performance degradation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3262", "id": 3262, "title": "How can I find the net for a wire?", "author": "oharboe", "description": "I am currently dealing with an issue related to unexpected congestion in a design that has me stumped. It appears that there might be incorrect constraints on some I/O pins of a macro.\r\n\r\nWhen I try to probe deeper into the congested area by clicking on the wires, the details provided are fairly vague \u2013 something along the lines of \"wire4940/A\". I'm led to believe that this wire is simply a segment of a larger net.\r\n\r\nIdeally, I would be able to trace this wire segment back to its origin and endpoint within the RTL design, which would help me identify the exact register/pin it connects from and to. However, I'm unsure of how to proceed with this.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/235071472-965d37ef-93e0-453b-95d3-92e085d45064.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I am currently dealing with an issue related to unexpected congestion in a design that has me stumped. It appears that there might be incorrect constraints on some I/O pins of a macro.\r\n\r\nWhen I try to probe deeper into the congested area by clicking on the wires, the details provided are fairly vague \u2013 something along the lines of \"wire4940/A\". I'm led to believe that this wire is simply a segment of a larger net.\r\n\r\nIdeally, I would be able to trace this wire segment back to its origin and endpoint within the RTL design, which would help me identify the exact register/pin it connects from and to. However, I'm unsure of how to proceed with this.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/235071472-965d37ef-93e0-453b-95d3-92e085d45064.png)\r\n", "date": "2023-04-28T06:37:42Z"}, {"author": "rovinski", "role": "assistant", "message": "`wire4940/A` is an iTerm (instance terminal) meaning that `wire4940` is the name of a cell, not a wire segment. I believe `wire####` is the generated name for buffers which are inserted due to max wirelength targets.\r\n\r\nThe net that you have selected is connecting two iTerms, most likely buffers.\r\n\r\nThere should be a GUI display item called \"Buffer Tree\" which should show you what you want. See #2781 and #2824 for discussion.", "date": "2023-04-28T07:09:11Z"}, {"author": "maliberty", "role": "assistant", "message": "wireXXX will be part of multiple nets and they will be show next to the iterm name.\r\n\r\nBuffer tree only shows up if one is detected.  To detect buffers we need the liberty to be loaded.  If you used GUI_NO_TIMING=1 then it will not appear.", "date": "2023-04-28T17:46:52Z"}, {"author": "oharboe", "role": "assistant", "message": "Works very well!\r\n\r\nWhen I click on the buffer tree, I get the terminals (endpoints), which I can relate to my Verilog easily.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/235290247-50079b66-d746-47db-b511-470cfe18260d.png)\r\n", "date": "2023-04-29T07:40:10Z"}], "date": "2023-04-28T06:37:42Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3174", "id": 3174, "title": "Meandering wires in a void", "author": "oharboe", "description": "I'm doing some exploration of floorplanning, which means that I sometimes have a LOT of free space after detailed routing.\r\n\r\nI saw this net, which I thought was curious: a meandering wire in the void...\r\n\r\nWouldn't a single vertical + horizontal wire be faster?\r\n\r\nI'm curious as to why the detailed router meanders in this way.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/231722490-7eeb540d-5004-424b-bca1-f29bc53fa899.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm doing some exploration of floorplanning, which means that I sometimes have a LOT of free space after detailed routing.\r\n\r\nI saw this net, which I thought was curious: a meandering wire in the void...\r\n\r\nWouldn't a single vertical + horizontal wire be faster?\r\n\r\nI'm curious as to why the detailed router meanders in this way.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/231722490-7eeb540d-5004-424b-bca1-f29bc53fa899.png)\r\n", "date": "2023-04-13T09:51:14Z"}, {"author": "maliberty", "role": "assistant", "message": "what does the route guide look like for this wire?", "date": "2023-04-13T16:11:35Z"}, {"author": "oharboe", "role": "assistant", "message": "I know what is going on. That wire has a lot of flip-flops on it.\r\n\r\nThis is a holdover from FPGA design. In the FPGA design, we used global synthesis and we had a synchronous reset with a LARGE fan-out. That large fan-out was handled by adding a number of flip-flops to it so that the tools would be able to create a synchronous reset tree to deal with the fanout and reset congestion. This is congruent with the recommendation in Quartus to use the HyperFlex architecture where there are bypassable registers in the routing. To use those, you basically add a bunch of pipeline stages to your synchronous reset. Basically the more modern Intel FPGAs now recommend synchronous reset over asynchronous reset for this reason.\r\n\r\nhttps://www.intel.com/content/www/us/en/docs/programmable/683353/21-3/fpga-architecture-introduction.html\r\n\r\nThe above with the caveat that I'm not an FPGA expert when it comes to detail, I just write RTL, follow some high level guidelines, and the tools handle the rest...", "date": "2023-04-27T08:26:51Z"}], "date": "2023-04-13T09:51:14Z", "category": "Query", "subcategory": "Detailed routing strategy", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3216", "id": 3216, "title": "DRC errors in detailed routing - \"Metal spacing violation\"", "author": "oharboe", "description": "I think this is happening because two macros that need straight vertical wires between them don't have IO pins lined up and then the wires between the macros are criss-crossing.\r\n\r\n\r\nWhat is the difference and purpose of `MACRO_PLACE_HALO` vs `MACRO_PLACE_CHANNEL` and where do I use them, in the macro or where I'm using the macro from?\r\n\r\n\r\nSome thoughts on what I might do:\r\n\r\n- I could modify the halo macro to have a big enough \"halo\" (black area) where the wires can move horizontally to line up better with their destination pin in the other macro.\r\n- I could fix the io pin locations and floorplan so the router is able to use straight vertical wires instead of crisscrossing between two macros. This would reduce the need for a big halo.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233312554-d99551bf-439f-47f9-85da-21b601517284.png)\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I think this is happening because two macros that need straight vertical wires between them don't have IO pins lined up and then the wires between the macros are criss-crossing.\r\n\r\n\r\nWhat is the difference and purpose of `MACRO_PLACE_HALO` vs `MACRO_PLACE_CHANNEL` and where do I use them, in the macro or where I'm using the macro from?\r\n\r\n\r\nSome thoughts on what I might do:\r\n\r\n- I could modify the halo macro to have a big enough \"halo\" (black area) where the wires can move horizontally to line up better with their destination pin in the other macro.\r\n- I could fix the io pin locations and floorplan so the router is able to use straight vertical wires instead of crisscrossing between two macros. This would reduce the need for a big halo.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233312554-d99551bf-439f-47f9-85da-21b601517284.png)\r\n\r\n", "date": "2023-04-20T08:53:39Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nVariable description found here: https://openroad-flow-scripts.readthedocs.io/en/latest/user/FlowVariables.html#floorplan", "date": "2023-04-20T11:59:41Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that mpl distinguished halo vs channel but mpl2 just uses halo.  The distinction is that a channel is the space between two macros but the halo applies on all sides of the macro.\r\n\r\nI can't tell much from the picture.", "date": "2023-04-20T15:28:25Z"}, {"author": "maliberty", "role": "assistant", "message": "The setting are for x & y separately.   Usually they are the same", "date": "2023-04-24T17:49:01Z"}, {"author": "maliberty", "role": "assistant", "message": "Imagine channel=10 and halo=5.  Then macros must be 10 apart but standard cells must be 5 away from a macro.  It is moot with mpl2.", "date": "2023-04-24T19:04:55Z"}, {"author": "oharboe", "role": "assistant", "message": "Updated docs in pull request based on the above: https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1007", "date": "2023-04-25T06:41:38Z"}], "date": "2023-04-20T08:53:39Z", "category": "Runtime", "subcategory": "DRC violation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3217", "id": 3217, "title": "DRC error in detailed routing - Short", "author": "oharboe", "description": "What is detailed routing trying to do here? The grey area is a macro.\r\n\r\nIs the detailed route simply spilling onto the macro because it can't find a valid place to put the wire?\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233313803-be73a31c-255b-4857-acb3-d304cb37db11.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233314427-9f2f4378-db70-4f2f-bc54-c23118c5e2b9.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "What is detailed routing trying to do here? The grey area is a macro.\r\n\r\nIs the detailed route simply spilling onto the macro because it can't find a valid place to put the wire?\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233313803-be73a31c-255b-4857-acb3-d304cb37db11.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233314427-9f2f4378-db70-4f2f-bc54-c23118c5e2b9.png)\r\n", "date": "2023-04-20T08:57:03Z"}, {"author": "oharboe", "role": "assistant", "message": "Since no-one answers, I'm thinking I guessed right :-)", "date": "2023-04-24T13:49:43Z"}, {"author": "maliberty", "role": "assistant", "message": "Most likely (assuming the layers are blocked and this isn't just available resource).", "date": "2023-04-24T17:45:21Z"}], "date": "2023-04-20T08:57:03Z", "category": "Bug", "subcategory": "Routing violation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2790", "id": 2790, "title": "Inserting PDN takes a lot of time", "author": "oharboe", "description": "Is it expected that inserting PDN (last part of make floorplan) should take a lot of time for designs that start to approach 1mm^2 in ASAP7?\r\n\r\nIt would be helpful if \"make floorplan\" was faster, because then it is quicker to iterate on the floorplan, after which the build can normally be left alone without human interaction for longer runs.\r\n\r\nI ran it in the debugger and it looks like a lot of time is spent building this ShapeTree: https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L637 \r\n\r\nAfterwards, this line seems to almost always return false https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L640) \r\n\r\nI made a few fleeting vain attempts to rewrite the code, such that the common case, https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L627, returning false, would not require building the ShapeTree.\r\n\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Is it expected that inserting PDN (last part of make floorplan) should take a lot of time for designs that start to approach 1mm^2 in ASAP7?\r\n\r\nIt would be helpful if \"make floorplan\" was faster, because then it is quicker to iterate on the floorplan, after which the build can normally be left alone without human interaction for longer runs.\r\n\r\nI ran it in the debugger and it looks like a lot of time is spent building this ShapeTree: https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L637 \r\n\r\nAfterwards, this line seems to almost always return false https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L640) \r\n\r\nI made a few fleeting vain attempts to rewrite the code, such that the common case, https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L627, returning false, would not require building the ShapeTree.\r\n\r\n\r\n", "date": "2023-01-19T14:56:41Z"}, {"author": "maliberty", "role": "assistant", "message": "There could be a lot of factors.  Are you using the asap7 default pdn?\r\n@gadfort ", "date": "2023-01-19T16:24:27Z"}, {"author": "oharboe", "role": "assistant", "message": "Still running, 1 hr 35 minutes...\r\n\r\n```\r\n01:35:49 /OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad -exit -no_init ./scripts/pdn.tcl -metrics ./logs/asap7/doohickey/base/2_6_pdn.json\r\n```", "date": "2023-01-19T16:51:41Z"}, {"author": "maliberty", "role": "assistant", "message": "In asap7 the m1/m2 stripes introduce a ton of vias.  @gadfort could help skip the add_pdn_connect for M1/M2 or would that produce an error.  It wouldn't matter much for prototyping whether we have the vias or not.", "date": "2023-01-19T16:56:56Z"}, {"author": "gadfort", "role": "assistant", "message": "@oharboe @maliberty it shouldn't take that long, there has always been some inefficiency when building those obstruction sets and maybe it's a good idea to revisit how that is done and find a better solution that is faster.", "date": "2023-01-19T17:59:03Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @gadfort Example of ```[INFO PDN-0001] Inserting grid: top``` taking at least 12 hours, after which I stopped it. https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/779", "date": "2023-01-19T20:50:27Z"}, {"author": "oharboe", "role": "assistant", "message": "PDN insertion is MUCH faster than it used to be, but it can still be an issue.", "date": "2023-04-24T14:02:18Z"}], "date": "2023-01-19T14:56:41Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2821", "id": 2821, "title": "Slow detailed routing convergence", "author": "oharboe", "description": "I was curious what was difficult about detailed routing for a design, so I stopped detailed routing after 4 iterations, using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/791, then looked at 5_route_drc.rpt.\r\n\r\nHere it seems like there is a lot of congestion at the top of macros because the power strip is running inside the halo (?) of the macro.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215082762-af8767ce-7118-48cb-a7a3-c9913369defc.png)\r\n\r\nHowevever here is a macro, just like the one above where detailed routing doesn't seem to have a problem dealing with this issue:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215083592-634bcdef-9a15-45c7-ad5b-b34820f0a94e.png)\r\n\r\n\r\nPerhaps nothing is wrong here and it just takes a while to do detailed routing.\r\n\r\nIs there anything to learn or that I can do different here?", "content": [{"author": "oharboe", "role": "user", "message": "I was curious what was difficult about detailed routing for a design, so I stopped detailed routing after 4 iterations, using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/791, then looked at 5_route_drc.rpt.\r\n\r\nHere it seems like there is a lot of congestion at the top of macros because the power strip is running inside the halo (?) of the macro.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215082762-af8767ce-7118-48cb-a7a3-c9913369defc.png)\r\n\r\nHowevever here is a macro, just like the one above where detailed routing doesn't seem to have a problem dealing with this issue:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215083592-634bcdef-9a15-45c7-ad5b-b34820f0a94e.png)\r\n\r\n\r\nPerhaps nothing is wrong here and it just takes a while to do detailed routing.\r\n\r\nIs there anything to learn or that I can do different here?", "date": "2023-01-27T12:10:57Z"}, {"author": "maliberty", "role": "assistant", "message": "How many iterations does it take to complete?  In general drt is the slowest step of the flow but it also looks like something is going on here.\r\n\r\nIn the lower picture the wires appear to go straight in on m5 but in the upper the go up to a higher layer and then try to drop down (which is blocked by the strap).  I'm not clear why they can't go straight in from the image.  Can you tell?", "date": "2023-01-27T14:13:25Z"}, {"author": "oharboe", "role": "assistant", "message": "I can see the same problem on https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/asap7/mock-array-big\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215114565-abeebeab-8247-4fb0-81eb-8259fbad3390.png)\r\n\r\n\r\nZooming in, we can see that different metal is being used:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215114709-80ae1615-95c6-4bb3-bfaa-a25c3bc339b9.png)\r\n\r\n\r\nTo reproduce the image above, first build, but abort after 5 iterations in detailed routing, then load the 5_route_drc.rpt and zoom in:\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk generate_abstract\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk DETAILED_ROUTE_ARGS=\\\"-bottom_routing_layer M2 -top_routing_layer M7 -save_guide_updates -verbose 1 -droute_end_iter 5\\\"\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk\r\n```\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-01-27T14:48:33Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 I think looking at this issue in the context of asap7/mock-array-big fits with your other drt performance work.", "date": "2023-01-27T14:49:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Your pins are off the routing grid:\r\n![image](https://user-images.githubusercontent.com/761514/215116042-68838f95-3670-47af-8cc8-e03d6748a470.png)\r\n\r\nwhich I guess is why the router is gyrating to hit them.", "date": "2023-01-27T14:53:35Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 with the PRs from this morning this case now finishes with 0 drvs.  However it reaches 2 drvs by the end of iter 4 but takes until iter 13 to reach zero.  At the end of iter5 I see two cut spacing violations.  They both look easy to fix, eg\r\n![image](https://user-images.githubusercontent.com/761514/216147952-499d6ec6-11d2-4d60-b8e7-27cdf28104ef.png)\r\n\r\nyou should readily move the via to the right by one track.  I guess this is a costing issue.\r\n", "date": "2023-02-01T19:49:35Z"}, {"author": "antonblanchard", "role": "assistant", "message": "I missed this because it was hiding in discussions. I have noticed various issues with via spacing in drt, eg https://github.com/The-OpenROAD-Project/OpenROAD/issues/2827 and https://github.com/The-OpenROAD-Project/OpenROAD/pull/2844, so likely issues in both route cost and GC (drc).", "date": "2023-02-03T22:14:36Z"}, {"author": "oharboe", "role": "assistant", "message": "Near as I know all of these issues are resolved on master.", "date": "2023-04-24T13:59:25Z"}], "date": "2023-01-27T12:10:57Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2870", "id": 2870, "title": "Question about straight wire routing between macros", "author": "oharboe", "description": "Below are two macros next to eachother where I have mirrored the pins, so the connections are nice and horizontal.\r\n\r\nThe pins are on ASAP7 M4, but the route is on M2.\r\n\r\nLooking at the image, I'm curious as to why M4 wasn't just used in a straight line across? Why go via M2?\r\n\r\nThe reason I'm asking about this is that my design does detailed routing quickly when I scale it down, but as I scale up, add more macros and a wider data path, it seems like detailed routing has to spend more time(ca. 20x longer) getting signals from M2, to M4 and back to M2 to do the routing between macros. I believe there is non-linear increase(with datapath width) in complexity with getting signals from M4 to M2 and back to M2.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/217489650-65aa3930-5241-4c6f-affe-adc68a99a9be.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Below are two macros next to eachother where I have mirrored the pins, so the connections are nice and horizontal.\r\n\r\nThe pins are on ASAP7 M4, but the route is on M2.\r\n\r\nLooking at the image, I'm curious as to why M4 wasn't just used in a straight line across? Why go via M2?\r\n\r\nThe reason I'm asking about this is that my design does detailed routing quickly when I scale it down, but as I scale up, add more macros and a wider data path, it seems like detailed routing has to spend more time(ca. 20x longer) getting signals from M2, to M4 and back to M2 to do the routing between macros. I believe there is non-linear increase(with datapath width) in complexity with getting signals from M4 to M2 and back to M2.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/217489650-65aa3930-5241-4c6f-affe-adc68a99a9be.png)\r\n", "date": "2023-02-08T09:42:39Z"}, {"author": "maliberty", "role": "assistant", "message": "does this happen on the mock array?", "date": "2023-02-08T11:51:31Z"}, {"author": "maliberty", "role": "assistant", "message": "If you select one of the nets, in the inspector there is an option to show the route guide.  It would be interesting to see what the guide for one of these nets looks like.", "date": "2023-02-08T11:52:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The global router prefers to put wires on lower layers, which is a good strategy for standard cell connections.  It isn't so good here.\r\n\r\n@eder-matheus I think we should update the 3d embedding in grt to handle the case where the pins being connected are all at layer N or above to avoid layers below N if possible.  Would you take care of this or work with Luis or Arthur to do so.", "date": "2023-02-08T12:30:58Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@oharboe Could you try this branch: https://github.com/eder-matheus/OpenROAD/tree/grt_upper_layer_nets?", "date": "2023-02-13T22:01:21Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus he does not have access to the private repo.  Please sync it to public in a PR.", "date": "2023-02-13T22:02:18Z"}, {"author": "maliberty", "role": "assistant", "message": "If you had an obs that you couldn't go over or around then it could be an issue.  However it is similar to the clock net constraints we already have that are similar.  Probably we would need to introduce a costing scheme to allow out of range layers to be used in extreme cases but that seems like a separate enhancement.\r\n\r\nThe motivating case is simply two m4 pins that have an easy planar connection but we drop down to m2 for no good reason (the router prefers lower layers on the erroneous assumption that pins are on the lower layer).", "date": "2023-02-13T22:16:18Z"}, {"author": "oharboe", "role": "assistant", "message": "Master is MUCH better with this now. If the route is not straight, there's generally a reason, like powergrid in the way, buffers added at edge of design before pins, or something.", "date": "2023-04-24T13:58:40Z"}], "date": "2023-02-08T09:42:39Z", "category": "Runtime", "subcategory": "Routing problem", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2888", "id": 2888, "title": "Using deltaDebug.py to whittle down detailed routing example", "author": "oharboe", "description": "I have some violations that detailed routing isn't able to deal with, that I really think it should be able to deal with.\r\n\r\nNormally, deltaDebug.py needs an error message to look for to do it's bisection.\r\n\r\nHowever, a detailed route can succeed after 64 iterations, even if all violations are not sorted out, so there's no error message for  deltaDebug.py to use for it's bisection.\r\n\r\nTips?", "content": [{"author": "oharboe", "role": "user", "message": "I have some violations that detailed routing isn't able to deal with, that I really think it should be able to deal with.\r\n\r\nNormally, deltaDebug.py needs an error message to look for to do it's bisection.\r\n\r\nHowever, a detailed route can succeed after 64 iterations, even if all violations are not sorted out, so there's no error message for  deltaDebug.py to use for it's bisection.\r\n\r\nTips?", "date": "2023-02-13T06:53:31Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you use --use_stdout & --error_string to check the final drcs?", "date": "2023-02-13T07:36:26Z"}, {"author": "maliberty", "role": "assistant", "message": "You could make a temporary change to scripts/detail_route.tcl to call detailed_route_num_drvs and issue an error message if >0.  Then you could delta on that.", "date": "2023-02-13T16:26:01Z"}, {"author": "oharboe", "role": "assistant", "message": "Various bugs have been fixed and improvements made to deltaDebug.py since this post.", "date": "2023-04-24T13:57:57Z"}], "date": "2023-02-13T06:53:31Z", "category": "Runtime", "subcategory": "Detailed routing issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2927", "id": 2927, "title": "Iterating on top level floorplan with macro pin constraints", "author": "oharboe", "description": "I would like to iterate on the floorplan of the top level of our design. In doing so, I want to change the pin constraints for the macros used at the top level.\r\n\r\nHowever, ```make generate_abstract``` goes all the way to detailed routing before producing a .gds, .lef and .lib file. This takes a long time.\r\n\r\nIs there a way to run generate_abstract after IO pin placement on the macro without going through detailed route?\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I would like to iterate on the floorplan of the top level of our design. In doing so, I want to change the pin constraints for the macros used at the top level.\r\n\r\nHowever, ```make generate_abstract``` goes all the way to detailed routing before producing a .gds, .lef and .lib file. This takes a long time.\r\n\r\nIs there a way to run generate_abstract after IO pin placement on the macro without going through detailed route?\r\n", "date": "2023-02-21T13:16:45Z"}, {"author": "maliberty", "role": "assistant", "message": "The flow itself doesn't have a mechanism but the command should work at that point (though it hasn't been tested).  You could add a flow option if needed.", "date": "2023-02-21T17:05:39Z"}, {"author": "oharboe", "role": "assistant", "message": "Solution implemented: `make skip_cts skip_route generate_abstract`", "date": "2023-04-24T13:53:13Z"}], "date": "2023-02-21T13:16:45Z", "category": "Query", "subcategory": "Flow customization", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2925", "id": 2925, "title": "[ERROR GRT-0076] Net foo.bar\\[13\\] not properly covered.", "author": "oharboe", "description": "What does this error message mean?", "content": [{"author": "oharboe", "role": "user", "message": "What does this error message mean?", "date": "2023-02-20T20:29:28Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please respond", "date": "2023-02-21T04:06:30Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@oharboe That means the guides don't cover at least one pin of this net. I will update this error message to clarify what pin is not covered.\r\nCould you share what commit you are using in this run? This error should not be happening at all and could be a side effect of an update I've made.", "date": "2023-02-23T00:04:21Z"}, {"author": "oharboe", "role": "assistant", "message": "I don't recall the details, but this was fixed on master.", "date": "2023-04-24T13:52:41Z"}], "date": "2023-02-20T20:29:28Z", "category": "Runtime", "subcategory": "Error message clarification", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2804", "id": 2804, "title": "Problems with detailed routing violations with an array of macros", "author": "oharboe", "description": "In this pull request, I've added a design that has a problem with detailed routing.  I *suspect* there are some alignment requirements for macro positioning, but I don't understand what those requirements are.\r\n\r\nAny tips?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/782\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/213920736-10b8a7f8-0b71-466a-9357-178dbb9b52b7.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "In this pull request, I've added a design that has a problem with detailed routing.  I *suspect* there are some alignment requirements for macro positioning, but I don't understand what those requirements are.\r\n\r\nAny tips?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/782\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/213920736-10b8a7f8-0b71-466a-9357-178dbb9b52b7.png)\r\n", "date": "2023-01-22T14:22:43Z"}, {"author": "maliberty", "role": "assistant", "message": "My first guess would be to look at the macro pins and whether they are on grid", "date": "2023-01-22T15:22:54Z"}, {"author": "khaledhasanzami", "role": "assistant", "message": "Same issue, any solution reached yet?", "date": "2023-03-18T04:02:52Z"}, {"author": "oharboe", "role": "assistant", "message": "We're not seeing these problems currently with latest master", "date": "2023-04-24T13:52:21Z"}], "date": "2023-01-22T14:22:43Z", "category": "Runtime", "subcategory": "Routing violations", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3040", "id": 3040, "title": "Can I import yosys netlists in the openroad GUI and examine timing?", "author": "oharboe", "description": "I realize this is an open ended question: How can I import Yosys netlists into OpenROAD and identify any timing concerns in the design?\r\n\r\nIs there any documentation, tutorials or examples I can look at?\r\n\r\nI think I have seen an ability to select interesting paths and drill down using \"select\" (yosys command? opensta command?) and filter timing paths, but I don't recall where.\r\n\r\nIdeally using ORFS.\r\n\r\nThis would be more convenient than invoking yosys + open sta directly and interacting with the shell in either. ", "content": [{"author": "oharboe", "role": "user", "message": "I realize this is an open ended question: How can I import Yosys netlists into OpenROAD and identify any timing concerns in the design?\r\n\r\nIs there any documentation, tutorials or examples I can look at?\r\n\r\nI think I have seen an ability to select interesting paths and drill down using \"select\" (yosys command? opensta command?) and filter timing paths, but I don't recall where.\r\n\r\nIdeally using ORFS.\r\n\r\nThis would be more convenient than invoking yosys + open sta directly and interacting with the shell in either. ", "date": "2023-03-19T12:52:20Z"}, {"author": "maliberty", "role": "assistant", "message": "You can use 'make gui_floorplan' to open the results after the floorplan step which is pretty quick.  We could add an way to directly load the yosys output.  In either case you won't see any layout as nothing has been placed but you can use the usual timing path viewer.\r\n\r\nYou can't use yosys commands in OR as they are different tools.", "date": "2023-03-19T14:17:04Z"}, {"author": "maliberty", "role": "assistant", "message": "In the GUI from Windows->Timing Report you can get the path viewer.  When you select items in the path viewer you can see them in the inspector if you need to get more physical/netlist details.", "date": "2023-03-19T14:38:59Z"}, {"author": "maliberty", "role": "assistant", "message": "@vijayank88 are there any tutorials for timing debug?", "date": "2023-03-19T14:42:55Z"}, {"author": "maliberty", "role": "assistant", "message": "Fwiw https://www.youtube.com/watch?v=5lkKp-gL1Ow", "date": "2023-03-19T20:31:46Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nOnly after placement you can trace timing path in OpenROAD gui.\r\nYou can refer `logs/nangate45/gcd/base/2_1_floorplan.log` (gcd example). It is the first OpenSTA timing report post synthesis.\r\n", "date": "2023-03-20T07:45:18Z"}, {"author": "maliberty", "role": "assistant", "message": "You can really only do back annotation after you reach a fully routed result.  There is nothing to back annotate before that.  That is already supported in ORFS and the make gui_final will load the parasitics automatically.\r\n\r\nYou can generate timing report at any step of the flow.  Pre-placement you will get wire load models.  Later in the flow we use estimate_parasitics with -placement (after CTS) or -global_routing (after global routing).  Post-routing we use rcx extracted values.\r\n\r\nYosys 'schematics' are a capability of yosys and have nothing to do with OR.  The timing report already contains a list of all the cells/ports/nets so a schematic doesn't add much for a path.  In general generating schematics for arbitrary chunks of logic is hard and is essentially another P&R problem itself.  Even the proprietary tools aren't great at this beyond a small amount of logic.", "date": "2023-03-20T16:38:47Z"}, {"author": "maliberty", "role": "assistant", "message": "If you have layout you can use the inspector to look at an ITerm and there are buttons to show the fanin and fanout cones\r\n![image](https://user-images.githubusercontent.com/761514/226408803-ae3cef35-4855-4909-9786-e7b4f569a8af.png)\r\n", "date": "2023-03-20T16:40:55Z"}, {"author": "maliberty", "role": "assistant", "message": "Here is a tightly package cone on gcd:\r\n![image](https://user-images.githubusercontent.com/761514/226409401-157a4b9b-7384-4e75-b43c-ed0b6d099e6e.png)\r\n", "date": "2023-03-20T16:43:25Z"}, {"author": "maliberty", "role": "assistant", "message": "@oharboe is this sufficient info or do you need something more?", "date": "2023-03-23T21:44:30Z"}, {"author": "oharboe", "role": "assistant", "message": "Will open new more specific questions in the future as needed. This was helpful to improve our understanding meanwhile.", "date": "2023-04-24T13:51:46Z"}], "date": "2023-03-19T12:52:20Z", "category": "Query", "subcategory": "Timing analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3178", "id": 3178, "title": "How to attach/add a new load to a net?", "author": "fgaray", "description": "Hello,\r\n\r\nIn the DFT tool, I am trying to connect a new created scan_out port at the top level module with the scan out of a scan cell.\r\n\r\nThe scan out of the cell is previously connected to a functional path, so I am doing something like:\r\n\r\n```\r\nodb::dbNet* functional_net = scan_out_cell->getNet();\r\nscan_out_module->connect(functional_net);\r\n```\r\nWhen I print the BTerms of the net, I get both, the scan_out of the module and the previous connected port.\r\n\r\nHowever, I doesn't seems to work if I write the verilog, as I am only seeing it being connected to the original functional port instead of being connected to both of them: scan out and functional port.\r\n\r\nIs there something that am I missing?\r\n\r\nThanks,\r\nFelipe", "content": [{"author": "fgaray", "role": "user", "message": "Hello,\r\n\r\nIn the DFT tool, I am trying to connect a new created scan_out port at the top level module with the scan out of a scan cell.\r\n\r\nThe scan out of the cell is previously connected to a functional path, so I am doing something like:\r\n\r\n```\r\nodb::dbNet* functional_net = scan_out_cell->getNet();\r\nscan_out_module->connect(functional_net);\r\n```\r\nWhen I print the BTerms of the net, I get both, the scan_out of the module and the previous connected port.\r\n\r\nHowever, I doesn't seems to work if I write the verilog, as I am only seeing it being connected to the original functional port instead of being connected to both of them: scan out and functional port.\r\n\r\nIs there something that am I missing?\r\n\r\nThanks,\r\nFelipe", "date": "2023-04-14T01:55:40Z"}, {"author": "maliberty", "role": "assistant", "message": "What is the type of scan_out_module ?", "date": "2023-04-14T02:41:06Z"}, {"author": "maliberty", "role": "assistant", "message": "An issue with a test case might be better as it doesn't sound like an unusual operation.", "date": "2023-04-14T02:43:10Z"}, {"author": "fgaray", "role": "assistant", "message": "This was addressed in https://github.com/The-OpenROAD-Project/OpenROAD/issues/3183\r\n\r\nHowever, @maliberty was right in that ticket and we don't really need to punch a new port for scan out, we can just reuse the already existing port. So, we only need to punch a new scan out port if there is funcional logic before scan insertion and there are only ITerms in the net.", "date": "2023-04-20T19:25:28Z"}], "date": "2023-04-14T01:55:40Z", "category": "Query", "subcategory": "Usage question", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3033", "id": 3033, "title": "Using each tools (i.e. OpenDB, RePlAce, OpenDP..) as a submodule", "author": "ApeachM", "description": "Now I'd like to use OpenDB Framework and am searching for how to use each tool (i.e. OpenDB, OpenDB, etc) in **the OpenROAD repository** as a submodule for my open-source project.\r\n\r\nFor example, I'm using the OpenDB Framework as [this repository](https://github.com/ApeachM/EDA-API).\r\nIn that repository, I only can know how to use the [legacy one](https://github.com/The-OpenROAD-Project/OpenDB) as a submodule, but couldn't find how to set the OpenROAD repository as a submodule.\r\n\r\nI would be very appreciative if there is any recommended way to use each tool (like RePlAce, OpenDP, ..) in the OpenROAD repository which is now updated recently, and if you let me know them.\r\n \r\nThank you for reading my question.\r\n\r\nBest regards.\r\n\r\n", "content": [{"author": "ApeachM", "role": "user", "message": "Now I'd like to use OpenDB Framework and am searching for how to use each tool (i.e. OpenDB, OpenDB, etc) in **the OpenROAD repository** as a submodule for my open-source project.\r\n\r\nFor example, I'm using the OpenDB Framework as [this repository](https://github.com/ApeachM/EDA-API).\r\nIn that repository, I only can know how to use the [legacy one](https://github.com/The-OpenROAD-Project/OpenDB) as a submodule, but couldn't find how to set the OpenROAD repository as a submodule.\r\n\r\nI would be very appreciative if there is any recommended way to use each tool (like RePlAce, OpenDP, ..) in the OpenROAD repository which is now updated recently, and if you let me know them.\r\n \r\nThank you for reading my question.\r\n\r\nBest regards.\r\n\r\n", "date": "2023-03-18T11:26:42Z"}, {"author": "maliberty", "role": "assistant", "message": "We do not offer each tool as a submodule.  It is a lot of overhead to manage submodules (we did that initially).   You could make OR itself a submodule and link to the portions you wish.", "date": "2023-03-18T14:57:30Z"}, {"author": "maliberty", "role": "assistant", "message": "You should be able to reference our libraries from your app like\r\n\r\ntarget_link_libraries(<mystuff>\r\n  PUBLIC\r\n    odb\r\n)\r\n\r\nyou would need to include src/CMakeLists.txt", "date": "2023-03-18T21:08:56Z"}, {"author": "maliberty", "role": "assistant", "message": "@QuantamHD what do you think about applying your library separation work to mpl2?", "date": "2023-03-29T05:32:34Z"}, {"author": "ApeachM", "role": "assistant", "message": "@QuantamHD \r\n> @ApeachM I'll ask you for a favor back. If you do end up running mpl2 in your project can you contribute some C++ unit tests back to the project? https://github.com/The-OpenROAD-Project/OpenROAD/pull/3109/files#diff-24b9bab7be8fe0944c3ae7ccbd1d8700449a2e965d33d624fd7f8e3315ebdc9e\r\n\r\nI'd like to do the favor that you mentioned, but I have a question for you.\r\nNow I'm struggling to construct the unit test for mpl2, but there are several problems with making it.\r\n\r\n### 1. The construction dependency exists. \r\n\r\nAt least calling `void MacroPlacer2::init(sta::dbNetwork* network, odb::dbDatabase* db, sta::dbSta* sta, utl::Logger* logger, par::PartitionMgr* tritonpart)` function, I need `sta::dbNetwork` and `sta::dbSta` in the test code like below.\r\n\r\n```cpp\r\n#include <unistd.h>\r\n\r\n#include <memory>\r\n\r\n#include \"gtest/gtest.h\"\r\n#include \"mpl2/rtl_mp.h\"\r\n#include \"db_sta/dbSta.hh\"\r\n#include \"par/PartitionMgr.h\"\r\n#include \"utl/Logger.h\"\r\n\r\nnamespace mpl2 {\r\n\r\nTEST(Mpl2, CanConstruct)\r\n{\r\n  MacroPlacer2();\r\n}\r\n\r\nTEST(Mpl2, init){\r\n  MacroPlacer2 macro_placer_2{};\r\n\r\n  sta::dbSta* db_sta = new sta::dbSta;\r\n  sta::dbNetwork* db_network = db_sta->getDbNetwork();\r\n  odb::dbDatabase* db_database = odb::dbDatabase::create();\r\n  utl::Logger logger;\r\n  par::PartitionMgr partition_mgr;\r\n\r\n  /**\r\n   * Construct some data in dbDatabase and dbSta by parsing or calling their methods..\r\n   * */\r\n  partition_mgr.init(db_database, db_network, db_sta, &logger);\r\n  macro_placer_2.init(db_network, db_database, db_sta, &logger, &partition_mgr);\r\n}\r\n};  // namespace mpl2\r\n```\r\n\r\n\r\n\r\nBut at `line 21`: `sta::dbSta* db_sta = new sta::dbSta;` an error occurs with the below message.\r\n\r\n```shell\r\nOpenROAD/src/mpl2/test/cpp/mpl2_test.cc:21: undefined reference to `sta::dbSta::dbSta()'\r\n```\r\n\r\n\r\n\r\nI think this problem is due to a linking issue; `dbSta_lib` library doesn\u2019t link `dbSta.cc`, but links only `dbSta.hh`.\r\n\r\nThe `DbSta.cc` file is dependent on `ord::OpenRoad::Observer::Observer()`, so it\u2019s a pretty tricky thing to link with `mpl2_test` library and `sta::dbSta`. \r\n\r\nIs there any proposed method to use `sta::dbSta` in the `OpenROAD/src/mpl2/test/cpp/mpl2_test.cc` file? Unless, I think I can\u2019t make unit test for the one after `mpl2.init(sta::dbNetwork, ..., utl::Logger)`. \r\n\r\n\r\n\r\n### 2. Unless editing code in mpl2/src/*.cpp, there aren\u2019t many things to make unit test.\r\n\r\nFor making the unit test for `MacroPlacer2`, I can only call Constructor, Destructor, `init()`, and `place()`. \r\n\r\nEven though the assumption of linking the `mpl2_test` library and `hier_rtlmp.h, hier_rtlmp.cpp`, the `HierRTLMP` has public functions only for setters (`setGlobalFence`, \u2026,`setDebug`) and the top interface (`hierRTLMacroPlacer()`). \r\n\r\nTo test whether the `HierRTLMP` is properly working, I think I need to make some accessors to private variables (like `getGlobalFence` \u2026). But I can\u2019t assure you that it\u2019s okay for me to edit the codes in mpl2/src/*.cpp.\r\n\r\n### \r\n\r\n### Conclusion\r\n\r\nIf the first problem is solved, the second problem says there are not so many things to make unit test unless I edit the codes.\r\n\r\nI\u2019d like to ask how I can solve problem 1 (the linking issue for `sta::dbSta`), and whether it\u2019s okay or not to edit the code except the test code.\r\n\r\n\r\n\r\nThank you for reading my questions.", "date": "2023-04-17T06:25:48Z"}], "date": "2023-03-18T11:26:42Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2923", "id": 2923, "title": "Using a regex for set_io_pin_constraint -names", "author": "oharboe", "description": "How can I get a list of the names of the pins, such that I can pass in a list of names to set_io_pin_constraint that match a regex?\r\n\r\nSomething like:\r\n\r\n```\r\nset_io_pin_constraint ... -names [lsearch -all -inline $pins $regex]\r\n```\r\n\r\nAnswering myself..\r\n\r\nThis will do it:\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [sta::find_port_pins_matching $regex 1 0] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names [match_pins someregex]\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I get a list of the names of the pins, such that I can pass in a list of names to set_io_pin_constraint that match a regex?\r\n\r\nSomething like:\r\n\r\n```\r\nset_io_pin_constraint ... -names [lsearch -all -inline $pins $regex]\r\n```\r\n\r\nAnswering myself..\r\n\r\nThis will do it:\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [sta::find_port_pins_matching $regex 1 0] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names [match_pins someregex]\r\n```\r\n", "date": "2023-02-20T11:09:31Z"}, {"author": "maliberty", "role": "assistant", "message": "See discussion in https://github.com/The-OpenROAD-Project/OpenROAD/pull/2839", "date": "2023-02-20T15:44:06Z"}, {"author": "maliberty", "role": "assistant", "message": "The point being there isn't a default mechanism right now but rather a discussion of how best to do it.  get_pins will return a list of pins objects rather than names.  You could convert them to names or you could use the odb APIs to traverse the db yourself.", "date": "2023-02-20T16:42:41Z"}, {"author": "oharboe", "role": "assistant", "message": "This will do it:\r\n\r\n```\r\nset_io_pin_constraint ... -names [sta::find_port_pins_matching $regex 1 0]\r\n```\r\n\r\n", "date": "2023-02-21T11:57:03Z"}, {"author": "maliberty", "role": "assistant", "message": "What do you mean by \"verilog pin names\"?  Those look ok to me for instance pins", "date": "2023-02-21T17:07:56Z"}, {"author": "maliberty", "role": "assistant", "message": "Perhaps you want get_ports?  I would call those port names as Verilog includes the instance pins as well.", "date": "2023-02-21T17:57:12Z"}], "date": "2023-02-20T11:09:31Z", "category": "Query", "subcategory": "Usage question", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3148", "id": 3148, "title": "LoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'", "author": "oharboe", "description": "I'm getting this problem again while building OpenROAD locally.  I've tried recloning and deleting the entire ORFS folder, still no luck.\r\n\r\nAny ideas?\r\n\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 22.10\r\nRelease:\t22.10\r\nCodename:\tkinetic\r\n\r\n```\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n```\r\n\r\n```\r\n[deleted]\r\nFAILED: src/dpl/test/dpl_test src/dpl/test/dpl_test[1]_tests.cmake /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake \r\n: && /usr/bin/c++ -O3 -DNDEBUG  src/dpl/test/CMakeFiles/dpl_test.dir/dpl_test.cc.o -o src/dpl/test/dpl_test  -lgtest  -lgtest_main  src/dpl/libdpl_lib.a  src/odb/src/cdl/libcdl.a  src/odb/src/defin/libdefin.a  src/odb/src/def/libdef.a  src/odb/src/def/libdefzlib.a  src/odb/src/lefin/liblefin.a  src/odb/src/lef/liblef.a  src/odb/src/lef/liblefzlib.a  /usr/lib/x86_64-linux-gnu/libz.so  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/tm/libtm.a  /home/oyvind/ascenium/blah/tools/OpenROAD/src/sta/app/libOpenSTA.a  /usr/lib/x86_64-linux-gnu/libtcl.so  /usr/lib/x86_64-linux-gnu/libtclreadline.so  /usr/lib/x86_64-linux-gnu/libz.so  -ltcl  src/utl/utl.a  src/utl/libutl_lib.a  /home/oyvind/ascenium/blah/dependencies/lib/libspdlog.a && cd /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test && /home/oyvind/ascenium/blah/dependencies/bin/cmake -D TEST_TARGET=dpl_test -D TEST_EXECUTABLE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test -D TEST_EXECUTOR= -D TEST_WORKING_DIR=/home/oyvind/ascenium/blah/tools/OpenROAD/src/dpl/test -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=dpl_test_TESTS -D CTEST_FILE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/blah/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n[3/39] Automatic MOC and UIC for target gui\r\nninja: build stopped: subcommand failed.\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm getting this problem again while building OpenROAD locally.  I've tried recloning and deleting the entire ORFS folder, still no luck.\r\n\r\nAny ideas?\r\n\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 22.10\r\nRelease:\t22.10\r\nCodename:\tkinetic\r\n\r\n```\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n```\r\n\r\n```\r\n[deleted]\r\nFAILED: src/dpl/test/dpl_test src/dpl/test/dpl_test[1]_tests.cmake /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake \r\n: && /usr/bin/c++ -O3 -DNDEBUG  src/dpl/test/CMakeFiles/dpl_test.dir/dpl_test.cc.o -o src/dpl/test/dpl_test  -lgtest  -lgtest_main  src/dpl/libdpl_lib.a  src/odb/src/cdl/libcdl.a  src/odb/src/defin/libdefin.a  src/odb/src/def/libdef.a  src/odb/src/def/libdefzlib.a  src/odb/src/lefin/liblefin.a  src/odb/src/lef/liblef.a  src/odb/src/lef/liblefzlib.a  /usr/lib/x86_64-linux-gnu/libz.so  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/tm/libtm.a  /home/oyvind/ascenium/blah/tools/OpenROAD/src/sta/app/libOpenSTA.a  /usr/lib/x86_64-linux-gnu/libtcl.so  /usr/lib/x86_64-linux-gnu/libtclreadline.so  /usr/lib/x86_64-linux-gnu/libz.so  -ltcl  src/utl/utl.a  src/utl/libutl_lib.a  /home/oyvind/ascenium/blah/dependencies/lib/libspdlog.a && cd /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test && /home/oyvind/ascenium/blah/dependencies/bin/cmake -D TEST_TARGET=dpl_test -D TEST_EXECUTABLE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test -D TEST_EXECUTOR= -D TEST_WORKING_DIR=/home/oyvind/ascenium/blah/tools/OpenROAD/src/dpl/test -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=dpl_test_TESTS -D CTEST_FILE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/blah/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n[3/39] Automatic MOC and UIC for target gui\r\nninja: build stopped: subcommand failed.\r\n```\r\n", "date": "2023-04-10T12:07:24Z"}, {"author": "maliberty", "role": "assistant", "message": "I can't reproduce it but can you try changing https://github.com/The-OpenROAD-Project/OpenROAD/blob/8a49dff86645352d30780951b1146b31ef41b0f4/src/dpl/CMakeLists.txt#L58 to utl_lib and see if that helps.", "date": "2023-04-10T15:40:11Z"}, {"author": "maliberty", "role": "assistant", "message": "PR coming.  I'm not sure why it varies - perhaps different compilers?", "date": "2023-04-10T16:41:26Z"}], "date": "2023-04-10T12:07:24Z", "category": "Build", "subcategory": "Linking error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3121", "id": 3121, "title": "How much time for tritonroute to run the benchmarks of ispd2018 and ispd2019?", "author": "gilgamsh", "description": "I am using https://github.com/The-OpenROAD-Project/TritonRoute to run the benchmarks of ispd2018&2019. However I found Multithreaded acceleration is almost useless.  Does the legacy code in https://github.com/The-OpenROAD-Project/TritonRoute support Multithreaded acceleration ?", "content": [{"author": "gilgamsh", "role": "user", "message": "I am using https://github.com/The-OpenROAD-Project/TritonRoute to run the benchmarks of ispd2018&2019. However I found Multithreaded acceleration is almost useless.  Does the legacy code in https://github.com/The-OpenROAD-Project/TritonRoute support Multithreaded acceleration ?", "date": "2023-04-01T12:03:02Z"}, {"author": "maliberty", "role": "assistant", "message": "How are you enabling the multi threading? It should make a large difference", "date": "2023-04-01T14:14:33Z"}, {"author": "maliberty", "role": "assistant", "message": "The standalone TritonRoute is archived and not under any active development or support.  If that meets you needs that's fine but the integrated version in OR is continuing to be improved.", "date": "2023-04-02T14:28:05Z"}, {"author": "maliberty", "role": "assistant", "message": "Since you are interested in contests I would look at \r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/drt/test/ispd18_sample.tcl\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/drt/test/run-ispd.py\r\n\r\nas examples", "date": "2023-04-04T14:02:38Z"}], "date": "2023-04-01T12:03:02Z", "category": "Query", "subcategory": "Usage question", "Tool": "TritonPart"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3129", "id": 3129, "title": "[INFO GPL-0075] Routability numCall: 1 inflationIterCnt: 1 bloatIterCnt: 0", "author": "oharboe", "description": "So I thought my run was almost finished, it went fairly quickly for a while, but then it got stuck in \"Routeability\" below.\r\n\r\n5 minutes until it got to the GPL-0075 progress message, then stuck there for at least 30 minutes.\r\n\r\nWhat does this mean and what can I do about it?\r\n\r\nThe floorplan in my case looks quite reasonable and generous.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/580bd35a8b17f0ea7ff8afafb6cf6d23b757063e/src/gpl/src/routeBase.cpp#L557\r\n\r\n```\r\n[NesterovSolve] Iter: 370 overflow: 0.254754 HPWL: 19171375971\r\n[NesterovSolve] Iter: 380 overflow: 0.250836 HPWL: 18915207500\r\n[NesterovSolve] Iter: 390 overflow: 0.225598 HPWL: 18784146027\r\n[NesterovSolve] Iter: 400 overflow: 0.201047 HPWL: 18784861983\r\n[INFO GPL-0075] Routability numCall: 1 inflationIterCnt: 1 bloatIterCnt: 0\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "So I thought my run was almost finished, it went fairly quickly for a while, but then it got stuck in \"Routeability\" below.\r\n\r\n5 minutes until it got to the GPL-0075 progress message, then stuck there for at least 30 minutes.\r\n\r\nWhat does this mean and what can I do about it?\r\n\r\nThe floorplan in my case looks quite reasonable and generous.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/580bd35a8b17f0ea7ff8afafb6cf6d23b757063e/src/gpl/src/routeBase.cpp#L557\r\n\r\n```\r\n[NesterovSolve] Iter: 370 overflow: 0.254754 HPWL: 19171375971\r\n[NesterovSolve] Iter: 380 overflow: 0.250836 HPWL: 18915207500\r\n[NesterovSolve] Iter: 390 overflow: 0.225598 HPWL: 18784146027\r\n[NesterovSolve] Iter: 400 overflow: 0.201047 HPWL: 18784861983\r\n[INFO GPL-0075] Routability numCall: 1 inflationIterCnt: 1 bloatIterCnt: 0\r\n```\r\n", "date": "2023-04-04T12:37:57Z"}, {"author": "oharboe", "role": "assistant", "message": "A little bit of suspend/resume profiling using latest OpenROAD and release build...\r\n\r\nHmmm... curious. I don't think this is a performance problem, but there were a lot of exceptions thrown, so I had to turn off breakpoints on exceptions.\r\n\r\n```\r\n__cxa_throw (@__cxa_throw:3)\r\n\r\nsta::DmpAlg::findDriverParams(double) (.cold) (@sta::DmpAlg::findDriverParams(double) (.cold):14)\r\nsta::DmpPi::gateDelaySlew(double&, double&) (.cold) (@sta::DmpPi::gateDelaySlew(double&, double&) (.cold):50)\r\nsta::DmpCeffDelayCalc::gateDelay(sta::LibertyCell const*, sta::TimingArc const*, float const&, float, sta::Parasitic const*, float, sta::Pvt const*, sta::DcalcAnalysisPt const*, float&, float&) (@sta::DmpCeffDelayCalc::gateDelay(sta::LibertyCell const*, sta::TimingArc const*, float const&, float, sta::Parasitic const*, float, sta::Pvt const*, sta::DcalcAnalysisPt const*, float&, float&):88)\r\nsta::GraphDelayCalc1::findArcDelay(sta::LibertyCell*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::TimingArc*, sta::Parasitic*, float, sta::Vertex*, sta::Edge*, sta::Pvt const*, sta::DcalcAnalysisPt const*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findArcDelay(sta::LibertyCell*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::TimingArc*, sta::Parasitic*, float, sta::Vertex*, sta::Edge*, sta::Pvt const*, sta::DcalcAnalysisPt const*, sta::ArcDelayCalc*):112)\r\nsta::GraphDelayCalc1::findDriverEdgeDelays(sta::LibertyCell*, sta::Instance*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::Edge*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findDriverEdgeDelays(sta::LibertyCell*, sta::Instance*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::Edge*, sta::ArcDelayCalc*):105)\r\nsta::GraphDelayCalc1::findDriverDelays1(sta::Vertex*, bool, sta::MultiDrvrNet*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findDriverDelays1(sta::Vertex*, bool, sta::MultiDrvrNet*, sta::ArcDelayCalc*):108)\r\nsta::GraphDelayCalc1::findDriverDelays(sta::Vertex*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findDriverDelays(sta::Vertex*, sta::ArcDelayCalc*):63)\r\nsta::FindVertexDelays::visit(sta::Vertex*) (@sta::FindVertexDelays::visit(sta::Vertex*):74)\r\nsta::BfsIterator::visit(int, sta::VertexVisitor*) (@sta::BfsIterator::visit(int, sta::VertexVisitor*):71)\r\nsta::GraphDelayCalc1::findDelays(int) (@sta::GraphDelayCalc1::findDelays(int):47)\r\nsta::Sta::checkSlewLimitPreamble() (@sta::Sta::checkSlewLimitPreamble():82)\r\nrsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&) (@rsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&):65)\r\nrsz::Resizer::findResizeSlacks() (@rsz::Resizer::findResizeSlacks():24)\r\ngpl::TimingBase::updateGNetWeights(float) (@gpl::TimingBase::updateGNetWeights(float):18)\r\ngpl::NesterovPlace::doNesterovPlace(int) (@gpl::NesterovPlace::doNesterovPlace(int):1262)\r\n_wrap_replace_nesterov_place_cmd (@_wrap_replace_nesterov_place_cmd:20)\r\nTclNRRunCallbacks (@TclNRRunCallbacks:37)\r\n___lldb_unnamed_symbol1504 (@___lldb_unnamed_symbol1504:315)\r\nTcl_EvalEx (@Tcl_EvalEx:9)\r\n```\r\n\r\nOoops.... from within the debugger(attaching) to the release build, I ran into an recursive loop below and a SEGFAULT.\r\n\r\nCuriously, this infinite stack recursion does not appear with the debug build, which makes for an interesting debug exercise...\r\n\r\n```\r\nrsz::RepairDesign::repairNetJunc(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&) (@rsz::RepairDesign::repairNetJunc(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&):16)\r\nrsz::RepairDesign::repairNet(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&) (@rsz::RepairDesign::repairNet(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&):82)\r\n[deleted 100s if not 1000s of these]\r\n(@rsz::RepairDesign::repairNet(std::shared_ptr<rsz::BufferedNet>, sta::Pin const*, float, int, sta::Corner const*):29)\r\nrsz::RepairDesign::repairNet(sta::Net*, sta::Pin const*, sta::Vertex*, bool, bool, bool, int, bool, int&, int&, int&, int&, int&) (@rsz::RepairDesign::repairNet(sta::Net*, sta::Pin const*, sta::Vertex*, bool, bool, bool, int, bool, int&, int&, int&, int&, int&):356)\r\nrsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&) (@rsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&):195)\r\nrsz::Resizer::findResizeSlacks() (@rsz::Resizer::findResizeSlacks():24)\r\ngpl::TimingBase::updateGNetWeights(float) (@gpl::TimingBase::updateGNetWeights(float):18)\r\ngpl::NesterovPlace::doNesterovPlace(int) (@gpl::NesterovPlace::doNesterovPlace(int):1262)\r\n_wrap_replace_nesterov_place_cmd (@_wrap_replace_nesterov_place_cmd:20)\r\nTclNRRunCallbacks (@TclNRRunCallbacks:37)\r\n___lldb_unnamed_symbol1504 (@___lldb_unnamed_symbol1504:315)\r\nTcl_EvalEx (@Tcl_EvalEx:9)\r\nTcl_Eval (@Tcl_Eval:11)\r\nsta::sourceTclFile(char const*, bool, bool, Tcl_Interp*) (@sta::sourceTclFile(char const*, bool, bool, Tcl_Interp*):31)\r\nord::tclAppInit(Tcl_Interp*) (@ord::tclAppInit(Tcl_Interp*):128)\r\nTcl_MainEx (@Tcl_MainEx:111)\r\nmain (@main:742)\r\n__libc_start_call_main (@__libc_start_call_main:29)\r\n__libc_start_main_impl (@__libc_start_main@@GLIBC_2.34:43)\r\n_start (@_start:15)\r\n```\r\n\r\n\r\n", "date": "2023-04-04T13:20:25Z"}, {"author": "oharboe", "role": "assistant", "message": "Letting it run for a while, debug is MUCH slower than release, I see when I suspend in the debugger. There are 200000 nets to process in gen_brk_RSMT(), coeffADJ() is going through double loops for a total of 10000000 iterations...\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/229814542-0e59488f-6f61-46ca-9219-fe4cea5fb085.png)\r\n\r\n\r\n```\r\ngrt::FastRouteCore::getEdgeCapacity(grt::FrNet*, int, int, grt::EdgeDirection) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/FastRoute.cpp:592)\r\ngrt::FastRouteCore::coeffADJ(int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/RSMT.cpp:616)\r\ngrt::FastRouteCore::gen_brk_RSMT(bool, bool, bool, bool, bool) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/RSMT.cpp:662)\r\ngrt::FastRouteCore::run() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/FastRoute.cpp:766)\r\ngrt::GlobalRouter::findRouting(std::vector<grt::Net*, std::allocator<grt::Net*>>&, int, int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/GlobalRouter.cpp:397)\r\ngrt::GlobalRouter::globalRoute(bool) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/GlobalRouter.cpp:285)\r\ngpl::RouteBase::getGlobalRouterResult() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/routeBase.cpp:378)\r\ngpl::RouteBase::routability() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/routeBase.cpp:566)\r\ngpl::NesterovPlace::doNesterovPlace(int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/nesterovPlace.cpp:699)\r\ngpl::Replace::doNesterovPlace(int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/replace.cpp:343)\r\nreplace_nesterov_place_cmd() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/build/src/gpl/CMakeFiles/gpl.dir/replaceTCL_wrap.cxx:1740)\r\n::_wrap_replace_nesterov_place_cmd(ClientData, Tcl_Interp *, int, Tcl_Obj *const *) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/build/src/gpl/CMakeFiles/gpl.dir/replaceTCL_wrap.cxx:2190)\r\nTclNRRunCallbacks (@TclNRRunCallbacks:37)\r\n___lldb_unnamed_symbol1504 (@___lldb_unnamed_symbol1504:315)\r\nTcl_EvalEx (@Tcl_EvalEx:9)\r\nTcl_Eval (@Tcl_Eval:11)\r\nsta::sourceTclFile(char const*, bool, bool, Tcl_Interp*) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/sta/app/StaMain.cc:95)\r\n::tclAppInit(int &, char **, const char *, Tcl_Interp *) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/Main.cc:412)\r\nord::tclAppInit(Tcl_Interp*) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/Main.cc:440)\r\nTcl_MainEx (@Tcl_MainEx:111)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/229812113-27d8013b-9fbc-4727-93ee-18fed95d3702.png)\r\n\r\n", "date": "2023-04-04T13:37:17Z"}, {"author": "maliberty", "role": "assistant", "message": "You could try disabling each of these in turn to localize the cause\r\n```\r\nif {$::env(GPL_ROUTABILITY_DRIVEN)} {\r\n    append global_placement_args \" -routability_driven\"\r\n}\r\nif {$::env(GPL_TIMING_DRIVEN)} {\r\n    append global_placement_args \" -timing_driven\"\r\n}\r\n```\r\nThe stacks in rsz/sta are related to timing_driven.  If you see a stack in grt that is related to routability_driven.", "date": "2023-04-04T14:14:43Z"}], "date": "2023-04-04T12:37:57Z", "category": "Runtime", "subcategory": "Stuck in routine", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3124", "id": 3124, "title": "Problems building - undefined reference to `ord::getLogger()'", "author": "oharboe", "description": "Any idea what is going on here?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n[deleted]\r\nTIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/OpenROAD-flow-scripts/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "Any idea what is going on here?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n[deleted]\r\nTIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/OpenROAD-flow-scripts/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n```", "date": "2023-04-02T18:57:45Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nHave you removed `OpenROAD-flow-scripts/tools` directory before building again.\r\nSometimes it may cause the issue.\r\n@vvbandeira Can please check this?", "date": "2023-04-03T10:49:14Z"}, {"author": "maliberty", "role": "assistant", "message": "which binary is it building when the error happens?", "date": "2023-04-03T22:26:06Z"}, {"author": "oharboe", "role": "assistant", "message": "Rejoice! I finally got it to compile. I deleted the *entire* ORFS folder, recloned, reran sudo ./setup.sh and then the build worked.\r\n\r\nSo, somewhere inside the ORFS folder there was an out of date file that wasn't being built...\r\n\r\nIt would be nice to know what exactly is going wrong, but I guess that will have to wait until next time it breaks and I do some more investigations?", "date": "2023-04-04T06:46:28Z"}], "date": "2023-04-02T18:57:45Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3094", "id": 3094, "title": "Problems with etc/DependencyInstaller.sh and md5 on boost", "author": "oharboe", "description": "What's going on here?\r\n\r\n```bash\r\n$ etc/DependencyInstaller.sh -prefix=~/openroad-tools/ -common\r\n[deleted]\r\nLength: 136670223 (130M) [application/x-gzip]\r\nSaving to: \u2018boost_1_80_0.tar.gz.1\u2019\r\n\r\nboost_1_80_0.tar.gz 100%[===================>] 130,34M  2,37MB/s    in 65s\r\n\r\n2023-03-27 16:56:06 (2,02 MB/s) - \u2018boost_1_80_0.tar.gz.1\u2019 saved [136670223/136670223]\r\n\r\n+ md5sum -c /dev/fd/63\r\n++ echo '077f074743ea7b0cb49c6ed43953ae95  boost_1_80_0.tar.gz'\r\nboost_1_80_0.tar.gz: FAILED\r\nmd5sum: WARNING: 1 computed checksum did NOT match\r\n+ exit 1\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "What's going on here?\r\n\r\n```bash\r\n$ etc/DependencyInstaller.sh -prefix=~/openroad-tools/ -common\r\n[deleted]\r\nLength: 136670223 (130M) [application/x-gzip]\r\nSaving to: \u2018boost_1_80_0.tar.gz.1\u2019\r\n\r\nboost_1_80_0.tar.gz 100%[===================>] 130,34M  2,37MB/s    in 65s\r\n\r\n2023-03-27 16:56:06 (2,02 MB/s) - \u2018boost_1_80_0.tar.gz.1\u2019 saved [136670223/136670223]\r\n\r\n+ md5sum -c /dev/fd/63\r\n++ echo '077f074743ea7b0cb49c6ed43953ae95  boost_1_80_0.tar.gz'\r\nboost_1_80_0.tar.gz: FAILED\r\nmd5sum: WARNING: 1 computed checksum did NOT match\r\n+ exit 1\r\n```", "date": "2023-03-27T19:44:54Z"}, {"author": "oharboe", "role": "assistant", "message": "Hmm.... I suspect a manifestation of https://github.com/The-OpenROAD-Project/OpenROAD/issues/3096", "date": "2023-03-27T20:43:40Z"}, {"author": "vvbandeira", "role": "assistant", "message": "The problem is that the first download failed, and the file was not correctly deleted.\r\n\r\nNew download:\r\n```\r\nboost_1_80_0.tar.gz 100%[===================>] 130,34M  2,37MB/s    in 65s\r\n```\r\n\r\nSaving with the `.1` suffix:\r\n```\r\n2023-03-27 16:56:06 (2,02 MB/s) - \u2018boost_1_80_0.tar.gz.1\u2019 saved [136670223/136670223]\r\n```\r\n\r\nChecking against the file without the suffix:\r\n```\r\n+ md5sum -c /dev/fd/63\r\n++ echo '077f074743ea7b0cb49c6ed43953ae95  boost_1_80_0.tar.gz'\r\n```\r\n\r\nI will propose a PR that uses `mktemp` that should avoid this and the #3096 issues. You can manually delete the folder/offending file for now -- apologies for the inconvenience.", "date": "2023-03-28T14:26:27Z"}], "date": "2023-03-27T19:44:54Z", "category": "Build", "subcategory": "Dependency installation", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3073", "id": 3073, "title": "repair_design hanging", "author": "msingh9", "description": "I have \"repair_design\" to repair slew and cap, but this has been running for long time with no output. I think it is hanging. My design is not that big. I think it will be useful to get some sense of how much work has been completed, like work progress from these functions. Maybe I should file this a enhancement request? Is there a way to print some message while it is working?", "content": [{"author": "msingh9", "role": "user", "message": "I have \"repair_design\" to repair slew and cap, but this has been running for long time with no output. I think it is hanging. My design is not that big. I think it will be useful to get some sense of how much work has been completed, like work progress from these functions. Maybe I should file this a enhancement request? Is there a way to print some message while it is working?", "date": "2023-03-23T19:02:20Z"}, {"author": "maliberty", "role": "assistant", "message": "You could file it as an enhancement request or try to tackle it yourself and file a PR.", "date": "2023-03-23T20:58:43Z"}, {"author": "vijayank88", "role": "assistant", "message": "@msingh9 \r\nAre you using standalone OpenROAD or with OpenROAD-flow-scripts?", "date": "2023-03-24T13:28:43Z"}, {"author": "maliberty", "role": "assistant", "message": "How large is your design?", "date": "2023-03-24T20:49:08Z"}], "date": "2023-03-23T19:02:20Z", "category": "Runtime", "subcategory": "Hanging issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3044", "id": 3044, "title": "Custom Macro placement detailed route issue: Maze Route cannot find path of net", "author": "khaledhasanzami", "description": "I am using a custom macro placement script. Changing the macro position from default to any other formation causing error in detailed routing. \r\n\r\n`[ERROR DRT-0255] Maze Route cannot find path of net (some net) in worker of routeBox (34000 75000) (41000 45000)`\r\n\r\nIs it an algorithm error, any idea?\r\n", "content": [{"author": "khaledhasanzami", "role": "user", "message": "I am using a custom macro placement script. Changing the macro position from default to any other formation causing error in detailed routing. \r\n\r\n`[ERROR DRT-0255] Maze Route cannot find path of net (some net) in worker of routeBox (34000 75000) (41000 45000)`\r\n\r\nIs it an algorithm error, any idea?\r\n", "date": "2023-03-20T04:41:29Z"}, {"author": "vijayank88", "role": "assistant", "message": "Is automatic macro placement creating that error?", "date": "2023-03-20T09:27:43Z"}, {"author": "maliberty", "role": "assistant", "message": "This is a problem in detailed routing that would require a test case to investigate.  Can you provide one?", "date": "2023-03-20T17:10:03Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't expect this error from the router even with a bad macro placement.", "date": "2023-03-21T16:06:22Z"}, {"author": "msingh9", "role": "assistant", "message": "How do you do custom macro placement?", "date": "2023-03-24T18:51:22Z"}, {"author": "maliberty", "role": "assistant", "message": "It would be great to have a test case for this problem as is so we can fix it in addition to any workarounds in placement to avoid it.", "date": "2023-03-24T20:46:52Z"}], "date": "2023-03-20T04:41:29Z", "category": "Runtime", "subcategory": "Detailed routing failure", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3068", "id": 3068, "title": "openroad gui", "author": "msingh9", "description": "If ran openroad without gui, can I bring gui on later on after few steps from flow.tcl? I could save the design db and then open that design in gui, but I am just wondering if I can bring gui on from within openroad prompt.\r\n\r\n1) openroad -log log\r\n2) source <my_design>.tcl\r\n3) After few steps of flow\r\n4) I want to open the design in gui", "content": [{"author": "msingh9", "role": "user", "message": "If ran openroad without gui, can I bring gui on later on after few steps from flow.tcl? I could save the design db and then open that design in gui, but I am just wondering if I can bring gui on from within openroad prompt.\r\n\r\n1) openroad -log log\r\n2) source <my_design>.tcl\r\n3) After few steps of flow\r\n4) I want to open the design in gui", "date": "2023-03-23T01:22:37Z"}, {"author": "QuantamHD", "role": "assistant", "message": "You can open the gui at anytime with `gui::show`", "date": "2023-03-23T01:32:32Z"}, {"author": "msingh9", "role": "assistant", "message": "This works like a charm. Thank you for comment.", "date": "2023-03-23T18:41:25Z"}, {"author": "maliberty", "role": "assistant", "message": "FYI you can go the other way with \"Hide GUI\":\r\n![image](https://user-images.githubusercontent.com/761514/227319100-b11dc3c6-bf82-4464-aac2-318293c43c13.png)\r\n", "date": "2023-03-23T18:54:10Z"}], "date": "2023-03-23T01:22:37Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3029", "id": 3029, "title": "how to get timing path information", "author": "msingh9", "description": "I am interested to find out my worst timing path. I can run following command to get path objects, but how do I get full report like start point, logic gates in between and end point.\r\n\r\nopenroad> find_timing_paths -from * -to * -group_count 10 -sort_by_slack\r\n_d02fb74000000000_p_PathEnd _1005b54000000000_p_PathEnd _1040b44000000000_p_PathEnd _1006b54000000000_p_PathEnd _3071b64000000000_p_PathEnd _b0bfb54000000000_p_PathEnd _d0173d3f00000000_p_PathEnd _20cdb54000000000_p_PathEnd _9091bc4000000000_p_PathEnd _003db64000000000_p_PathEnd\r\n", "content": [{"author": "msingh9", "role": "user", "message": "I am interested to find out my worst timing path. I can run following command to get path objects, but how do I get full report like start point, logic gates in between and end point.\r\n\r\nopenroad> find_timing_paths -from * -to * -group_count 10 -sort_by_slack\r\n_d02fb74000000000_p_PathEnd _1005b54000000000_p_PathEnd _1040b44000000000_p_PathEnd _1006b54000000000_p_PathEnd _3071b64000000000_p_PathEnd _b0bfb54000000000_p_PathEnd _d0173d3f00000000_p_PathEnd _20cdb54000000000_p_PathEnd _9091bc4000000000_p_PathEnd _003db64000000000_p_PathEnd\r\n", "date": "2023-03-17T19:49:03Z"}, {"author": "maliberty", "role": "assistant", "message": "From the docs for find_timing_paths https://github.com/The-OpenROAD-Project/OpenSTA/blob/master/doc/OpenSTA.pdf\r\n\r\n```\r\nUse the get_property function to access properties of the paths.\r\n```\r\n", "date": "2023-03-17T22:51:11Z"}, {"author": "msingh9", "role": "assistant", "message": "Thank you very much for prompt response. This works fantastically. I wrote a small TCL function to nicely print complete timing path with the arrival time. Maybe, it will be helpful to someone. \r\n\r\n```\r\n### Document this ####\r\nUsage: report_timing_paths <args>\r\nExample: report_timing_paths -from * -to * -group_count 2 -sort_by_slack \r\n\r\nproc report_timing_paths {args} {\r\n    set path_ends [sta::find_timing_paths_cmd \"find_timing_paths\" args]\r\n    set pathno 1\r\n    foreach path_end $path_ends {\r\n        set start_clock [get_property [get_property $path_end startpoint_clock] full_name]\r\n        set start_point [get_property [get_property $path_end startPoint] full_name]\r\n        set end_point [get_property [get_property $path_end endPoint] full_name]\r\n        set end_clock [get_property [get_property $path_end endpoint_clock] full_name]\r\n        set slack [get_property $path_end slack]\r\n        puts \"Path ${pathno} : \"\r\n        puts \" [format \"%-80s\" $start_point], ${start_clock}\"\r\n        set points [get_property $path_end points]\r\n        foreach point $points {\r\n            set arrival [get_property $point arrival]\r\n            set pin [get_property [get_property $point pin] full_name]\r\n            set cslack [get_property $point slack]\r\n            puts \" [format \"%-80s\" $pin], $arrival\"\r\n        }\r\n        puts \" [format \"%-80s\" $end_point], ${end_clock}, [format \"%.3f\" $slack]\"\r\n        incr pathno\r\n        puts \"\"\r\n    }\r\n}\r\n```", "date": "2023-03-18T01:44:00Z"}], "date": "2023-03-17T19:49:03Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3037", "id": 3037, "title": "confusion over where worst slacks are stored and populated", "author": "cshi15", "description": "Hello, I'm an undergrad who has been trying to add some new functionality and thus trying to learn how the codebase works.\r\n\r\nRight now, I am working in Resizer and trying to write a function that will print out the top failing (negative slack) paths. I was studying the code for worst slacks by studying the `worstSlack` functions in `Search.cc` and `WorstSlack.cc`, and also the `findResizeSlacks()` function in `Resizer.cc`. Looking at the `findResizeSlacks1()` function in `Resizer.cc`, it appears to populate the `worst_slack_nets_` field. However, when I try to access `worst_slack_nets_` in my function, it appears to be empty.\r\n\r\nIs there something that I need to call before this to populate the field? Should I even be trying to access `worst_slack_nets_` at all? ", "content": [{"author": "cshi15", "role": "user", "message": "Hello, I'm an undergrad who has been trying to add some new functionality and thus trying to learn how the codebase works.\r\n\r\nRight now, I am working in Resizer and trying to write a function that will print out the top failing (negative slack) paths. I was studying the code for worst slacks by studying the `worstSlack` functions in `Search.cc` and `WorstSlack.cc`, and also the `findResizeSlacks()` function in `Resizer.cc`. Looking at the `findResizeSlacks1()` function in `Resizer.cc`, it appears to populate the `worst_slack_nets_` field. However, when I try to access `worst_slack_nets_` in my function, it appears to be empty.\r\n\r\nIs there something that I need to call before this to populate the field? Should I even be trying to access `worst_slack_nets_` at all? ", "date": "2023-03-18T15:58:20Z"}, {"author": "rovinski", "role": "assistant", "message": "@openroadie @maliberty any ideas here?\r\n\r\n@cshi15 maybe take a quick look at #3045 to see if there was anything useful there.\r\nAlso maybe if you can commit what you have to a fork then it will make it easier to understand what you have tried so far.", "date": "2023-03-20T17:58:05Z"}, {"author": "maliberty", "role": "assistant", "message": "I'm guessing you need to call Resizer::resizePreamble() first.", "date": "2023-03-20T18:06:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you put the code on a branch somewhere?  ", "date": "2023-03-20T22:30:32Z"}], "date": "2023-03-18T15:58:20Z", "category": "Query", "subcategory": "Code understanding", "Tool": "Gate Resizer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3030", "id": 3030, "title": "How to view macro to macro and macro to pin connections in openroad gui mode?", "author": "khaledhasanzami", "description": "I am having some error showing macros can not connect to some pins. \r\n\r\nI can't figure out how to view macro to macro connections (flightline) and macro to pin connections in gui mode. \r\n\r\nHelp me if anyone figured this out!", "content": [{"author": "khaledhasanzami", "role": "user", "message": "I am having some error showing macros can not connect to some pins. \r\n\r\nI can't figure out how to view macro to macro connections (flightline) and macro to pin connections in gui mode. \r\n\r\nHelp me if anyone figured this out!", "date": "2023-03-18T04:00:17Z"}, {"author": "vijayank88", "role": "assistant", "message": "Use `net` name to view in GUI using `Find` menu. It was explained here: https://openroad-flow-scripts.readthedocs.io/en/latest/tutorials/FlowTutorial.html#tracing-the-clock-tree", "date": "2023-03-18T04:58:27Z"}, {"author": "khaledhasanzami", "role": "assistant", "message": "I was looking for macro to macro connection. \r\n\r\nI got the solution though. \r\n\r\nWe have to select a macro, right click, highlight, go to all nets and chose a group.\r\n\r\nThank you for the suggestions though.\r\n", "date": "2023-03-20T04:11:08Z"}], "date": "2023-03-18T04:00:17Z", "category": "Query", "subcategory": "Visualization", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3004", "id": 3004, "title": "openRoad installation", "author": "msingh9", "description": "I was successfully able to run cmake and then make. However, output of cmake has following two messages which seems problematic to me. How do I resolve these?\r\n\r\n-- GUI is not enabled\r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS)\r\n\r\nI ran following command\r\ncmake .. -DCMAKE_INSTALL_PREFIX=/home/msingh/openRoad -DPYTHON_INCLUDE_DIR=$(python3 -c \"import sysconfig; print(sysconfig.get_path('include'))\") -DPYTHON_LIBRARY=$(python3 -c\\\r\n \"import sysconfig; print(sysconfig.get_config_var('LIBDIR'))\")\r\n\r\nI also ran make afterwards, which seems to finish. There are bunch of warnings but no error message. Where do I find the executable. I don't find it in CMAKE_INSTALL_PREFIX/bin directory.\r\n\r\nDoes it mean that installation didn't complete? \r\n\r\nI am looking for some help because I am stuck in the installation.\r\n\r\nI just cleared the buffer that has log, but I can redo those steps if you need the complete log output.", "content": [{"author": "msingh9", "role": "user", "message": "I was successfully able to run cmake and then make. However, output of cmake has following two messages which seems problematic to me. How do I resolve these?\r\n\r\n-- GUI is not enabled\r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS)\r\n\r\nI ran following command\r\ncmake .. -DCMAKE_INSTALL_PREFIX=/home/msingh/openRoad -DPYTHON_INCLUDE_DIR=$(python3 -c \"import sysconfig; print(sysconfig.get_path('include'))\") -DPYTHON_LIBRARY=$(python3 -c\\\r\n \"import sysconfig; print(sysconfig.get_config_var('LIBDIR'))\")\r\n\r\nI also ran make afterwards, which seems to finish. There are bunch of warnings but no error message. Where do I find the executable. I don't find it in CMAKE_INSTALL_PREFIX/bin directory.\r\n\r\nDoes it mean that installation didn't complete? \r\n\r\nI am looking for some help because I am stuck in the installation.\r\n\r\nI just cleared the buffer that has log, but I can redo those steps if you need the complete log output.", "date": "2023-03-11T18:18:02Z"}, {"author": "maliberty", "role": "assistant", "message": "Vtune is unimportant unless you are a developer of OR.\r\n\r\nThe GUI suggests that you don't have Qt installed.  Did you run the dependency installer?", "date": "2023-03-11T22:02:42Z"}, {"author": "msingh9", "role": "assistant", "message": "Thanks Maliberty for response.\r\n\r\nI followed the steps \"https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildLocally.html\" and was able to build with hiccups. \r\nHow do I make sure Qt is installed? BTW - I am trying to install it on Linux RH8. Is it supported platform?\r\n\r\nWhen I try to invoke it, I get this missing library error.\r\nopenroad -help\r\nopenroad: error while loading shared libraries: libortools.so.9: cannot open shared object file: No such file or directory\r\n", "date": "2023-03-11T23:00:36Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't know what OS you are on and you haven't included any logs.  If you look at https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/etc/DependencyInstaller.sh it you'll see it references Qt libraries.", "date": "2023-03-12T01:39:32Z"}, {"author": "msingh9", "role": "assistant", "message": "I am trying to build it on RH8. I am really stuck at this point now. I ran \"sudo ./DependencyInstaller.sh\" successfully. \r\n\r\nI can check that qt5 is installed.\r\n\r\n[msingh@lnx-msingh cv6 /tmp]$ sudo yum -y install qt5-srpm-macros.noarch\r\nLast metadata expiration check: 0:07:51 ago on Sun 12 Mar 2023 12:19:34 AM PST.\r\nPackage qt5-srpm-macros-5.12.5-3.el8.noarch is already installed.\r\nDependencies resolved.\r\nNothing to do.\r\n\r\nWhen I run cmake to create build files, I get that \"GUI is not enabled\". Is there a switch I need to pass to cmake. Here is my command and it's output.\r\n\r\n[msingh@lnx-msingh cv6 build]$ cmake .. -DPYTHON_INCLUDE_DIR=/cv6/tools2/tv2/release/Python3/3.9.0/include/python3.9 -DPYTHON_LIBRARY=/cv6/tools2/tv2/release/Python3/3.9.0/lib -Dortools_DIR=/opt/or-tools\r\n-- OpenROAD version: v2.0-7131-g1d8d24209\r\n-- System name: Linux\r\n-- Compiler: GNU 8.3.1\r\n-- Build type: RELEASE\r\n-- Install prefix: /usr/local\r\n-- C++ Standard: 17\r\n-- C++ Standard Required: ON\r\n-- C++ Extensions: OFF\r\n-- TCL library: /usr/lib64/libtcl.so\r\n-- TCL header: /usr/include/tcl.h\r\n-- TCL readline library: /usr/lib64/libtclreadline.so\r\n-- TCL readline header: /usr/include\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\")\r\n-- boost: 1.80.0\r\n-- spdlog: 1.8.1\r\n-- STA version: 2.4.0\r\n-- STA git sha: f84e617fc435d2d280a3f76045aa461afa386e2b\r\n-- System name: Linux\r\n-- Compiler: GNU 8.3.1\r\n-- Build type: RELEASE\r\n-- Build CXX_FLAGS: -O3 -DNDEBUG\r\n-- Install prefix: /usr/local\r\n-- TCL library: /usr/lib64/libtcl.so\r\n-- TCL header: /usr/include/tcl.h\r\n-- SSTA: 0\r\n-- STA executable: /dump/vlsidump302/msingh/OpenROAD/src/sta/app/sta\r\n-- GPU is not enabled\r\n-- GUI is not enabled\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization\r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS)\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found suitable version \"1.80.0\", minimum required is \"1.78\")\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization system thread\r\n-- TCL readline enabled\r\n-- Tcl Extended disabled\r\n-- Python3 disabled\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /dump/vlsidump302/msingh/OpenROAD/build\r\n", "date": "2023-03-12T08:30:45Z"}, {"author": "maliberty", "role": "assistant", "message": "What OS are you using?  Is qt in the default location?", "date": "2023-03-12T18:08:37Z"}, {"author": "vijayank88", "role": "assistant", "message": "@msingh9 \r\nCan you try docker based installation [steps](https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildWithDocker.html) ?", "date": "2023-03-13T11:13:08Z"}, {"author": "msingh9", "role": "assistant", "message": "Thank you everyone for support. I finally managed to make it work on RH8. It is exciting to see this tool in action. I really like to appreciate everyone effort to make this open-source magic.  I will post my results once I can make it work.", "date": "2023-03-17T02:30:06Z"}], "date": "2023-03-11T18:18:02Z", "category": "Installation", "subcategory": "Dependency issues", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3023", "id": 3023, "title": "Clock Division", "author": "Ziad-cyber", "description": "How to define a constraint on a generated clock that's divided by 2 from a master clock source?", "content": [{"author": "Ziad-cyber", "role": "user", "message": "How to define a constraint on a generated clock that's divided by 2 from a master clock source?", "date": "2023-03-16T05:07:36Z"}, {"author": "vijayank88", "role": "assistant", "message": "OpenROAD flow accepts all standard SDC formats. Just browse it and implement the same.\r\nOpenSTA doc found [here](https://github.com/The-OpenROAD-Project/OpenSTA/blob/master/doc/OpenSTA.pdf)", "date": "2023-03-16T06:43:46Z"}, {"author": "maliberty", "role": "assistant", "message": "In particular see create_generated_clock", "date": "2023-03-16T15:42:31Z"}], "date": "2023-03-16T05:07:36Z", "category": "Query", "subcategory": "Constraint definition", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3014", "id": 3014, "title": "Hold wns resulting infinite", "author": "khaledhasanzami", "description": "I was running the riscv model with default setup. When I was trying to find wns for hold after the full run (or in cts, route). It is returning as INF.\r\n\r\nCommand:\r\n```\r\nreport_worst_slack -min\r\n```\r\nReturns `worst slack INF`\r\n\r\n**pdk:** asap7\r\n**design:** riscv32i\r\n\r\nAny idea why is that and how to solve it?", "content": [{"author": "khaledhasanzami", "role": "user", "message": "I was running the riscv model with default setup. When I was trying to find wns for hold after the full run (or in cts, route). It is returning as INF.\r\n\r\nCommand:\r\n```\r\nreport_worst_slack -min\r\n```\r\nReturns `worst slack INF`\r\n\r\n**pdk:** asap7\r\n**design:** riscv32i\r\n\r\nAny idea why is that and how to solve it?", "date": "2023-03-14T04:18:29Z"}, {"author": "maliberty", "role": "assistant", "message": "In which PDK?  How did you load the design?  Please give specific steps to reproduce the issue.", "date": "2023-03-14T04:47:22Z"}, {"author": "maliberty", "role": "assistant", "message": "I guess you meant ```make gui_6_final.odb``` without the 'e'.  I get:\r\n\r\n```\r\n>>> report_worst_slack -min\r\nworst slack 40.29\r\n```\r\n\r\nWhat commit id are you using for OR & ORFS?  This would have worked better as an issue with the required info.", "date": "2023-03-14T15:36:19Z"}], "date": "2023-03-14T04:18:29Z", "category": "Runtime", "subcategory": "Timing analysis issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2972", "id": 2972, "title": "CMAKE errors while installing Openroad", "author": "mdzaki-git", "description": "HI All,\r\n\r\nAfter installing the dependencies we re stuck with cmake errors and would appreciate your help in fixing them. Attaching the error snippet for reference.\r\n<img width=\"1388\" alt=\"Cmake Error\" src=\"https://user-images.githubusercontent.com/68725332/223042193-39b47832-730e-4716-abce-421e7a44dfc8.png\">\r\n", "content": [{"author": "mdzaki-git", "role": "user", "message": "HI All,\r\n\r\nAfter installing the dependencies we re stuck with cmake errors and would appreciate your help in fixing them. Attaching the error snippet for reference.\r\n<img width=\"1388\" alt=\"Cmake Error\" src=\"https://user-images.githubusercontent.com/68725332/223042193-39b47832-730e-4716-abce-421e7a44dfc8.png\">\r\n", "date": "2023-03-06T07:10:56Z"}, {"author": "vijayank88", "role": "assistant", "message": "attach log `build_openroad.log`", "date": "2023-03-06T11:07:43Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "[openroad_build.log](https://github.com/The-OpenROAD-Project/OpenROAD/files/10897535/openroad_build.log)\r\n", "date": "2023-03-06T11:24:01Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "Following the install instruction mentioned on git hub.\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD", "date": "2023-03-06T11:25:48Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "Hi Vitor,\n\nRecloned the repository and tried again, getting below errors now.\n\n\n\nOn Mon, Mar 6, 2023 at 7:32\u202fPM Vitor Bandeira ***@***.***>\nwrote:\n\n> @vijayank88 <https://github.com/vijayank88>, this warning is not a\n> problem with CMake; this indicates that the folder is not a git repo.\n> @mdzaki-git <https://github.com/mdzaki-git>, can you make sure that the\n> clone ended fine? Maybe check the output of git status --long, the output\n> of this command should look something like this:\n>\n> > git status --long\n> On branch master\n> Your branch is up to date with 'origin/master'.\n> nothing to commit, working tree clean\n>\n> Also, try to do a clean build and in case of any errors upload the new log\n> file.\n>\n> ./etc/Build.sh -clean\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2972#discussioncomment-5216244>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AQMKUVEUTV4F7PDCH6F4IQ3W2XU6HANCNFSM6AAAAAAVQXMFI4>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> <The-OpenROAD-Project/OpenROAD/repo-discussions/2972/comments/5216244@\n> github.com>\n>\n", "date": "2023-03-06T14:45:10Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "[openroad_build.log](https://github.com/The-OpenROAD-Project/OpenROAD/files/10899446/openroad_build.log)\r\n", "date": "2023-03-06T14:51:36Z"}, {"author": "vvbandeira", "role": "assistant", "message": "Looks like you missed the `--recursive` when cloning. Please run\n\n```\ngit submodule update --init\n```\n\nIn the future you should use `git clone --recursive` to also clone the submodules `abc` and `sta`. ", "date": "2023-03-06T16:07:04Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "Hi All,\n\nThanks it works now.\n\nOn Mon, Mar 6, 2023 at 9:37\u202fPM Vitor Bandeira ***@***.***>\nwrote:\n\n> Looks like you missed the --recursive when cloning. Please run\n>\n> git submodule update --init\n>\n> In the future you should use git clone --recursive to also clone the\n> submodules abc and sta.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2972#discussioncomment-5217710>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AQMKUVH4OMC266IZBNAHYATW2YDTFANCNFSM6AAAAAAVQXMFI4>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> <The-OpenROAD-Project/OpenROAD/repo-discussions/2972/comments/5217710@\n> github.com>\n>\n", "date": "2023-03-08T07:11:38Z"}], "date": "2023-03-06T07:10:56Z", "category": "Installation", "subcategory": "Build issues", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2965", "id": 2965, "title": "Open a sample project in the OpenROAD GUI", "author": "vic4key", "description": "Hi everybody,\r\n\r\nI already build OpenROAD GUI to run on Ubuntu Linux. Now I'm looking for a sample project that can open directly via main menu `File > Open DB` in OpenROAD GUI (like the below image), I have spent a lot of time to find the way (reading read-me, watching video, etc) to do it, but I did not complete.\r\nI found a data test at https://github.com/TILOS-AI-Institute/MacroPlacement/tree/main/Flows/NanGate45/ariane133 but seems it cannot open directly by OpenROAD and maybe need to do several pre-processing steps before can open in OpenROAD GUI.\r\nCould you please help me to know how to do it or give me detail instructions to open this test data in the OpenROAD GUI?\r\nThanks.\r\n\r\n![sample](https://user-images.githubusercontent.com/5672864/222308822-2fc0204a-440c-4593-a04b-a4e82f591073.png)\r\n", "content": [{"author": "vic4key", "role": "user", "message": "Hi everybody,\r\n\r\nI already build OpenROAD GUI to run on Ubuntu Linux. Now I'm looking for a sample project that can open directly via main menu `File > Open DB` in OpenROAD GUI (like the below image), I have spent a lot of time to find the way (reading read-me, watching video, etc) to do it, but I did not complete.\r\nI found a data test at https://github.com/TILOS-AI-Institute/MacroPlacement/tree/main/Flows/NanGate45/ariane133 but seems it cannot open directly by OpenROAD and maybe need to do several pre-processing steps before can open in OpenROAD GUI.\r\nCould you please help me to know how to do it or give me detail instructions to open this test data in the OpenROAD GUI?\r\nThanks.\r\n\r\n![sample](https://user-images.githubusercontent.com/5672864/222308822-2fc0204a-440c-4593-a04b-a4e82f591073.png)\r\n", "date": "2023-03-02T02:01:20Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Hi @vic4key,\r\n\r\nIt's not clear what's failing, and what you would like to see? It would also be helpful if you uploaded the data you could upload your test data in a zip folder and post it here. So that we can debug th issue.", "date": "2023-03-02T02:23:23Z"}, {"author": "vijayank88", "role": "assistant", "message": "@vic4key \r\nSame design implemented in OpenROAD-flow-scripts. https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/nangate45/ariane136\r\nAll you need to install OpenROAD-flow-scripts and run the design and view it in OpenROAD GUI.\r\nInstallation document available here: https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildLocally.html", "date": "2023-03-02T10:39:33Z"}, {"author": "maliberty", "role": "assistant", "message": "cuda will make almost no difference to runtime.  I would start by running gcd as it is the smallest test case.", "date": "2023-03-02T15:20:27Z"}], "date": "2023-03-02T02:01:20Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2952", "id": 2952, "title": "Cannot build with CUDA", "author": "yathAg", "description": "I am trying to build Openroad with cmake .. -DGPU=true and I get the following output\r\n\r\n```\r\n-- GPU is enabled\r\n-- CUDA is found\r\n-- The CUDA compiler identification is NVIDIA 10.1.243\r\n-- Detecting CUDA compiler ABI info\r\n-- Detecting CUDA compiler ABI info - done\r\n-- Check for working CUDA compiler: /usr/bin/nvcc - skipped\r\n-- Detecting CUDA compile features\r\n-- Detecting CUDA compile features - done\r\n-- Found re2: /opt/or-tools/lib/cmake/re2/re2Config.cmake (found version \"9.0.0\") \r\n-- Found Clp: /opt/or-tools/lib/cmake/Clp/ClpConfig.cmake (found version \"1.17.7\") \r\n-- Found Cbc: /opt/or-tools/lib/cmake/Cbc/CbcConfig.cmake (found version \"2.10.7\") \r\n-- Found Eigen3: /usr/local/share/eigen3/cmake/Eigen3Config.cmake (found version \"3.4.0\") \r\n-- Found SCIP: /opt/or-tools/lib/cmake/scip/scip-config.cmake (found version \"8.0.1\") \r\n-- GUI is enabled\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization \r\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \r\n-- Found OpenMP: TRUE (found version \"4.5\")  \r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS) \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found suitable version \"1.80.0\", minimum required is \"1.78\")  \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization system thread \r\n-- TCL readline enabled\r\n-- Tcl Extended disabled\r\n-- Python3 enabled\r\n-- Configuring done\r\nCMake Warning (dev) in src/gpl/CMakeLists.txt:\r\n  Policy CMP0104 is not set: CMAKE_CUDA_ARCHITECTURES now detected for NVCC,\r\n  empty CUDA_ARCHITECTURES not allowed.  Run \"cmake --help-policy CMP0104\"\r\n  for policy details.  Use the cmake_policy command to set the policy and\r\n  suppress this warning.\r\n\r\n  CUDA_ARCHITECTURES is empty for target \"gpl\".\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\nCMake Error in src/gpl/CMakeLists.txt:\r\n  Target \"gpl\" requires the language dialect \"CUDA17\" .  But the current\r\n  compiler \"NVIDIA\" does not support this, or CMake does not know the flags\r\n  to enable it.\r\n\r\n\r\n-- Generating done\r\nCMake Generate step failed.  Build files cannot be regenerated correctly.\r\n```\r\n\r\nI have Cuda installed and on `nvidia-smi` I get \r\n\r\n```\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 525.85.12    Driver Version: 525.85.12    CUDA Version: 12.0     |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|                               |                      |               MIG M. |\r\n|===============================+======================+======================|\r\n|   0  NVIDIA GeForce ...  On   | 00000000:01:00.0  On |                  N/A |\r\n| N/A   51C    P5    18W / 115W |    187MiB /  6144MiB |     19%      Default |\r\n|                               |                      |                  N/A |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                                  |\r\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\r\n|        ID   ID                                                   Usage      |\r\n|=============================================================================|\r\n|    0   N/A  N/A      1211      G   /usr/lib/xorg/Xorg                 52MiB |\r\n|    0   N/A  N/A      1875      G   /usr/lib/xorg/Xorg                133MiB |\r\n+-----------------------------------------------------------------------------+\r\n```\r\n\r\nand on `nvcc -V`\r\n\r\n```\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2019 NVIDIA Corporation\r\nBuilt on Sun_Jul_28_19:07:16_PDT_2019\r\nCuda compilation tools, release 10.1, V10.1.243\r\n```\r\nAny help on how to get the setup working is really appreciated and thanks in advanced.\r\n\r\n\r\n\r\n\r\n\r\n", "content": [{"author": "yathAg", "role": "user", "message": "I am trying to build Openroad with cmake .. -DGPU=true and I get the following output\r\n\r\n```\r\n-- GPU is enabled\r\n-- CUDA is found\r\n-- The CUDA compiler identification is NVIDIA 10.1.243\r\n-- Detecting CUDA compiler ABI info\r\n-- Detecting CUDA compiler ABI info - done\r\n-- Check for working CUDA compiler: /usr/bin/nvcc - skipped\r\n-- Detecting CUDA compile features\r\n-- Detecting CUDA compile features - done\r\n-- Found re2: /opt/or-tools/lib/cmake/re2/re2Config.cmake (found version \"9.0.0\") \r\n-- Found Clp: /opt/or-tools/lib/cmake/Clp/ClpConfig.cmake (found version \"1.17.7\") \r\n-- Found Cbc: /opt/or-tools/lib/cmake/Cbc/CbcConfig.cmake (found version \"2.10.7\") \r\n-- Found Eigen3: /usr/local/share/eigen3/cmake/Eigen3Config.cmake (found version \"3.4.0\") \r\n-- Found SCIP: /opt/or-tools/lib/cmake/scip/scip-config.cmake (found version \"8.0.1\") \r\n-- GUI is enabled\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization \r\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \r\n-- Found OpenMP: TRUE (found version \"4.5\")  \r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS) \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found suitable version \"1.80.0\", minimum required is \"1.78\")  \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization system thread \r\n-- TCL readline enabled\r\n-- Tcl Extended disabled\r\n-- Python3 enabled\r\n-- Configuring done\r\nCMake Warning (dev) in src/gpl/CMakeLists.txt:\r\n  Policy CMP0104 is not set: CMAKE_CUDA_ARCHITECTURES now detected for NVCC,\r\n  empty CUDA_ARCHITECTURES not allowed.  Run \"cmake --help-policy CMP0104\"\r\n  for policy details.  Use the cmake_policy command to set the policy and\r\n  suppress this warning.\r\n\r\n  CUDA_ARCHITECTURES is empty for target \"gpl\".\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\nCMake Error in src/gpl/CMakeLists.txt:\r\n  Target \"gpl\" requires the language dialect \"CUDA17\" .  But the current\r\n  compiler \"NVIDIA\" does not support this, or CMake does not know the flags\r\n  to enable it.\r\n\r\n\r\n-- Generating done\r\nCMake Generate step failed.  Build files cannot be regenerated correctly.\r\n```\r\n\r\nI have Cuda installed and on `nvidia-smi` I get \r\n\r\n```\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 525.85.12    Driver Version: 525.85.12    CUDA Version: 12.0     |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|                               |                      |               MIG M. |\r\n|===============================+======================+======================|\r\n|   0  NVIDIA GeForce ...  On   | 00000000:01:00.0  On |                  N/A |\r\n| N/A   51C    P5    18W / 115W |    187MiB /  6144MiB |     19%      Default |\r\n|                               |                      |                  N/A |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                                  |\r\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\r\n|        ID   ID                                                   Usage      |\r\n|=============================================================================|\r\n|    0   N/A  N/A      1211      G   /usr/lib/xorg/Xorg                 52MiB |\r\n|    0   N/A  N/A      1875      G   /usr/lib/xorg/Xorg                133MiB |\r\n+-----------------------------------------------------------------------------+\r\n```\r\n\r\nand on `nvcc -V`\r\n\r\n```\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2019 NVIDIA Corporation\r\nBuilt on Sun_Jul_28_19:07:16_PDT_2019\r\nCuda compilation tools, release 10.1, V10.1.243\r\n```\r\nAny help on how to get the setup working is really appreciated and thanks in advanced.\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-02-27T18:14:29Z"}, {"author": "vvbandeira", "role": "assistant", "message": "Please install a newer version of `nvcc` and try again. As per NVIDIA docs, you will require at least v11; see more [here](https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#c-17-language-features).", "date": "2023-02-27T18:52:21Z"}, {"author": "maliberty", "role": "assistant", "message": "If we bump to cmake 3.10 then https://cmake.org/cmake/help/latest/module/FindCUDA.html suggests we can use the usual VERSION keyword.\r\n\r\nFYI - the use of CUDA is quite minimal and probably not worth the bother at this point.", "date": "2023-02-28T03:47:48Z"}], "date": "2023-02-27T18:14:29Z", "category": "Build", "subcategory": "Compiler version mismatch", "Tool": "Verilog to DB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2889", "id": 2889, "title": "[INFO GRT-0101] Running extra iterations to remove overflow - taking a long time", "author": "oharboe", "description": "What does this step actually do?\r\n\r\nAny hints on how to figure out what is going on here, what to look at?\r\n\r\nWhen I zoom in on the design, I see an ocean of thinly spread fiddlybits:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/218471305-7312e5f8-afbf-454d-9dbd-87a75d5197e5.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "What does this step actually do?\r\n\r\nAny hints on how to figure out what is going on here, what to look at?\r\n\r\nWhen I zoom in on the design, I see an ocean of thinly spread fiddlybits:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/218471305-7312e5f8-afbf-454d-9dbd-87a75d5197e5.png)\r\n", "date": "2023-02-13T13:34:13Z"}, {"author": "rovinski", "role": "assistant", "message": "GRT is the global router. It means your design is very dense (at least within some areas). It is attempting to assign nets to routing tracks, but there are too many nets within an area (overflow) so it is trying to reroute nets to avoid this.\r\n\r\nGRT runs for a fixed number of iterations before giving up and erroring if it can't resolve the overflow.\r\n\r\nThe best first thing to check is the global routing heatmap to see congestion hotspots. In your case, it is likely that the density is simply too high and you need to reduce the placement density %.", "date": "2023-02-13T16:26:57Z"}, {"author": "maliberty", "role": "assistant", "message": "You should also check how many buffers are being inserted as it possible that can cause extra congestion if you have very bad timing.", "date": "2023-02-13T16:31:20Z"}], "date": "2023-02-13T13:34:13Z", "category": "Runtime", "subcategory": "Global routing issue", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2868", "id": 2868, "title": "How do I figure out valid macro coordinates for manual placement?", "author": "oharboe", "description": "I'm trying to find out valid coordinates to put macros onto. The pins of the macros must align on the routing grid.\r\n\r\nFrom ASAP 7 LEF files, I see that pins are on M4 and M5 layer. From make_tracks.tcl, I see offsets and pitches.\r\n\r\nFrom that information, I should be able to come up with some formulae of valid macro positions....\r\n\r\nI just seem to be unable to connect the dots here to what the formulae should be:\r\n\r\nM4 is horizontal pins and M5 is vertical pins (or vice versa, I could see in the GUI, but I don't know how to tell from the LEF file):\r\n\r\n\r\nThe pins are from a macro, so I know the pin coordinates below are correct:\r\n\r\n```\r\n  PIN foo[50]\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M4 ;\r\n        RECT  144.818 86.208 145.152 86.232 ;\r\n    END\r\n  END foo[50]\r\n\r\n  PIN bar\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M5 ;\r\n        RECT  101.76 144.818 101.784 145.152 ;\r\n    END\r\n  END bar\r\n```\r\n\r\nfrom make_tracks.tcl:\r\n\r\n```\r\nmake_tracks M4  -x_offset [expr 0.009 * $multiplier] -x_pitch [expr 0.036 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\nmake_tracks M5  -x_offset [expr 0.012 * $multiplier] -x_pitch [expr 0.048 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm trying to find out valid coordinates to put macros onto. The pins of the macros must align on the routing grid.\r\n\r\nFrom ASAP 7 LEF files, I see that pins are on M4 and M5 layer. From make_tracks.tcl, I see offsets and pitches.\r\n\r\nFrom that information, I should be able to come up with some formulae of valid macro positions....\r\n\r\nI just seem to be unable to connect the dots here to what the formulae should be:\r\n\r\nM4 is horizontal pins and M5 is vertical pins (or vice versa, I could see in the GUI, but I don't know how to tell from the LEF file):\r\n\r\n\r\nThe pins are from a macro, so I know the pin coordinates below are correct:\r\n\r\n```\r\n  PIN foo[50]\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M4 ;\r\n        RECT  144.818 86.208 145.152 86.232 ;\r\n    END\r\n  END foo[50]\r\n\r\n  PIN bar\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M5 ;\r\n        RECT  101.76 144.818 101.784 145.152 ;\r\n    END\r\n  END bar\r\n```\r\n\r\nfrom make_tracks.tcl:\r\n\r\n```\r\nmake_tracks M4  -x_offset [expr 0.009 * $multiplier] -x_pitch [expr 0.036 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\nmake_tracks M5  -x_offset [expr 0.012 * $multiplier] -x_pitch [expr 0.048 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\n```\r\n", "date": "2023-02-07T21:15:00Z"}, {"author": "yupferris", "role": "assistant", "message": "@maliberty mentioned in our discussion yesterday that the routing grid is defined in the tech lef for the PDK. For ASAP7 we have to look at the [generated tech lef in ORFS](https://github.com/The-OpenROAD-Project/asap7/issues/19#issuecomment-1115712485) which should be `OpenROAD-flow-scripts/flow/platforms/asap7/lef/asap7_tech_1x_201209.lef`:\r\n\r\n```\r\nLAYER M4\r\n  TYPE ROUTING ;\r\n  DIRECTION HORIZONTAL ;\r\n PITCH 0.048 ;\r\n WIDTH 0.024 ;\r\n SPACING 0.024 ;\r\n\r\n OFFSET 0.003 ;\r\n\r\n AREA 0.008 ;\r\n\r\n PROPERTY LEF58_SPACING \"\r\n SPACING 0.024 ENDOFLINE 0.025 WITHIN 0.04 ENDTOEND 0.04 ; \" ;\r\n\r\n PROPERTY LEF58_WIDTHTABLE\r\n \" WIDTHTABLE 0.024 0.12 0.216 0.312 0.408 ; \" ;\r\n\r\n PROPERTY LEF58_CORNERSPACING \"\r\n CORNERSPACING CONVEXCORNER CORNERONLY 0.048\r\n WIDTH 0.0 SPACING 0.04 ;\r\n \" ;\r\n\r\n PROPERTY LEF58_EOLKEEPOUT \"\r\n EOLKEEPOUT 0.025 EXTENSION 0.048 0.02425 0.048 CORNERONLY ;\r\n \" ;\r\n\r\n  # spacing table is required for the rule that has wide metal requires a 72nm (288 scaled)\r\n  # spacing between wide and minimum metals \r\n\r\n  SPACINGTABLE\r\n PARALLELRUNLENGTH 0.0\r\n WIDTH 0.0 0.024\r\n WIDTH 0.025 0.072 ;\r\n\r\n PROPERTY LEF58_RIGHTWAYONGRIDONLY \"\r\n      RIGHTWAYONGRIDONLY ;\r\n \" ;\r\n\r\n PROPERTY LEF58_RECTONLY \"\r\n      RECTONLY ;\r\n \" ;\r\n\r\nEND M4\r\n```\r\n\r\nFrom this we can indeed see that M4 is horizontal and M5 is vertical (not shown above but the definitions for M5 are below those for M4 in the file). We can also see that the pitch is `0.048` which lines up with the `-y_pitch` arg in the `make_tracks.tcl` code above, among other things. However, I'm also a bit confused at how to use this information.\r\n\r\nSome specific questions:\r\n\r\n - Where does `0.012` for the `-y_offset` arg in `make_tracks.tcl` come from? I would have assumed it would be `0.003` from the `OFFSET` in the tech lef.\r\n - How does offset/pitch relate to macro position? I would assume that the bottom-left of a macro is the origin (0, 0), and that if we respect `PITCH` and `OFFSET` from the tech lef above for IO y-positions (eg. `my_io_y = OFFSET + some_integer * PITCH`) we can then place that macro at a position which ensures those constraints are still respected (eg. `my_macro_y = some_integer * PITCH - OFFSET`). Is this correct?\r\n\r\n\"Bonus\" question: What's the difference between the 1x and 4x .lef files in the PDK?\r\n", "date": "2023-02-08T09:26:16Z"}, {"author": "maliberty", "role": "assistant", "message": "In the LEF you can see the preferred routing direction from:\r\n```\r\nLAYER M4\r\n  DIRECTION HORIZONTAL ;\r\n\r\nLAYER M5\r\n  DIRECTION VERTICAL ;\r\n```\r\n\r\nIf you look at M1 you'll see it has an offset of 0 which makes the first track unusable (a wire would be half outside the bounds if that track were used).  So in make_tracks it was setup to make the first track usable by using a 1/2 width offset.  Similarly the other layers need adjusting.  Its mostly a matter of style and either could have been used.   \r\n\r\nM2 has a track pattern too complex to express in the LEF format so make_tracks.tcl is required in any case.\r\n\r\nIf you place a macro a (0,0) the tracks should align since they would be built the way way.  Moving the macro by a multiple of the pitch should keep it aligned.  You would use the m4 pitch vertically and the m5 pitch horizontally.\r\n\r\nYou can check your work by turning on m4 & m5 visibility in the GUI, turning on the display of the preferred tracks and look at your pins to see that the tracks go through the center.", "date": "2023-02-08T12:17:53Z"}, {"author": "maliberty", "role": "assistant", "message": "Bonus: 1X and 4X can be ignored as OR is only using 1X.  The origin is that some academic users may not have the advanced node licenses for proprietary tools required to use a 7nm process.  The 4X library makes it appear like a 28nm library by making all dimensions 4X larger as a workaround.  Since OR has no licensing 4X is not required.", "date": "2023-02-08T12:21:48Z"}], "date": "2023-02-07T21:15:00Z", "category": "Query", "subcategory": "Macro placement", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2880", "id": 2880, "title": "estimate_parasitics -global_routing on a post-global_route design loaded via read_db", "author": "nayiri-k", "description": "Is it possible to run `estimate_parasitics -global_routing` on a post-global_route design that's been loaded via the `read_db` command? As in, `global_route` has been run on the design before it was saved with `write_db`, but `global_route` has not been run in this current OpenROAD session. I keep getting this error:\r\n\r\n```\r\n>>> read_db post_global_route\r\n>>> estimate_parasitics -global_routing\r\n[ERROR RSZ-0005] Run global_route before estimating parasitics for global routing.\r\n```", "content": [{"author": "nayiri-k", "role": "user", "message": "Is it possible to run `estimate_parasitics -global_routing` on a post-global_route design that's been loaded via the `read_db` command? As in, `global_route` has been run on the design before it was saved with `write_db`, but `global_route` has not been run in this current OpenROAD session. I keep getting this error:\r\n\r\n```\r\n>>> read_db post_global_route\r\n>>> estimate_parasitics -global_routing\r\n[ERROR RSZ-0005] Run global_route before estimating parasitics for global routing.\r\n```", "date": "2023-02-10T00:39:08Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus I thought this was possible.  Please comment", "date": "2023-02-10T00:42:29Z"}, {"author": "maliberty", "role": "assistant", "message": "Are you using a very old version of OR for this?  The guides should be saved in the db.", "date": "2023-02-10T02:32:22Z"}, {"author": "maliberty", "role": "assistant", "message": "OR improves a lot over time so it is a good practice to test with a current version when you find a problem.", "date": "2023-02-10T05:31:49Z"}], "date": "2023-02-10T00:39:08Z", "category": "Runtime", "subcategory": "Global routing error", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2800", "id": 2800, "title": "[developer docs] Errors thrown in C++ test files?", "author": "cdleary", "description": "I presume for errors in C++ test code (e.g. fixtures and similar) it's ok to throw more \"bare\" errors (vs the scheme used with the logger and explicitly enumerated exceptions) -- that is, it's ok to throw a derived class from `std::runtime_error` if something goes wrong in test fixture scaffolding?\r\n\r\nIf so I'll update the developer docs with a small note, but I wanted to check this seemed ok.\r\n\r\nCC @maliberty ", "content": [{"author": "cdleary", "role": "user", "message": "I presume for errors in C++ test code (e.g. fixtures and similar) it's ok to throw more \"bare\" errors (vs the scheme used with the logger and explicitly enumerated exceptions) -- that is, it's ok to throw a derived class from `std::runtime_error` if something goes wrong in test fixture scaffolding?\r\n\r\nIf so I'll update the developer docs with a small note, but I wanted to check this seemed ok.\r\n\r\nCC @maliberty ", "date": "2023-01-20T22:08:22Z"}, {"author": "cdleary", "role": "assistant", "message": "(Or if non-exception-code is preferred in test code, that'd be fine too, just let me know what the preferred way to fatal-error-with-message would be.)", "date": "2023-01-20T22:10:17Z"}, {"author": "cdleary", "role": "assistant", "message": "(Or possibly we use logger with an error ID of 0 for a testing use cases like this?)\r\n\r\nApologies for the stream of conscious of possibilities. :-)", "date": "2023-01-20T22:17:10Z"}, {"author": "maliberty", "role": "assistant", "message": "What do you mean by \"explicitly enumerated exceptions\"?  In general I'm ok with your initial statement.", "date": "2023-01-21T02:06:33Z"}], "date": "2023-01-20T22:08:22Z", "category": "Query", "subcategory": "Best practices", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2754", "id": 2754, "title": "How can I find out where the routing congestion is?", "author": "oharboe", "description": "Any tips?\r\n\r\nI'm trying a larger version & different version of https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/743 and it fails in global routing.\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[WARNING GRT-0227] Reached 20 congestion iterations with less than 15% of reduction between iterations.\r\n[INFO GRT-0197] Via related to pin nodes: 1126254\r\n[INFO GRT-0198] Via related Steiner nodes: 39\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 2236520\r\n[INFO GRT-0112] Final usage 3D: 15578444\r\n[ERROR GRT-0118] Routing congestion too high. Check the congestion heatmap in the GUI.\r\nError: global_route.tcl, 19 GRT-0118\r\n```\r\n\r\nThe most recent .odb file to be written is 4_cts.odb, but when I load it and look at the routing congestion map, I don't see anything suspicious. Such arrays have a lot of routing to do, but the routing is simple conceptually: point to point between the array elements.\r\n\r\nI'm learning a few tricks with OpenROAD-flow-scripts:\r\n\r\n1. read documentation, if you can find it.\r\n2. read the OpenROAD-flow-scripts/flow/*.tcl script for the step. It is normally quite short. From here you can find out what reports are being saved and also what to search for in other examples.\r\n\r\n\r\nLooking at congestion.rpt, it is full of these. There's nothing in that area, just filler cells. Sometimes overflow is as high as 20.\r\n\r\n```\r\nviolation type: Horizontal congestion\r\n\tsrcs: \r\n\tcongestion information: capacity:16 usage:17 overflow:1\r\n\tbbox = ( 1544.4, 45.9 ) - ( 1544.94, 46.44) on Layer -\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Any tips?\r\n\r\nI'm trying a larger version & different version of https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/743 and it fails in global routing.\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[WARNING GRT-0227] Reached 20 congestion iterations with less than 15% of reduction between iterations.\r\n[INFO GRT-0197] Via related to pin nodes: 1126254\r\n[INFO GRT-0198] Via related Steiner nodes: 39\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 2236520\r\n[INFO GRT-0112] Final usage 3D: 15578444\r\n[ERROR GRT-0118] Routing congestion too high. Check the congestion heatmap in the GUI.\r\nError: global_route.tcl, 19 GRT-0118\r\n```\r\n\r\nThe most recent .odb file to be written is 4_cts.odb, but when I load it and look at the routing congestion map, I don't see anything suspicious. Such arrays have a lot of routing to do, but the routing is simple conceptually: point to point between the array elements.\r\n\r\nI'm learning a few tricks with OpenROAD-flow-scripts:\r\n\r\n1. read documentation, if you can find it.\r\n2. read the OpenROAD-flow-scripts/flow/*.tcl script for the step. It is normally quite short. From here you can find out what reports are being saved and also what to search for in other examples.\r\n\r\n\r\nLooking at congestion.rpt, it is full of these. There's nothing in that area, just filler cells. Sometimes overflow is as high as 20.\r\n\r\n```\r\nviolation type: Horizontal congestion\r\n\tsrcs: \r\n\tcongestion information: capacity:16 usage:17 overflow:1\r\n\tbbox = ( 1544.4, 45.9 ) - ( 1544.94, 46.44) on Layer -\r\n```\r\n\r\n", "date": "2023-01-14T17:52:45Z"}, {"author": "maliberty", "role": "assistant", "message": "The violations are related to routing congestion so they can occur over fill cells.  Do you not see congested areas in the heatmap?  I'm not sure what \"anything suspicious\" means.\r\n\r\nAlso you could play with the layer derates in grt.  Reducing them makes it more likely you'll get past grt but also more likely you'll have trouble in drt.  We set them more conservatively in the PDK.", "date": "2023-01-14T21:28:49Z"}, {"author": "maliberty", "role": "assistant", "message": "Something doesn't make sense.  It fails to route due to congestion but you don't see any in the congestion map.  If you load the congestion report in the drc viewer you should be able to see where the congestion is.", "date": "2023-01-14T22:45:22Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you show a local image of the area?  If you click the underlined heat map you'll get an options dialog.  You can investigate on what layers/directions the congestion is happening in.", "date": "2023-01-15T01:54:48Z"}, {"author": "oharboe", "role": "assistant", "message": "I'm going to investigate something else... Could it be that the PDN is overlaying the pins at the top of the macro?\r\n\r\nHere the blue line (from PDN) is not overlaying the pins at the top of the macro.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212607947-ac115c6b-dec6-47e2-87f1-17f8da092f63.png)\r\n\r\nThe vertical PDN lines go all the way to the top, but the horizontal not all the way to the right edge. That's an assymetry that I find puzzling.\r\n\r\nThe screenshot below is the upper right corner of the design I'm tinkering with:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212608610-bb1d7d24-7eb3-4d7f-9a1d-6815b7689330.png)\r\n\r\nThe routing congestion heat map shows that there's a lot of routing at the top (orange). There's nothing there...\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212611152-9861946b-337e-43cb-9153-671785c873a8.png)\r\n\r\n", "date": "2023-01-16T06:06:17Z"}, {"author": "oharboe", "role": "assistant", "message": "I scaled down the design (fewer wires) and then I can see gui_route.\r\n\r\nAlthough there's only horizontal routes between the inner macro's right edge and the top level design's right edge, there's this spagetti just before the input/outputs on the right side...\r\n\r\nNo wonder this doesn't work if you scale up the number of wires.\r\n\r\nI wonder what is going on here...\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212673682-743d7cf8-fe27-435a-9982-f709a7e6ef42.png)\r\n\r\nzoom in:\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212674518-062cec9c-ab11-4eeb-92d1-2902cbd6419a.png)\r\n\r\n\r\n\r\n\r\n```\r\nset sdc_version 2.0\r\ncreate_clock [get_ports clock] -period 4000 -waveform {0 2000}\r\n\r\nset clk_name  clock\r\nset clk_port_name clock\r\nset clk_period 250\r\nset clk_io_pct 0.2\r\n\r\nset clk_port [get_ports $clk_port_name]\r\n\r\nset non_clock_inputs [lsearch -inline -all -not -exact [all_inputs] $clk_port]\r\n\r\nset_input_delay  [expr $clk_period * $clk_io_pct] -clock $clk_name $non_clock_inputs\r\nset_output_delay [expr $clk_period * $clk_io_pct] -clock $clk_name [all_outputs]\r\n\r\n```", "date": "2023-01-16T12:08:44Z"}, {"author": "oharboe", "role": "assistant", "message": "@rovinski @maliberty  I've polished up a test case https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/764. \r\n\r\nThis array is open source and big enough to exhibit the problems, though less pronounced, seen above that will appear as you go from from mock-array-big to a bigger version, yet it will build in a more reasonable amount of time.\r\n\r\nIn this pull request, I increase the datapath from 8 to 64 bits, at which point global routing fails: https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/774\r\n\r\n\r\n", "date": "2023-01-17T10:13:50Z"}, {"author": "maliberty", "role": "assistant", "message": "I looked at https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/764.  I see a path like:\r\n![image](https://user-images.githubusercontent.com/761514/212960378-5042926e-b92f-4ea5-8493-1424c25f7294.png)\r\n\r\nThe input arrives at 50ps (20% of your 250ps clock period).   The capture clock path is at nearly 200ps with 44ps of hold from the liberty:\r\n```\r\n>>> report_checks -through hold2693/A -path_delay min -format full_clock_expanded\r\nStartpoint: io_insVertical_0_2[4] (input port clocked by clock)\r\nEndpoint: ces_2_7 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: min\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (propagated)\r\n  50.00   50.00 ^ input external delay\r\n   0.00   50.00 ^ io_insVertical_0_2[4] (in)\r\n  10.10   60.10 ^ hold3918/Y (BUFx2_ASAP7_75t_R)\r\n  11.76   71.86 ^ hold2691/Y (BUFx2_ASAP7_75t_R)\r\n  11.77   83.63 ^ hold3919/Y (BUFx2_ASAP7_75t_R)\r\n  11.61   95.24 ^ hold1087/Y (BUFx2_ASAP7_75t_R)\r\n  11.64  106.88 ^ hold2692/Y (BUFx2_ASAP7_75t_R)\r\n  11.81  118.69 ^ hold245/Y (BUFx2_ASAP7_75t_R)\r\n  11.74  130.43 ^ hold2693/Y (BUFx2_ASAP7_75t_R)\r\n  11.65  142.08 ^ hold1088/Y (BUFx2_ASAP7_75t_R)\r\n  11.75  153.83 ^ hold2694/Y (BUFx2_ASAP7_75t_R)\r\n  11.95  165.78 ^ input149/Y (BUFx2_ASAP7_75t_R)\r\n  12.04  177.82 ^ hold2695/Y (BUFx2_ASAP7_75t_R)\r\n  12.02  189.84 ^ hold1089/Y (BUFx2_ASAP7_75t_R)\r\n  12.10  201.94 ^ hold2696/Y (BUFx2_ASAP7_75t_R)\r\n  12.11  214.05 ^ hold246/Y (BUFx2_ASAP7_75t_R)\r\n  12.07  226.12 ^ hold2697/Y (BUFx2_ASAP7_75t_R)\r\n  11.89  238.01 ^ hold1090/Y (BUFx2_ASAP7_75t_R)\r\n  12.17  250.19 ^ hold2698/Y (BUFx2_ASAP7_75t_R)\r\n   0.05  250.24 ^ ces_2_7/io_ins_1[4] (Element)\r\n         250.24   data arrival time\r\n\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock source latency\r\n   0.00    0.00 ^ clock (in)\r\n  16.72   16.72 ^ wire1/Y (BUFx12f_ASAP7_75t_R)\r\n  74.94   91.66 ^ clkbuf_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  51.85  143.51 ^ clkbuf_2_1_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  44.16  187.67 ^ clkbuf_3_3__f_clock/Y (BUFx4_ASAP7_75t_R)\r\n   8.97  196.64 ^ ces_2_7/clock (Element)\r\n   0.00  196.64   clock reconvergence pessimism\r\n  44.22  240.86   library hold time\r\n         240.86   data required time\r\n---------------------------------------------------------\r\n         240.86   data required time\r\n        -250.24   data arrival time\r\n---------------------------------------------------------\r\n           9.39   slack (MET)\r\n```\r\n\r\nSo you'll need 200ps of hold buffering to make this pass.  BUFx2 is ~12ps so you need a good number to meet your hold constraint.  I don't see anything wrong here other than inputs that arrive quite early relative to the macro's requirements.\r\n\r\nThe clock path doesn't look unreasonable:\r\n![image](https://user-images.githubusercontent.com/761514/212962157-a2e3bc6e-911d-4243-a648-39f7e10343d2.png)\r\n", "date": "2023-01-17T16:55:02Z"}, {"author": "maliberty", "role": "assistant", "message": "The most forgiving would be to put no i/o timings at all aside from clock.  Then only paths internal to the block would be checked.  Another option would be to give different min/max timings where they are both forgiving.", "date": "2023-01-18T15:12:21Z"}], "date": "2023-01-14T17:52:45Z", "category": "Runtime", "subcategory": "Routing congestion", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2342", "id": 2342, "title": "Apple clang 14.0.0 (Xcode 14.0.1) M1 coredumps compiling abc .c files", "author": "stefanottili", "description": "Hi Folks,\r\n\r\njust a heads up for anybody using an Apple M1 with the most recent Xcode 14.0.1\r\n\r\nApple clang 14.0.0 randomly coredumps compiling abc .c files. But not deterministically, restarting ./build_openroad.sh will eventually compile some of them til it finally always coredumps compiling extraUtilMisc.c.\r\n\r\nI was able to compile OpenROAD on this machine before, but not with the latest and greatest Xcode.\r\n\r\nI'm curious whether there are other M1/Xcode users out there with similar experience.\r\n\r\nStefan\r\n\r\ngmake[2]: Entering directory '/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n[  0%] Building CXX object third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o\r\ncd /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build/third-party/abc && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  -I/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -Wall -Wno-array-bounds -Wno-nonnull -Wno-unused-variable -Wno-unused-function -Wno-write-strings -Wno-sign-compare -Wno-deprecated -Wno-c++11-narrowing -Wno-register -Wno-format -Wno-reserved-user-defined-literal -DABC_USE_STDINT_H=1 -DABC_MEMALIGN=4 -DABC_NAMESPACE=abc -fpermissive -DABC_USE_CUDD=1 -DABC_USE_PTHREADS -Wno-unused-but-set-variable -std=c++17 -MD -MT third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -MF CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o.d -o CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -c /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src/misc/extra/extraUtilMisc.c\r\nclang: error: unable to execute command: Segmentation fault: 11\r\nclang: error: clang frontend command failed due to signal (use -v to see invocation)\r\nApple clang version 14.0.0 (clang-1400.0.29.102)\r\nTarget: arm64-apple-darwin21.6.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n", "content": [{"author": "stefanottili", "role": "user", "message": "Hi Folks,\r\n\r\njust a heads up for anybody using an Apple M1 with the most recent Xcode 14.0.1\r\n\r\nApple clang 14.0.0 randomly coredumps compiling abc .c files. But not deterministically, restarting ./build_openroad.sh will eventually compile some of them til it finally always coredumps compiling extraUtilMisc.c.\r\n\r\nI was able to compile OpenROAD on this machine before, but not with the latest and greatest Xcode.\r\n\r\nI'm curious whether there are other M1/Xcode users out there with similar experience.\r\n\r\nStefan\r\n\r\ngmake[2]: Entering directory '/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n[  0%] Building CXX object third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o\r\ncd /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build/third-party/abc && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  -I/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -Wall -Wno-array-bounds -Wno-nonnull -Wno-unused-variable -Wno-unused-function -Wno-write-strings -Wno-sign-compare -Wno-deprecated -Wno-c++11-narrowing -Wno-register -Wno-format -Wno-reserved-user-defined-literal -DABC_USE_STDINT_H=1 -DABC_MEMALIGN=4 -DABC_NAMESPACE=abc -fpermissive -DABC_USE_CUDD=1 -DABC_USE_PTHREADS -Wno-unused-but-set-variable -std=c++17 -MD -MT third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -MF CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o.d -o CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -c /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src/misc/extra/extraUtilMisc.c\r\nclang: error: unable to execute command: Segmentation fault: 11\r\nclang: error: clang frontend command failed due to signal (use -v to see invocation)\r\nApple clang version 14.0.0 (clang-1400.0.29.102)\r\nTarget: arm64-apple-darwin21.6.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n", "date": "2022-10-07T18:03:01Z"}, {"author": "stefanottili", "role": "assistant", "message": "downgrading the command line tools to 13.4 allows to build the project", "date": "2022-10-12T03:33:06Z"}, {"author": "stefanottili", "role": "assistant", "message": "Here's some feedback from https://developer.apple.com/forums/thread/717259\r\n\r\n> It only happens with optimized code. An alternative workaround for building openroad is to patch the abc cmake file to include -g\r\n\r\nthird-party/CMakeLists.txt @@ -46,6 +46,10 @@ if (NOT USE_SYSTEM_ABC)\r\nreadline is not needed since we call abc from c++\r\nset(READLINE_FOUND FALSE)\r\n+# apple clang 14.0.0 seg faults on abc without -g +add_compile_options(\r\n$<$<CXX_COMPILER_ID:AppleClang>:-g>\r\n+) add_subdirectory(abc)\r\nendif()", "date": "2022-10-31T17:35:54Z"}, {"author": "stefanottili", "role": "assistant", "message": "clang-1400.0.29.202 as part of Xcode 14.1.0 compiles OpenRoad without issues", "date": "2023-01-12T16:14:47Z"}], "date": "2022-10-07T18:03:01Z", "category": "Build", "subcategory": "Compiler crash", "Tool": "ABC"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2679", "id": 2679, "title": "How can I run the OpenROAD GUI on Ubuntu locally and not in Docker?", "author": "oharboe", "description": "How can I install and run the OpenROAD GUI locally?\r\n\r\nI want the advantages of Docker, not having to install everything, easy to deploy upgrades, but when I run the OpenROAD GUI from docker, the experience is pretty good, but not quite as good as running locally on Ubuntu.\r\n\r\nAnother problem is that the OpenROAD-flow-scripts sets up a TON of environment variables, even if I had OpenROAD GUI installed locally, how could I get the envioronment set up correctly as I build various designs?\r\n\r\nExample of how I run the OpenROAD GUI in Docker. To run my own designs, I map results, log, objects, designs to my local drive by modifying the script in the github issue below.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/issues/2675#issue-1513733033\r\n\r\n\r\nIdeally I'd like a debian package for the OpenROAD GUI. It seems like it should be possible to host a debian package on github, but it is a bit of work, especially considering that it probably needs to be built nightly to be truely useful in the open soruce development process: https://assafmo.github.io/2019/05/02/ppa-repo-hosted-on-github.html\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I install and run the OpenROAD GUI locally?\r\n\r\nI want the advantages of Docker, not having to install everything, easy to deploy upgrades, but when I run the OpenROAD GUI from docker, the experience is pretty good, but not quite as good as running locally on Ubuntu.\r\n\r\nAnother problem is that the OpenROAD-flow-scripts sets up a TON of environment variables, even if I had OpenROAD GUI installed locally, how could I get the envioronment set up correctly as I build various designs?\r\n\r\nExample of how I run the OpenROAD GUI in Docker. To run my own designs, I map results, log, objects, designs to my local drive by modifying the script in the github issue below.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/issues/2675#issue-1513733033\r\n\r\n\r\nIdeally I'd like a debian package for the OpenROAD GUI. It seems like it should be possible to host a debian package on github, but it is a bit of work, especially considering that it probably needs to be built nightly to be truely useful in the open soruce development process: https://assafmo.github.io/2019/05/02/ppa-repo-hosted-on-github.html\r\n\r\n", "date": "2022-12-30T08:11:46Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Creating a snap package in the CI might be a good option https://ubuntu.com/tutorials/create-your-first-snap#1-overview", "date": "2022-12-30T08:29:00Z"}, {"author": "maliberty", "role": "assistant", "message": "You would run the [dependency installer](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/etc/DependencyInstaller.sh) and then compiler OR locally  (build_openroad.sh --local).\r\n\r\nI'm surprised using docker makes much of a difference for the GUI.  What do you see?\r\n\r\nYou can always mount your directory in docker so envars shouldn't be a big issue.", "date": "2022-12-30T19:05:17Z"}, {"author": "mithro", "role": "assistant", "message": "Have you tried the conda packages?", "date": "2022-12-30T22:30:48Z"}], "date": "2022-12-30T08:11:46Z", "category": "Installation", "subcategory": "Local installation", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2445", "id": 2445, "title": "rtl-mp", "author": "bittnada", "description": "Hello,\r\n\r\nI am trying to do floorplanning with OpenROAD with ISPD benchmark superblue16, but I am struggling with so many problems.\r\nI am quite new to this filed, so my knowledge for this filed is not high enough.\r\nI uploaded .lef, .def. and .v field given by ISPD and tried to do floorplan, but  this error line \"LEF MASTER ~CELL HAS NO LIBERTY CELL\" appeared and does not work at all. \r\nI am glad if anyone has any idea about this error and how to work with this kind of open bench mark.\r\n\r\nThanks", "content": [{"author": "bittnada", "role": "user", "message": "Hello,\r\n\r\nI am trying to do floorplanning with OpenROAD with ISPD benchmark superblue16, but I am struggling with so many problems.\r\nI am quite new to this filed, so my knowledge for this filed is not high enough.\r\nI uploaded .lef, .def. and .v field given by ISPD and tried to do floorplan, but  this error line \"LEF MASTER ~CELL HAS NO LIBERTY CELL\" appeared and does not work at all. \r\nI am glad if anyone has any idea about this error and how to work with this kind of open bench mark.\r\n\r\nThanks", "date": "2022-11-02T10:18:12Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't see any uploaded files.  Based on the message you have a cell called \"~CELL\" that exists in LEF but for which you have no .lib.", "date": "2022-11-02T11:22:13Z"}, {"author": "bittnada", "role": "assistant", "message": "Thanks to all of you\r\nI followed the order of commands that @QuantamHD  recommended and it worked although LEF file seems to have some syntax errors.\r\nGlobal placement (GPL) worked well, so I am very happy with this result. As @rovinski mentioned, global placement also worked without importing .lib file. Regarding with global placement, I have none of problem. I appreciate to all of you.\r\n\r\nI am also trying to run floorplanning with openroad as I want to follow the paper (https://vlsicad.ucsd.edu/Publications/Conferences/389/c389.pdf), embedded in the floorplan machine for openroad.\r\n\r\nAlthough the ISPD contest porblem is provided as \"floorplan\" finished, I want to re-floorplan with openroad and\r\ncompare the results between openroad and as it is given. \r\n\r\nI tried the commands as shown below,\r\n```\r\nread_verilog superblue16.v\r\nread_lef tech.lef\r\nread_lef superblue16.lef\r\nread_lib superblue16_Early.lib\r\nlink_design superblue16\r\nwrite_def superblue16.def\r\nread_def superblue16.def -floorplan_initialize\r\npartition_design -max_num_inst 1000 -min_num_inst 200 -max_num_macro 1 -min_num_macro 0 -net_threshold 0 -virtual_weight 500 -report_directory . -report_file report\r\n```\r\nAm I on the right track?\r\n\r\n", "date": "2022-11-03T06:46:16Z"}], "date": "2022-11-02T10:18:12Z", "category": "Runtime", "subcategory": "Error during execution", "Tool": "TritonPart"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2442", "id": 2442, "title": "Unable to find image 'openroad/flow-scripts:latest' locally", "author": "heaton56", "description": "After install, trying to run the docker I get the following. ny ideas?\r\n\r\nUnable to find image 'openroad/flow-scripts:latest' locally\r\ndocker: Error response from daemon: pull access denied for openroad/flow-scripts, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.", "content": [{"author": "heaton56", "role": "user", "message": "After install, trying to run the docker I get the following. ny ideas?\r\n\r\nUnable to find image 'openroad/flow-scripts:latest' locally\r\ndocker: Error response from daemon: pull access denied for openroad/flow-scripts, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.", "date": "2022-11-02T04:06:19Z"}, {"author": "maliberty", "role": "assistant", "message": "How did you 'install' it?  What command did you run that gave this message?", "date": "2022-11-02T08:44:52Z"}, {"author": "heaton56", "role": "assistant", "message": "Thanks for you response, but I decided to do a local install of OpenROAD-flow-scripts instead, since I would have a learning curve with docker. \r\n\r\n", "date": "2022-11-02T22:49:22Z"}], "date": "2022-11-02T04:06:19Z", "category": "Configuration", "subcategory": "Docker setup issue", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2330", "id": 2330, "title": "Compilation Error", "author": "gudeh", "description": "Hey guys! I am getting the following compilation error:\r\n\r\n> [100%] Linking CXX executable openroad\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/openroad.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG  -Wl,--export-dynamic -rdynamic CMakeFiles/openroad.dir/Design.cc.o CMakeFiles/openroad.dir/Tech.cc.o CMakeFiles/openroad.dir/OpenRoad.cc.o CMakeFiles/openroad.dir/Main.cc.o  -o openroad ifp/src/ifp.a openroad_swig.a gpl/gpl.a dpl/dpl.a dpo/dpo.a fin/fin.a rsz/src/rsz.a ppl/ppl.a stt/stt.a dbSta/src/dbSta.a ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/swig/tcl/odbtcl.a rcx/src/rcx.a rmp/src/rmp.a cts/src/cts.a grt/grt.a tap/src/tap.a gui/gui.a drt/drt.a dst/dst.a mpl/mpl.a mpl2/mpl2.a psm/src/psm.a ant/src/ant.a par/par.a utl/utl.a pdn/src/pdn.a ../third-party/abc/libabc.a /usr/lib/x86_64-linux-gnu/libtcl.so -lpthread /usr/lib/x86_64-linux-gnu/libtclreadline.so /usr/lib/x86_64-linux-gnu/libz.so _openroad_swig_py.a odb/src/swig/python/_odbpy.a ifp/src/_ifp_py.a /usr/lib/x86_64-linux-gnu/librt.so ppl/src/munkres/libMunkres.a -lm -ldl -lrt rsz/src/rsz.a grt/grt.a ant/src/ant.a grt/grt.a ant/src/ant.a dpl/dpl.a grt/src/fastroute/libFastRoute4.1.a stt/stt.a sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a mpl/src/ParquetFP/libParquetFP.a par/src/MLPart/libMLPart.a dbSta/src/dbSta.a gui/gui.a /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/defout/libdefout.a odb/src/lefout/liblefout.a odb/src/tm/libtm.a /usr/lib/x86_64-linux-gnu/libtcl.so odb/src/cdl/libcdl.a odb/src/swig/common/libodb_swig_common.a odb/src/defin/libdefin.a odb/src/def/libdef.a odb/src/def/libdefzlib.a odb/src/lefin/liblefin.a odb/src/zutil/libzutil.a utl/utl.a /usr/local/lib/libspdlog.a -lpthread odb/src/lef/liblef.a odb/src/lef/liblefzlib.a /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libpython3.8.so \r\n> /usr/bin/ld: drt/drt.a(TritonRoute.cpp.o): in function \\`boost::archive::basic_binary_iarchive<fr::frIArchive>::init()':\r\n> TritonRoute.cpp:(.text._ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv[_ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv]+0xc4): undefined reference to `boost::archive::detail::basic_iarchive::set_library_version(boost::archive::library_version_type)'\r\n> collect2: error: ld returned 1 exit status\r\n> make[2]: *** [src/CMakeFiles/openroad.dir/build.make:210: src/openroad] Error 1\r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make[1]: *** [CMakeFiles/Makefile2:449: src/CMakeFiles/openroad.dir/all] Error 2\r\n> make[1]: *** Waiting for unfinished jobs....\r\n> [100%] Linking CXX executable trTest\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src/drt && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/trTest.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG   CMakeFiles/trTest.dir/test/gcTest.cpp.o CMakeFiles/trTest.dir/test/fixture.cpp.o CMakeFiles/trTest.dir/test/stubs.cpp.o CMakeFiles/trTest.dir/__/gui/src/stub.cpp.o  -o trTest drt.a ../odb/src/db/libodb.a ../stt/stt.a ../dst/dst.a ../sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a ../dbSta/src/dbSta.a ../gui/gui.a ../odb/src/db/libodb.a ../odb/src/cdl/libcdl.a ../odb/src/defin/libdefin.a ../odb/src/def/libdef.a ../odb/src/def/libdefzlib.a ../odb/src/defout/libdefout.a ../odb/src/lefin/liblefin.a ../odb/src/lef/liblef.a ../odb/src/lef/liblefzlib.a ../odb/src/lefout/liblefout.a ../odb/src/tm/libtm.a ../odb/src/zutil/libzutil.a /usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../../src/sta/app/libOpenSTA.a ../utl/utl.a /usr/local/lib/libspdlog.a -lpthread /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a /usr/lib/x86_64-linux-gnu/libz.so \r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> [100%] Built target trTest\r\n> make[1]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make: *** [Makefile:133: all] Error 2\r\n\r\nThe error I pasted here is from a clean clone from the flow repository. I did the following commands to get to this error:\r\n\r\n> git clone --recursive https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts\r\n> cd OpenROAD-flow-scripts\r\n> sudo ./tools/OpenROAD/etc/DependencyInstaller.sh -dev\r\n> ./build_openroad.sh --local\r\n\r\nI noticed that if I run DepdencyInstaller multiple times it actually updates and compile Boost everytime. Not sure how to proceed, any help is welcome.", "content": [{"author": "gudeh", "role": "user", "message": "Hey guys! I am getting the following compilation error:\r\n\r\n> [100%] Linking CXX executable openroad\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/openroad.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG  -Wl,--export-dynamic -rdynamic CMakeFiles/openroad.dir/Design.cc.o CMakeFiles/openroad.dir/Tech.cc.o CMakeFiles/openroad.dir/OpenRoad.cc.o CMakeFiles/openroad.dir/Main.cc.o  -o openroad ifp/src/ifp.a openroad_swig.a gpl/gpl.a dpl/dpl.a dpo/dpo.a fin/fin.a rsz/src/rsz.a ppl/ppl.a stt/stt.a dbSta/src/dbSta.a ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/swig/tcl/odbtcl.a rcx/src/rcx.a rmp/src/rmp.a cts/src/cts.a grt/grt.a tap/src/tap.a gui/gui.a drt/drt.a dst/dst.a mpl/mpl.a mpl2/mpl2.a psm/src/psm.a ant/src/ant.a par/par.a utl/utl.a pdn/src/pdn.a ../third-party/abc/libabc.a /usr/lib/x86_64-linux-gnu/libtcl.so -lpthread /usr/lib/x86_64-linux-gnu/libtclreadline.so /usr/lib/x86_64-linux-gnu/libz.so _openroad_swig_py.a odb/src/swig/python/_odbpy.a ifp/src/_ifp_py.a /usr/lib/x86_64-linux-gnu/librt.so ppl/src/munkres/libMunkres.a -lm -ldl -lrt rsz/src/rsz.a grt/grt.a ant/src/ant.a grt/grt.a ant/src/ant.a dpl/dpl.a grt/src/fastroute/libFastRoute4.1.a stt/stt.a sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a mpl/src/ParquetFP/libParquetFP.a par/src/MLPart/libMLPart.a dbSta/src/dbSta.a gui/gui.a /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/defout/libdefout.a odb/src/lefout/liblefout.a odb/src/tm/libtm.a /usr/lib/x86_64-linux-gnu/libtcl.so odb/src/cdl/libcdl.a odb/src/swig/common/libodb_swig_common.a odb/src/defin/libdefin.a odb/src/def/libdef.a odb/src/def/libdefzlib.a odb/src/lefin/liblefin.a odb/src/zutil/libzutil.a utl/utl.a /usr/local/lib/libspdlog.a -lpthread odb/src/lef/liblef.a odb/src/lef/liblefzlib.a /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libpython3.8.so \r\n> /usr/bin/ld: drt/drt.a(TritonRoute.cpp.o): in function \\`boost::archive::basic_binary_iarchive<fr::frIArchive>::init()':\r\n> TritonRoute.cpp:(.text._ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv[_ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv]+0xc4): undefined reference to `boost::archive::detail::basic_iarchive::set_library_version(boost::archive::library_version_type)'\r\n> collect2: error: ld returned 1 exit status\r\n> make[2]: *** [src/CMakeFiles/openroad.dir/build.make:210: src/openroad] Error 1\r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make[1]: *** [CMakeFiles/Makefile2:449: src/CMakeFiles/openroad.dir/all] Error 2\r\n> make[1]: *** Waiting for unfinished jobs....\r\n> [100%] Linking CXX executable trTest\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src/drt && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/trTest.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG   CMakeFiles/trTest.dir/test/gcTest.cpp.o CMakeFiles/trTest.dir/test/fixture.cpp.o CMakeFiles/trTest.dir/test/stubs.cpp.o CMakeFiles/trTest.dir/__/gui/src/stub.cpp.o  -o trTest drt.a ../odb/src/db/libodb.a ../stt/stt.a ../dst/dst.a ../sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a ../dbSta/src/dbSta.a ../gui/gui.a ../odb/src/db/libodb.a ../odb/src/cdl/libcdl.a ../odb/src/defin/libdefin.a ../odb/src/def/libdef.a ../odb/src/def/libdefzlib.a ../odb/src/defout/libdefout.a ../odb/src/lefin/liblefin.a ../odb/src/lef/liblef.a ../odb/src/lef/liblefzlib.a ../odb/src/lefout/liblefout.a ../odb/src/tm/libtm.a ../odb/src/zutil/libzutil.a /usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../../src/sta/app/libOpenSTA.a ../utl/utl.a /usr/local/lib/libspdlog.a -lpthread /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a /usr/lib/x86_64-linux-gnu/libz.so \r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> [100%] Built target trTest\r\n> make[1]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make: *** [Makefile:133: all] Error 2\r\n\r\nThe error I pasted here is from a clean clone from the flow repository. I did the following commands to get to this error:\r\n\r\n> git clone --recursive https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts\r\n> cd OpenROAD-flow-scripts\r\n> sudo ./tools/OpenROAD/etc/DependencyInstaller.sh -dev\r\n> ./build_openroad.sh --local\r\n\r\nI noticed that if I run DepdencyInstaller multiple times it actually updates and compile Boost everytime. Not sure how to proceed, any help is welcome.", "date": "2022-10-04T23:34:22Z"}, {"author": "maliberty", "role": "assistant", "message": "What OS and what compiler?", "date": "2022-10-05T05:59:50Z"}, {"author": "maliberty", "role": "assistant", "message": "The log unfortunately doesn't have the boost version so I just added print that in the OR master branch.  What version of boost do you have installed?", "date": "2022-10-05T16:09:14Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi everyone, I was able to solve the issue by manually updating Boost. I used the links from [this stackoverflow page](https://stackoverflow.com/questions/2829523/upgrading-boost-version) and set the \"-prefix=\" with the same location my Boost was already installed. Also, I had to clean my previous build from OR.\r\n\r\nIt seems that for some reason the DependencyInstaller didn't fetch the correct Boost version to upgrade to.", "date": "2022-10-08T17:00:16Z"}, {"author": "maliberty", "role": "assistant", "message": "@vvbandeira any idea about \" for some reason the DependencyInstaller didn't fetch the correct Boost version to upgrade to.\"?", "date": "2022-10-08T17:28:00Z"}], "date": "2022-10-04T23:34:22Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2083", "id": 2083, "title": "How to contribute?", "author": "niv280", "description": "Hi, There is any way to contribute to the openRoad project?", "content": [{"author": "niv280", "role": "user", "message": "Hi, There is any way to contribute to the openRoad project?", "date": "2022-07-22T15:27:26Z"}, {"author": "QuantamHD", "role": "assistant", "message": "They accepted code changes through PRs.\r\n\r\nIs there something you are interested in working on? ", "date": "2022-07-22T15:32:58Z"}, {"author": "maliberty", "role": "assistant", "message": "We are glad to have contributors.  Do you want some suggestions or do you have something in mind?", "date": "2022-07-22T15:55:33Z"}, {"author": "maliberty", "role": "assistant", "message": "To help narrow it a bit are you more interested in development, testing, documentation, outreach?  If you are willing to share a bit about yourself it would help to find a task of appropriate complexity.\r\n\r\nOn the development side one idea that comes to mind is to improve write_abstract_lef written by @QuantamHD to give more precise obstructions.  I can describe that further if it is of interest.", "date": "2022-07-23T14:41:23Z"}, {"author": "maliberty", "role": "assistant", "message": "The LEF abstract is a physical model of a block that is intended to be used at a higher level in the hierarchy to model the interface and obstructions in the block.  The current code starts from https://github.com/The-OpenROAD-Project/OpenROAD/blob/c4a8479c341c31fd0db26a17f4a909f59285cf58/src/odb/src/lefout/lefout.cpp#L1213\r\n\r\nThe current code is rather simplistic in its modeling of obstructions.  If you look at lefout::getTechLayerObstructions it just gathers a set of layers that have any shapes on them and then blocks the entire layer.\r\n\r\nI think it would be better to use Boost polygon to OR together the shapes on each layer; do a bloat then shrink cycle to merge them into simpler shapes and then write out the result as the layer obstruction.  The amount of bloating could be a user control with a reasonable default (say 2*pitch). \r\n\r\nThe goal is to balance model size with precision.   Does this make sense?  I can go into more detail where needed.", "date": "2022-07-23T18:45:40Z"}, {"author": "stefanottili", "role": "assistant", "message": "Please keep in mind that there are two types of abstracts used by $$$ tools. The \u201ccutout\u201d where obstructions are cut out around pins and the \u201ccover everything\u201d where the pins are at the edges and the block is completely covered with obstruction. For the latter to work, the router has to be smart enough to route to covered pins and drc has to know that covered pins on the edge are ok too. It\u2019s good practice to have pins on the edge of blocks anyways.", "date": "2022-07-24T23:13:01Z"}, {"author": "maliberty", "role": "assistant", "message": "You can see gcd_abstract* in https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/odb/test for two examples.  \r\n\r\nThe idea of the bloat/shrink cycle is to merge nearby shapes.  I've tried to quickly illustrate it with:\r\n![image](https://user-images.githubusercontent.com/761514/180689779-273f4b34-d299-4251-a372-10437d7c246a.png)\r\n\r\nYou can learn about Boost polygon at https://www.boost.org/doc/libs/1_79_0/libs/polygon/doc/index.htm  (the docs aren't great).", "date": "2022-07-25T03:04:24Z"}, {"author": "maliberty", "role": "assistant", "message": "The red boxes in the middle image merge together into a single polygon", "date": "2022-07-25T03:06:22Z"}, {"author": "niv280", "role": "assistant", "message": "Hi, I will love to get some help in 2 issues.\r\nFirst I will need to import to boost::polygon library, in which file can I do it? Do other part of the code already import it?\r\n\r\nSecond, I having trouble to understand how can I test my change, I gather all the shapes into kind of list and I now write it into the lef file instead the whole block boundary bbox, but I probably got some mistake so I want to run some test to debug it.\r\nThere is any tutorial how can I do it? ", "date": "2022-07-29T14:35:08Z"}, {"author": "niv280", "role": "assistant", "message": "Hi, So I make some progress with the abstract lef.\r\nBut I encounter on some problem that I would like to get some help.\r\n\r\nSo I modify the abstract lef that in order to write the merge between all the rect that intersect ( after bloat ).\r\nTo demonstrate it I edit the picture from above:\r\n \r\n![image](https://user-images.githubusercontent.com/61157132/186626392-73d8ee81-e11e-4ba1-8e75-b7668e319b47.png)\r\n\r\nThe green rect is currently my OBS which isn't very efficient, but i didn't found any easy way to do it with the utils in the rect class.\r\n\r\nSo I am guessing that I need to go back to your first suggestion which is use boost polygon to OR all the rect, my problem is that is after that I will need to convert it back into different rects, there is any easy way to do that?\r\n\r\n", "date": "2022-08-25T09:20:27Z"}, {"author": "stefanottili", "role": "assistant", "message": "https://www.boost.org/doc/libs/1_79_0/libs/polygon/doc/gtl_polygon_90_set_concept.htm\n\nHave a look at get_rectangles and get_max_rectangles\n\nOn Aug 25, 2022, at 02:20, niv280 ***@***.***> wrote:\n\n\ufeff\nHi, So I make some progress with the abstract lef.\nBut I encounter on some problem that I would like to get some help.\n\nSo I modify the abstract lef that contained the merge between all the rect that intersect.\nTo demonstrate I edit the picture above:\n\n\n\nThe green rect is currently my OBS which isn't very efficient, but i didn't found any easy way to do it with the utils in the rect class.\nSo I am guessing that I need to go back to your first suggestion which is use boost polygon to OR all the rect, my problem is that is after that I will need to convert is back into different rects, there is any easy way to do that?\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you commented.", "date": "2022-08-25T11:53:53Z"}, {"author": "maliberty", "role": "assistant", "message": "get_rectangles  would be the better choice as get_max_rectangles may produce overlapping rectangles.  You an experiment with the slicing direction to see what produces a more minimal result.  My guess is the non-preferred routing direction will work best.", "date": "2022-08-25T15:30:22Z"}], "date": "2022-07-22T15:27:26Z", "category": "Query", "subcategory": "Contribution inquiry", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1951", "id": 1951, "title": "Is it possible to generate a static binary of OpenROAD?", "author": "TiagoAFontana", "description": "Hi all, I am trying to execute the OpenROAD in a cluster machine. However, in this machine, I am not able to install the dependencies to compile the OpenROAD or even use the docker image to run the OpenROAD.\r\n\r\nI was wondering if it is possible to set a cmake flag to generate a static binary (without any dependencies) for the OpenROAD project. With this, I will be able to run this binary on every machine that I need.\r\n\r\nDoes someone know how to do this? ", "content": [{"author": "TiagoAFontana", "role": "user", "message": "Hi all, I am trying to execute the OpenROAD in a cluster machine. However, in this machine, I am not able to install the dependencies to compile the OpenROAD or even use the docker image to run the OpenROAD.\r\n\r\nI was wondering if it is possible to set a cmake flag to generate a static binary (without any dependencies) for the OpenROAD project. With this, I will be able to run this binary on every machine that I need.\r\n\r\nDoes someone know how to do this? ", "date": "2022-06-09T19:33:11Z"}, {"author": "vijayank88", "role": "assistant", "message": "@vvbandeira  Any suggestion?", "date": "2022-06-24T10:07:30Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Bazel rules hdl supports fully static builds of openroad.\r\n\r\nJust download bazel, git clone https://github.com/hdl/bazel_rules_hdl\r\n\r\nAnd run bazel build @org_theopenroadproject//:openroad in the git repo. \r\n\r\nIt also statically builds the entire dependency chain of openroad from source.", "date": "2022-06-26T07:19:45Z"}], "date": "2022-06-09T19:33:11Z", "category": "Build", "subcategory": "Static binary generation", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1870", "id": 1870, "title": "Does detail router support spacing between different cut layers?", "author": "davidcarails", "description": "I have seen an example of a via/cut spacing rule between different layers.\r\nFor example : v4 space v5  >= 38\r\nCan/does the detailed router support this?", "content": [{"author": "davidcarails", "role": "user", "message": "I have seen an example of a via/cut spacing rule between different layers.\r\nFor example : v4 space v5  >= 38\r\nCan/does the detailed router support this?", "date": "2022-05-17T10:48:08Z"}, {"author": "maliberty", "role": "assistant", "message": "Its helpful to ask about a specific LEF rule but yes it does support cut spacing between layers.", "date": "2022-05-17T15:18:27Z"}, {"author": "maliberty", "role": "assistant", "message": "![image](https://user-images.githubusercontent.com/761514/169117659-453ea3a8-10cb-4794-bb41-16558182e3f8.png)\r\n", "date": "2022-05-18T18:25:06Z"}], "date": "2022-05-17T10:48:08Z", "category": "Query", "subcategory": "Tool capability", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1871", "id": 1871, "title": "Support for MEOL layer?", "author": "GuzTech", "description": "Hello everyone!\r\n\r\nI'm in the process of bringing up a new platform which is going well. I am running into a problem with a local interconnect layer which is specified as a `MASTERSLICE` with `LEF58_TYPE` = `MEOL`, so it is not specified as a `ROUTING` layer as is the case with the sky130 PDK. OpenDB complains that there is a parse mismatch for this `lil` layer.\r\n\r\nIf I add this `lil` layer as a routing layer to `make_tracks.tcl` then OpenDB complains that it is not a routing layer. If I don't add `lil` as a routing layer, then TritonRoute gives an error that it cannot find layer `lil` for viarule that connects `lil` to the first metal layer.\r\n\r\nDid anyone else run into a similar problem? If so, how did you solve it?", "content": [{"author": "GuzTech", "role": "user", "message": "Hello everyone!\r\n\r\nI'm in the process of bringing up a new platform which is going well. I am running into a problem with a local interconnect layer which is specified as a `MASTERSLICE` with `LEF58_TYPE` = `MEOL`, so it is not specified as a `ROUTING` layer as is the case with the sky130 PDK. OpenDB complains that there is a parse mismatch for this `lil` layer.\r\n\r\nIf I add this `lil` layer as a routing layer to `make_tracks.tcl` then OpenDB complains that it is not a routing layer. If I don't add `lil` as a routing layer, then TritonRoute gives an error that it cannot find layer `lil` for viarule that connects `lil` to the first metal layer.\r\n\r\nDid anyone else run into a similar problem? If so, how did you solve it?", "date": "2022-05-17T11:56:24Z"}, {"author": "maliberty", "role": "assistant", "message": "Please include the odb message.  You should not add tracks if it is not a routing layer.", "date": "2022-05-17T15:19:41Z"}, {"author": "maliberty", "role": "assistant", "message": "We need to add support for MEOL.  You can workaround it my making it a masterslice layer temporarily.", "date": "2022-05-17T22:07:26Z"}], "date": "2022-05-17T11:56:24Z", "category": "Feature Request", "subcategory": "Add MEOL layer support", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1732", "id": 1732, "title": "Can the grid/clips in the TritonRoute be exported?", "author": "Mohamed-Mejri", "description": "Hello, \r\nI would like to know if the grid can be exported after the processing of the global router output and/or the TA step.\r\n\r\nI'm planning on trying some other AI based approaches instead of Heuristics. And if I can export the grid or the clips it would be more helpful.\r\n\r\nAny idea/help will be much appreciated!", "content": [{"author": "Mohamed-Mejri", "role": "user", "message": "Hello, \r\nI would like to know if the grid can be exported after the processing of the global router output and/or the TA step.\r\n\r\nI'm planning on trying some other AI based approaches instead of Heuristics. And if I can export the grid or the clips it would be more helpful.\r\n\r\nAny idea/help will be much appreciated!", "date": "2022-03-30T16:28:54Z"}, {"author": "maliberty", "role": "assistant", "message": "Do you mean the gcell grid?  There are messages\r\n\r\n\"GCELLGRID X {} DO {} STEP {} ;\",\r\n\"GCELLGRID Y {} DO {} STEP {} ;\",\r\n\r\nthat will give you those values.  They don't change during drt.", "date": "2022-03-30T17:37:01Z"}, {"author": "maliberty", "role": "assistant", "message": "The post-processed guides are generated as output_guide.mod in ORFS (controlled by -output_guide).   Other internal state of the router is not exported today.", "date": "2022-03-31T20:16:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Its the same guide format as the input guide file", "date": "2022-04-01T15:40:48Z"}, {"author": "Mohamed-Mejri", "role": "assistant", "message": "Hello again,\r\nI would like to get the access points to each pin in a net and I saw [this on another discussion](https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625?sort=new#discussioncomment-636424), however, when I tried it the coordinates didn't make sense.\r\nFor example when I try it on the nangate45 gcd, for the _000_ net we have:  `_000_ ( _672_ D ) ( _504_ ZN ) + USE SIGNAL`\r\nand the components in the net are  `_672_ DFF_X2 + PLACED ( 107540 145600 ) N ;`  and `_504_ OAI21_X1 + PLACED ( 107540 148400 ) FS ;`\r\nand this is the output of the code\r\nnet _000_ \r\n( 46930 141260 ) layerNum 2 metal1 \r\n( 46930 141120 ) layerNum 2 metal1\r\n( 46740 141260 ) layerNum 2 metal1\r\n( 51490 146580 ) layerNum 2 metal1\r\n( 51490 146860 ) layerNum 2 metal1\r\n( 51490 147140 ) layerNum 2 metal1\r\n( 51490 147420 ) layerNum 2 metal1\r\n( 50730 147420 ) layerNum 2 metal1\r\n( 51870 147420 ) layerNum 2 metal1\r\n( 51870 147700 ) layerNum 2 metal1\r\n( 51870 147980 ) layerNum 2 metal1\r\n( 51110 147420 ) layerNum 2 metal1\r\n\r\nSo from what I see these coordinates can't be correct, any idea why is this happening?", "date": "2022-04-11T14:15:24Z"}], "date": "2022-03-30T16:28:54Z", "category": "Query", "subcategory": "Information request", "Tool": "TritonRoute"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1539", "id": 1539, "title": "CTS Characterization", "author": "EffeErreG4", "description": "I was trying to customize the CTS parameters using the command \"configure_cts_characterization\", but I don't see any changes is the maximum slew constrain reported in the .log file. Trying to understand if I was doing something wrong I noticed that there's a file called \"CtsOptions.h\" that should set the desired constrains with no \"CtsOptions.cpp\" file to describe the actual function. How can I manage to customize the maximum transition time? Thanks for your attention.", "content": [{"author": "EffeErreG4", "role": "user", "message": "I was trying to customize the CTS parameters using the command \"configure_cts_characterization\", but I don't see any changes is the maximum slew constrain reported in the .log file. Trying to understand if I was doing something wrong I noticed that there's a file called \"CtsOptions.h\" that should set the desired constrains with no \"CtsOptions.cpp\" file to describe the actual function. How can I manage to customize the maximum transition time? Thanks for your attention.", "date": "2022-01-12T12:30:14Z"}, {"author": "maliberty", "role": "assistant", "message": "All the functions are inlined so there is no need for a cpp.\r\n\r\nWould you give the command you are using and the message you are getting in the log.", "date": "2022-01-12T16:36:33Z"}, {"author": "EffeErreG4", "role": "assistant", "message": "Sorry if I made a silly observation.\r\nI was trying to define the maximum limits of slew and maybe I misunderstood the command.\r\nIs it possible to change the values of maximum slew and maximum skew constrain for the CTS synthesis?", "date": "2022-01-12T18:07:58Z"}], "date": "2022-01-12T12:30:14Z", "category": "Query", "subcategory": "Customization request", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1164", "id": 1164, "title": "how to run ICeWall test examples", "author": "vijayank88", "description": "Hi,\r\n\r\nI am trying to run OpenROAD/src/ICeWall/test examples. Used below command inside openroad and stopped with error\r\n\r\nopenroad 1> source soc_bsg_black_parrot_nangate45.tcl \r\n[WARNING ODB-0229] Error: library (NangateOpenCellLibrary.mod) already exists\r\n[WARNING ODB-0229] Error: library (dummy_pads) already exists\r\n[WARNING STA-0053] dummy_pads.lib line 7, library dummy_pads_worst_case already exists.\r\nSegmentation fault (core dumped)\r\n\r\nAnyone can explain how to run this flow and to view DEF file klayout to view my chip level io connection created by ICeWall\r\n\r\nThanks in advance\r\n", "content": [{"author": "vijayank88", "role": "user", "message": "Hi,\r\n\r\nI am trying to run OpenROAD/src/ICeWall/test examples. Used below command inside openroad and stopped with error\r\n\r\nopenroad 1> source soc_bsg_black_parrot_nangate45.tcl \r\n[WARNING ODB-0229] Error: library (NangateOpenCellLibrary.mod) already exists\r\n[WARNING ODB-0229] Error: library (dummy_pads) already exists\r\n[WARNING STA-0053] dummy_pads.lib line 7, library dummy_pads_worst_case already exists.\r\nSegmentation fault (core dumped)\r\n\r\nAnyone can explain how to run this flow and to view DEF file klayout to view my chip level io connection created by ICeWall\r\n\r\nThanks in advance\r\n", "date": "2021-10-05T16:38:04Z"}, {"author": "maliberty", "role": "assistant", "message": "@Colin-Holehouse @ibrahimkhairy can you help?", "date": "2021-10-05T16:59:47Z"}, {"author": "maliberty", "role": "assistant", "message": "@jjcherry56 the crash is in \r\n\r\nsta::ConcreteInstance::deletePin \r\nsta::ConcreteNetwork::deletePin \r\nsta::ConcreteNetwork::deleteInstance \r\nsta::ConcreteNetwork::deleteTopInstance \r\nsta::ConcreteNetwork::linkNetwork \r\nord::dbLinkDesign \r\n\r\nreproduce by going to src/ICeWall/test and running\r\n% openroad soc_bsg_black_parrot_nangate45.tcl\r\n[at OR prompt] source soc_bsg_black_parrot_nangate45.tcl", "date": "2021-10-14T18:51:32Z"}, {"author": "vijayank88", "role": "assistant", "message": "[vijayan@ctpl-hp11 test]$ ../../../build/src/openroad \r\nOpenROAD 1 3a8b060d9026de9b35e4f35ee59157ce9416c3ff\r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nopenroad 1> source soc_bsg_black_parrot_nangate45.tcl \r\n[INFO ODB-0222] Reading LEF file: NangateOpenCellLibrary.mod.lef\r\n[INFO ODB-0223]     Created 22 technology layers\r\n[INFO ODB-0224]     Created 27 technology vias\r\n[INFO ODB-0225]     Created 134 library cells\r\n[INFO ODB-0226] Finished LEF file:  NangateOpenCellLibrary.mod.lef\r\n[INFO ODB-0222] Reading LEF file: dummy_pads.lef\r\n[INFO ODB-0225]     Created 24 library cells\r\n[INFO ODB-0226] Finished LEF file:  dummy_pads.lef\r\n[INFO IFP-0001] Added 1885 rows of 13893 sites.\r\n[INFO PAD-0053] Creating padring nets: RETN_10, RETN_11, RETN_12, RETN_13, RETN_14, RETN_15, RETN_16, RETN_17, RETN_18, RETN_19, RETN_20, RETN_0, RETN_1, RETN_2, RETN_3, RETN_4, RETN_5, RETN_6, RETN_7, RETN_8, RETN_9, SNS_10, SNS_11, SNS_12, SNS_13, SNS_14, SNS_15, SNS_16, SNS_0, SNS_17, SNS_1, SNS_18, SNS_2, SNS_19, SNS_20, SNS_3, SNS_4, SNS_5, SNS_6, SNS_7, SNS_8, SNS_9, DVSS_0, DVSS_1, DVDD_0, DVDD_1.\r\n[INFO PAD-0051] Creating padring net: VSS.\r\n[INFO PAD-0051] Creating padring net: VDD.\r\nNo differences found.\r\n\r\nIs the above log right?", "date": "2021-10-16T09:44:15Z"}, {"author": "maliberty", "role": "assistant", "message": "\"No differences found. \" tells you it is right.", "date": "2021-10-16T14:13:35Z"}], "date": "2021-10-05T16:38:04Z", "category": "Runtime", "subcategory": "Crash report", "Tool": "Chip-level Connections"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625", "id": 625, "title": "Where is PA pattern generation in FlexPA::main in TritonRoute? How to dump out AP info for TA?", "author": "Raynchowkw", "description": "Hi, I want to find the step of \"pin access pattern generation\" in the TritonRoute/src/pa code and dump out the pattern information after pin access analysis. I don't see pin access pattern generation function in FlexPA::main(). Could anyone tell me where is this step? \r\nIs there template or sample of extracting pin access points information for TA? Thanks.", "content": [{"author": "Raynchowkw", "role": "user", "message": "Hi, I want to find the step of \"pin access pattern generation\" in the TritonRoute/src/pa code and dump out the pattern information after pin access analysis. I don't see pin access pattern generation function in FlexPA::main(). Could anyone tell me where is this step? \r\nIs there template or sample of extracting pin access points information for TA? Thanks.", "date": "2021-04-19T16:00:55Z"}, {"author": "maliberty", "role": "assistant", "message": "The calls to init() and prep() do the work of computing the access points.  If you just want to dump the result you would do so after those steps finish.  You can just look at frInstTerm::getAccessPoints() for the result.", "date": "2021-04-19T16:31:47Z"}, {"author": "maliberty", "role": "assistant", "message": "Btw, what is your high level goal?", "date": "2021-04-20T15:39:47Z"}, {"author": "maliberty", "role": "assistant", "message": "Anything on stdout will be copied to the log file in 5_2_TritonRoute.log.\n\nMatt\n\nOn Tue, May 18, 2021 at 2:02 PM Raynchowkw ***@***.***> wrote:\n\n> Hi, I have built the flow locally and made modification to the\n> FlexPA_prep.cpp to add the \"cout\" code provided by @Stephanommg\n> <https://github.com/Stephanommg> in previous reply\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-636424>\n> and rebuilt only the openroad tool.\n> I run 'make' for a sample design, and from the output scripts in terminal,\n> I cannot find any information which is assumed to be produced by 'cout'. I\n> look through the part from '[INFO DRT-0194] start detail routing ...' to\n> '[INFO DRT-0198] complete detail routing', also use \"Ctrl+Shift+F\" to find\n> \"layerNum \", but fail to find any aps information.\n> Am I supposed to run TritonRoute individually to output the message?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-755200>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAFZ5KTE4I5VLZTMWONFAT3TOLIYFANCNFSM43GD6SBA>\n> .\n>\n", "date": "2021-05-18T21:07:34Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "How to interpret the aps info printed by 'cout << bp << \"layerNum \" << ap->getLayerNum() << \"\\n\";'?\r\nIt looks like: ( the first paragraph)\r\n```\r\n( ( ( ( ( 84550 23940 )layerNum 2\r\n( 84550 9025072770 23940 )75810layerNum (  ( ( 86450883502 68590 70490 23940\r\n )239402394023800  )( 23940 )layerNum  23940 )layerNum 272770  )layerNum \r\n( 86450238002layerNum   )23940layerNum 23800 )2layerNum \r\n )2\r\n(  )\r\n( layerNum 70490 23800layerNum 222\r\n( 90250\r\n )2\r\n( 86450 24080 )68590\r\nlayerNum  layerNum ( layerNum ( ( 238002275810 23800\r\n```\r\nIt's not something like (X,Y,Z).\r\nWhich part of code should I read to understand this data structure?\r\nHow can I know the net_id, pin_id, pin_x, pin_y, pin_layer according to this?\r\nThanks.\r\n\r\n", "date": "2021-05-21T22:52:44Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "Thanks.\n\nOn Fri, May 28, 2021 at 5:36 PM Stephanommg ***@***.***>\nwrote:\n\n> By container I meant something that contains things. For instance: a\n> vector.\n>\n> Yes this operator.\n>\n> Learning C++ will surely help you. After that you will be better able to\n> understand the code.\n>\n> I really cant code for you right now, and I think my previous comment\n> already answered you last question (at least in part). You will have to use\n> the first code to iterate the access points in combination with the last\n> code to iterate over the nets.\n>\n> for each net\n> for each instTerm\n> get access points like the 1st code\n> for each term\n> get access points like the 1st code (with differences that it is up to up\n> to check)\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-799913>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ANTC4GJTDN2RNSJW4YS7Z43TQALHXANCNFSM43GD6SBA>\n> .\n>\n\n\n-- \nBest,\nRaynchow\n", "date": "2021-05-28T23:00:51Z"}, {"author": "maliberty", "role": "assistant", "message": "@Raynchowkw the project has limited resources and I think you need to put in more effort to solve your issues before requesting help.   Many of the requests don't require in depth knowledge of OpenRoad and are basic software development skills you need to develop.", "date": "2021-06-02T02:58:19Z"}, {"author": "maliberty", "role": "assistant", "message": "You can think of a term as a port of a verilog module; an instance as an instance of a verilog module; and an instTerm as the connection point on the instance reflecting the port of the module instantiated.", "date": "2021-06-02T03:11:27Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "Hi, After working hard on learning C++, I still have some questions. \r\nOne that blocks my understanding is `pin.get()` etc.\r\nWhat's the `.get()` here and where's its definition? I cannot find one in their class def.", "date": "2021-06-10T02:50:19Z"}, {"author": "maliberty", "role": "assistant", "message": "No problem\n\nOn Thu, Jun 10, 2021 at 11:48 AM Raynchowkw ***@***.***>\nwrote:\n\n> You need to iterate over the frNets and then iterate over their\n> frInstTerms and frTerms (similar to the for I placed here before). Do this\n> after pin access and before DR. You can do this inf FlexDR::main() before\n> the searchRepair functions. To get all nets, use\n> design_->getTopBlock()->getNets().\n>\n> Hi, I want to dump out aps before TA. I check TritonRoute::main. dr is\n> later than ta. So I want to dump out at the end of FlexPA::main. Would that\n> incur unexpected problems?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-855088>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAFZ5KQZ53CPKQFIDDJZWCLTSECHPANCNFSM43GD6SBA>\n> .\n>\n", "date": "2021-06-10T18:52:10Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "After one week of understanding code, I find the logic of assigning one ap to one pin by this [line](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1579) in genInstPattern_commit. \r\nThe code @Stephanommg wrote to get aps is `for (auto& ap : pin->getPinAccess(inst->getPinAccessIdx())->getAccessPoints())`. I had a hard time understanding what frPinAccess is doing. I just find its uses in the [FlexPA::initPinAccess](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_init.cpp#L232) in and [FlexPA::prepPoint](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1248) in FlexPA::prepPattern and [revertAccessPoints](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1455) and [prepPattern_inst](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1816). \r\nIt looks like these are before genInstPattern_commit and just for coord manipulation purpose. So I think frPinAccess doesn't filter ap selected for each pin.\r\nSo in order to get ap for each pin in each net, can I do loop through net -> instTerms ->getAccessPoints() ?\r\nI am not sure the meaning of \"net\" and what's relationship between pin and net. Can I understand as this: a net connects some instTerms, each instTerm has some pins, so instTerms' pins are linked to that one net exclusively? Or pins in one instTerm can be linked to \r\ndifferent nets?\r\nThanks.", "date": "2021-06-21T17:27:37Z"}], "date": "2021-04-19T16:00:55Z", "category": "Query", "subcategory": "Usage question", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/754", "id": 754, "title": "[WARNING DPL-0004/5/6] Warning Details", "author": "dineshannayya", "description": "Can any one give more details on the these WARNING  & also how to solve these issue.\r\n\r\n[WARNING DPL-0004] Placed in rows check failed (4).\r\n[WARNING DPL-0005] Overlap check failed (1).\r\n[WARNING DPL-0006] Site check failed (4).\r\n\r\nI am trying to do detailed placement using openlane flow and 99% of block are hard core, only 32 cells are there at top-level\r\nThere is good amount of free space available. still tool fails with these error.\r\n\r\n", "content": [{"author": "dineshannayya", "role": "user", "message": "Can any one give more details on the these WARNING  & also how to solve these issue.\r\n\r\n[WARNING DPL-0004] Placed in rows check failed (4).\r\n[WARNING DPL-0005] Overlap check failed (1).\r\n[WARNING DPL-0006] Site check failed (4).\r\n\r\nI am trying to do detailed placement using openlane flow and 99% of block are hard core, only 32 cells are there at top-level\r\nThere is good amount of free space available. still tool fails with these error.\r\n\r\n", "date": "2021-06-17T12:19:40Z"}, {"author": "maliberty", "role": "assistant", "message": "It is a check at the end of placement to make sure the result is non-overlapping.  It suggests a placement failure but its hard to say anything more without a test case.  Can you provide one?", "date": "2021-06-17T13:47:21Z"}, {"author": "dineshannayya", "role": "assistant", "message": "The project had 99% hard macro with less than 32 other cells and there was\nmore than 30% free space. Still openroad detailed route was placing\noverlapping cells with hard macros & giving DPL-4/5/6 warning.\n\nFinally I noticed the issue was resolved after changing\ndiamond_search_hight more than *250*.\n\nCan give more details on how increased  diamond_search_hight value helped\nhere ?\n\n\n\nOn Thu, Jun 17, 2021 at 7:17 PM Matt Liberty ***@***.***>\nwrote:\n\n> It is a check at the end of placement to make sure the result is\n> non-overlapping. It suggests a placement failure but its hard to say\n> anything more without a test case. Can you provide one?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/754#discussioncomment-883422>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AB7HAVW45OKCTMLEFRCYBBLTTH4HJANCNFSM463RXQWA>\n> .\n>\n", "date": "2021-06-18T05:31:53Z"}, {"author": "maliberty", "role": "assistant", "message": "I would guess that global placement left cells very far from any legal location.  You might look at a post global-placement def to see.", "date": "2021-06-18T15:11:47Z"}], "date": "2021-06-17T12:19:40Z", "category": "Runtime", "subcategory": "Detailed Placement issue", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/683", "id": 683, "title": "What's the workflow of developing in submodules?", "author": "Raynchowkw", "description": "I git clone --recursive the parent repo \"openroad-flow-scripts\" so I get all the code including submodules in the local. \r\nAnd then I use \"git remote rename origin upstream\" and \"git remote add origin <my_new_created_blank_openroad-flow.git> to let it point to my repo. (I only create one repo for the openroad-flow-script. I didn't create repo for submodules.)\r\nAfter I made changes in submodule /tools/openroad/src, I do git `add` and `commit` in the directory of submodule tools/openroad, and then in the parent directory /openroad-flow-scripts, I do `git add tools/openroad`, `commit`, `push`. I can see it does push something to somewhere[![push result](https://i.postimg.cc/jSrTz9Ry/We-Chat-Image-20210526015324.png)](https://postimg.cc/kBwLCT65), but I cannot find it on github.com, on which the directory url points to 404 [![404page](https://i.postimg.cc/FF3DfsHF/404.png)](https://postimg.cc/fkWxpsd1)page. I am wondering where the submodules go when I do the `git remote add origin <my_openroad-flow.git>`. Is there a way to create the submodule repo automatically in my repo?", "content": [{"author": "Raynchowkw", "role": "user", "message": "I git clone --recursive the parent repo \"openroad-flow-scripts\" so I get all the code including submodules in the local. \r\nAnd then I use \"git remote rename origin upstream\" and \"git remote add origin <my_new_created_blank_openroad-flow.git> to let it point to my repo. (I only create one repo for the openroad-flow-script. I didn't create repo for submodules.)\r\nAfter I made changes in submodule /tools/openroad/src, I do git `add` and `commit` in the directory of submodule tools/openroad, and then in the parent directory /openroad-flow-scripts, I do `git add tools/openroad`, `commit`, `push`. I can see it does push something to somewhere[![push result](https://i.postimg.cc/jSrTz9Ry/We-Chat-Image-20210526015324.png)](https://postimg.cc/kBwLCT65), but I cannot find it on github.com, on which the directory url points to 404 [![404page](https://i.postimg.cc/FF3DfsHF/404.png)](https://postimg.cc/fkWxpsd1)page. I am wondering where the submodules go when I do the `git remote add origin <my_openroad-flow.git>`. Is there a way to create the submodule repo automatically in my repo?", "date": "2021-05-26T20:24:38Z"}, {"author": "maliberty", "role": "assistant", "message": "It isn't clear in which repo you are runing which steps.  Please give a specific set of steps to replay to see your problem.\r\n\r\nI think the simplest is to fork ORFS & OR.", "date": "2021-05-26T20:39:57Z"}, {"author": "maliberty", "role": "assistant", "message": "When the submodule is checked out it will be a specific commit that is checked out not the HEAD.  You can just 'it checkout master' and commit your change.  Then in ORFS you can update the submodule to point to your new commit.", "date": "2021-05-26T21:47:56Z"}, {"author": "maliberty", "role": "assistant", "message": "In ORFS you should see that the submodule is modified and you git add/commit it as usual.", "date": "2021-05-26T22:43:12Z"}, {"author": "maliberty", "role": "assistant", "message": "yes", "date": "2021-05-26T23:04:43Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "When I want to get the update of submodules, I do `git pull --recurse-submodule`, [![gitpullsubmodulecheckout.png](https://i.postimg.cc/hPpJ5z1G/gitpullsubmodulecheckout.png)](https://postimg.cc/svGDB28F),\r\nbut it checkouts the commit id it originally points to. [![submodulepointtocommit.png](https://i.postimg.cc/5tF6yPdH/submodulepointtocommit.png)](https://postimg.cc/Y4MpyzSk).\r\nHow to let it point to my OR git master branch? Otherwise, I need to go into that submodule directory to do the `git checkout master` every time.", "date": "2021-05-27T03:50:27Z"}], "date": "2021-05-26T20:24:38Z", "category": "Query", "subcategory": "Submodule management", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5451", "id": 5451, "title": "OpenRoad db query", "author": "CathedralsOfSand", "description": "How do you dump detailed cell usage statistics from a finished database?\n\nI have the cell stats from the yosys synth run but want similar data from the timing closed routed db. \n\nThanks", "content": [{"author": "CathedralsOfSand", "role": "user", "message": "How do you dump detailed cell usage statistics from a finished database?\n\nI have the cell stats from the yosys synth run but want similar data from the timing closed routed db. \n\nThanks", "date": "2024-07-25T20:58:09Z"}, {"author": "maliberty", "role": "assistant", "message": "`report_cell_usage` is the simplest", "date": "2024-07-25T21:00:06Z"}, {"author": "maliberty", "role": "assistant", "message": "https://github.com/The-OpenROAD-Project/OpenROAD/pull/5455 is quick stab at this.  What do you think of https://github.com/The-OpenROAD-Project/OpenROAD/pull/5455/files#diff-2da4a6ba84e5e60ce2a822063c4acd592ca2c6fc35f81f3d3d966f78ba7e1675 ?", "date": "2024-07-26T00:16:10Z"}], "date": "2024-07-25T20:58:09Z", "category": "Query", "subcategory": "Cell statistics report", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5420", "id": 5420, "title": "dft command names", "author": "ThomasGeroudet", "description": "Hello @maliberty, @fgaray, I've just seen dft commands, but not tried it yet.\r\nThe name of the commands seemed familiar, and I was wondering if it could be better to rename them to avoid potential legal issues such as this one:\r\nhttps://news.synopsys.com/2016-12-21-Synopsys-Obtains-Injunction-in-Copyright-Suit-Against-ATopTech\r\nIn case of renaming, maybe all dft commands could start with dft_* so that it's easy to find them ?", "content": [{"author": "ThomasGeroudet", "role": "user", "message": "Hello @maliberty, @fgaray, I've just seen dft commands, but not tried it yet.\r\nThe name of the commands seemed familiar, and I was wondering if it could be better to rename them to avoid potential legal issues such as this one:\r\nhttps://news.synopsys.com/2016-12-21-Synopsys-Obtains-Injunction-in-Copyright-Suit-Against-ATopTech\r\nIn case of renaming, maybe all dft commands could start with dft_* so that it's easy to find them ?", "date": "2024-07-22T17:49:42Z"}, {"author": "fgaray", "role": "assistant", "message": "Yeah, changing the names SGTM to avoid this issue.\r\n\r\nDo we know what other tools use to name this commands? (Cadence for example). I tried looking online but could not find Cadence's related docs.\r\n\r\ndft_insert, dft_scan_replace, dft_preview SGTM", "date": "2024-07-22T18:08:07Z"}, {"author": "maliberty", "role": "assistant", "message": "Thanks, we want to avoid any such conflicts.  I am not aware of the proprietary tool names but am fine with a rename to avoid such.", "date": "2024-07-22T18:36:10Z"}], "date": "2024-07-22T17:49:42Z", "category": "Feature Request", "subcategory": "Command naming", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5333", "id": 5333, "title": "pdgen remove stripes with [WARNING PDN-0200] Removing floating shape:", "author": "titan73", "description": "Based on the example at the bottom of https://openroad.readthedocs.io/en/latest/main/src/pdn/README.html.\r\n\r\nI did the following floorplan with the .def containing the power pins:\r\n\r\n    read_def -floorplan_initialize floor.def\r\n    set fp_area [ord::get_die_area]\r\n    initialize_floorplan -die_area $fp_area -core_area $fp_area -site CORECUBRICK\r\n\r\n    add_global_connection -net VDDD -pin_pattern {^VDDD$} -power\r\n    add_global_connection -net GNDD -pin_pattern {^GNDD$} -ground\r\n\r\n    set_voltage_domain -power VDDD -ground GNDD\r\n\r\n    define_pdn_grid -name \"Core\"\r\n    add_pdn_ring -grid \"Core\" -layers {metal4B alucap} -widths 5.0 -spacings 2.0 -core_offsets 4.5 -connect_to_pads\r\n\r\n    add_pdn_stripe -followpins -layer metal1 -extend_to_core_ring\r\n\r\n    add_pdn_stripe -layer metal4B -width 0.48 -pitch 56.0 -offset 2.0 -extend_to_core_ring\r\n    add_pdn_stripe -layer alucap -width 1.40 -pitch 40.0 -offset 2.0 -extend_to_core_ring\r\n\r\n    add_pdn_connect -layers {metal4B alucap}\r\n    add_pdn_connect -layers {alucap metal4B}\r\n\r\n    pdngen\r\n\r\nThe sroutes and the ring are created but not the stripes and I get the the warnings:\r\n\r\n    [WARNING PDN-0200] Removing floating shape: GNDD (1.7600, -9.5000) - (2.2400, 821.3000) on metal4B\r\n    [WARNING PDN-0200] Removing floating shape: VDDD (29.7600, -16.5000) - (30.2400, 828.3000) on metal4B\r\n\r\nIs there something more to do to connect these shapes?", "content": [{"author": "titan73", "role": "user", "message": "Based on the example at the bottom of https://openroad.readthedocs.io/en/latest/main/src/pdn/README.html.\r\n\r\nI did the following floorplan with the .def containing the power pins:\r\n\r\n    read_def -floorplan_initialize floor.def\r\n    set fp_area [ord::get_die_area]\r\n    initialize_floorplan -die_area $fp_area -core_area $fp_area -site CORECUBRICK\r\n\r\n    add_global_connection -net VDDD -pin_pattern {^VDDD$} -power\r\n    add_global_connection -net GNDD -pin_pattern {^GNDD$} -ground\r\n\r\n    set_voltage_domain -power VDDD -ground GNDD\r\n\r\n    define_pdn_grid -name \"Core\"\r\n    add_pdn_ring -grid \"Core\" -layers {metal4B alucap} -widths 5.0 -spacings 2.0 -core_offsets 4.5 -connect_to_pads\r\n\r\n    add_pdn_stripe -followpins -layer metal1 -extend_to_core_ring\r\n\r\n    add_pdn_stripe -layer metal4B -width 0.48 -pitch 56.0 -offset 2.0 -extend_to_core_ring\r\n    add_pdn_stripe -layer alucap -width 1.40 -pitch 40.0 -offset 2.0 -extend_to_core_ring\r\n\r\n    add_pdn_connect -layers {metal4B alucap}\r\n    add_pdn_connect -layers {alucap metal4B}\r\n\r\n    pdngen\r\n\r\nThe sroutes and the ring are created but not the stripes and I get the the warnings:\r\n\r\n    [WARNING PDN-0200] Removing floating shape: GNDD (1.7600, -9.5000) - (2.2400, 821.3000) on metal4B\r\n    [WARNING PDN-0200] Removing floating shape: VDDD (29.7600, -16.5000) - (30.2400, 828.3000) on metal4B\r\n\r\nIs there something more to do to connect these shapes?", "date": "2024-07-03T17:20:45Z"}, {"author": "titan73", "role": "assistant", "message": "Also note that the related power pins imported the from .def are removed.", "date": "2024-07-03T17:24:27Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you provide a test case?  Its hard to say much from just the output", "date": "2024-07-03T17:24:46Z"}], "date": "2024-07-03T17:20:45Z", "category": "Bug", "subcategory": "Power distribution network issue", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5289", "id": 5289, "title": "UPF support tested with openroad-2024-06-11", "author": "titan73", "description": "I have problems reading the upf (2.1) for my design which is an hard IP.\r\n\r\nI have read https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3531. Since it's mark as answered, I open a new one.\r\n\r\nSome command are missing:\r\n  - upf_version\r\n  - create_supply_port\r\n  - create_supply_net\r\n  - connect_supply_net\r\n  - create_supply_set\r\n  - set_port_attributes\r\n  - add_port_state\r\n  - create_pst\r\n  - add_pst_state\r\n\r\nAnd some commands have missing options:\r\n  - -include_scope  and -supply missing from create_power_domain\r\n  - -isolation_supply, -sink and -source missing from set_isolation (set_level_shifter has sink and -source)\r\n\r\nI have also several questions.\r\n\r\n1) What upf version openroad is supposed to support?\r\n\r\n2) Same question for all examples in git?\r\n  - ./test/upf/mpd_top.upf\r\n  - ./test/upf/mpd_aes.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_ls.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_combined.upf\r\n  - ./src/ifp/test/upf/mpd_top.upf\r\n  - ./src/ifp/test/upf/mpd_shifter.upf\r\n\r\n3) Are there reporting command related to upf (power domains, supply ports, ...)? I searched but didn't find any.\r\n\r\n4) set_level_shifter has 2 options -input_supply and -output_supply that take supply net. Where these nets are supposed to be defined?\r\n    Morover where do these options comes from? UPF 2.0 and 2.1 do no have them. They have -input_supply_set and -output_supply_set that take supply sets (and not nets).\r\n\r\n5) How supply ports are supposed to be created in openroad since there are no command create_supply_port.\r\n\r\nThanks in advance\r\n", "content": [{"author": "titan73", "role": "user", "message": "I have problems reading the upf (2.1) for my design which is an hard IP.\r\n\r\nI have read https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3531. Since it's mark as answered, I open a new one.\r\n\r\nSome command are missing:\r\n  - upf_version\r\n  - create_supply_port\r\n  - create_supply_net\r\n  - connect_supply_net\r\n  - create_supply_set\r\n  - set_port_attributes\r\n  - add_port_state\r\n  - create_pst\r\n  - add_pst_state\r\n\r\nAnd some commands have missing options:\r\n  - -include_scope  and -supply missing from create_power_domain\r\n  - -isolation_supply, -sink and -source missing from set_isolation (set_level_shifter has sink and -source)\r\n\r\nI have also several questions.\r\n\r\n1) What upf version openroad is supposed to support?\r\n\r\n2) Same question for all examples in git?\r\n  - ./test/upf/mpd_top.upf\r\n  - ./test/upf/mpd_aes.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_ls.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top.upf\r\n  - ./src/upf/test/data/mpd_top/mpd_top_combined.upf\r\n  - ./src/ifp/test/upf/mpd_top.upf\r\n  - ./src/ifp/test/upf/mpd_shifter.upf\r\n\r\n3) Are there reporting command related to upf (power domains, supply ports, ...)? I searched but didn't find any.\r\n\r\n4) set_level_shifter has 2 options -input_supply and -output_supply that take supply net. Where these nets are supposed to be defined?\r\n    Morover where do these options comes from? UPF 2.0 and 2.1 do no have them. They have -input_supply_set and -output_supply_set that take supply sets (and not nets).\r\n\r\n5) How supply ports are supposed to be created in openroad since there are no command create_supply_port.\r\n\r\nThanks in advance\r\n", "date": "2024-06-26T12:46:36Z"}, {"author": "maliberty", "role": "assistant", "message": "\r\nI'm glad to have someone trying to use this functionality as we have developed it but need people to test and give feedback.\r\n\r\nUPF is a large standard (> 500 pages) and OR supports only a core set of functionality.   OR is only concerned with the design creation aspects of UPF and not the functional behavior which it doesn't control.  We are open to enhancing the set we support as the community needs but don't expect to reach 100% coverage anytime soon.  We have worked off the 1801-2018 standard.\r\n\r\nReporting commands are a hole.  What would you like to see in this area?  It shouldn't be hard to add some.  You can query odb directly or use write_upf today.  \r\n\r\nset_level_shifter takes -input_port -output_port.  It looks like those should have been -input_supply/-output_supply.  I'll fix that.\r\n\r\nPower nets either come in explicitly in the netlist or are created by pdn.  You can look at set_voltage_domain in https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pdn/test/power_switch_upf_regions.tcl as an example.  We could add commands to create them from UPF though you will still need to configure pdn for an actual implementation as UPF is quite logical and not physical in its description.", "date": "2024-06-26T14:45:04Z"}, {"author": "titan73", "role": "assistant", "message": "Great! I'm happy to help.\r\n\r\nI'll prepare a simplified upf of our design.\r\nNote that we've just converted the power state table from 1.0 (using add_port_state, create_pst and add_pst_state which are deprecated) to 2.1 with add_power_state. This was planned for later but if something is done in openroad, it's better to implement something which is not deprecated.\r\n\r\nI'll think about with my colleage about what could be added for reporting. In the meantime, I'll try querying odb. How can I do that? I don't see any command that accesses the database.\r\n\r\nThe input netlist from synthesis does not have any power information in our flow & tools although the level shifters are inserted. And Yosys does not support upf anyway. We'd like to create power ports in upf to kept compatibility with other flows & tools so we use the same upf everywhere.\r\n\r\n Thanks!", "date": "2024-06-27T15:19:59Z"}, {"author": "titan73", "role": "assistant", "message": "Here is the simplified version with add_power_state:\r\n\r\nupf_version 2.1\r\n\r\n\r\ncreate_supply_port VDDD1V2\r\ncreate_supply_port -direction inout VDDD\r\n\r\n\r\ncreate_supply_net VDDD\r\ncreate_supply_net VDDD1V2\r\ncreate_supply_net GNDD\r\n\r\n\r\nconnect_supply_net -ports VDDD VDDD\r\nconnect_supply_net -ports VDDD1V2 VDDD1V2\r\nconnect_supply_net -ports GNDD GNDD\r\n\r\n\r\ncreate_supply_set ss_GNDD_VDDD1V2    -function {ground GNDD}   -function {power VDDD1V2}\r\ncreate_supply_set ss_GNDD_VDDD       -function {ground GNDD}   -function {power VDDD}\r\n\r\n\r\ncreate_power_domain PD1 -include_scope -supply {primary ss_GNDD_VDDD}\r\ncreate_power_domain PD2 -elements pd1v2 -supply {primary ss_GNDD_VDDD1V2}\r\n\r\n\r\n# One signal does not have the default power of its power domain\r\nset_port_attributes -ports out_signal_1v2 -receiver_supply ss_GNDD_VDDD1V2\r\n\r\n\r\nadd_power_state ss_GNDD_VDDD1V2 \\\r\n    -state {on_1v2  -supply_expr {(power == {FULL_ON 1.08}) && (ground == {FULL_ON 0})}} \\\r\n    -state {off_1v2 -supply_expr {(power == {OFF})}}\r\n\r\nadd_power_state ss_GNDD_VDDD \\\r\n    -state {on_std  -supply_expr {(power == {FULL_ON 2.25}) && (ground == {FULL_ON 0})}}\r\n\r\nadd_power_state PD1 \\\r\n    -state {dig_on -logic_expr { \\\r\n        (ss_GNDD_VDDD1V2      == on_1v2) && \\\r\n        (ss_GNDD_VDDD         == on_std)}} \\\r\n    -state {dig_off -logic_expr { \\\r\n        (ss_GNDD_VDDD1V2      == off_1v2) && \\\r\n        (ss_GNDD_VDDD         == on_std)}}\r\n\r\n\r\nset_isolation iso_PD2_from_ss_GNDD_VDDD1V2_to_ss_GNDD_VDDD \\\r\n\t-clamp_value 0 \\\r\n\t-domain PD2 \\\r\n\t-isolation_sense low \\\r\n\t-isolation_signal pd1v2/i_isolation \\\r\n\t-isolation_supply ss_GNDD_VDDD \\\r\n\t-sink ss_GNDD_VDDD \\\r\n\t-source ss_GNDD_VDDD1V2\r\n\r\n\r\nset_level_shifter ls_PD2_ss_GNDD_VDDD1V2_to_ss_GNDD_VDDD \\\r\n\t-domain PD2 \\\r\n\t-sink ss_GNDD_VDDD \\\r\n\t-source ss_GNDD_VDDD1V2\r\n\r\nset_level_shifter ls_PD2_ss_GNDD_VDDD_to_ss_GNDD_VDDD1V2 \\\r\n\t-domain PD2 \\\r\n\t-sink ss_GNDD_VDDD1V2 \\\r\n\t-source ss_GNDD_VDDD\r\n", "date": "2024-06-27T15:21:11Z"}, {"author": "titan73", "role": "assistant", "message": "I tested and checked our upf with add_power_state with our design in our flow & tools and everything is fine.\r\nSo I can test openroad when it's available and check against our flow.\r\n", "date": "2024-06-28T12:16:30Z"}, {"author": "titan73", "role": "assistant", "message": "Not sure it worth it to implement legacy 1.0 support but in case you implement it in a row, as it does the same thing, here is the old code:\r\n\r\nadd_port_state VDDD \\\r\n    -state [list VDDD_nom 2.25]\r\n\r\nadd_port_state VDDD1V2 \\\r\n    -state [list VDDD1V2_nom 1.08] \\\r\n    -state [list VDDD1V2_off off]\r\n\r\nadd_port_state GNDD \\\r\n    -state [list gnd_on 0]\r\n\r\ncreate_pst USB_pst                       -supplies {VDDD     VDDD1V2     GNDD}\r\nadd_pst_state pd1v2_on         -pst USB_pst -state {VDDD_nom VDDD1V2_nom gnd_on}\r\nadd_pst_state pd1v2_off        -pst USB_pst -state {VDDD_nom VDDD1V2_off gnd_on}\r\n", "date": "2024-06-28T12:22:49Z"}, {"author": "titan73", "role": "assistant", "message": "Any news on this topic?", "date": "2024-07-03T12:07:30Z"}, {"author": "titan73", "role": "assistant", "message": "Note that if power ports are not created in upf, the associated pins cannot be imported from floorplan .def file with read_def.\r\nSince pdn is run after the .def import, we can't rely on pdn for power ports creation.\r\n\r\n[WARNING ODB-0247] skipping undefined pin VDDD1V2 encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin GNDD encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin VDDD_FTP encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin GNDSUB encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin GNDA_FTP encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin VDDD encountered in FLOORPLAN DEF\r\n[WARNING ODB-0247] skipping undefined pin VDDA_FTP encountered in FLOORPLAN DEF\r\n", "date": "2024-07-03T12:11:37Z"}], "date": "2024-06-26T12:46:36Z", "category": "Runtime", "subcategory": "Missing functionality", "Tool": "Unified Power Format (UPF)"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5312", "id": 5312, "title": "How to query odb database", "author": "titan73", "description": "I want to directly query odb database. How can I do that? There is no command for that.\r\nI found some ord::xxx commands by searching the net but there is no proper documentation with all commands.", "content": [{"author": "titan73", "role": "user", "message": "I want to directly query odb database. How can I do that? There is no command for that.\r\nI found some ord::xxx commands by searching the net but there is no proper documentation with all commands.", "date": "2024-07-01T10:08:48Z"}, {"author": "titan73", "role": "assistant", "message": "also found odb::xxx. No documentation either.\r\nMost functions required a self argument.\r\nTested \"::odb::dbBlock_getPowerDomains [::odb::dbBlock]\" to get power domains but it crashes.", "date": "2024-07-01T12:17:00Z"}, {"author": "titan73", "role": "assistant", "message": "I got to something using orf and odb to get the created power domains:\r\n\r\nforeach pd [::odb::dbBlock_getPowerDomains [::ord::get_db_block]] {\r\n    puts \"[::odb::dbPowerDomain_getName $pd]\"\r\n}\r\n\r\nI think I get the idea. A pity it's not documented.\r\n", "date": "2024-07-01T12:35:47Z"}, {"author": "maliberty", "role": "assistant", "message": "We use swig on https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/include/odb/db.h so the APIs and comments there should be a guide.  If you have specific questions please ask.", "date": "2024-07-01T15:30:36Z"}, {"author": "titan73", "role": "assistant", "message": "Ok thanks. It helps. Although not all methods have comments.  dbPowerDomain for instance.\r\nHow does int& is supposed to be mapped in tcl? Ex: bool getArea(int& x1, int& y1, int& x2, int& y2);", "date": "2024-07-02T13:49:58Z"}], "date": "2024-07-01T10:08:48Z", "category": "Documentation", "subcategory": "Incomplete documentation", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5273", "id": 5273, "title": "Different results locally(laptop, say 32 threads) and on the server(128 threads)", "author": "oharboe", "description": "Q: what happens if we have different number of cores? Should we expect different results after `make place` even if we use manual placement?\r\n\r\nI suppose OpenROAD can use all available CPUs and not heed NUM_CORES in ORFS, so even if I set NUM_CORES to the same, that might not help me get the exact same results?\r\n\r\nI would expect partitioning to affect the results, is this true?\r\n\r\nIf so, can I choose the same partitioning even if NUM_CORES differ?\r\n\r\nAny thoughts on different results locally and on the server in terms of what is expected behavior?", "content": [{"author": "oharboe", "role": "user", "message": "Q: what happens if we have different number of cores? Should we expect different results after `make place` even if we use manual placement?\r\n\r\nI suppose OpenROAD can use all available CPUs and not heed NUM_CORES in ORFS, so even if I set NUM_CORES to the same, that might not help me get the exact same results?\r\n\r\nI would expect partitioning to affect the results, is this true?\r\n\r\nIf so, can I choose the same partitioning even if NUM_CORES differ?\r\n\r\nAny thoughts on different results locally and on the server in terms of what is expected behavior?", "date": "2024-06-22T12:24:35Z"}, {"author": "QuantamHD", "role": "assistant", "message": "It might be this issue https://github.com/The-OpenROAD-Project/OpenROAD/pull/5234", "date": "2024-06-22T15:06:29Z"}, {"author": "oharboe", "role": "assistant", "message": "For now my assumption is a PEBCAK: that I am running two different versions of OpenROAD in CI and locally(multiple levels of docker hell).\r\n\r\nI tried locally with a single level of docker and got the same results on two machines and varying NUM_CORES.", "date": "2024-06-22T16:49:29Z"}, {"author": "maliberty", "role": "assistant", "message": "fwiw https://github.com/The-OpenROAD-Project/OpenROAD/pull/5234 is merged", "date": "2024-06-22T21:44:50Z"}], "date": "2024-06-22T12:24:35Z", "category": "Runtime", "subcategory": "Parallelization issues", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5249", "id": 5249, "title": "Want to know semantics of blockages", "author": "doo3yoon", "description": "Hi\r\n\r\nI applied routing blockages before global routing stage using command lines below for the whole design area,\r\n\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 2 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 3 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 4 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 5 -adjustment 0.2\r\n\r\nand compared its routing resource reduction with the one without routing blockage (refer to the table below).\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/102841960/69b52af8-806c-4f18-bb1e-4059ade2d953)\r\n\r\nBut, I couldn't find a clear connection between blockage value and resource reduction.\r\nFor example, when I reduce 20% for metal2, its derated resource was from 0.89% to 29.75%.\r\n\r\nCould you explain about how the routing blockage affects routing resource reduction?\r\n\r\nThanks and looking forward to hearing from you,\r\n\r\nDooseok\r\n", "content": [{"author": "doo3yoon", "role": "user", "message": "Hi\r\n\r\nI applied routing blockages before global routing stage using command lines below for the whole design area,\r\n\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 2 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 3 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 4 -adjustment 0.2\r\nset_global_routing_region_adjustment [list 0.1 0.1 237.4 140] -layer 5 -adjustment 0.2\r\n\r\nand compared its routing resource reduction with the one without routing blockage (refer to the table below).\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/102841960/69b52af8-806c-4f18-bb1e-4059ade2d953)\r\n\r\nBut, I couldn't find a clear connection between blockage value and resource reduction.\r\nFor example, when I reduce 20% for metal2, its derated resource was from 0.89% to 29.75%.\r\n\r\nCould you explain about how the routing blockage affects routing resource reduction?\r\n\r\nThanks and looking forward to hearing from you,\r\n\r\nDooseok\r\n", "date": "2024-06-15T19:19:40Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please comment", "date": "2024-06-15T22:04:31Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@doo3yoon The resource reduction you see in the run without applying `set_global_routing_region_adjustment` comes from the design obstructions, like PWR/GND nets, instance obstructions, macros, etc.\r\n\r\nThe percentage shown in the report does not match your reduction because it operates over integer values, and we always floor the result. So the global router will always be pessimistic with your reduction value, which can lead to a higher reduction percentage.\r\n\r\nYou can see that the higher layers have more impact because their pitch values are already high, meaning that the original resources will be smaller when compared to the lower layers. When we floor the resources after applying the reduction for these upper layers, we could end with a more significant reduction than the other layers.", "date": "2024-06-17T14:30:01Z"}], "date": "2024-06-15T19:19:40Z", "category": "Query", "subcategory": "Routing resource reduction", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5213", "id": 5213, "title": "Running a simple combinatorial design", "author": "Dandy201", "description": "Hi all, I'm new to using ORFS and tried some tutorials from https://github.com/The-OpenROAD-Project/micro2022tutorial. \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/8a6e4ccd-503a-4751-8ead-8c1c5d209890)\r\n\r\nCompleting exercise 5 got this simple output:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/63ead36e-c51b-456b-9526-819d76f8a209).\r\n\r\nFrom this, I'm trying to make a simple combinational circuit. Running make DESIGN_CONFIG=../../half_Adder/config.mk, it always ends at this error:\r\n\r\n7. Executing Verilog-2005 frontend: /home/dan/Desktop/Work/vlsi/tools/OpenROAD-flow-scripts/flow/platforms/asap7/yoSys/cells_clkgate_R.v\r\nUsing ABC speed script.\r\n[FLOW] Extracting clock period from SDC file: ./results/asap7/halfAdder/base/clock_period.txt\r\n[FLOW] Setting clock period to 5\r\n8. Executing SYNTH pass.\r\n8.1. Executing HIERARCHY pass (managing design hierarchy).\r\n**ERROR: TCL interpreter returned an error: Yosys command produced an error\r\nCommand exited with non-zero status 1\r\nElapsed time: 0:00.59[h:]min:sec. CPU time: user 0.56 sys 0.02 (99%). Peak memory: 72508KB.\r\nmake[1]: *** [Makefile:496: do-yosys] Error 1\r\nmake: *** [Makefile:499: results/asap7/halfAdder/base/1_1_yosys.v] Error 2.**\r\n\r\nConfig file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/324abeb8-c78c-42a6-906f-811f9c4134b6)\r\n\r\nConstraint file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/c305c964-35a7-4fae-b038-7cbb9539f98d)\r\n\r\nVerilog file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/fe9cc773-67be-4235-a4b5-b66b06dee795)\r\n\r\n\r\n\r\n", "content": [{"author": "Dandy201", "role": "user", "message": "Hi all, I'm new to using ORFS and tried some tutorials from https://github.com/The-OpenROAD-Project/micro2022tutorial. \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/8a6e4ccd-503a-4751-8ead-8c1c5d209890)\r\n\r\nCompleting exercise 5 got this simple output:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/63ead36e-c51b-456b-9526-819d76f8a209).\r\n\r\nFrom this, I'm trying to make a simple combinational circuit. Running make DESIGN_CONFIG=../../half_Adder/config.mk, it always ends at this error:\r\n\r\n7. Executing Verilog-2005 frontend: /home/dan/Desktop/Work/vlsi/tools/OpenROAD-flow-scripts/flow/platforms/asap7/yoSys/cells_clkgate_R.v\r\nUsing ABC speed script.\r\n[FLOW] Extracting clock period from SDC file: ./results/asap7/halfAdder/base/clock_period.txt\r\n[FLOW] Setting clock period to 5\r\n8. Executing SYNTH pass.\r\n8.1. Executing HIERARCHY pass (managing design hierarchy).\r\n**ERROR: TCL interpreter returned an error: Yosys command produced an error\r\nCommand exited with non-zero status 1\r\nElapsed time: 0:00.59[h:]min:sec. CPU time: user 0.56 sys 0.02 (99%). Peak memory: 72508KB.\r\nmake[1]: *** [Makefile:496: do-yosys] Error 1\r\nmake: *** [Makefile:499: results/asap7/halfAdder/base/1_1_yosys.v] Error 2.**\r\n\r\nConfig file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/324abeb8-c78c-42a6-906f-811f9c4134b6)\r\n\r\nConstraint file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/c305c964-35a7-4fae-b038-7cbb9539f98d)\r\n\r\nVerilog file\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/172090682/fe9cc773-67be-4235-a4b5-b66b06dee795)\r\n\r\n\r\n\r\n", "date": "2024-06-08T01:49:39Z"}, {"author": "maliberty", "role": "assistant", "message": "Please package this as a standalone test case and attach it.  Reproducing it from screen shots is inefficient.", "date": "2024-06-08T08:03:35Z"}, {"author": "Dandy201", "role": "assistant", "message": "[try.zip](https://github.com/user-attachments/files/15751707/try.zip)\r\n\r\nHere's the  zip file along with the command : make DESIGN_CONFIG=../../try/config.mk\r\n", "date": "2024-06-09T11:52:33Z"}, {"author": "mi-and-core", "role": "assistant", "message": "(1) change module name from 'half_adder' to 'halfAdder'\r\n", "date": "2024-06-09T15:24:13Z"}, {"author": "maliberty", "role": "assistant", "message": "In the config.mk\r\n```\r\nexport DESIGN_NAME = halfAdder\r\n```\r\nwhile in halfAdder.v:\r\n```\r\nmodule half_adder(\r\n```\r\nThese names need to match.", "date": "2024-06-09T15:32:47Z"}], "date": "2024-06-08T01:49:39Z", "category": "Configuration", "subcategory": "Module name mismatch", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5199", "id": 5199, "title": "Non-rectilinear core area", "author": "Blebowski", "description": "Hello,\r\n\r\nis it possible to somehow specify core-area that is non-rectilinear (e.g. as a group of polygons surrounding concave shape) ?\r\n\r\nI understand that if doing \"digital on top\" FP where all the analog is a digital macro, this does not make sense. However, it may be usefull in case where \"analog-on-top\" is done, and digital may have some weird shape and is eventually placed as hard GDSII macro into analog-on-top design.\r\n\r\n", "content": [{"author": "Blebowski", "role": "user", "message": "Hello,\r\n\r\nis it possible to somehow specify core-area that is non-rectilinear (e.g. as a group of polygons surrounding concave shape) ?\r\n\r\nI understand that if doing \"digital on top\" FP where all the analog is a digital macro, this does not make sense. However, it may be usefull in case where \"analog-on-top\" is done, and digital may have some weird shape and is eventually placed as hard GDSII macro into analog-on-top design.\r\n\r\n", "date": "2024-06-04T14:25:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The simplest would be to make a rectangular block and add placement and routing blockages for the disallowed area", "date": "2024-06-04T14:36:53Z"}, {"author": "Blebowski", "role": "assistant", "message": "Thanks. Can I then do the `add_pdn_ring` around just the cut area (e.g. L-shape pdn-ring) ?  Or is there some other trick how\r\nto achieve this ?", "date": "2024-06-05T07:46:25Z"}], "date": "2024-06-04T14:25:31Z", "category": "Configuration", "subcategory": "Floorplan customization", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5168", "id": 5168, "title": "Move `_zero` to special nets", "author": "Blebowski", "description": "Hi,\r\nrelated to previous question, when I proceed to detailed routing, I get:\r\n```\r\ndetailed_route -bottom_routing_layer ME2 -top_routing_layer ME5\r\n```\r\n```\r\n[ERROR DRT-0305] Net zero_ of signal type GROUND is not routable by TritonRoute. Move to special nets.\r\n[ERROR GUI-0070] DRT-0305\r\n```\r\n\r\nBefore, I created my voltage domain and power-grid like so:\r\n```\r\nadd_global_connection -net VDD -pin_pattern {^VDD$} -power\r\nadd_global_connection -net VSS -pin_pattern {^VSS$} -ground\r\n\r\nset_voltage_domain -name VDD_1V2 -power VDD -ground VSS\r\n\r\ndefine_pdn_grid -name \"Core\"\r\n\r\n\r\nadd_pdn_stripe -layer ME1 -followpins -width 0.2\r\n\r\nadd_pdn_ring -grid \"Core\" -layers {ME4 ME5} -widths 4.5 -spacings 1.0 -core_offsets {0 0} -add_connect\r\n\r\nadd_pdn_stripe -layer ME4 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\nadd_pdn_stripe -layer ME5 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\n\r\nadd_pdn_connect -layers {ME1 ME4}\r\nadd_pdn_connect -layers {ME1 ME5}\r\n\r\npdngen\r\n```\r\n\r\nI thought that \"moving zero_ to special nets\" can be accomplished by something like:\r\n```\r\nassign_ground_net -domain VDD_1V2 -net [get_nets zero_]\r\n```\r\nBut that throws me:\r\n```\r\n[ERROR ODB-0335] group does not exist\r\n[ERROR GUI-0070] ODB-0335\r\n```\r\n\r\nCan you help me out here?\r\nProbably I am just doing something super-stupid...\r\n", "content": [{"author": "Blebowski", "role": "user", "message": "Hi,\r\nrelated to previous question, when I proceed to detailed routing, I get:\r\n```\r\ndetailed_route -bottom_routing_layer ME2 -top_routing_layer ME5\r\n```\r\n```\r\n[ERROR DRT-0305] Net zero_ of signal type GROUND is not routable by TritonRoute. Move to special nets.\r\n[ERROR GUI-0070] DRT-0305\r\n```\r\n\r\nBefore, I created my voltage domain and power-grid like so:\r\n```\r\nadd_global_connection -net VDD -pin_pattern {^VDD$} -power\r\nadd_global_connection -net VSS -pin_pattern {^VSS$} -ground\r\n\r\nset_voltage_domain -name VDD_1V2 -power VDD -ground VSS\r\n\r\ndefine_pdn_grid -name \"Core\"\r\n\r\n\r\nadd_pdn_stripe -layer ME1 -followpins -width 0.2\r\n\r\nadd_pdn_ring -grid \"Core\" -layers {ME4 ME5} -widths 4.5 -spacings 1.0 -core_offsets {0 0} -add_connect\r\n\r\nadd_pdn_stripe -layer ME4 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\nadd_pdn_stripe -layer ME5 -width 1.5 -pitch 20 -offset 0 -extend_to_core_ring\r\n\r\nadd_pdn_connect -layers {ME1 ME4}\r\nadd_pdn_connect -layers {ME1 ME5}\r\n\r\npdngen\r\n```\r\n\r\nI thought that \"moving zero_ to special nets\" can be accomplished by something like:\r\n```\r\nassign_ground_net -domain VDD_1V2 -net [get_nets zero_]\r\n```\r\nBut that throws me:\r\n```\r\n[ERROR ODB-0335] group does not exist\r\n[ERROR GUI-0070] ODB-0335\r\n```\r\n\r\nCan you help me out here?\r\nProbably I am just doing something super-stupid...\r\n", "date": "2024-05-27T11:09:21Z"}, {"author": "maliberty", "role": "assistant", "message": "Generally _zero is avoided by using hilomap in yosys.  If you are not using yosys then I suggest using insert_tiecells", "date": "2024-05-27T16:06:29Z"}, {"author": "Blebowski", "role": "assistant", "message": "Thanks :) ", "date": "2024-05-28T11:23:28Z"}], "date": "2024-05-27T11:09:21Z", "category": "Runtime", "subcategory": "Routing issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2745", "id": 2745, "title": "Options in the Python API", "author": "maliberty", "description": "The python api differs from tcl in being more OO (objects/methods) rather than command oriented.  I'd like to discuss standardizing how that API accept options.  Current APIs are variable:\r\n- Some use state building commands.  For example pdn has define_pdn_grid, add_pdn_stripe, etc.\r\n- Some persistently hold an options object that can be modified by the user.  For example TritonCTS::getParms()\r\n- Some take their options as arguments.  For example Resizer::repairHold(...)\r\n\r\nComplicating cases are:\r\n- Tools that call other tools.  For example gpl calls grt and rsz\r\n- Incremental operations that retain state between invocations.  For example grt and sta\r\n\r\nMy best thought on how to standardize is to have a persistent set of default options and the ability to pass an overriding set.  A sketch of the idea:\r\n```\r\nclass ToolOptions\r\n{\r\npublic:\r\n  ToolOptions(); // a well-defined default state\r\n  void setOptionA(int value);\r\n  void setOptionB(bool value);\r\n};\r\n\r\nclass Tool\r\n{\r\npublic:\r\n  static ToolOptions* getDefaultOptions();\r\n\r\n  // if options is nullptr then the default options are used.\r\n  void task(ToolOptions* options = nullptr);\r\n\r\nprivate:\r\n  static ToolOptions* default_options_;\r\n};\r\n```\r\n\r\nOne use model would be pre-configuration (in C++ but similarly in python)\r\n```\r\n// setup\r\nauto default_options = Tool::getDefaultOptions();\r\ndefault_options.setOptionB(false);\r\n\r\n// later\r\ntool->task();\r\n```\r\n\r\nAnother use model could be\r\n```\r\nToolOptions options;\r\noptions.setOptionB(false);\r\ntool->task(options);\r\n```\r\n\r\nThis can be extended to the case of one tool calling another internally with an API like:\r\n```\r\nvoid task(ToolOptions* options = nullptr,\r\n          AnotherToolOptions* options = nullptr);\r\n```\r\n\r\nFor a sufficiently complicated tool the options object could itself become a sub-configuration builder.  For example:\r\n```\r\nclass PdnOptions\r\n{\r\npublic:\r\n  RingOptions* add_ring();\r\n};\r\n```\r\n\r\nThe case of an incremental tool is tricky.  If asked to do an update I think it should do so according to the last set of options (default or not) that it used.  This implies that it must keep a copy of any non-default options object.\r\n\r\nI'm open to other ideas or improvements.  I'd love to hear from folks @gadfort @macd @QuantamHD @cdleary @osamahammad21 @antonblanchard @donn @rovinski ", "content": [{"author": "maliberty", "role": "user", "message": "The python api differs from tcl in being more OO (objects/methods) rather than command oriented.  I'd like to discuss standardizing how that API accept options.  Current APIs are variable:\r\n- Some use state building commands.  For example pdn has define_pdn_grid, add_pdn_stripe, etc.\r\n- Some persistently hold an options object that can be modified by the user.  For example TritonCTS::getParms()\r\n- Some take their options as arguments.  For example Resizer::repairHold(...)\r\n\r\nComplicating cases are:\r\n- Tools that call other tools.  For example gpl calls grt and rsz\r\n- Incremental operations that retain state between invocations.  For example grt and sta\r\n\r\nMy best thought on how to standardize is to have a persistent set of default options and the ability to pass an overriding set.  A sketch of the idea:\r\n```\r\nclass ToolOptions\r\n{\r\npublic:\r\n  ToolOptions(); // a well-defined default state\r\n  void setOptionA(int value);\r\n  void setOptionB(bool value);\r\n};\r\n\r\nclass Tool\r\n{\r\npublic:\r\n  static ToolOptions* getDefaultOptions();\r\n\r\n  // if options is nullptr then the default options are used.\r\n  void task(ToolOptions* options = nullptr);\r\n\r\nprivate:\r\n  static ToolOptions* default_options_;\r\n};\r\n```\r\n\r\nOne use model would be pre-configuration (in C++ but similarly in python)\r\n```\r\n// setup\r\nauto default_options = Tool::getDefaultOptions();\r\ndefault_options.setOptionB(false);\r\n\r\n// later\r\ntool->task();\r\n```\r\n\r\nAnother use model could be\r\n```\r\nToolOptions options;\r\noptions.setOptionB(false);\r\ntool->task(options);\r\n```\r\n\r\nThis can be extended to the case of one tool calling another internally with an API like:\r\n```\r\nvoid task(ToolOptions* options = nullptr,\r\n          AnotherToolOptions* options = nullptr);\r\n```\r\n\r\nFor a sufficiently complicated tool the options object could itself become a sub-configuration builder.  For example:\r\n```\r\nclass PdnOptions\r\n{\r\npublic:\r\n  RingOptions* add_ring();\r\n};\r\n```\r\n\r\nThe case of an incremental tool is tricky.  If asked to do an update I think it should do so according to the last set of options (default or not) that it used.  This implies that it must keep a copy of any non-default options object.\r\n\r\nI'm open to other ideas or improvements.  I'd love to hear from folks @gadfort @macd @QuantamHD @cdleary @osamahammad21 @antonblanchard @donn @rovinski ", "date": "2023-01-13T00:19:27Z"}, {"author": "maliberty", "role": "assistant", "message": "@proppy ", "date": "2023-01-13T00:19:37Z"}, {"author": "QuantamHD", "role": "assistant", "message": "I like the idea, but I think I would make a modification to a builder architecture, which I think makes sense for two reasons.\r\n\r\n1. It allows you to do more validation in your builder which would give us the ability ensure that a user can never create an invalid tool configuration. For example creating a PDN that has straps repeat at a greater pitch than the width of the chip (Which I've run into)\r\n2. I like the idea of `ToolOptions` being an Immutable object. It means that a tool cannot modify the options which I think reduces the possibility of tools doing weird things with user provided options.\r\n\r\n```c++\r\nclass ToolOptionsBuilder : OptionBuilder {\r\npublic:\r\n  /*\r\n  * Not necessarily required in all cases, but could help build default options for a particular PDK, or\r\n  * core size etc.\r\n  */\r\n  ToolOptionsBuilder(Design *);\r\n\r\n  void setOptionA(int A);\r\n  void setOptionB(bool B);\r\n  ErrorOr<ToolOptions> create(); // could also throw an exception.\r\n}\r\n\r\nclass ToolOptions : ToolOption{\r\nprivate:\r\n   ToolOptions(int A, bool B); // a well-defined default state\r\n\r\npublic:\r\n   int getOptionA();\r\n   bool getOptionB();\r\n};\r\n \r\nclass Tool {\r\npublic:\r\n   static ToolOptions* getDefaultOptions(); // calls ToolOptionsBuilder(...).create(); \r\n \r\n   // if options is nullptr then the default options are used.\r\n   void task(ToolOptions* options = nullptr); \r\n};\r\n```\r\n\r\n\r\n\r\n> ```c++\r\n> // setup\r\n> auto default_options = Tool::getDefaultOptions();\r\n> default_options.setOptionB(false);\r\n> \r\n> // later\r\n> tool->task();\r\n> ```\r\nI don't like the idea of modifying the default options object, seems very error prone.\r\n\r\n\r\n\r\n> Another use model could be\r\n> \r\n> ```c++\r\n> ToolOptionsBuilder options;\r\n> options.setOptionB(false);\r\n> tool->task(options.create());\r\n> ```\r\nI like this model, but with the builder pattern.\r\n\r\n\r\n> This can be extended to the case of one tool calling another internally with an API like:\r\n> \r\n> ```c++\r\n> void task(ToolOptions* options = nullptr,\r\n>           AnotherToolOptions* options = nullptr);\r\n> ```\r\nI think this is a greate idea too.\r\n\r\n\r\n> For a sufficiently complicated tool the options object could itself become a sub-configuration builder. For example:\r\n> \r\n> ```c++\r\n> class PdnOptions\r\n> {\r\n> public:\r\n>   RingOptions* getRing();\r\n> };\r\n> ```\r\nI like this but again should be constructed using builders.\r\n\r\n\r\n> The case of an incremental tool is tricky. If asked to do an update I think it should do so according to the last set of options (default or not) that it used. This implies that it must keep a copy of any non-default options object.\r\n\r\nI think there's also another problem\r\n1. The common use mode of the tools is to do one step then dump an ODB file. I don't think we can get rid of this use mode, because then it would be impossible to run the tool incrementally. Which is making me feel like we need to serialize them into the database.\r\n\r\nI've thought about it a bunch, and I think storing a hidden only history from a user is probably not the right API instead I suggest. \r\n\r\n```c++\r\nclass Tool {\r\npublic:\r\n   static ToolOptions* getDefaultOptions(); // calls ToolOptionsBuilder(...).create();\r\n   set incrementalOptions(ToolOptions* options);\r\n \r\n   // if options is nullptr then the default options are used.\r\n   void task(ToolOptions* options = nullptr);\r\n \r\nprivate:\r\n  ToolOptions* incremental_options_;\r\n\r\n};\r\n```\r\n\r\nOn construction the incrementalOptions are set to what's provided in the constructor, or can be updated by the user.\r\n\r\nThis brings up another question about incremental APIs. @maliberty how do you envision a tool getting access to a `Tool` object will the user need to pass one into the options, or something else?\r\n", "date": "2023-01-13T18:43:31Z"}, {"author": "rovinski", "role": "assistant", "message": "It's a very interesting question and I feel like I've become jaded because of how inconsistent commercial tools are. It seems like tools (both commercial and OpenROAD) always consist of some combination of the three options you mentioned. What's worse is that commercial tools can be some kind of weird blend of global variables, app variables, tool variables, etc. all with different methods for accessing them... it can get overwhelming.\r\n\r\nI think for the most part, I like the idea of doing away with arguments to commands and having all options passed through some kind of options object. The caveat is that I am split on whether that's appropriate for very simple commands that only take one parameter, like `read_odb [filename]`.\r\n\r\nWhatever the decision is, I _definitely_ want to see a common command / interface that lets a user easily query all parameters that can be set for a tool. For example:\r\n```\r\nopenroad> list_parameters Tool\r\nParameters for command 'Tool':\r\nParameter  Type  Value  Default Description\r\n-------------------------------------------\r\nA          int   1      1       Short description of A\r\nB          bool  1      0       Short description of B\r\n-------------------------------------------\r\nUse 'help Tool' for more information on this command's parameters\r\n\r\nopenroad> help Tool\r\nParameter  Definition\r\n------------------------\r\nA          This is a long-form description of A. Here are the valid values, maybe some tips, etc.\r\n           The description could be multiple lines.\r\n\r\nB          This is a long-form description of B. Here are the valid values, maybe some tips, etc.\r\n\r\nUse 'list_parameters Tool' to list the current values for this command's parameters\r\n```\r\n\r\nHidden state / parameters is one of the things I hate the most about commercial tools. At the same time, a user definitely shouldn't _need_ to set parameters they don't know about, like bin grid size for GPL.\r\n\r\nThese comments are mostly concerning the user-side interface. As for the developer / C++ API, I don't think I have strong opinions. I think the proposed interface sounds ok.", "date": "2023-01-14T07:44:28Z"}, {"author": "maliberty", "role": "assistant", "message": "I'm lukewarm on a builder.  Your two arguments for it were:\r\n\r\n\"It allows you to do more validation in your builder\".  You can just as easily do this validation in the task.  If you want to do it in the  builder then you will have to restrict when it can be used (ie not before the db is populated) which seems awkward.  The builder itself will have to be constructed by the tool to give it enough state for validation.\r\n\r\n\"I like the idea of ToolOptions being an Immutable object. It means that a tool cannot modify the options which I think reduces the possibility of tools doing weird things with user provided options.\"  I see two problems.  The tool can always clone the options object and do \"weird things\".  In gpl for example we set options before calling grt (see https://github.com/The-OpenROAD-Project/OpenROAD/blob/b632f9f5177bc27fe7323beb1e5a97a8c904ccee/src/gpl/src/routeBase.cpp#L374).  I wouldn't want to force the user to know to do so.", "date": "2023-01-14T16:00:47Z"}, {"author": "maliberty", "role": "assistant", "message": "re \"I don't like the idea of modifying the default options object, seems very error prone.\"\r\n\r\nI have a somewhat similar feeling but I'm also afraid of producing very complex API calls (eg gpl).  I think some people would prefer to setup the tools upfront.  Also interactively it will save a lot of typing.  However I am fine to remove it if there is a consensus that it isn't useful.", "date": "2023-01-14T16:02:12Z"}, {"author": "maliberty", "role": "assistant", "message": "Putting the options in the db will open it up to tons of schema updates which is undesirable.  Or we would have to make the storage extremely generic which will push the validation on load problem to each tool which isn't much better.  Its also error prone for the user.\r\n\r\nI lean toward saying that on reload you don't get any incremental operations.  We are living with that today, sta is not incremental across restart.", "date": "2023-01-14T16:11:56Z"}, {"author": "donn", "role": "assistant", "message": "Sorry it's taken me a minute to respond to this- perhaps I can offer a bit of a different perspective being more on the user side, but:\r\n\r\n* Lukewarm on the builder, too. I don't see the utility outside of a niche case where I may elect to build and serialize the options in OpenLane then use it in OpenROAD, but I'm fairly sure that won't be possible regardless.\r\n* I like the idea of immutability vs. modifying a global variable. I get that means more typing, but I think it's worth it just to have less surprises. i.e. I wholeheartedly endorse this model:\r\n```c++\r\nToolOptions options;\r\noptions.setOptionB(false);\r\ntool->task(options);\r\n```\r\n\r\nFrom where I stand, the above model would let me write a single common file to convert OpenLane variables to an OpenROAD ToolOptions object generator, which can then be passed onto other tools. ", "date": "2023-01-15T11:04:55Z"}, {"author": "maliberty", "role": "assistant", "message": "@rovinski tcl is a completely different API with lots of manual coding.  Converting it look like python, if possible, would introduce the same friction of it looking nothing like usual EDA tools' tcl interface.  I don't think it is worth the effort to maintain two sets of APIs.  Klayout supporting both python & ruby is much simpler since they are both OO languages.  We could do that too more easily (though I have no desire to).", "date": "2023-01-15T21:53:07Z"}, {"author": "maliberty", "role": "assistant", "message": "Based on the discussions I'm wondering if it is preferrable to eliminate the global state and use only explicit options with a default arg:\r\n```\r\nclass Tool\r\n{\r\npublic:\r\n  void task(const ToolOptions& options = ToolOptions());\r\n  void complex_task(const ToolOptions& options = ToolOptions(),\r\n                    const AnotherToolOptions& other_options = AnotherToolOptions());\r\n};\r\n```", "date": "2023-01-16T05:27:04Z"}, {"author": "donn", "role": "assistant", "message": "Should probably add- syntactic sugar in the form of\r\n\r\n```c++\r\nauto options = ToolOptions {\r\n    {\"a\", \"value1\"},\r\n    {\"b\", \"value2\"}\r\n};\r\n```\r\n\r\ni.e., one that basically takes a dict,  with the appropriate bridging to python:\r\n\r\n```python\r\noptions = ToolOptions(\r\n   a=\"value1\",\r\n   b=\"value2\",\r\n)\r\n```\r\n\r\nwould be pretty cool", "date": "2023-01-17T00:20:23Z"}, {"author": "maliberty", "role": "assistant", "message": "For a next step I want to make a concrete example.  Looking at gpl it fits this model well is it is a single task (placement) with many options.  \r\n\r\nWhen I look at ifp it is more problematic.  It is a tool with multiple semi-related tasks: initFloorplan, insertTieCells, and makeTracks.  I don't feel it makes sense to have a single options object to cover such diverse tasks.  Perhaps this would be better formulated as TaskOptions rather than ToolOptions.  A TaskOptions could replace the need for overloaded methods.\r\n\r\nThis does run the risk of a proliferation of classes - worst case is one for every method.  I am hopeful that the number of tasks is fairly limited per tool today.", "date": "2023-01-20T00:04:35Z"}, {"author": "maliberty", "role": "assistant", "message": "I created https://github.com/The-OpenROAD-Project/OpenROAD/pull/2809 as a example of what the revised API for gpl could look like.  The user tcl layer is unchanged but python and c++ see a new options object.  Replace has way too many options so it produces a very large object interface.\r\n\r\nHaving made the change I'm a bit on the fence about keeping it like this versus making either (1) a code generator from a description file or (2) a more weakly typed interface using string (or enum) keys with a variant value and a single get/set method.  I'm glad to hear opinions.", "date": "2023-01-24T14:57:16Z"}, {"author": "maliberty", "role": "assistant", "message": "Any thoughts on either the existing approach or my other suggestion?", "date": "2023-01-25T04:53:27Z"}, {"author": "maliberty", "role": "assistant", "message": "I came across https://abseil.io/tips/173 which gives some nice ideas for using designated initializers", "date": "2024-05-28T01:00:45Z"}], "date": "2023-01-13T00:19:27Z", "category": "Query", "subcategory": "Usage question", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5158", "id": 5158, "title": "[WARNING PDN-0195] Removing 5 via(s) between M2 and M5 at (35.7900 um, 1291.9420 um) for VSS", "author": "oharboe", "description": "What does it mean and what should I do?\r\n\r\nFrom latest https://github.com/The-OpenROAD-Project/megaboom PDN", "content": [{"author": "oharboe", "role": "user", "message": "What does it mean and what should I do?\r\n\r\nFrom latest https://github.com/The-OpenROAD-Project/megaboom PDN", "date": "2024-05-24T12:27:51Z"}, {"author": "maliberty", "role": "assistant", "message": "@gadfort any comments?", "date": "2024-05-24T14:06:05Z"}, {"author": "oharboe", "role": "assistant", "message": "I see... Not an unfamiliar situation in EDA tools.... \r\n\r\nIn C++ one can generally remove all warnings, not so in FPGA/EDA tools....\r\n\r\nI going to forego filing a github issue on this case for now.", "date": "2024-05-24T15:07:08Z"}], "date": "2024-05-24T12:27:51Z", "category": "Runtime", "subcategory": "Warning message", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5087", "id": 5087, "title": "Add rectangle through odb scripting", "author": "OuDret", "description": "Hello,\r\n\r\nI was trying to place some rectangles/boxes using odb scripting but I did not manage to make it work. \r\n\r\nIs it even possible?", "content": [{"author": "OuDret", "role": "user", "message": "Hello,\r\n\r\nI was trying to place some rectangles/boxes using odb scripting but I did not manage to make it work. \r\n\r\nIs it even possible?", "date": "2024-05-10T15:07:48Z"}, {"author": "maliberty", "role": "assistant", "message": "What sort of rectange/box are you trying to add?  The odb api from db.h is swig'ed to tcl.", "date": "2024-05-12T04:45:22Z"}, {"author": "maliberty", "role": "assistant", "message": "> Which is not exactly what pdn ring do.\r\n\r\nWhat do you get with a ring?", "date": "2024-05-22T15:22:58Z"}], "date": "2024-05-10T15:07:48Z", "category": "Query", "subcategory": "Scripting question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5101", "id": 5101, "title": "OpenROAD build with recent versions of FMT and SPDLOG", "author": "sebinho", "description": "I am not sure where to put this, but I had lots of issues lately building OpenROAD on ArchLinux and I thought this might help other people.\r\nThe issues I had seem to be related to more recent versions of spdlog and fmt packages.\r\nDowgrading fmt to 8.1.1-2 and spdlog to 1.13.0 solves the issues (latest versions are 10.2.0-1 and 1.14.1-1).\r\n\r\nThe issues were as follows during the build (one example, others are similar):\r\n\r\n```\r\n/usr/include/fmt/core.h:1600:63: error: \u2018fmt::v10::detail::type_is_unformattable_for<const dpl::TypedCoordinate<dpl::GridYType>, char> _\u2019 has incomplete type\r\n 1600 |     type_is_unformattable_for<T, typename Context::char_type> _;\r\n      |                                                               ^\r\n/usr/include/fmt/core.h:1604:7: error: static assertion failed: Cannot format an argument. To make type T formattable provide a formatter<T> specialization: https://fmt.dev/latest/api.html#udt\r\n 1604 |       formattable,\r\n      |       ^~~~~~~~~~~\r\n/usr/include/fmt/core.h:1604:7: note: \u2018formattable\u2019 evaluates to false\r\n```\r\n\r\nThe better way for me to solve my issue (instead of downgrading packages) was to build OpenROAD with the following flag during `cmake`: `-DSPDLOG_FMT_EXTERNAL=OFF`", "content": [{"author": "sebinho", "role": "user", "message": "I am not sure where to put this, but I had lots of issues lately building OpenROAD on ArchLinux and I thought this might help other people.\r\nThe issues I had seem to be related to more recent versions of spdlog and fmt packages.\r\nDowgrading fmt to 8.1.1-2 and spdlog to 1.13.0 solves the issues (latest versions are 10.2.0-1 and 1.14.1-1).\r\n\r\nThe issues were as follows during the build (one example, others are similar):\r\n\r\n```\r\n/usr/include/fmt/core.h:1600:63: error: \u2018fmt::v10::detail::type_is_unformattable_for<const dpl::TypedCoordinate<dpl::GridYType>, char> _\u2019 has incomplete type\r\n 1600 |     type_is_unformattable_for<T, typename Context::char_type> _;\r\n      |                                                               ^\r\n/usr/include/fmt/core.h:1604:7: error: static assertion failed: Cannot format an argument. To make type T formattable provide a formatter<T> specialization: https://fmt.dev/latest/api.html#udt\r\n 1604 |       formattable,\r\n      |       ^~~~~~~~~~~\r\n/usr/include/fmt/core.h:1604:7: note: \u2018formattable\u2019 evaluates to false\r\n```\r\n\r\nThe better way for me to solve my issue (instead of downgrading packages) was to build OpenROAD with the following flag during `cmake`: `-DSPDLOG_FMT_EXTERNAL=OFF`", "date": "2024-05-14T09:34:01Z"}, {"author": "rovinski", "role": "assistant", "message": "You might want to take a look at the dependency installer because this issue is known. It may not have support for Arch but you can look at comments for other distros for notes like this.", "date": "2024-05-14T20:37:40Z"}, {"author": "maliberty", "role": "assistant", "message": "Please see my comment about FMT_DEPRECATED_OSTREAM  in https://github.com/The-OpenROAD-Project/OpenROAD/pull/2696", "date": "2024-05-14T21:50:20Z"}], "date": "2024-05-14T09:34:01Z", "category": "Build", "subcategory": "Dependency compatibility issues", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5058", "id": 5058, "title": "Does an improved default policy for NUM_CORES in detailed routing exist?", "author": "oharboe", "description": "Some rough numbers and takeaways:\r\n\r\nFirst: virtual memory size is the total amount of memory allocated by the process. Resident memory size, measured by make elapsed, is the amount of physical memory in use. Measuring virtual memory size can not be done by the \"time\" command.\r\n\r\n\r\nThe current default policy of using all CPU cores, 48 in my case, vs. 6 below, doesn't have a material difference in memory usage (virtual memory size). I don't have accurate numbers from that, just what I recall from having observed detailed routing in the past on megaboom. In both cases, max resident set is near physical memory(90%+).\r\n\r\nThe speed doesn't improve, nor deteriorate above 24 cores(50%).\r\n\r\nSince I don't care if I use virtual memory, I have to set it up anyway, then, based on the measurement below, it would seem that there is no improved policy that exists for megaboom, for the observable parameters I care about.\r\n\r\nIt is surprising to me that memory usage in detailed routing isn't a function of number of cores. I don't know why, but I always thought so, to the point where I fooled myself to believing I heard it somewhere. Am I missing something?\r\n\r\n\r\n\r\nNumbers from \"make elapsed\", so seconds, then megabytes resident memory set.\r\n\r\nNUM_CORES=48\r\n\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017246 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060673\r\nNUM_CORES=24\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017516 \u00a0 \u00a0 \u00a0 \u00a0 \u00a061012\r\nNUM_CORES=12\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a028831 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060868\r\nNUM_CORES=6\r\n\r\nStill it uses more than 64gByte of virtual memory, runs for at least 40000 seconds(didn't finish\u00a0yet, but I finished my investigations here).\r\n\r\n```\r\n\u00a0 \u00a0 PID USER \u00a0 \u00a0 \u00a0PR \u00a0NI \u00a0 \u00a0VIRT \u00a0 \u00a0RES \u00a0 \u00a0SHR S \u00a0%CPU \u00a0%MEM \u00a0 \u00a0 TIME+ COMMAND \u00a0\r\n2368797 oyvind \u00a0 \u00a020 \u00a0 0 \u00a0 76,0g \u00a056,6g \u00a0 1920 R 270,0 \u00a090,4 \u00a0 \u00a0 63,22 openroad\u00a0\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Some rough numbers and takeaways:\r\n\r\nFirst: virtual memory size is the total amount of memory allocated by the process. Resident memory size, measured by make elapsed, is the amount of physical memory in use. Measuring virtual memory size can not be done by the \"time\" command.\r\n\r\n\r\nThe current default policy of using all CPU cores, 48 in my case, vs. 6 below, doesn't have a material difference in memory usage (virtual memory size). I don't have accurate numbers from that, just what I recall from having observed detailed routing in the past on megaboom. In both cases, max resident set is near physical memory(90%+).\r\n\r\nThe speed doesn't improve, nor deteriorate above 24 cores(50%).\r\n\r\nSince I don't care if I use virtual memory, I have to set it up anyway, then, based on the measurement below, it would seem that there is no improved policy that exists for megaboom, for the observable parameters I care about.\r\n\r\nIt is surprising to me that memory usage in detailed routing isn't a function of number of cores. I don't know why, but I always thought so, to the point where I fooled myself to believing I heard it somewhere. Am I missing something?\r\n\r\n\r\n\r\nNumbers from \"make elapsed\", so seconds, then megabytes resident memory set.\r\n\r\nNUM_CORES=48\r\n\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017246 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060673\r\nNUM_CORES=24\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a017516 \u00a0 \u00a0 \u00a0 \u00a0 \u00a061012\r\nNUM_CORES=12\r\n5_3_route \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a028831 \u00a0 \u00a0 \u00a0 \u00a0 \u00a060868\r\nNUM_CORES=6\r\n\r\nStill it uses more than 64gByte of virtual memory, runs for at least 40000 seconds(didn't finish\u00a0yet, but I finished my investigations here).\r\n\r\n```\r\n\u00a0 \u00a0 PID USER \u00a0 \u00a0 \u00a0PR \u00a0NI \u00a0 \u00a0VIRT \u00a0 \u00a0RES \u00a0 \u00a0SHR S \u00a0%CPU \u00a0%MEM \u00a0 \u00a0 TIME+ COMMAND \u00a0\r\n2368797 oyvind \u00a0 \u00a020 \u00a0 0 \u00a0 76,0g \u00a056,6g \u00a0 1920 R 270,0 \u00a090,4 \u00a0 \u00a0 63,22 openroad\u00a0\r\n```\r\n", "date": "2024-05-07T06:41:44Z"}, {"author": "maliberty", "role": "assistant", "message": "Not speeding up over 24 cpu suggests hitting the limit due to serial time per Amdahl.\r\n\r\nI expect most of the memory is in the netlist and segs/vias not the local per thread routing structures.  In any case the RSS can't grow beyond the available memory so any excess would be in the virtual size which isn't measured here.  ", "date": "2024-05-07T13:43:59Z"}, {"author": "maliberty", "role": "assistant", "message": "OR could print vm size as well as rss size if that is useful.  The data is available in /proc's statm (or stat or pid).", "date": "2024-05-07T13:58:00Z"}, {"author": "oharboe", "role": "assistant", "message": "Just one more datapoint. After detailed route completed with NUM_CORES=48, this is reported by \"top\":\r\n\r\n```\r\n    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                \r\n2424810 oyvind    20   0   80,3g  57,8g   9600 D  57,8  92,2     7d+2h openroad      \r\n```\r\n\r\nFrom above, with NUM_CORES=6, essentially no difference.\r\n\r\n```\r\n\u00a0 \u00a0 PID USER \u00a0 \u00a0 \u00a0PR \u00a0NI \u00a0 \u00a0VIRT \u00a0 \u00a0RES \u00a0 \u00a0SHR S \u00a0%CPU \u00a0%MEM \u00a0 \u00a0 TIME+ COMMAND \u00a0\r\n2368797 oyvind \u00a0 \u00a020 \u00a0 0 \u00a0 76,0g \u00a056,6g \u00a0 1920 R 270,0 \u00a090,4 \u00a0 \u00a0 63,22 openroad\u00a0\r\n```\r\n", "date": "2024-05-08T10:53:00Z"}], "date": "2024-05-07T06:41:44Z", "category": "Runtime", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5065", "id": 5065, "title": "howo to run openroad by reading an existing DEF file", "author": "bittnada", "description": "Hello\r\nI have a DEF file in which row, track, components, and pins are written.\r\nThe position of the cells are on the step of global placement, obtained by using another method.\r\nNow, I want to finish the rest of the procedures by modifying \"test/flow.tcl\" file.\r\nI just skipped the steps of pin placement and global placement and  added \"read_def [my_def_fiel}'\", but it did not work.\r\nI will appreciate if anyone let me know how to solve this problem.\r\nThanks,\r\n\r\n", "content": [{"author": "bittnada", "role": "user", "message": "Hello\r\nI have a DEF file in which row, track, components, and pins are written.\r\nThe position of the cells are on the step of global placement, obtained by using another method.\r\nNow, I want to finish the rest of the procedures by modifying \"test/flow.tcl\" file.\r\nI just skipped the steps of pin placement and global placement and  added \"read_def [my_def_fiel}'\", but it did not work.\r\nI will appreciate if anyone let me know how to solve this problem.\r\nThanks,\r\n\r\n", "date": "2024-05-08T03:04:19Z"}, {"author": "maliberty", "role": "assistant", "message": "What happened when it \"did not work\"?  Its not much to go on.", "date": "2024-05-08T05:20:49Z"}, {"author": "bittnada", "role": "assistant", "message": "\r\nSorry for my delayed response.\r\n\r\nI've just conducted a test using gcd_nangate45.tcl, and I've created my own DEF file containing rows, tracks, pins, nets, and components. I performed a simple test by modifying a flow.tcl script to skip buffer insertion, IO placement, Macro Placement, tap cell insertion, power distribution, and global placement, and then adding \"read_def\".\r\n\r\nAfter running gcd_nangate45.tcl, I received the following output:\r\n\r\n====================================================================================\r\nOpenROAD v2.0-13652-g6fc686431 \r\nFeatures included (+) or not (-): +Charts +GPU +GUI +Python\r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\n[INFO ODB-0227] LEF file: Nangate45/Nangate45_tech.lef, created 22 layers, 27 vias\r\n[INFO ODB-0227] LEF file: Nangate45/Nangate45_stdcell.lef, created 135 library cells\r\n[WARNING STA-0441] set_input_delay relative to a clock defined on the same port/pin not allowed.\r\n[INFO IFP-0001] Added 57 rows of 422 site FreePDK45_38x28_10R_NP_162NW_34O.\r\n[INFO ORD-0048] Loading an additional DEF.\r\nError: Chip already exists\r\n[INFO RSZ-0058] Using max wire length 693um.\r\n[INFO RSZ-0039] Resized 41 instances.\r\nPlacement Analysis\r\n---------------------------------\r\ntotal displacement      17739.5 u\r\naverage displacement       49.0 u\r\nmax displacement           62.9 u\r\noriginal HPWL             280.4 u\r\nlegalized HPWL           9839.7 u\r\ndelta HPWL                 3410 %\r\n\r\nworst slack 0.105\r\nworst slack -0.011\r\ntns -0.011\r\n[INFO CTS-0050] Root buffer is BUF_X4.\r\n[INFO CTS-0051] Sink buffer is BUF_X4.\r\n[INFO CTS-0052] The following clock buffers will be used for CTS:\r\n                    BUF_X4\r\n[INFO CTS-0049] Characterization buffer is BUF_X4.\r\n[INFO CTS-0007] Net \"clk\" found for clock \"core_clock\".\r\n[WARNING CTS-0041] Net \"clk\" has 0 sinks. Skipping...\r\n[WARNING CTS-0083] No clock nets have been found.\r\n[INFO CTS-0008] TritonCTS found 0 clock nets.\r\n[WARNING CTS-0082] No valid clock nets in the design.\r\n[INFO RSZ-0058] Using max wire length 693um.\r\nPlacement Analysis\r\n---------------------------------\r\ntotal displacement          0.0 u\r\naverage displacement        0.0 u\r\nmax displacement            0.0 u\r\noriginal HPWL            9839.7 u\r\nlegalized HPWL           9839.7 u\r\ndelta HPWL                    0 %\r\n\r\n[INFO RSZ-0094] Found 1 endpoints with setup violations.\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[WARNING RSZ-0075] makeBufferedNet failed for driver _393_/ZN\r\n[INFO RSZ-0041] Resized 5 instances.\r\n[INFO RSZ-0043] Swapped pins on 2 instances.\r\n[INFO RSZ-0033] No hold violations found.\r\nworst slack 0.106\r\nworst slack 0.000\r\ntns 0.000\r\nPlacement Analysis\r\n---------------------------------\r\ntotal displacement         91.3 u\r\naverage displacement        0.3 u\r\nmax displacement            6.4 u\r\noriginal HPWL            9840.8 u\r\nlegalized HPWL           9925.0 u\r\ndelta HPWL                    1 %\r\n\r\n[INFO DRT-0149] Reading tech and libs.\r\n\r\nUnits:                2000\r\nNumber of layers:     21\r\nNumber of macros:     135\r\nNumber of vias:       27\r\nNumber of viarulegen: 19\r\n\r\nSignal 11 received\r\nStack trace:\r\n 0# 0x0000564758181A44 in /mnt/work/OpenROAD/bin/bin/openroad\r\n 1# 0x00007F4028F54F10 in /lib/x86_64-linux-gnu/libc.so.6\r\n 2# odb::dbTechVia::getTopLayer() in /mnt/work/OpenROAD/bin/bin/openroad\r\n 3# odb::dbWireEncoder::addTechVia(odb::dbTechVia*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 4# drt::TritonRoute::stackVias(odb::dbBTerm*, int, int, bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 5# drt::TritonRoute::processBTermsAboveTopLayer(bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 6# drt::TritonRoute::initDesign() in /mnt/work/OpenROAD/bin/bin/openroad\r\n 7# drt::TritonRoute::pinAccess(std::vector<odb::dbInst*, std::allocator<odb::dbInst*> > const&) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 8# pin_access_cmd(char const*, char const*, char const*, int, int) in /mnt/work/OpenROAD/bin/bin/openroad\r\n 9# 0x00005647589E491B in /mnt/work/OpenROAD/bin/bin/openroad\r\n10# TclNRRunCallbacks in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n11# 0x00007F402E79BFBA in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n12# Tcl_EvalEx in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n13# Tcl_Eval in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n14# gui::TclCmdInputWidget::executeCommand(QString const&, bool, bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n15# gui::CmdInputWidget::handleEnterKeyPress(QKeyEvent*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n16# gui::TclCmdInputWidget::keyPressEvent(QKeyEvent*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n17# QWidget::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n18# QFrame::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n19# QAbstractScrollArea::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n20# QPlainTextEdit::event(QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n21# QApplicationPrivate::notify_helper(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n22# QApplication::notify(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n23# QCoreApplication::notifyInternal2(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n24# 0x00007F402B1357B5 in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n25# QApplicationPrivate::notify_helper(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n26# QApplication::notify(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n27# QCoreApplication::notifyInternal2(QObject*, QEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n28# QGuiApplicationPrivate::processKeyEvent(QWindowSystemInterfacePrivate::KeyEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5\r\n29# QGuiApplicationPrivate::processWindowSystemEvent(QWindowSystemInterfacePrivate::WindowSystemEvent*) in /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5\r\n30# QWindowSystemInterface::sendWindowSystemEvents(QFlags<QEventLoop::ProcessEventsFlag>) in /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5\r\n31# 0x00007F4022595260 in /usr/lib/x86_64-linux-gnu/libQt5XcbQpa.so.5\r\n32# g_main_context_dispatch in /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n33# 0x00007F402783C770 in /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n34# g_main_context_iteration in /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n35# QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n36# QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n37# QCoreApplication::exec() in /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n38# gui::startGui(int&, char**, Tcl_Interp*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) in /mnt/work/OpenROAD/bin/bin/openroad\r\n39# ord::tclAppInit(Tcl_Interp*) in /mnt/work/OpenROAD/bin/bin/openroad\r\n40# Tcl_MainEx in /usr/lib/x86_64-linux-gnu/libtcl8.6.so\r\n41# main in /mnt/work/OpenROAD/bin/bin/openroad\r\n42# __libc_start_main in /lib/x86_64-linux-gnu/libc.so.6\r\n43# _start in /mnt/work/OpenROAD/bin/bin/openroad\r\n================================================================================================\r\n\r\nI also examined the source codes and realized that the testing approach I employed did not yield the desired results. However, I am unsure about how to proceed from the step after global placement by reading the DEF file.\r\n\r\nThanks.", "date": "2024-05-09T06:10:08Z"}], "date": "2024-05-08T03:04:19Z", "category": "Configuration", "subcategory": "Initialization from existing DEF", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3531", "id": 3531, "title": "UPF support", "author": "kareefardi", "description": "Is https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/upf a work in progress (it doesn't have documentation). If it is, is it planned to have it supported? ", "content": [{"author": "kareefardi", "role": "user", "message": "Is https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/upf a work in progress (it doesn't have documentation). If it is, is it planned to have it supported? ", "date": "2023-06-26T14:57:14Z"}, {"author": "maliberty", "role": "assistant", "message": "UPF support is a work in progress.  The reader in upf/ works but the rest of the tool needs to support it.", "date": "2023-06-26T15:18:44Z"}, {"author": "maliberty", "role": "assistant", "message": "I think the last remaining piece was pdn inserting the power switches.  @gadfort would you update on this?", "date": "2024-05-08T16:51:05Z"}], "date": "2023-06-26T14:57:14Z", "category": "Feature Request", "subcategory": "UPF support", "Tool": "Unified Power Format (UPF)"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/5041", "id": 5041, "title": "Write macro placement position to a tcl file", "author": "vijayank88", "description": "Similar to `write_pin_placement` option, is there a option to write macro placement position while using automatic macro placement.\r\nSo that macro position will be re-used for some specific requirement with manual macro placement again.", "content": [{"author": "vijayank88", "role": "user", "message": "Similar to `write_pin_placement` option, is there a option to write macro placement position while using automatic macro placement.\r\nSo that macro position will be re-used for some specific requirement with manual macro placement again.", "date": "2024-05-03T10:30:40Z"}, {"author": "maliberty", "role": "assistant", "message": "This is more of an issue than a discussion", "date": "2024-05-03T17:16:41Z"}, {"author": "maliberty", "role": "assistant", "message": "https://github.com/The-OpenROAD-Project/OpenROAD/issues/5043", "date": "2024-05-03T17:59:43Z"}, {"author": "AcKoucher", "role": "assistant", "message": "@vijayank88 FYI, there's the `write_macro_placement` flag in mpl2. However it's currently deprecated due to a new OR command for general macro placement writing that was implemented in #4557.\r\n\r\nI've opened #5046 to update the flag so that mpl2 will write the entire macro placement instead of only those macros that it placed.", "date": "2024-05-06T15:22:55Z"}], "date": "2024-05-03T10:30:40Z", "category": "Feature Request", "subcategory": "Macro placement output", "Tool": "Hierarchical Macro Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4987", "id": 4987, "title": "Router violation with proprietary PDK", "author": "sebinho", "description": "Hi Guys,\r\n\r\nI am posting here regarding an issue I am struggling with regarding the detailed routing of OR.\r\nI am using a proprietary PDK, so it is difficult for me to share a complete example of the issue.\r\n\r\nI am constantly running into metal spacing violations on M1 with my 45nm PDK. I systematically get the same error, typically on the same net(s). Because of that, the router always goes up to the max number of iterations (64) and never finds a solution.\r\nHere is a snapshot of the issue at hand. \r\n\r\n![Screenshot from 2024-04-23 17-07-03](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/760a2c49-1fcb-4f10-aa12-ccccc09f12c9)\r\n\r\nYou can see on the bottom orange rectangle (this is a VIA between M1 and M2), that the metal spacing is 0.06um. This violates the metal spacing rule of 0.07. M1 is in dark blue. You can see M2 in cyan in the picture below.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/6a93f3e6-8420-4407-8a70-54afad90ffb2)\r\n \r\nWhat I noticed is that the routing tool is able to select between 2 types of vias (on its own). Sometimes he selects a horizontal via (like the one that is problematic) and sometimes he takes a vertical via (like the one show in the upper part of the image where the 0.07um rule is respected).\r\nThe solution to the problem is quite straightforward when done manually. Simply replace the problematic via with its vertical version. But somehow the tool cannot see that.\r\n\r\nIs there something that can be done for such an issue @maliberty ? I understand that it is not easy to debug as I cannot share my PDK . Apologies for that.\r\nThanks for your help.", "content": [{"author": "sebinho", "role": "user", "message": "Hi Guys,\r\n\r\nI am posting here regarding an issue I am struggling with regarding the detailed routing of OR.\r\nI am using a proprietary PDK, so it is difficult for me to share a complete example of the issue.\r\n\r\nI am constantly running into metal spacing violations on M1 with my 45nm PDK. I systematically get the same error, typically on the same net(s). Because of that, the router always goes up to the max number of iterations (64) and never finds a solution.\r\nHere is a snapshot of the issue at hand. \r\n\r\n![Screenshot from 2024-04-23 17-07-03](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/760a2c49-1fcb-4f10-aa12-ccccc09f12c9)\r\n\r\nYou can see on the bottom orange rectangle (this is a VIA between M1 and M2), that the metal spacing is 0.06um. This violates the metal spacing rule of 0.07. M1 is in dark blue. You can see M2 in cyan in the picture below.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/6a93f3e6-8420-4407-8a70-54afad90ffb2)\r\n \r\nWhat I noticed is that the routing tool is able to select between 2 types of vias (on its own). Sometimes he selects a horizontal via (like the one that is problematic) and sometimes he takes a vertical via (like the one show in the upper part of the image where the 0.07um rule is respected).\r\nThe solution to the problem is quite straightforward when done manually. Simply replace the problematic via with its vertical version. But somehow the tool cannot see that.\r\n\r\nIs there something that can be done for such an issue @maliberty ? I understand that it is not easy to debug as I cannot share my PDK . Apologies for that.\r\nThanks for your help.", "date": "2024-04-23T15:24:22Z"}, {"author": "maliberty", "role": "assistant", "message": "You said to goes to 64 iterations.  Does drt report these violation itself or are they only seen by another drc tool?  \r\n\r\nPrecision Innovations does provide paid support under NDA if that makes sense for you.\r\n\r\n@osamahammad21 any thoughts?", "date": "2024-04-23T16:27:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Does the drc straddle the boundary of two different cells?  (ie the pins are in different instances)", "date": "2024-04-23T17:12:35Z"}, {"author": "sebinho", "role": "assistant", "message": "I reran the tool with different settings and 1 get 1 violation for metal spacing. It is a different location in my design but once again it seems to be at the boundary between 2 different cells. See below red line for separation.\r\n\r\n![via_issue2](https://github.com/The-OpenROAD-Project/OpenROAD/assets/5883454/6e9d737f-dd9b-4bf7-aa9e-4184a338228b)\r\n\r\nAny clue how this could be solved?\r\nThanks a lot", "date": "2024-04-23T18:28:18Z"}, {"author": "sebinho", "role": "assistant", "message": "@maliberty do you have any recommendations on where to look first in order to speed up the routing for a proprietary PDK?\r\nNow that I added an extra layer of complexity (custom DEF file to specify core/die size and pins locations, custom power grid), it often crash due to not being able to access pins. Or it takes forever to eventually not solve all violations. \r\nShould I incrementally try to simplify the technology (.LEF) file? Any other things I should look into?\r\nMy test design (very small module) goes through Sky130/freepdk45 in a matter of minutes even with a very similar DEF file and power grid\u2026\r\nThanks for your help ", "date": "2024-04-30T15:25:14Z"}, {"author": "maliberty", "role": "assistant", "message": "> Should I have the assumption that it is possible to port any rules deck with OpenROAD?\r\n\r\nThat's probably too strong a statement (eg we don't support all rules below 12nm) but for older nodes it should be possible.  More rules certainly will slow down the router if they make it more difficult to find legal solutions.\r\n\r\n@osamahammad21 am I correct in thinkin we support ADJACENTCUTS / WITHIN?", "date": "2024-05-02T13:59:09Z"}], "date": "2024-04-23T15:24:22Z", "category": "Runtime", "subcategory": "Routing violations", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4956", "id": 4956, "title": "OpenROAD Build From Sources", "author": "sebinho", "description": "Hello Guys,\r\n\r\nI am using ArchLinux and I have been using OpenROAD from an install package from the AUR. \r\nThis install does not seem to work anymore (it was working on my setup a couple of weeks ago).\r\n\r\nSo I am trying to build from sources but I get the same errors as I get with the AUR package:\r\n```\r\n[ 74%] Building CXX object src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/src/gui/src/scriptWidget.cpp:49:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\nmake[2]: *** [src/gui/CMakeFiles/gui.dir/build.make:226: src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 74%] Building CXX object src/rcx/src/CMakeFiles/rcxUnitTest.dir/__/test/ext2dBoxTest.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/../../../../../src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/moc_tclCmdInputWidget.cpp:10,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/mocs_compilation.cpp:23:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\n[ 74%] Linking CXX executable dpl_test\r\n```\r\n\r\nSeems to be something related to Swig with TCL. Does anybody know what the problem is?\r\n\r\nThanks for your help\r\n\r\n", "content": [{"author": "sebinho", "role": "user", "message": "Hello Guys,\r\n\r\nI am using ArchLinux and I have been using OpenROAD from an install package from the AUR. \r\nThis install does not seem to work anymore (it was working on my setup a couple of weeks ago).\r\n\r\nSo I am trying to build from sources but I get the same errors as I get with the AUR package:\r\n```\r\n[ 74%] Building CXX object src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/src/gui/src/scriptWidget.cpp:49:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\nmake[2]: *** [src/gui/CMakeFiles/gui.dir/build.make:226: src/gui/CMakeFiles/gui.dir/src/scriptWidget.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 74%] Building CXX object src/rcx/src/CMakeFiles/rcxUnitTest.dir/__/test/ext2dBoxTest.cpp.o\r\nIn file included from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/../../../../../src/gui/src/tclCmdInputWidget.h:50,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/UVLADIE3JM/moc_tclCmdInputWidget.cpp:10,\r\n                 from /home/zed/repos/OpenROAD/build/src/gui/gui_autogen/mocs_compilation.cpp:23:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h: In function \u2018int SWIG_Tcl_GetArgs(Tcl_Interp*, int, Tcl_Obj* const*, const char*, ...)\u2019:\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:11: error: \u2018Tcl_Size\u2019 was not declared in this scope; did you mean \u2018Tcl_Time\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |           ^~~~~~~~\r\n      |           Tcl_Time\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:21: error: \u2018vlptr\u2019 was not declared in this scope; did you mean \u2018vptr\u2019?\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                     ^~~~~\r\n      |                     vptr\r\n/home/zed/repos/OpenROAD/build/src/gui/tclSwig.h:1623:40: error: expected primary-expression before \u2018)\u2019 token\r\n 1623 |           Tcl_Size *vlptr = (Tcl_Size *) va_arg(ap, void *);\r\n      |                                        ^\r\n[ 74%] Linking CXX executable dpl_test\r\n```\r\n\r\nSeems to be something related to Swig with TCL. Does anybody know what the problem is?\r\n\r\nThanks for your help\r\n\r\n", "date": "2024-04-16T10:43:40Z"}, {"author": "maliberty", "role": "assistant", "message": "What version of TCL and swig do you have installed?", "date": "2024-04-16T15:29:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Perhaps something is different in 4.2.1 as with 4.1.0 I don't see any used of Tcl_Size in tclSwig.h.  Is it possible for you to downgrade?", "date": "2024-04-16T16:39:45Z"}, {"author": "stefanottili", "role": "assistant", "message": "Does anybody know how to downgrade swig on MacOS M1 homebrew ?\r\nThe current SWIG Version 4.2.1 causes the same error here.\r\nCan be worked around by commenting out the two offending lines, they seem to be in an error path ...  ", "date": "2024-04-17T03:14:52Z"}], "date": "2024-04-16T10:43:40Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4845", "id": 4845, "title": "Is [read_def -floorplan_initialize ] expected to unset [set_max_transition] and [set_max_capacitance] from sdc file?", "author": "b62833", "description": "Before I file a bug, I want to make sure this is unexpected behavior.\r\n\r\nIn my sdc file I do a \r\n```\r\n\r\nset_max_transition [exp $clk_period * 0.20] [current_design]\r\nset_max_capacitance 30 [current_design]\r\n```\r\n\r\nand then read a floorplan by setting FLOORPLAN_DEF.\r\n\r\nWhen I run through floorplanning, 2_floorplan.sdc doesn't have those commands. I've narrowed it down to floorplan.tcl's `read_def -floorplan_initialize` that's removing these. Max transition and max capacitance can't be set in DEF if I remember correctly, so this is unexpected. Is this the desired tool behavior?\r\n\r\n", "content": [{"author": "b62833", "role": "user", "message": "Before I file a bug, I want to make sure this is unexpected behavior.\r\n\r\nIn my sdc file I do a \r\n```\r\n\r\nset_max_transition [exp $clk_period * 0.20] [current_design]\r\nset_max_capacitance 30 [current_design]\r\n```\r\n\r\nand then read a floorplan by setting FLOORPLAN_DEF.\r\n\r\nWhen I run through floorplanning, 2_floorplan.sdc doesn't have those commands. I've narrowed it down to floorplan.tcl's `read_def -floorplan_initialize` that's removing these. Max transition and max capacitance can't be set in DEF if I remember correctly, so this is unexpected. Is this the desired tool behavior?\r\n\r\n", "date": "2024-03-23T23:52:02Z"}, {"author": "maliberty", "role": "assistant", "message": "I would consider it unexpected so go ahead and open an issue with a test case", "date": "2024-03-24T19:02:24Z"}, {"author": "b62833", "role": "assistant", "message": "Over the weekend I upgraded to OpenROAD version 2.0-13286-gebcc5196e and it works now.\r\n\r\nIt was broken in the version v2.0-11493-gaddecc2bd that I'd been using before.\r\n\r\nWe're good now.", "date": "2024-04-18T03:13:19Z"}], "date": "2024-03-23T23:52:02Z", "category": "Bug", "subcategory": "Unexpected behavior", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4942", "id": 4942, "title": "unplaced macros during PDN stage", "author": "vijayank88", "description": "@oharboe \r\nI came across your test case https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pdn/test/macros_cells_not_fixed.ok\r\nI am also facing similar error with `macro_placement` command followed by PDN stage throws error.\r\n```\r\n[WARNING PDN-0234] spm_inst_0 has not been placed and fixed.\r\n[WARNING PDN-0234] spm_inst_1 has not been placed and fixed.\r\n[ERROR PDN-0235] Design has unplaced macros.\r\nPDN-0235\r\n```\r\nHow to resolve this error?\r\nThanks in advance...", "content": [{"author": "vijayank88", "role": "user", "message": "@oharboe \r\nI came across your test case https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pdn/test/macros_cells_not_fixed.ok\r\nI am also facing similar error with `macro_placement` command followed by PDN stage throws error.\r\n```\r\n[WARNING PDN-0234] spm_inst_0 has not been placed and fixed.\r\n[WARNING PDN-0234] spm_inst_1 has not been placed and fixed.\r\n[ERROR PDN-0235] Design has unplaced macros.\r\nPDN-0235\r\n```\r\nHow to resolve this error?\r\nThanks in advance...", "date": "2024-04-12T07:43:32Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @vijayank88 I dont recall making this test case...", "date": "2024-04-12T07:46:52Z"}, {"author": "gadfort", "role": "assistant", "message": "@vijayank88 it means you have macros in your design that have not been placed. PDN will only consider placed and locked macros and therefore requires all macros to be locked. Look at your design to find the two macros that have not been placed and locked and fix that ", "date": "2024-04-12T12:10:47Z"}], "date": "2024-04-12T07:43:32Z", "category": "Runtime", "subcategory": "Macro placement issue", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4890", "id": 4890, "title": "Defaults for PPL values?", "author": "donn", "description": "For these flags in PPL:\r\n\r\n* `set_pin_length -hor_length`\r\n* `set_pin_length -ver_length`\r\n* `place_pins -min_distance`\r\n\r\nIt isn't super clear from the documentation what the default values are/where they would be obtained from otherwise. Does anyone have any idea? ", "content": [{"author": "donn", "role": "user", "message": "For these flags in PPL:\r\n\r\n* `set_pin_length -hor_length`\r\n* `set_pin_length -ver_length`\r\n* `place_pins -min_distance`\r\n\r\nIt isn't super clear from the documentation what the default values are/where they would be obtained from otherwise. Does anyone have any idea? ", "date": "2024-04-02T18:35:57Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please respond when you can", "date": "2024-04-02T20:03:26Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@donn I created this PR https://github.com/The-OpenROAD-Project/OpenROAD/pull/4891 updating the documentation with this data. In summary, the default length of the pins is the minimum necessary to respect the minimum area of the layer a pin was placed, considering that the width of a pin is the min width of the layer the pin was placed.\r\n\r\nAbout the min distance, the default is the length of two tracks between each pin.", "date": "2024-04-02T21:12:44Z"}], "date": "2024-04-02T18:35:57Z", "category": "Query", "subcategory": "Parameter defaults", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4417", "id": 4417, "title": "How do I get the power for each Instance\uff1f", "author": "LT-HB", "description": "How do I get the power for each Instance\uff1fI have no power report after reading the odb file in gui.\r\n![power_report](https://github.com/The-OpenROAD-Project/OpenROAD/assets/107295305/d747e889-1ea2-448e-ba0b-11b6c08e2b52)\r\n\r\n", "content": [{"author": "LT-HB", "role": "user", "message": "How do I get the power for each Instance\uff1fI have no power report after reading the odb file in gui.\r\n![power_report](https://github.com/The-OpenROAD-Project/OpenROAD/assets/107295305/d747e889-1ea2-448e-ba0b-11b6c08e2b52)\r\n\r\n", "date": "2023-12-20T08:38:21Z"}, {"author": "maliberty", "role": "assistant", "message": "```report_power -instances [get_cells *]``` should do it.  ", "date": "2023-12-20T17:31:28Z"}, {"author": "b224hisl", "role": "assistant", "message": "can I get the power of each module?", "date": "2024-03-28T11:11:04Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no per-module report today.  If you can express what you want in terms of instance names you could do something like `report_power -instances [get_cells a/b/*]`", "date": "2024-03-28T14:53:44Z"}, {"author": "maliberty", "role": "assistant", "message": "get_cells comes from SDC where a 'cell' is another (poor) name for an instance.", "date": "2024-03-28T14:55:00Z"}], "date": "2023-12-20T08:38:21Z", "category": "Query", "subcategory": "Power analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4819", "id": 4819, "title": "gui highlight_inst", "author": "gyu511", "description": "hello.\r\nIn the gui, highlight_inst only supports up to 8 groups, so I would like to expand it to support more groups.\r\nSo I added to HighlightGroupDialog in OpenROAD/src/gui/src/highlightGroupDialog.cpp and added color in OpenROAD/src/gui/include/gui/gui.h and finally button in OpenROAD/src/gui/ui/highlightGroupDlg.ui I also added it, but it doesn't work. What should I do?", "content": [{"author": "gyu511", "role": "user", "message": "hello.\r\nIn the gui, highlight_inst only supports up to 8 groups, so I would like to expand it to support more groups.\r\nSo I added to HighlightGroupDialog in OpenROAD/src/gui/src/highlightGroupDialog.cpp and added color in OpenROAD/src/gui/include/gui/gui.h and finally button in OpenROAD/src/gui/ui/highlightGroupDlg.ui I also added it, but it doesn't work. What should I do?", "date": "2024-03-20T08:06:37Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you send a pointer to your branch with the changes?  How does it not work?", "date": "2024-03-20T14:44:21Z"}, {"author": "maliberty", "role": "assistant", "message": "Once this works I hope you would be willing to make a PR so we can incorporate it in OR.", "date": "2024-03-20T14:45:07Z"}], "date": "2024-03-20T08:06:37Z", "category": "Feature Request", "subcategory": "Enhance GUI functionality", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4422", "id": 4422, "title": "Creating an FEOL Class in OpenROAD", "author": "chetanyagoyal", "description": "This is in regard to [https://github.com/chipsalliance/ideas/blob/main/gsoc-2023-ideas.md#create-feol-classes-in-openroad-and-a-gds-writer](url), a GSoC project proposed in 2023. I would like to take this up for 2024's run of GSoC, and was **wondering what the project entails**. For reference, I have been contributing to OpenFASoC for a large part of the year and have good knowledge of their codebase, and some knowledge of OpenROAD-flow-scripts", "content": [{"author": "chetanyagoyal", "role": "user", "message": "This is in regard to [https://github.com/chipsalliance/ideas/blob/main/gsoc-2023-ideas.md#create-feol-classes-in-openroad-and-a-gds-writer](url), a GSoC project proposed in 2023. I would like to take this up for 2024's run of GSoC, and was **wondering what the project entails**. For reference, I have been contributing to OpenFASoC for a large part of the year and have good knowledge of their codebase, and some knowledge of OpenROAD-flow-scripts", "date": "2023-12-20T16:55:49Z"}, {"author": "maliberty", "role": "assistant", "message": "@msaligane was the mentor in 2023 so it would be good to get his input.  I expect the hardest part would be dealing with hierarchy (aref/sref) as OR's odb is rather flat in its lef/def orientation.   New layers shouldn't be too hard.  The rest of the system will have to be more aware of them and the GUI will need some updating.\r\n\r\nI would be good to have a specific use case beyond just read/write gds.  There should be some value added by doing it in OR as opposed to klayout or gdsfactory.", "date": "2023-12-20T17:26:59Z"}, {"author": "stefanottili", "role": "assistant", "message": "Having openroad write gds/oas would be useful, because it reduces the file size compared to odb.\r\n\r\nBut I would recommend not to duplicate the ability to read and collect all the gds/oas pieces coming from various other sources. This functionality already exists in strm2oas.", "date": "2023-12-21T21:40:03Z"}, {"author": "msaligane", "role": "assistant", "message": "We have been looking into this in the previous GSOC. Hopefully, this project gets approved for Chetanya to finish the project.", "date": "2023-12-22T16:50:56Z"}], "date": "2023-12-20T16:55:49Z", "category": "Feature Request", "subcategory": "FEOL integration", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4672", "id": 4672, "title": "High congestion - asap7 . Many OA and AO combinational cells in the congestion areas.", "author": "Mudbhatkal", "description": "I'm seeing high congestion at global place for a design using asap7 libraries on Openroad.  I tried using cell padding with 8 cell sites on the left and right. It helped reduce the congestion a bit, but not enough. I have set a max fanout and tightened the max capacitance in addition to the previous changes, and congestion is still there. I also changed the flow to congestion-driven instead of timing-driven and used the routability check overflow option but still see the congestion although it has decreased slightly. Any suggestions?\u00a0", "content": [{"author": "Mudbhatkal", "role": "user", "message": "I'm seeing high congestion at global place for a design using asap7 libraries on Openroad.  I tried using cell padding with 8 cell sites on the left and right. It helped reduce the congestion a bit, but not enough. I have set a max fanout and tightened the max capacitance in addition to the previous changes, and congestion is still there. I also changed the flow to congestion-driven instead of timing-driven and used the routability check overflow option but still see the congestion although it has decreased slightly. Any suggestions?\u00a0", "date": "2024-02-15T13:55:08Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you provide a test case or at least some images of the problem?", "date": "2024-02-15T16:03:41Z"}, {"author": "Mudbhatkal", "role": "assistant", "message": "The RTL was generated through [OpenASIP ](http://openasip.org/)\r\nBy testcase do you mean odb file ? If not, how do I generate one ?\r\n<img width=\"751\" alt=\"new_Cong\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/19781271/f02dbc11-ef8d-464c-b763-647caff65122\">\r\nThe image shows estimated congestion and is captured after detailed placement. \r\n", "date": "2024-02-18T22:05:05Z"}, {"author": "maliberty", "role": "assistant", "message": "`make global_place_issue` should package the test case.  Do not post if you are using any confidential data.", "date": "2024-02-18T23:02:00Z"}, {"author": "Mudbhatkal", "role": "assistant", "message": "Here is the testcase : https://tuni-my.sharepoint.com/:u:/g/personal/pooja_mudbhatkal_tuni_fi/EVDGc1VOxIZNhEfmDVLf1JcB56kh2ipprLFusncKTGhAWA?e=NnEMJh \r\nPlease let me know if you have access issues", "date": "2024-02-20T16:44:03Z"}, {"author": "maliberty", "role": "assistant", "message": "This design does have an very unusual distribution of cell types.  I think you will need to enlarge the block and lower the placement density to compensate for it.\r\n\r\n@gudeh this could be an interesting case to test your routability improvements on.", "date": "2024-02-22T03:38:31Z"}, {"author": "maliberty", "role": "assistant", "message": "Btw, what sort of block is this?", "date": "2024-02-22T03:39:21Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi @Mudbhatkal, I noticed from the log files in the make issue you uploaded that you used yosys version 0.33. Have you tried other Yosys versions? ORFS is currently using 0.38 from a recent update. If you have a local installation of ORFS you can use the 'build_openroad.sh' script. I usually use the following: `./build_openroad.sh --local`.\r\n\r\nMaybe this would provide a different set of logic gates and a different routing scenario. For some reason I was not able to run Yosys on my end with your files.", "date": "2024-02-27T22:40:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Have you tried lowering PLACE_DENSITY as I suggested earlier?", "date": "2024-02-29T16:22:55Z"}, {"author": "stefanottili", "role": "assistant", "message": "vliw cores I\u2019ve seen in the past had wide and deep muxes around the registers. If these are not isolated in a separate rtl hierarchy, synthesis tools tend to ignore mux levels and generate ao/oa spagetti netlists that no R&R tool can untangle.\r\nPhysical synthesis tools are supposed to be able to give you a better netlist, but since yosys isn\u2019t one of them, you\u2019ll have to rewrite the rtl of the muxes to get a P&R friendly netlist.\r\nPut each mux level in a separate rtl hierarchy and make sure that synthesis doesn\u2019t flatten them. Separate enables per level of muxing. You should be able to identify mux structures in your netlist.\r\nP&R tools are usually bad at visualizing cone connectivity, but OR has timing critically color coded cone viewing as part of the timing debug. Use it after placement to look at your muxes.", "date": "2024-03-01T16:58:47Z"}, {"author": "Mudbhatkal", "role": "assistant", "message": "[big_tta_fixed.zip](https://github.com/The-OpenROAD-Project/OpenROAD/files/14486076/big_tta_fixed.zip)\r\nThis RTL has some fixes but I still see congestion issues. Also tried with synth_hierarchial set to 1. Attaching it here in case someone finds it useful.", "date": "2024-03-04T19:07:29Z"}], "date": "2024-02-15T13:55:08Z", "category": "Runtime", "subcategory": "Congestion issues", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4758", "id": 4758, "title": "flipflop + inverter + rebuffer + output buffer", "author": "oharboe", "description": "Is the \"rebuffer\" buffer superfluous here?\r\n\r\nThe \"rebuffer\" buffer does not exist in placement, only after CTS.\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_final`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7a197d43-9270-4233-bebd-620b9cfd5fc8)\r\n\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7d45e527-9062-4a14-b4d3-24125d3c0f46)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Is the \"rebuffer\" buffer superfluous here?\r\n\r\nThe \"rebuffer\" buffer does not exist in placement, only after CTS.\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_final`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7a197d43-9270-4233-bebd-620b9cfd5fc8)\r\n\r\n\r\n`make DESIGN_CONFIG=designs/asap7/mock-array/Element/config.mk gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7d45e527-9062-4a14-b4d3-24125d3c0f46)\r\n", "date": "2024-03-10T08:47:04Z"}, {"author": "maliberty", "role": "assistant", "message": "It is there for timing optimization as the path has negative slack which is addressed post-CTS.  Is there a reason to think it superfluous?", "date": "2024-03-10T16:41:35Z"}, {"author": "oharboe", "role": "assistant", "message": "No extra buffers after removing `set_load -pin_load 10 [all_outputs]`:\r\n\r\nUntar  [cts-nobuffer.tar.gz](https://github.com/The-OpenROAD-Project/OpenROAD/files/14554686/cts-nobuffer.tar.gz)\r\n\r\n```\r\n$ ./run-me-mock-array_Element-asap7-base.sh\r\nOpenROAD v2.0-12488-g85f541bb6\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n  74.98   74.98   clock network delay (propagated)\r\n   0.00   74.98 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  45.97  120.95 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  13.06  134.01 ^ _435_/Y (INVx4_ASAP7_75t_R)\r\n  18.04  152.05 ^ output265/Y (BUFx2_ASAP7_75t_R)\r\n   0.01  152.06 ^ io_lsbOuts_7 (out)\r\n         152.06   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n  70.00  370.00   clock network delay (ideal)\r\n -20.00  350.00   clock uncertainty\r\n   0.00  350.00   clock reconvergence pessimism\r\n-240.00  110.00   output external delay\r\n         110.00   data required time\r\n---------------------------------------------------------\r\n         110.00   data required time\r\n        -152.06   data arrival time\r\n---------------------------------------------------------\r\n         -42.06   slack (VIOLATED)\r\n```\r\n", "date": "2024-03-11T06:57:00Z"}, {"author": "maliberty", "role": "assistant", "message": "> How do I stop \"don't touch\" from removing the output buffer so I get the comparison I'm after?\r\n\r\nSet don't touch after the output buffer is created.\r\n\r\n> If I delete set_load -pin_load 10 [all_outputs], the extra buffer goes away.\r\n\r\nProbably the timing improves and the net no longer needs repair.  Similarly with the set_driving_cell changing the timing.", "date": "2024-03-11T15:44:54Z"}], "date": "2024-03-10T08:47:04Z", "category": "Runtime", "subcategory": "Unexpected optimization", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4743", "id": 4743, "title": "Using multiple DBs?", "author": "donn", "description": "In issue #4692:\r\n\r\n> If you use `db = odb.dbDatabase.create()` then you get a db with no Logger that can't issue messages. I suggest you just use the API that works.\r\n\r\nThe problem with that is while `odb.dbDatabase.create()` allows multiple DBs to exist simultaneously, the new API does not. We do have a number of scripts that operate on two databases simultaneously. Problem is, now we have three ways of doing this, none of which are ideal:\r\n\r\n1. This fails with \"No logger is installed in odb.\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_old(db1_in, db2_in, db_out):\r\n\t    db1 = odb.dbDatabase.create()\r\n\t    db1 = odb.read_db(db1, db1_in)\r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t    odb.write_db(db1, db_out)\r\n\t```\r\n\r\n2. This fails with \"You can't load a new db file as the db is already populated\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_new(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    ord_tech2 = Tech()\r\n\t    design2 = Design(ord_tech2)\r\n\t    design2.readDb(db2_in)\r\n\t    \r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\n3. This works, but is horrifying and is likely to fail for multiple reasons in the future.\r\n\r\n\t```python3\r\n\tdef _2r1w_db_mix(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2.setLogger(design1.getLogger())\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t\r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\nAdvice?", "content": [{"author": "donn", "role": "user", "message": "In issue #4692:\r\n\r\n> If you use `db = odb.dbDatabase.create()` then you get a db with no Logger that can't issue messages. I suggest you just use the API that works.\r\n\r\nThe problem with that is while `odb.dbDatabase.create()` allows multiple DBs to exist simultaneously, the new API does not. We do have a number of scripts that operate on two databases simultaneously. Problem is, now we have three ways of doing this, none of which are ideal:\r\n\r\n1. This fails with \"No logger is installed in odb.\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_old(db1_in, db2_in, db_out):\r\n\t    db1 = odb.dbDatabase.create()\r\n\t    db1 = odb.read_db(db1, db1_in)\r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t    odb.write_db(db1, db_out)\r\n\t```\r\n\r\n2. This fails with \"You can't load a new db file as the db is already populated\"\r\n\r\n\t```python3\r\n\tdef _2r1w_db_new(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    ord_tech2 = Tech()\r\n\t    design2 = Design(ord_tech2)\r\n\t    design2.readDb(db2_in)\r\n\t    \r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\n3. This works, but is horrifying and is likely to fail for multiple reasons in the future.\r\n\r\n\t```python3\r\n\tdef _2r1w_db_mix(db1_in, db2_in, db_out):\r\n\t    ord_tech1 = Tech()\r\n\t    design1 = Design(ord_tech1)\r\n\t    design1.readDb(db1_in)\r\n\t    \r\n\t    db2 = odb.dbDatabase.create()\r\n\t    db2.setLogger(design1.getLogger())\r\n\t    db2 = odb.read_db(db2, db2_in)\r\n\t\r\n\t    design1.writeDb(db_out)\r\n\t```\r\n\r\nAdvice?", "date": "2024-03-06T11:13:29Z"}, {"author": "maliberty", "role": "assistant", "message": "I'm curious what your use case is for multiple dbs.  I guess you are only use odb APIs as nothing else in OR is likely to work in such a scenario.  \r\n\r\nWe could add an API to setup the logger.", "date": "2024-03-06T15:59:38Z"}, {"author": "maliberty", "role": "assistant", "message": "Does this satisfy your needs\r\n```\r\nfrom openroad import Design, Tech\r\nimport odb\r\n\r\nord_tech1 = Tech()\r\ndesign1 = Design(ord_tech1)\r\ndesign1.readDb('odb/test/data/design.odb')\r\n\r\ndb2 = Design.createDetachedDb()\r\ndb2 = odb.read_db(db2, 'odb/test/data/design.odb')\r\n\r\ndesign1.writeDb('db1.odb')\r\nodb.write_db(db2, 'db2.odb')\r\n```", "date": "2024-03-07T23:40:21Z"}, {"author": "maliberty", "role": "assistant", "message": "Done #4749 \r\n\r\nThe odb APIs should be fine.", "date": "2024-03-08T16:22:45Z"}], "date": "2024-03-06T11:13:29Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4742", "id": 4742, "title": "Highlight cells belonging to a module", "author": "scorbetta", "description": "Hello all,\r\n\r\nis there a way in the GUI to highlight all standard cells that belong to a given module within the hierarchy?", "content": [{"author": "scorbetta", "role": "user", "message": "Hello all,\r\n\r\nis there a way in the GUI to highlight all standard cells that belong to a given module within the hierarchy?", "date": "2024-03-06T11:00:44Z"}, {"author": "maliberty", "role": "assistant", "message": "You can use the 'Hierarchy Browser' from the 'Windows' menu.  If you see \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/979243d1-d259-41ed-b50f-7403f9fbffa6)\r\n\r\nclick it to the on the highlighting.  An example:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/5e659e20-c91f-4a76-8c99-544abd423c63)\r\n", "date": "2024-03-06T15:56:54Z"}, {"author": "maliberty", "role": "assistant", "message": "Are you using ORFS?  If so set SYNTH_HIERARCHICAL=1 in your config", "date": "2024-03-06T17:23:06Z"}], "date": "2024-03-06T11:00:44Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4660", "id": 4660, "title": "An inverter + a buffer before an output, superfluous?", "author": "oharboe", "description": "I thought inverters were good at amplifying signals? So is an inverter + buffer on output superfluous?\r\n\r\nI'm not suggesting a change, I'm just trying to learn what is possible/common vs. what OpenROAD is doing.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65b87224-0bb8-497a-bf34-b89ca348d8c7)\r\n\r\nThe buffer is added in resizing.\r\n\r\n1. untar [resize.tar.gz](https://github.com/The-OpenROAD-Project/OpenROAD/files/14265925/resize.tar.gz)\r\n2. `./run-me-mock-array_Element-asap7-base.sh`\r\n3. Enter `report_checks -to io_lsbOuts_7`\r\n\r\n```\r\n$ ./run-me-mock-array_Element-asap7-base.sh \r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer pre report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 105 u^2 6% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 257 input buffers.\r\n[INFO RSZ-0028] Inserted 264 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n[INFO RSZ-0039] Resized 526 instances.\r\nRepair tie lo fanout...\r\nRepair tie hi fanout...\r\n\r\n==========================================================================\r\nreport_floating_nets\r\n--------------------------------------------------------------------------\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 159 u^2 9% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n1423\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n2341\r\n\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  40.03   40.03 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  11.28   51.31 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n  22.51   73.82 ^ output265/Y (BUFx4f_ASAP7_75t_R)\r\n   0.27   74.09 ^ io_lsbOuts_7 (out)\r\n          74.09   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -74.09   data arrival time\r\n---------------------------------------------------------\r\n         145.91   slack (MET)\r\n\r\n\r\nopenroad> \r\n```\r\n\r\n\r\nChecking that this buffer isn't there before resizing:\r\n\r\n```\r\n$ . vars-mock-array_Element-asap7-base.sh \r\n$ ODB_FILE=results/asap7/mock-array_Element/base/3_3_place_gp.odb openroad -no_init -gui scripts/gui.tcl\r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nEstimating parasitics\r\n>>> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx1_ASAP7_75t_R)\r\n  36.60   36.60 v _755_/QN (DFFHQNx1_ASAP7_75t_R)\r\n  17.65   54.25 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n   7.12   61.38 ^ io_lsbOuts_7 (out)\r\n          61.38   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -61.38   data arrival time\r\n---------------------------------------------------------\r\n         158.62   slack (MET)\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I thought inverters were good at amplifying signals? So is an inverter + buffer on output superfluous?\r\n\r\nI'm not suggesting a change, I'm just trying to learn what is possible/common vs. what OpenROAD is doing.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65b87224-0bb8-497a-bf34-b89ca348d8c7)\r\n\r\nThe buffer is added in resizing.\r\n\r\n1. untar [resize.tar.gz](https://github.com/The-OpenROAD-Project/OpenROAD/files/14265925/resize.tar.gz)\r\n2. `./run-me-mock-array_Element-asap7-base.sh`\r\n3. Enter `report_checks -to io_lsbOuts_7`\r\n\r\n```\r\n$ ./run-me-mock-array_Element-asap7-base.sh \r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer pre report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 105 u^2 6% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 257 input buffers.\r\n[INFO RSZ-0028] Inserted 264 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n[INFO RSZ-0039] Resized 526 instances.\r\nRepair tie lo fanout...\r\nRepair tie hi fanout...\r\n\r\n==========================================================================\r\nreport_floating_nets\r\n--------------------------------------------------------------------------\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 159 u^2 9% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n1423\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n2341\r\n\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  40.03   40.03 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  11.28   51.31 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n  22.51   73.82 ^ output265/Y (BUFx4f_ASAP7_75t_R)\r\n   0.27   74.09 ^ io_lsbOuts_7 (out)\r\n          74.09   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -74.09   data arrival time\r\n---------------------------------------------------------\r\n         145.91   slack (MET)\r\n\r\n\r\nopenroad> \r\n```\r\n\r\n\r\nChecking that this buffer isn't there before resizing:\r\n\r\n```\r\n$ . vars-mock-array_Element-asap7-base.sh \r\n$ ODB_FILE=results/asap7/mock-array_Element/base/3_3_place_gp.odb openroad -no_init -gui scripts/gui.tcl\r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nEstimating parasitics\r\n>>> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx1_ASAP7_75t_R)\r\n  36.60   36.60 v _755_/QN (DFFHQNx1_ASAP7_75t_R)\r\n  17.65   54.25 ^ _435_/Y (INVx3_ASAP7_75t_R)\r\n   7.12   61.38 ^ io_lsbOuts_7 (out)\r\n          61.38   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -61.38   data arrival time\r\n---------------------------------------------------------\r\n         158.62   slack (MET)\r\n```\r\n", "date": "2024-02-13T12:14:53Z"}, {"author": "oharboe", "role": "assistant", "message": "There is an option not to buffer ports, but I don't see it used anywhere, nor documented. `buffer_ports` is documented.\r\n\r\n```\r\n$ DONT_BUFFER_PORTS=1 ./run-me-mock-array_Element-asap7-base.sh \r\nOpenROAD v2.0-12176-g735d54b79 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer pre report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 105 u^2 6% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n[INFO RSZ-0039] Resized 521 instances.\r\nRepair tie lo fanout...\r\nRepair tie hi fanout...\r\n\r\n==========================================================================\r\nreport_floating_nets\r\n--------------------------------------------------------------------------\r\nWarning: There are 7 input ports missing set_input_delay.\r\nWarning: There are 6 output ports missing set_output_delay.\r\nWarning: There is 1 unconstrained endpoint.\r\n\r\n==========================================================================\r\nresizer report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 155 u^2 9% utilization.\r\n\r\n==========================================================================\r\ninstance_count\r\n--------------------------------------------------------------------------\r\n902\r\n\r\n==========================================================================\r\npin_count\r\n--------------------------------------------------------------------------\r\n1299\r\n\r\nopenroad> report_checks -to io_lsbOuts_7\r\nStartpoint: _755_ (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_lsbOuts_7 (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (ideal)\r\n   0.00    0.00 ^ _755_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  48.38   48.38 v _755_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  12.54   60.92 ^ _435_/Y (CKINVDCx8_ASAP7_75t_R)\r\n   6.63   67.55 ^ io_lsbOuts_7 (out)\r\n          67.55   data arrival time\r\n\r\n 300.00  300.00   clock clock_vir (rise edge)\r\n   0.00  300.00   clock network delay (ideal)\r\n -20.00  280.00   clock uncertainty\r\n   0.00  280.00   clock reconvergence pessimism\r\n -60.00  220.00   output external delay\r\n         220.00   data required time\r\n---------------------------------------------------------\r\n         220.00   data required time\r\n         -67.55   data arrival time\r\n---------------------------------------------------------\r\n         152.45   slack (MET)\r\n\r\n\r\nopenroad> \r\n```\r\n", "date": "2024-02-13T13:21:22Z"}, {"author": "maliberty", "role": "assistant", "message": "That option comes from https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1431 and I don't really remember why we needed it at all.  Tom said \"I think that the need for this variable should go away when we improve the automatic code.\" but I don't know what improvement was needed and there is no issue referenced.  I don't think it is a good option to have.  Do you remember more?", "date": "2024-02-13T15:24:45Z"}], "date": "2024-02-13T12:14:53Z", "category": "Query", "subcategory": "Design optimization", "Tool": "Gate Resizer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4653", "id": 4653, "title": "Openroad and QtCharts", "author": "pguerr91", "description": "I installed openroad on RHEL8 using the documentation from GitHub. After launching openroad -gui, I noticed that it mentions QtCharts is not installed. So I built and compiled it (from source qtcharts-everywhere-src-5.15.0.zip), and and it appears to have installed in /usr/include/qt5/QtCharts ..but when I launch openroad -gui again , it STILL says \"QtCharts not installed\" ..(see attachment) Any ideas on what to do ??  This doesn't appear to be very straightforward\r\n\r\n![openroad_QtCharts_missing](https://github.com/The-OpenROAD-Project/OpenROAD/assets/47336735/70f5288c-1aa8-447b-ac35-0c0cfb27bee0)\r\n", "content": [{"author": "pguerr91", "role": "user", "message": "I installed openroad on RHEL8 using the documentation from GitHub. After launching openroad -gui, I noticed that it mentions QtCharts is not installed. So I built and compiled it (from source qtcharts-everywhere-src-5.15.0.zip), and and it appears to have installed in /usr/include/qt5/QtCharts ..but when I launch openroad -gui again , it STILL says \"QtCharts not installed\" ..(see attachment) Any ideas on what to do ??  This doesn't appear to be very straightforward\r\n\r\n![openroad_QtCharts_missing](https://github.com/The-OpenROAD-Project/OpenROAD/assets/47336735/70f5288c-1aa8-447b-ac35-0c0cfb27bee0)\r\n", "date": "2024-02-12T14:38:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Cmake does some caching so I suggest removing your build directory and re-running cmake to see if it then finds it.", "date": "2024-02-12T15:22:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Is the rest of Qt installed in the same area?", "date": "2024-02-12T15:22:36Z"}], "date": "2024-02-12T14:38:14Z", "category": "Installation", "subcategory": "Library dependency issue", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4515", "id": 4515, "title": "How do I avoid cells rotation in placement?", "author": "OuDret", "description": "I need a cell that does not rotate in both global and detailed placement. Is there any way to achieve it? I did not find any parameter.  \r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/9d1b472c-dac6-4458-a3f6-f045e42abcfc)\r\n\r\nThanks\r\n\r\n", "content": [{"author": "OuDret", "role": "user", "message": "I need a cell that does not rotate in both global and detailed placement. Is there any way to achieve it? I did not find any parameter.  \r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/9d1b472c-dac6-4458-a3f6-f045e42abcfc)\r\n\r\nThanks\r\n\r\n", "date": "2024-01-10T16:43:26Z"}, {"author": "maliberty", "role": "assistant", "message": "If it is a standard cell the LEF for the cell gives its symmetry.", "date": "2024-01-10T18:05:02Z"}, {"author": "maliberty", "role": "assistant", "message": "As this isn't a usual use case it has been lower priority.  The simplest thing might be to just delete the rows that represent Y symmetry if you want to avoid such for your experiments.", "date": "2024-02-12T15:28:54Z"}], "date": "2024-01-10T16:43:26Z", "category": "Configuration", "subcategory": "Cell placement rules", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4602", "id": 4602, "title": "About routing constant values to VDD/VSS power rails", "author": "OuDret", "description": "Is there any way to route logical constant 1 & 0 to Vdd & Vss power rails instead of using tie cells? Right now I'm using a cell with short circuit between output and power pins, which is really bad in terms of area.", "content": [{"author": "OuDret", "role": "user", "message": "Is there any way to route logical constant 1 & 0 to Vdd & Vss power rails instead of using tie cells? Right now I'm using a cell with short circuit between output and power pins, which is really bad in terms of area.", "date": "2024-01-29T14:38:37Z"}, {"author": "maliberty", "role": "assistant", "message": "No there is no facility for that.  The supply rails are often noisy and the tie cell provides a more stable output.  What is the issue with using a tie cell?", "date": "2024-01-29T18:22:48Z"}, {"author": "stefanottili", "role": "assistant", "message": "Constant propagation should be able to remove all constants unless they're connected to ram/rom/pad/analog macro's, no ?\r\nWhich synthesis tool has been used to create the netlist ?\r\nCan yosys do constant propagation ? If so, is it on by default or does it need to be enabled ?", "date": "2024-01-31T00:06:14Z"}], "date": "2024-01-29T14:38:37Z", "category": "Query", "subcategory": "Design optimization", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4532", "id": 4532, "title": "RTLMP_FLOW=True and HIREARCHICAL_SYNTHESIS=1", "author": "oharboe", "description": "Why are these used in combination?\r\n\r\nWhat happens if I don't?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/discussions/4529 has an fMax of 125, which isn't enormously impressive. There are 79 levels of logic in the longest path, which indicates to me that something isn't being optimized in synthesis...\r\n\r\nBOOMv documents that it relies heavily on [register retiming](https://docs.boom-core.org/en/latest/sections/physical-realization.html#physical-realization) and I've also observed that it needs [register cloning](https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4522#discussioncomment-8106429) for synchronous reset.\r\n\r\nHence, I want to try disabling hierarchical synthesis on MegaBoom, but given the long turnaround times, 40 hours, it would be nice to know a little bit about what I'm doing and what I should expect...", "content": [{"author": "oharboe", "role": "user", "message": "Why are these used in combination?\r\n\r\nWhat happens if I don't?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/discussions/4529 has an fMax of 125, which isn't enormously impressive. There are 79 levels of logic in the longest path, which indicates to me that something isn't being optimized in synthesis...\r\n\r\nBOOMv documents that it relies heavily on [register retiming](https://docs.boom-core.org/en/latest/sections/physical-realization.html#physical-realization) and I've also observed that it needs [register cloning](https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4522#discussioncomment-8106429) for synchronous reset.\r\n\r\nHence, I want to try disabling hierarchical synthesis on MegaBoom, but given the long turnaround times, 40 hours, it would be nice to know a little bit about what I'm doing and what I should expect...", "date": "2024-01-15T07:04:10Z"}, {"author": "rovinski", "role": "assistant", "message": "I believe that RTLMP requires hierarchy in the netlist to work at all. If the netlist is flat, RTLMP won't work.", "date": "2024-01-15T08:29:21Z"}, {"author": "oharboe", "role": "assistant", "message": "> At least no public tests. We would have to run the private ones as well.\r\n\r\n", "date": "2024-01-16T07:30:54Z"}, {"author": "gadfort", "role": "assistant", "message": "@oharboe the retiming doesn't work in Yosys (and not in OpenROAD), so that is going to be a limitation. We ran into this as well with something else from the Chisel team folks and there isn't a good solution at the moment ", "date": "2024-01-16T13:38:45Z"}], "date": "2024-01-15T07:04:10Z", "category": "Query", "subcategory": "Tool usage", "Tool": "Hierarchical Macro Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4529", "id": 4529, "title": "MegaBoom flattened", "author": "oharboe", "description": "Based on https://github.com/The-OpenROAD-Project/megaboom/commit/a8e07eab7d4848057ac8e7993d5fee93b3d8653d\r\n\r\nAfter understanding the design better and a best effort to [generating Verilog](https://groups.google.com/g/chipyard/c/XPmGRK_CtZA) for the core with an asynchronous FIFO from the core to the surrounding memory system and buses such that the depth of the clock tree in the core isn't such an enormous issue + I have a report from yosys to list all RAMs and ROMs in the design such that I can be sure that I mock all ROM/RAMs larger than 1024 bits, it was time to try [MegaBoom flattened](https://github.com/The-OpenROAD-Project/megaboom/blob/1cce55c772d823ebca0bf8368f1d363a2e546044/BUILD.bazel#L1153)...\r\n\r\nThe core here is MegaBoom up to and including L1 data/instruction cache. L2 & peripherals are excluded.\r\n\r\nSynthesis times are tolerable and not that far off non-flattened where I break out some macros for the larger parts of the core: ICache, DCache, branch predictor and floating point pipeline.\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\nTotal                           8120\r\n```\r\n\r\nFrom `make gui_synth`, I can see that the core is ca. 98% of the design measured in instances. The rest are buses and asynchronous bridges.\r\n\r\n`make memory` reports the table of roms and rams in the design. This report uses yosys and takes ca. 5 minutes to run, very acceptable. It would be *great* if synthesis could be run without optimizations quicky and then to view the results in the hierarchy view...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/05c5ded4-19e6-417f-ba74-31c5c64aa6ea)\r\n\r\nThe area of the instances is 250000um^2. I have been having trouble with 30% placement density, so I'm going to try 20% placement density. What is the relationship with CORE_UTILIZATION and placement density here...?\r\n\r\nMake that CORE_UTILIZATION=15\r\n\r\nsqrt(2500000/0.15) => 1300um * 1300um\r\n\r\nMacro placement and estimated routing congestion for 2000um x 2000um. The macros seem to be pushed out to the corners, let's see how that works out in placement and routing...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/03f9e101-6a6b-4362-a4f9-f93e142c11dc)\r\n\r\nRouting congestion in `make gui_place`. Why is the empty area yellow? Is power considered part of routing congestion?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/cdef90ba-9366-4046-b86d-7cac7a1d476f)\r\n\r\nEstimated routing congestion RUDY. I guess RUDY excludes power?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/203b5a86-3cd4-4c04-bf80-a0b204e98692)\r\n\r\nClock tree looks good:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/2363f35c-d12e-44b4-bbbb-5773d25b3426)\r\n\r\n\r\nGlobal routing has taken 40000s so far, but it seems to have succeeded:\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[INFO GRT-0197] Via related to pin nodes: 10765900\r\n[INFO GRT-0198] Via related Steiner nodes: 1028317\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 14831285\r\n[INFO GRT-0112] Final usage 3D: 118911097\r\n\r\n[INFO GRT-0096] Final congestion report:\r\nLayer         Resource        Demand        Usage (%)    Max H / Max V / Total Overflow\r\n---------------------------------------------------------------------------------------\r\nM1                   0             0            0.00%             0 /  0 /  0\r\nM2            65189536       19765924           30.32%             0 /  0 /  0\r\nM3            88394705       29035790           32.85%             0 /  0 /  0\r\nM4            65419606       14163760           21.65%             0 /  0 /  0\r\nM5            58863583       8001905           13.59%             0 /  0 /  0\r\nM6            42524107       2674369            6.29%             0 /  0 /  0\r\nM7            52346733        775494            1.48%             0 /  0 /  0\r\n---------------------------------------------------------------------------------------\r\nTotal        372738270       74417242           19.97%             0 /  0 /  0\r\n\r\n[INFO GRT-0018] Total wirelength: 44969527 um\r\n[INFO GRT-0014] Routed nets: 2043518\r\nWarning: There are 10 input ports missing set_input_delay.\r\nWarning: There are 7 output ports missing set_output_delay.\r\nWarning: There are 323 unclocked register/latch pins.\r\nWarning: There are 4128 unconstrained endpoints.\r\n\r\n==========================================================================\r\nglobal route pre repair design report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 523197 u^2 13% utilization.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n```\r\n\r\n\r\nGlobal route heat map:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/504a1b08-d095-41f1-a8be-6392437eeaf5)\r\n\r\n\r\nDetailed routing without power:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97c26702-6d81-472a-a79d-e15eb6cf1a9e)\r\n\r\n\r\nRegarding the long global routing times, I set SKIP_INCREMENTAL_REPAIR=1 in detailed routing, whereas it is a global routing argument. I believe that will take care of the pathologically slow global routing...\r\n\r\n```\r\n-                'route': ['SKIP_INCREMENTAL_REPAIR=1'],\r\n+                'grt': ['SKIP_INCREMENTAL_REPAIR=1']\r\n```\r\n\r\n\r\n```\r\n>>> report_checks -path_delay max\r\nStartpoint: system/prci_ctrl_domain/_853_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/_185_ (recovery check against rising-edge clock clock_uncore)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1973.50 1973.50   clock network delay (propagated)\r\n   0.00 1973.50 ^ system/prci_ctrl_domain/_853_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n  87.72 2061.22 v system/prci_ctrl_domain/_853_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  41.86 2103.08 v load_slew185637/Y (BUFx16f_ASAP7_75t_R)\r\n  37.04 2140.12 v max_cap185634/Y (BUFx16f_ASAP7_75t_R)\r\n  36.83 2176.95 v wire185631/Y (BUFx16f_ASAP7_75t_R)\r\n  41.48 2218.44 v wire185630/Y (BUFx16f_ASAP7_75t_R)\r\n  47.39 2265.83 v max_length185629/Y (BUFx16f_ASAP7_75t_R)\r\n  39.69 2305.52 v wire185628/Y (BUFx16f_ASAP7_75t_R)\r\n  81.35 2386.87 v max_length185627/Y (BUFx16f_ASAP7_75t_R)\r\n  29.27 2416.13 v load_slew185625/Y (BUFx16f_ASAP7_75t_R)\r\n  52.11 2468.25 v load_slew185624/Y (BUFx12f_ASAP7_75t_R)\r\n  43.24 2511.49 v load_slew185618/Y (BUFx16f_ASAP7_75t_R)\r\n  50.84 2562.32 v load_slew185615/Y (BUFx16f_ASAP7_75t_R)\r\n  34.35 2596.68 v load_slew185559/Y (BUFx16f_ASAP7_75t_R)\r\n  34.56 2631.24 v load_slew185558/Y (BUFx16f_ASAP7_75t_R)\r\n  26.61 2657.85 v load_slew185557/Y (BUFx16f_ASAP7_75t_R)\r\n  46.26 2704.11 v load_slew185556/Y (BUFx16f_ASAP7_75t_R)\r\n  51.34 2755.46 v max_length185555/Y (BUFx12f_ASAP7_75t_R)\r\n  41.44 2796.90 v wire185553/Y (BUFx16f_ASAP7_75t_R)\r\n  51.64 2848.53 v load_slew185552/Y (BUFx16f_ASAP7_75t_R)\r\n  34.46 2882.99 v wire185550/Y (BUFx16f_ASAP7_75t_R)\r\n  51.12 2934.11 v wire185547/Y (BUFx16f_ASAP7_75t_R)\r\n  64.89 2999.00 v load_slew185546/Y (BUFx16f_ASAP7_75t_R)\r\n  37.84 3036.83 v wire185534/Y (BUFx16f_ASAP7_75t_R)\r\n  88.57 3125.41 v wire185533/Y (BUFx3_ASAP7_75t_R)\r\n  17.20 3142.60 v wire23908/Y (BUFx16f_ASAP7_75t_R)\r\n 103.84 3246.44 v wire185532/Y (BUFx16f_ASAP7_75t_R)\r\n  53.90 3300.35 v load_slew185531/Y (BUFx16f_ASAP7_75t_R)\r\n  35.37 3335.71 v load_slew185522/Y (BUFx16f_ASAP7_75t_R)\r\n  31.13 3366.84 v load_slew185507/Y (BUFx16f_ASAP7_75t_R)\r\n  32.21 3399.06 v wire185505/Y (BUFx16f_ASAP7_75t_R)\r\n  37.17 3436.23 v load_slew185504/Y (BUFx16f_ASAP7_75t_R)\r\n  25.45 3461.69 v load_slew185494/Y (BUFx16f_ASAP7_75t_R)\r\n  25.36 3487.04 v wire185486/Y (BUFx16f_ASAP7_75t_R)\r\n  47.14 3534.18 v wire185485/Y (BUFx16f_ASAP7_75t_R)\r\n  24.87 3559.05 v max_cap185484/Y (BUFx16f_ASAP7_75t_R)\r\n  27.89 3586.94 v wire185483/Y (BUFx3_ASAP7_75t_R)\r\n  16.61 3603.56 v wire19831/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 3708.69 v wire185481/Y (BUFx3_ASAP7_75t_R)\r\n  18.09 3726.78 v wire19408/Y (BUFx16f_ASAP7_75t_R)\r\n 112.70 3839.48 ^ system/_107_/Y (INVx1_ASAP7_75t_R)\r\n   0.03 3839.51 ^ system/_185_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n        3839.51   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1969.03 10469.03   clock network delay (propagated)\r\n -10.00 10459.03   clock uncertainty\r\n   0.00 10459.03   clock reconvergence pessimism\r\n        10459.03 ^ system/_185_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n   0.82 10459.85   library recovery time\r\n        10459.85   data required time\r\n---------------------------------------------------------\r\n        10459.85   data required time\r\n        -3839.51   data arrival time\r\n---------------------------------------------------------\r\n        6620.34   slack (MET)\r\n\r\n\r\nStartpoint: _32_ (negative level-sensitive latch clocked by clock_uncore)\r\nEndpoint: _10_ (rising clock gating-check end-point clocked by clock_uncore)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n4250.00 4250.00   clock clock_uncore (fall edge)\r\n2156.12 6406.12   clock network delay (propagated)\r\n   0.00 6406.12 v _32_/CLK (DLLx1_ASAP7_75t_R)\r\n  32.10 6438.22 v _32_/Q (DLLx1_ASAP7_75t_R)\r\n   0.01 6438.23 v _10_/B (AND2x4_ASAP7_75t_R)\r\n        6438.23   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1955.45 10455.45   clock network delay (propagated)\r\n -10.00 10445.45   clock uncertainty\r\n   0.00 10445.45   clock reconvergence pessimism\r\n        10445.45 ^ _10_/A (AND2x4_ASAP7_75t_R)\r\n   0.00 10445.45   clock gating setup time\r\n        10445.45   data required time\r\n---------------------------------------------------------\r\n        10445.45   data required time\r\n        -6438.23   data arrival time\r\n---------------------------------------------------------\r\n        4007.22   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_\r\n          (rising edge-triggered flip-flop clocked by clock_uncore)\r\nPath Group: clock_uncore\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1977.51 1977.51   clock network delay (propagated)\r\n   0.00 1977.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  97.74 2075.25 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  26.79 2102.04 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055781_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 123.43 2225.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100818_/CON (HAxp5_ASAP7_75t_R)\r\n  36.21 2261.68 ^ wire155277/Y (BUFx12f_ASAP7_75t_R)\r\n  45.28 2306.96 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055932_/Y (NOR2x2_ASAP7_75t_R)\r\n  28.25 2335.21 v max_length142580/Y (BUFx16f_ASAP7_75t_R)\r\n 104.72 2439.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055933_/Y (NAND2x2_ASAP7_75t_R)\r\n  59.96 2499.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055934_/Y (OA22x2_ASAP7_75t_R)\r\n  36.00 2535.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055951_/Y (AND4x2_ASAP7_75t_R)\r\n  12.14 2548.03 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055963_/Y (NAND3x2_ASAP7_75t_R)\r\n  70.12 2618.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055964_/Y (AOI211x1_ASAP7_75t_R)\r\n  55.95 2674.10 ^ load_slew117489/Y (BUFx12f_ASAP7_75t_R)\r\n  53.80 2727.90 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056077_/Y (AND3x4_ASAP7_75t_R)\r\n  25.58 2753.48 ^ max_length114043/Y (BUFx16f_ASAP7_75t_R)\r\n  32.81 2786.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056130_/Y (AND2x6_ASAP7_75t_R)\r\n  14.23 2800.52 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056131_/Y (NAND2x1_ASAP7_75t_R)\r\n  15.55 2816.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056132_/Y (INVx1_ASAP7_75t_R)\r\n  16.14 2832.21 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09390_/Y (NAND2x2_ASAP7_75t_R)\r\n  28.51 2860.72 v wire99845/Y (BUFx16f_ASAP7_75t_R)\r\n  70.62 2931.33 v wire99844/Y (BUFx16f_ASAP7_75t_R)\r\n  56.99 2988.32 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09404_/Y (OAI21x1_ASAP7_75t_R)\r\n  11.35 2999.67 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09407_/Y (NAND2x1_ASAP7_75t_R)\r\n  44.90 3044.57 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09408_/Y (OR4x2_ASAP7_75t_R)\r\n  57.29 3101.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09409_/Y (OR5x2_ASAP7_75t_R)\r\n  39.18 3141.05 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11025_/Y (NOR2x2_ASAP7_75t_R)\r\n  25.42 3166.47 ^ wire85735/Y (BUFx3_ASAP7_75t_R)\r\n  16.09 3182.56 ^ wire22108/Y (BUFx16f_ASAP7_75t_R)\r\n  96.00 3278.56 ^ max_length85734/Y (BUFx12f_ASAP7_75t_R)\r\n  59.41 3337.98 ^ wire85733/Y (BUFx3_ASAP7_75t_R)\r\n  15.95 3353.92 ^ wire21265/Y (BUFx16f_ASAP7_75t_R)\r\n  93.06 3446.99 ^ max_length85732/Y (BUFx16f_ASAP7_75t_R)\r\n  52.88 3499.86 ^ wire85731/Y (BUFx12f_ASAP7_75t_R)\r\n  61.48 3561.34 ^ wire85730/Y (BUFx12f_ASAP7_75t_R)\r\n  94.55 3655.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374889_/Y (AND3x4_ASAP7_75t_R)\r\n  93.17 3749.07 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374891_/Y (XNOR2x2_ASAP7_75t_R)\r\n  33.79 3782.85 v max_length80723/Y (BUFx16f_ASAP7_75t_R)\r\n  73.46 3856.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715616_/CON (HAxp5_ASAP7_75t_R)\r\n  16.66 3872.97 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374906_/Y (INVx4_ASAP7_75t_R)\r\n  24.46 3897.43 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715614_/CON (HAxp5_ASAP7_75t_R)\r\n  13.62 3911.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715583_/Y (INVx1_ASAP7_75t_R)\r\n 101.30 4012.35 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715612_/SN (HAxp5_ASAP7_75t_R)\r\n  45.01 4057.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384513_/Y (XNOR2x1_ASAP7_75t_R)\r\n  28.70 4086.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384518_/Y (AND5x2_ASAP7_75t_R)\r\n  31.22 4117.28 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09414_/Y (AO22x2_ASAP7_75t_R)\r\n  32.81 4150.08 v wire55436/Y (BUFx12f_ASAP7_75t_R)\r\n  66.68 4216.77 v wire55435/Y (BUFx12f_ASAP7_75t_R)\r\n  67.25 4284.01 v wire55434/Y (BUFx12f_ASAP7_75t_R)\r\n  66.32 4350.34 v wire55433/Y (BUFx12f_ASAP7_75t_R)\r\n  67.31 4417.65 v wire55432/Y (BUFx12f_ASAP7_75t_R)\r\n  71.71 4489.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09415_/Y (OR4x1_ASAP7_75t_R)\r\n  50.77 4540.13 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09416_/Y (OR5x2_ASAP7_75t_R)\r\n  50.72 4590.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09417_/Y (OR5x2_ASAP7_75t_R)\r\n  33.49 4624.35 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11022_/Y (AOI22x1_ASAP7_75t_R)\r\n  26.99 4651.33 ^ load_slew51767/Y (BUFx16f_ASAP7_75t_R)\r\n  59.33 4710.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11023_/Y (AND2x6_ASAP7_75t_R)\r\n  32.05 4742.72 ^ wire50793/Y (BUFx16f_ASAP7_75t_R)\r\n  70.46 4813.18 ^ wire50792/Y (BUFx16f_ASAP7_75t_R)\r\n  57.14 4870.32 ^ max_length50791/Y (BUFx12f_ASAP7_75t_R)\r\n  57.90 4928.22 ^ wire50790/Y (BUFx16f_ASAP7_75t_R)\r\n  89.00 5017.21 ^ wire50789/Y (BUFx16f_ASAP7_75t_R)\r\n  65.37 5082.59 ^ wire50788/Y (BUFx12f_ASAP7_75t_R)\r\n  62.25 5144.84 ^ wire50787/Y (BUFx12f_ASAP7_75t_R)\r\n  73.66 5218.50 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374879_/Y (AND2x2_ASAP7_75t_R)\r\n  30.04 5248.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374909_/Y (NAND2x2_ASAP7_75t_R)\r\n  75.54 5324.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374941_/Y (XNOR2x2_ASAP7_75t_R)\r\n  47.25 5371.33 v wire46725/Y (BUFx3_ASAP7_75t_R)\r\n  16.83 5388.16 v wire7813/Y (BUFx16f_ASAP7_75t_R)\r\n  77.75 5465.91 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715634_/CON (HAxp5_ASAP7_75t_R)\r\n  20.02 5485.92 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374961_/Y (INVx4_ASAP7_75t_R)\r\n  27.92 5513.84 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715636_/CON (HAxp5_ASAP7_75t_R)\r\n  14.52 5528.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715578_/Y (INVx1_ASAP7_75t_R)\r\n 110.73 5639.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715638_/SN (HAxp5_ASAP7_75t_R)\r\n  46.55 5685.64 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384519_/Y (XNOR2x1_ASAP7_75t_R)\r\n  41.02 5726.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384524_/Y (AND5x2_ASAP7_75t_R)\r\n  63.15 5789.80 v wire30208/Y (BUFx12f_ASAP7_75t_R)\r\n  83.85 5873.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09398_/Y (AO221x2_ASAP7_75t_R)\r\n  31.18 5904.83 v wire29780/Y (BUFx12f_ASAP7_75t_R)\r\n  67.42 5972.25 v wire29779/Y (BUFx12f_ASAP7_75t_R)\r\n  66.73 6038.98 v wire29778/Y (BUFx12f_ASAP7_75t_R)\r\n  66.08 6105.06 v wire29777/Y (BUFx12f_ASAP7_75t_R)\r\n  99.39 6204.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09399_/Y (OR4x2_ASAP7_75t_R)\r\n  52.91 6257.36 v wire29446/Y (BUFx12f_ASAP7_75t_R)\r\n  74.94 6332.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09400_/Y (OR3x2_ASAP7_75t_R)\r\n  11.77 6344.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13817_/Y (NOR2x1_ASAP7_75t_R)\r\n  36.79 6380.86 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13818_/Y (AND3x4_ASAP7_75t_R)\r\n  22.16 6403.01 ^ wire29198/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 6419.13 ^ wire4813/Y (BUFx16f_ASAP7_75t_R)\r\n  79.70 6498.83 ^ wire29197/Y (BUFx3_ASAP7_75t_R)\r\n  17.06 6515.89 ^ wire4798/Y (BUFx16f_ASAP7_75t_R)\r\n 110.37 6626.27 ^ wire29196/Y (BUFx3_ASAP7_75t_R)\r\n  17.81 6644.08 ^ wire4769/Y (BUFx16f_ASAP7_75t_R)\r\n  71.73 6715.81 ^ wire29195/Y (BUFx12f_ASAP7_75t_R)\r\n  63.73 6779.54 ^ wire29194/Y (BUFx16f_ASAP7_75t_R)\r\n  82.80 6862.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380843_/Y (AND3x4_ASAP7_75t_R)\r\n  80.15 6942.49 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380845_/Y (XNOR2x2_ASAP7_75t_R)\r\n  40.14 6982.63 v wire24381/Y (BUFx3_ASAP7_75t_R)\r\n  16.96 6999.59 v wire4637/Y (BUFx16f_ASAP7_75t_R)\r\n 169.90 7169.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715676_/CON (HAxp5_ASAP7_75t_R)\r\n  22.93 7192.41 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380978_/Y (INVx5_ASAP7_75t_R)\r\n  39.12 7231.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715678_/CON (HAxp5_ASAP7_75t_R)\r\n  17.36 7248.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715581_/Y (INVx1_ASAP7_75t_R)\r\n 139.72 7388.61 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715680_/SN (HAxp5_ASAP7_75t_R)\r\n  46.63 7435.24 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384526_/Y (XNOR2x1_ASAP7_75t_R)\r\n  43.35 7478.59 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384530_/Y (AND5x2_ASAP7_75t_R)\r\n  21.89 7500.48 ^ wire14553/Y (BUFx16f_ASAP7_75t_R)\r\n  60.38 7560.86 ^ wire14552/Y (BUFx12f_ASAP7_75t_R)\r\n  78.29 7639.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09424_/Y (AO221x2_ASAP7_75t_R)\r\n  46.92 7686.07 ^ wire14505/Y (BUFx12f_ASAP7_75t_R)\r\n  61.68 7747.74 ^ wire14504/Y (BUFx12f_ASAP7_75t_R)\r\n  63.66 7811.41 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09425_/Y (OR4x2_ASAP7_75t_R)\r\n  18.88 7830.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09426_/Y (OA21x2_ASAP7_75t_R)\r\n   9.19 7839.48 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13964_/Y (NOR2x1_ASAP7_75t_R)\r\n  32.41 7871.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13965_/Y (AND3x4_ASAP7_75t_R)\r\n  21.83 7893.72 v wire14423/Y (BUFx3_ASAP7_75t_R)\r\n  16.60 7910.32 v wire2687/Y (BUFx16f_ASAP7_75t_R)\r\n  76.26 7986.58 v wire14422/Y (BUFx3_ASAP7_75t_R)\r\n  17.63 8004.21 v wire2673/Y (BUFx16f_ASAP7_75t_R)\r\n  92.08 8096.29 v max_length14421/Y (BUFx16f_ASAP7_75t_R)\r\n  48.26 8144.55 v wire14420/Y (BUFx12f_ASAP7_75t_R)\r\n  65.64 8210.20 v wire14419/Y (BUFx12f_ASAP7_75t_R)\r\n  78.20 8288.39 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462481_/Y (AND2x2_ASAP7_75t_R)\r\n  32.72 8321.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462482_/Y (NAND2x2_ASAP7_75t_R)\r\n  51.65 8372.77 ^ wire13868/Y (BUFx16f_ASAP7_75t_R)\r\n  93.74 8466.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_463033_/Y (OR2x6_ASAP7_75t_R)\r\n  66.52 8533.02 ^ wire13185/Y (BUFx16f_ASAP7_75t_R)\r\n 125.00 8658.02 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_469024_/Y (NOR2x2_ASAP7_75t_R)\r\n  73.88 8731.90 v wire7777/Y (BUFx16f_ASAP7_75t_R)\r\n 117.54 8849.44 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_477305_/Y (OR3x4_ASAP7_75t_R)\r\n  46.53 8895.97 v wire2121/Y (BUFx3_ASAP7_75t_R)\r\n  16.26 8912.24 v wire1767/Y (BUFx16f_ASAP7_75t_R)\r\n 100.49 9012.73 v max_length2120/Y (BUFx16f_ASAP7_75t_R)\r\n  62.86 9075.59 v max_length2119/Y (BUFx16f_ASAP7_75t_R)\r\n  21.06 9096.65 v wire2118/Y (BUFx16f_ASAP7_75t_R)\r\n  76.88 9173.53 v max_length2117/Y (BUFx16f_ASAP7_75t_R)\r\n  36.80 9210.33 v wire2116/Y (BUFx16f_ASAP7_75t_R)\r\n  83.84 9294.17 v wire2115/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 9399.30 v wire2101/Y (BUFx16f_ASAP7_75t_R)\r\n  95.85 9495.16 v wire2100/Y (BUFx16f_ASAP7_75t_R)\r\n  52.35 9547.50 v max_length2099/Y (BUFx16f_ASAP7_75t_R)\r\n  38.11 9585.61 v wire2098/Y (BUFx3_ASAP7_75t_R)\r\n  16.02 9601.62 v wire113/Y (BUFx16f_ASAP7_75t_R)\r\n 127.64 9729.27 v max_length2096/Y (BUFx16f_ASAP7_75t_R)\r\n  47.57 9776.84 v wire2094/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 9792.96 v wire70/Y (BUFx16f_ASAP7_75t_R)\r\n 103.02 9895.98 v max_length2093/Y (BUFx16f_ASAP7_75t_R)\r\n  51.33 9947.30 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521833_/Y (NOR2x1_ASAP7_75t_R)\r\n  14.62 9961.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521834_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 9961.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/D (DFFHQNx2_ASAP7_75t_R)\r\n        9961.94   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1952.03 10452.03   clock network delay (propagated)\r\n -10.00 10442.03   clock uncertainty\r\n   0.00 10442.03   clock reconvergence pessimism\r\n        10442.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -6.09 10435.94   library setup time\r\n        10435.94   data required time\r\n---------------------------------------------------------\r\n        10435.94   data required time\r\n        -9961.94   data arrival time\r\n---------------------------------------------------------\r\n         474.00   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1267_\r\n            (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nEndpoint: system/serial_tl_domain/_1188_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock serial_tl_0_clock (rise edge)\r\n  48.42   48.42   clock network delay (propagated)\r\n   0.00   48.42 ^ system/serial_tl_domain/_1267_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n 130.15  178.57 ^ system/serial_tl_domain/_1267_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  69.41  247.98 v system/serial_tl_domain/_0676_/Y (NOR2x2_ASAP7_75t_R)\r\n  39.09  287.06 v system/serial_tl_domain/_0823_/Y (AND2x4_ASAP7_75t_R)\r\n  22.08  309.14 ^ system/serial_tl_domain/_1128_/CON (HAxp5_ASAP7_75t_R)\r\n   9.17  318.32 v system/serial_tl_domain/_1125_/Y (INVx1_ASAP7_75t_R)\r\n  13.54  331.85 ^ system/serial_tl_domain/_1129_/CON (HAxp5_ASAP7_75t_R)\r\n   8.88  340.73 v system/serial_tl_domain/_1123_/Y (INVx1_ASAP7_75t_R)\r\n  83.77  424.51 v system/serial_tl_domain/_1130_/SN (HAxp5_ASAP7_75t_R)\r\n  41.84  466.35 v load_slew119094/Y (BUFx10_ASAP7_75t_R)\r\n  24.78  491.13 v system/serial_tl_domain/_0863_/Y (AND2x2_ASAP7_75t_R)\r\n  19.53  510.67 v system/serial_tl_domain/_0864_/Y (AND2x2_ASAP7_75t_R)\r\n  23.33  534.00 v system/serial_tl_domain/_0866_/Y (AO32x1_ASAP7_75t_R)\r\n  49.05  583.05 v system/serial_tl_domain/_0870_/Y (OR5x2_ASAP7_75t_R)\r\n  22.11  605.16 v system/serial_tl_domain/_0872_/Y (OA22x2_ASAP7_75t_R)\r\n   0.01  605.17 v system/serial_tl_domain/_1188_/D (DFFHQNx2_ASAP7_75t_R)\r\n         605.17   data arrival time\r\n\r\n8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n  47.57 8547.57   clock network delay (propagated)\r\n -10.00 8537.57   clock uncertainty\r\n   0.00 8537.57   clock reconvergence pessimism\r\n        8537.57 ^ system/serial_tl_domain/_1188_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -4.26 8533.31   library setup time\r\n        8533.31   data required time\r\n---------------------------------------------------------\r\n        8533.31   data required time\r\n        -605.17   data arrival time\r\n---------------------------------------------------------\r\n        7928.14   slack (MET)\r\n\r\n```\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock_uncore period_min = 8026.00 fmax = 124.60\r\nserial_tl_0_clock period_min = 571.86 fmax = 1748.67\r\n```\r\n\r\n```\r\n$ ./orfs make FLOW_VARIANT=flat elapsed\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\n2_1_floorplan                    393\r\n2_2_floorplan_io                  12\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/flat/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro             1817\r\n2_5_floorplan_tapcell            678\r\n2_6_floorplan_pdn                580\r\n3_1_place_gp_skip_io             877\r\n3_2_place_iop                     38\r\n3_3_place_gp                    7678\r\n3_4_place_resized               1341\r\n3_5_place_dp                    1934\r\n4_1_cts                        12699\r\n5_1_grt                        68906\r\n5_2_fillcell                     143\r\n5_3_route                      20911\r\n6_1_merge                        556\r\n6_report                        7928\r\ngenerate_abstract               1166\r\nTotal                         135777\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Based on https://github.com/The-OpenROAD-Project/megaboom/commit/a8e07eab7d4848057ac8e7993d5fee93b3d8653d\r\n\r\nAfter understanding the design better and a best effort to [generating Verilog](https://groups.google.com/g/chipyard/c/XPmGRK_CtZA) for the core with an asynchronous FIFO from the core to the surrounding memory system and buses such that the depth of the clock tree in the core isn't such an enormous issue + I have a report from yosys to list all RAMs and ROMs in the design such that I can be sure that I mock all ROM/RAMs larger than 1024 bits, it was time to try [MegaBoom flattened](https://github.com/The-OpenROAD-Project/megaboom/blob/1cce55c772d823ebca0bf8368f1d363a2e546044/BUILD.bazel#L1153)...\r\n\r\nThe core here is MegaBoom up to and including L1 data/instruction cache. L2 & peripherals are excluded.\r\n\r\nSynthesis times are tolerable and not that far off non-flattened where I break out some macros for the larger parts of the core: ICache, DCache, branch predictor and floating point pipeline.\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\nTotal                           8120\r\n```\r\n\r\nFrom `make gui_synth`, I can see that the core is ca. 98% of the design measured in instances. The rest are buses and asynchronous bridges.\r\n\r\n`make memory` reports the table of roms and rams in the design. This report uses yosys and takes ca. 5 minutes to run, very acceptable. It would be *great* if synthesis could be run without optimizations quicky and then to view the results in the hierarchy view...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/05c5ded4-19e6-417f-ba74-31c5c64aa6ea)\r\n\r\nThe area of the instances is 250000um^2. I have been having trouble with 30% placement density, so I'm going to try 20% placement density. What is the relationship with CORE_UTILIZATION and placement density here...?\r\n\r\nMake that CORE_UTILIZATION=15\r\n\r\nsqrt(2500000/0.15) => 1300um * 1300um\r\n\r\nMacro placement and estimated routing congestion for 2000um x 2000um. The macros seem to be pushed out to the corners, let's see how that works out in placement and routing...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/03f9e101-6a6b-4362-a4f9-f93e142c11dc)\r\n\r\nRouting congestion in `make gui_place`. Why is the empty area yellow? Is power considered part of routing congestion?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/cdef90ba-9366-4046-b86d-7cac7a1d476f)\r\n\r\nEstimated routing congestion RUDY. I guess RUDY excludes power?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/203b5a86-3cd4-4c04-bf80-a0b204e98692)\r\n\r\nClock tree looks good:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/2363f35c-d12e-44b4-bbbb-5773d25b3426)\r\n\r\n\r\nGlobal routing has taken 40000s so far, but it seems to have succeeded:\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[INFO GRT-0197] Via related to pin nodes: 10765900\r\n[INFO GRT-0198] Via related Steiner nodes: 1028317\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 14831285\r\n[INFO GRT-0112] Final usage 3D: 118911097\r\n\r\n[INFO GRT-0096] Final congestion report:\r\nLayer         Resource        Demand        Usage (%)    Max H / Max V / Total Overflow\r\n---------------------------------------------------------------------------------------\r\nM1                   0             0            0.00%             0 /  0 /  0\r\nM2            65189536       19765924           30.32%             0 /  0 /  0\r\nM3            88394705       29035790           32.85%             0 /  0 /  0\r\nM4            65419606       14163760           21.65%             0 /  0 /  0\r\nM5            58863583       8001905           13.59%             0 /  0 /  0\r\nM6            42524107       2674369            6.29%             0 /  0 /  0\r\nM7            52346733        775494            1.48%             0 /  0 /  0\r\n---------------------------------------------------------------------------------------\r\nTotal        372738270       74417242           19.97%             0 /  0 /  0\r\n\r\n[INFO GRT-0018] Total wirelength: 44969527 um\r\n[INFO GRT-0014] Routed nets: 2043518\r\nWarning: There are 10 input ports missing set_input_delay.\r\nWarning: There are 7 output ports missing set_output_delay.\r\nWarning: There are 323 unclocked register/latch pins.\r\nWarning: There are 4128 unconstrained endpoints.\r\n\r\n==========================================================================\r\nglobal route pre repair design report_design_area\r\n--------------------------------------------------------------------------\r\nDesign area 523197 u^2 13% utilization.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 162um.\r\n```\r\n\r\n\r\nGlobal route heat map:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/504a1b08-d095-41f1-a8be-6392437eeaf5)\r\n\r\n\r\nDetailed routing without power:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97c26702-6d81-472a-a79d-e15eb6cf1a9e)\r\n\r\n\r\nRegarding the long global routing times, I set SKIP_INCREMENTAL_REPAIR=1 in detailed routing, whereas it is a global routing argument. I believe that will take care of the pathologically slow global routing...\r\n\r\n```\r\n-                'route': ['SKIP_INCREMENTAL_REPAIR=1'],\r\n+                'grt': ['SKIP_INCREMENTAL_REPAIR=1']\r\n```\r\n\r\n\r\n```\r\n>>> report_checks -path_delay max\r\nStartpoint: system/prci_ctrl_domain/_853_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/_185_ (recovery check against rising-edge clock clock_uncore)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1973.50 1973.50   clock network delay (propagated)\r\n   0.00 1973.50 ^ system/prci_ctrl_domain/_853_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n  87.72 2061.22 v system/prci_ctrl_domain/_853_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  41.86 2103.08 v load_slew185637/Y (BUFx16f_ASAP7_75t_R)\r\n  37.04 2140.12 v max_cap185634/Y (BUFx16f_ASAP7_75t_R)\r\n  36.83 2176.95 v wire185631/Y (BUFx16f_ASAP7_75t_R)\r\n  41.48 2218.44 v wire185630/Y (BUFx16f_ASAP7_75t_R)\r\n  47.39 2265.83 v max_length185629/Y (BUFx16f_ASAP7_75t_R)\r\n  39.69 2305.52 v wire185628/Y (BUFx16f_ASAP7_75t_R)\r\n  81.35 2386.87 v max_length185627/Y (BUFx16f_ASAP7_75t_R)\r\n  29.27 2416.13 v load_slew185625/Y (BUFx16f_ASAP7_75t_R)\r\n  52.11 2468.25 v load_slew185624/Y (BUFx12f_ASAP7_75t_R)\r\n  43.24 2511.49 v load_slew185618/Y (BUFx16f_ASAP7_75t_R)\r\n  50.84 2562.32 v load_slew185615/Y (BUFx16f_ASAP7_75t_R)\r\n  34.35 2596.68 v load_slew185559/Y (BUFx16f_ASAP7_75t_R)\r\n  34.56 2631.24 v load_slew185558/Y (BUFx16f_ASAP7_75t_R)\r\n  26.61 2657.85 v load_slew185557/Y (BUFx16f_ASAP7_75t_R)\r\n  46.26 2704.11 v load_slew185556/Y (BUFx16f_ASAP7_75t_R)\r\n  51.34 2755.46 v max_length185555/Y (BUFx12f_ASAP7_75t_R)\r\n  41.44 2796.90 v wire185553/Y (BUFx16f_ASAP7_75t_R)\r\n  51.64 2848.53 v load_slew185552/Y (BUFx16f_ASAP7_75t_R)\r\n  34.46 2882.99 v wire185550/Y (BUFx16f_ASAP7_75t_R)\r\n  51.12 2934.11 v wire185547/Y (BUFx16f_ASAP7_75t_R)\r\n  64.89 2999.00 v load_slew185546/Y (BUFx16f_ASAP7_75t_R)\r\n  37.84 3036.83 v wire185534/Y (BUFx16f_ASAP7_75t_R)\r\n  88.57 3125.41 v wire185533/Y (BUFx3_ASAP7_75t_R)\r\n  17.20 3142.60 v wire23908/Y (BUFx16f_ASAP7_75t_R)\r\n 103.84 3246.44 v wire185532/Y (BUFx16f_ASAP7_75t_R)\r\n  53.90 3300.35 v load_slew185531/Y (BUFx16f_ASAP7_75t_R)\r\n  35.37 3335.71 v load_slew185522/Y (BUFx16f_ASAP7_75t_R)\r\n  31.13 3366.84 v load_slew185507/Y (BUFx16f_ASAP7_75t_R)\r\n  32.21 3399.06 v wire185505/Y (BUFx16f_ASAP7_75t_R)\r\n  37.17 3436.23 v load_slew185504/Y (BUFx16f_ASAP7_75t_R)\r\n  25.45 3461.69 v load_slew185494/Y (BUFx16f_ASAP7_75t_R)\r\n  25.36 3487.04 v wire185486/Y (BUFx16f_ASAP7_75t_R)\r\n  47.14 3534.18 v wire185485/Y (BUFx16f_ASAP7_75t_R)\r\n  24.87 3559.05 v max_cap185484/Y (BUFx16f_ASAP7_75t_R)\r\n  27.89 3586.94 v wire185483/Y (BUFx3_ASAP7_75t_R)\r\n  16.61 3603.56 v wire19831/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 3708.69 v wire185481/Y (BUFx3_ASAP7_75t_R)\r\n  18.09 3726.78 v wire19408/Y (BUFx16f_ASAP7_75t_R)\r\n 112.70 3839.48 ^ system/_107_/Y (INVx1_ASAP7_75t_R)\r\n   0.03 3839.51 ^ system/_185_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n        3839.51   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1969.03 10469.03   clock network delay (propagated)\r\n -10.00 10459.03   clock uncertainty\r\n   0.00 10459.03   clock reconvergence pessimism\r\n        10459.03 ^ system/_185_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n   0.82 10459.85   library recovery time\r\n        10459.85   data required time\r\n---------------------------------------------------------\r\n        10459.85   data required time\r\n        -3839.51   data arrival time\r\n---------------------------------------------------------\r\n        6620.34   slack (MET)\r\n\r\n\r\nStartpoint: _32_ (negative level-sensitive latch clocked by clock_uncore)\r\nEndpoint: _10_ (rising clock gating-check end-point clocked by clock_uncore)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n4250.00 4250.00   clock clock_uncore (fall edge)\r\n2156.12 6406.12   clock network delay (propagated)\r\n   0.00 6406.12 v _32_/CLK (DLLx1_ASAP7_75t_R)\r\n  32.10 6438.22 v _32_/Q (DLLx1_ASAP7_75t_R)\r\n   0.01 6438.23 v _10_/B (AND2x4_ASAP7_75t_R)\r\n        6438.23   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1955.45 10455.45   clock network delay (propagated)\r\n -10.00 10445.45   clock uncertainty\r\n   0.00 10445.45   clock reconvergence pessimism\r\n        10445.45 ^ _10_/A (AND2x4_ASAP7_75t_R)\r\n   0.00 10445.45   clock gating setup time\r\n        10445.45   data required time\r\n---------------------------------------------------------\r\n        10445.45   data required time\r\n        -6438.23   data arrival time\r\n---------------------------------------------------------\r\n        4007.22   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_\r\n          (rising edge-triggered flip-flop clocked by clock_uncore)\r\nPath Group: clock_uncore\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock_uncore (rise edge)\r\n1977.51 1977.51   clock network delay (propagated)\r\n   0.00 1977.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  97.74 2075.25 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100862_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  26.79 2102.04 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055781_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 123.43 2225.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100818_/CON (HAxp5_ASAP7_75t_R)\r\n  36.21 2261.68 ^ wire155277/Y (BUFx12f_ASAP7_75t_R)\r\n  45.28 2306.96 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055932_/Y (NOR2x2_ASAP7_75t_R)\r\n  28.25 2335.21 v max_length142580/Y (BUFx16f_ASAP7_75t_R)\r\n 104.72 2439.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055933_/Y (NAND2x2_ASAP7_75t_R)\r\n  59.96 2499.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055934_/Y (OA22x2_ASAP7_75t_R)\r\n  36.00 2535.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055951_/Y (AND4x2_ASAP7_75t_R)\r\n  12.14 2548.03 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055963_/Y (NAND3x2_ASAP7_75t_R)\r\n  70.12 2618.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055964_/Y (AOI211x1_ASAP7_75t_R)\r\n  55.95 2674.10 ^ load_slew117489/Y (BUFx12f_ASAP7_75t_R)\r\n  53.80 2727.90 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056077_/Y (AND3x4_ASAP7_75t_R)\r\n  25.58 2753.48 ^ max_length114043/Y (BUFx16f_ASAP7_75t_R)\r\n  32.81 2786.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056130_/Y (AND2x6_ASAP7_75t_R)\r\n  14.23 2800.52 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056131_/Y (NAND2x1_ASAP7_75t_R)\r\n  15.55 2816.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056132_/Y (INVx1_ASAP7_75t_R)\r\n  16.14 2832.21 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09390_/Y (NAND2x2_ASAP7_75t_R)\r\n  28.51 2860.72 v wire99845/Y (BUFx16f_ASAP7_75t_R)\r\n  70.62 2931.33 v wire99844/Y (BUFx16f_ASAP7_75t_R)\r\n  56.99 2988.32 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09404_/Y (OAI21x1_ASAP7_75t_R)\r\n  11.35 2999.67 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09407_/Y (NAND2x1_ASAP7_75t_R)\r\n  44.90 3044.57 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09408_/Y (OR4x2_ASAP7_75t_R)\r\n  57.29 3101.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09409_/Y (OR5x2_ASAP7_75t_R)\r\n  39.18 3141.05 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11025_/Y (NOR2x2_ASAP7_75t_R)\r\n  25.42 3166.47 ^ wire85735/Y (BUFx3_ASAP7_75t_R)\r\n  16.09 3182.56 ^ wire22108/Y (BUFx16f_ASAP7_75t_R)\r\n  96.00 3278.56 ^ max_length85734/Y (BUFx12f_ASAP7_75t_R)\r\n  59.41 3337.98 ^ wire85733/Y (BUFx3_ASAP7_75t_R)\r\n  15.95 3353.92 ^ wire21265/Y (BUFx16f_ASAP7_75t_R)\r\n  93.06 3446.99 ^ max_length85732/Y (BUFx16f_ASAP7_75t_R)\r\n  52.88 3499.86 ^ wire85731/Y (BUFx12f_ASAP7_75t_R)\r\n  61.48 3561.34 ^ wire85730/Y (BUFx12f_ASAP7_75t_R)\r\n  94.55 3655.89 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374889_/Y (AND3x4_ASAP7_75t_R)\r\n  93.17 3749.07 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374891_/Y (XNOR2x2_ASAP7_75t_R)\r\n  33.79 3782.85 v max_length80723/Y (BUFx16f_ASAP7_75t_R)\r\n  73.46 3856.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715616_/CON (HAxp5_ASAP7_75t_R)\r\n  16.66 3872.97 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374906_/Y (INVx4_ASAP7_75t_R)\r\n  24.46 3897.43 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715614_/CON (HAxp5_ASAP7_75t_R)\r\n  13.62 3911.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715583_/Y (INVx1_ASAP7_75t_R)\r\n 101.30 4012.35 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715612_/SN (HAxp5_ASAP7_75t_R)\r\n  45.01 4057.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384513_/Y (XNOR2x1_ASAP7_75t_R)\r\n  28.70 4086.05 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384518_/Y (AND5x2_ASAP7_75t_R)\r\n  31.22 4117.28 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09414_/Y (AO22x2_ASAP7_75t_R)\r\n  32.81 4150.08 v wire55436/Y (BUFx12f_ASAP7_75t_R)\r\n  66.68 4216.77 v wire55435/Y (BUFx12f_ASAP7_75t_R)\r\n  67.25 4284.01 v wire55434/Y (BUFx12f_ASAP7_75t_R)\r\n  66.32 4350.34 v wire55433/Y (BUFx12f_ASAP7_75t_R)\r\n  67.31 4417.65 v wire55432/Y (BUFx12f_ASAP7_75t_R)\r\n  71.71 4489.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09415_/Y (OR4x1_ASAP7_75t_R)\r\n  50.77 4540.13 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09416_/Y (OR5x2_ASAP7_75t_R)\r\n  50.72 4590.86 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09417_/Y (OR5x2_ASAP7_75t_R)\r\n  33.49 4624.35 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11022_/Y (AOI22x1_ASAP7_75t_R)\r\n  26.99 4651.33 ^ load_slew51767/Y (BUFx16f_ASAP7_75t_R)\r\n  59.33 4710.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_11023_/Y (AND2x6_ASAP7_75t_R)\r\n  32.05 4742.72 ^ wire50793/Y (BUFx16f_ASAP7_75t_R)\r\n  70.46 4813.18 ^ wire50792/Y (BUFx16f_ASAP7_75t_R)\r\n  57.14 4870.32 ^ max_length50791/Y (BUFx12f_ASAP7_75t_R)\r\n  57.90 4928.22 ^ wire50790/Y (BUFx16f_ASAP7_75t_R)\r\n  89.00 5017.21 ^ wire50789/Y (BUFx16f_ASAP7_75t_R)\r\n  65.37 5082.59 ^ wire50788/Y (BUFx12f_ASAP7_75t_R)\r\n  62.25 5144.84 ^ wire50787/Y (BUFx12f_ASAP7_75t_R)\r\n  73.66 5218.50 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374879_/Y (AND2x2_ASAP7_75t_R)\r\n  30.04 5248.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374909_/Y (NAND2x2_ASAP7_75t_R)\r\n  75.54 5324.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374941_/Y (XNOR2x2_ASAP7_75t_R)\r\n  47.25 5371.33 v wire46725/Y (BUFx3_ASAP7_75t_R)\r\n  16.83 5388.16 v wire7813/Y (BUFx16f_ASAP7_75t_R)\r\n  77.75 5465.91 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715634_/CON (HAxp5_ASAP7_75t_R)\r\n  20.02 5485.92 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_374961_/Y (INVx4_ASAP7_75t_R)\r\n  27.92 5513.84 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715636_/CON (HAxp5_ASAP7_75t_R)\r\n  14.52 5528.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715578_/Y (INVx1_ASAP7_75t_R)\r\n 110.73 5639.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715638_/SN (HAxp5_ASAP7_75t_R)\r\n  46.55 5685.64 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384519_/Y (XNOR2x1_ASAP7_75t_R)\r\n  41.02 5726.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384524_/Y (AND5x2_ASAP7_75t_R)\r\n  63.15 5789.80 v wire30208/Y (BUFx12f_ASAP7_75t_R)\r\n  83.85 5873.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09398_/Y (AO221x2_ASAP7_75t_R)\r\n  31.18 5904.83 v wire29780/Y (BUFx12f_ASAP7_75t_R)\r\n  67.42 5972.25 v wire29779/Y (BUFx12f_ASAP7_75t_R)\r\n  66.73 6038.98 v wire29778/Y (BUFx12f_ASAP7_75t_R)\r\n  66.08 6105.06 v wire29777/Y (BUFx12f_ASAP7_75t_R)\r\n  99.39 6204.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09399_/Y (OR4x2_ASAP7_75t_R)\r\n  52.91 6257.36 v wire29446/Y (BUFx12f_ASAP7_75t_R)\r\n  74.94 6332.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09400_/Y (OR3x2_ASAP7_75t_R)\r\n  11.77 6344.06 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13817_/Y (NOR2x1_ASAP7_75t_R)\r\n  36.79 6380.86 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13818_/Y (AND3x4_ASAP7_75t_R)\r\n  22.16 6403.01 ^ wire29198/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 6419.13 ^ wire4813/Y (BUFx16f_ASAP7_75t_R)\r\n  79.70 6498.83 ^ wire29197/Y (BUFx3_ASAP7_75t_R)\r\n  17.06 6515.89 ^ wire4798/Y (BUFx16f_ASAP7_75t_R)\r\n 110.37 6626.27 ^ wire29196/Y (BUFx3_ASAP7_75t_R)\r\n  17.81 6644.08 ^ wire4769/Y (BUFx16f_ASAP7_75t_R)\r\n  71.73 6715.81 ^ wire29195/Y (BUFx12f_ASAP7_75t_R)\r\n  63.73 6779.54 ^ wire29194/Y (BUFx16f_ASAP7_75t_R)\r\n  82.80 6862.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380843_/Y (AND3x4_ASAP7_75t_R)\r\n  80.15 6942.49 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380845_/Y (XNOR2x2_ASAP7_75t_R)\r\n  40.14 6982.63 v wire24381/Y (BUFx3_ASAP7_75t_R)\r\n  16.96 6999.59 v wire4637/Y (BUFx16f_ASAP7_75t_R)\r\n 169.90 7169.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715676_/CON (HAxp5_ASAP7_75t_R)\r\n  22.93 7192.41 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_380978_/Y (INVx5_ASAP7_75t_R)\r\n  39.12 7231.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715678_/CON (HAxp5_ASAP7_75t_R)\r\n  17.36 7248.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715581_/Y (INVx1_ASAP7_75t_R)\r\n 139.72 7388.61 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_715680_/SN (HAxp5_ASAP7_75t_R)\r\n  46.63 7435.24 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384526_/Y (XNOR2x1_ASAP7_75t_R)\r\n  43.35 7478.59 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_384530_/Y (AND5x2_ASAP7_75t_R)\r\n  21.89 7500.48 ^ wire14553/Y (BUFx16f_ASAP7_75t_R)\r\n  60.38 7560.86 ^ wire14552/Y (BUFx12f_ASAP7_75t_R)\r\n  78.29 7639.15 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09424_/Y (AO221x2_ASAP7_75t_R)\r\n  46.92 7686.07 ^ wire14505/Y (BUFx12f_ASAP7_75t_R)\r\n  61.68 7747.74 ^ wire14504/Y (BUFx12f_ASAP7_75t_R)\r\n  63.66 7811.41 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09425_/Y (OR4x2_ASAP7_75t_R)\r\n  18.88 7830.29 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09426_/Y (OA21x2_ASAP7_75t_R)\r\n   9.19 7839.48 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13964_/Y (NOR2x1_ASAP7_75t_R)\r\n  32.41 7871.89 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13965_/Y (AND3x4_ASAP7_75t_R)\r\n  21.83 7893.72 v wire14423/Y (BUFx3_ASAP7_75t_R)\r\n  16.60 7910.32 v wire2687/Y (BUFx16f_ASAP7_75t_R)\r\n  76.26 7986.58 v wire14422/Y (BUFx3_ASAP7_75t_R)\r\n  17.63 8004.21 v wire2673/Y (BUFx16f_ASAP7_75t_R)\r\n  92.08 8096.29 v max_length14421/Y (BUFx16f_ASAP7_75t_R)\r\n  48.26 8144.55 v wire14420/Y (BUFx12f_ASAP7_75t_R)\r\n  65.64 8210.20 v wire14419/Y (BUFx12f_ASAP7_75t_R)\r\n  78.20 8288.39 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462481_/Y (AND2x2_ASAP7_75t_R)\r\n  32.72 8321.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_462482_/Y (NAND2x2_ASAP7_75t_R)\r\n  51.65 8372.77 ^ wire13868/Y (BUFx16f_ASAP7_75t_R)\r\n  93.74 8466.51 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_463033_/Y (OR2x6_ASAP7_75t_R)\r\n  66.52 8533.02 ^ wire13185/Y (BUFx16f_ASAP7_75t_R)\r\n 125.00 8658.02 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_469024_/Y (NOR2x2_ASAP7_75t_R)\r\n  73.88 8731.90 v wire7777/Y (BUFx16f_ASAP7_75t_R)\r\n 117.54 8849.44 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_477305_/Y (OR3x4_ASAP7_75t_R)\r\n  46.53 8895.97 v wire2121/Y (BUFx3_ASAP7_75t_R)\r\n  16.26 8912.24 v wire1767/Y (BUFx16f_ASAP7_75t_R)\r\n 100.49 9012.73 v max_length2120/Y (BUFx16f_ASAP7_75t_R)\r\n  62.86 9075.59 v max_length2119/Y (BUFx16f_ASAP7_75t_R)\r\n  21.06 9096.65 v wire2118/Y (BUFx16f_ASAP7_75t_R)\r\n  76.88 9173.53 v max_length2117/Y (BUFx16f_ASAP7_75t_R)\r\n  36.80 9210.33 v wire2116/Y (BUFx16f_ASAP7_75t_R)\r\n  83.84 9294.17 v wire2115/Y (BUFx16f_ASAP7_75t_R)\r\n 105.13 9399.30 v wire2101/Y (BUFx16f_ASAP7_75t_R)\r\n  95.85 9495.16 v wire2100/Y (BUFx16f_ASAP7_75t_R)\r\n  52.35 9547.50 v max_length2099/Y (BUFx16f_ASAP7_75t_R)\r\n  38.11 9585.61 v wire2098/Y (BUFx3_ASAP7_75t_R)\r\n  16.02 9601.62 v wire113/Y (BUFx16f_ASAP7_75t_R)\r\n 127.64 9729.27 v max_length2096/Y (BUFx16f_ASAP7_75t_R)\r\n  47.57 9776.84 v wire2094/Y (BUFx3_ASAP7_75t_R)\r\n  16.12 9792.96 v wire70/Y (BUFx16f_ASAP7_75t_R)\r\n 103.02 9895.98 v max_length2093/Y (BUFx16f_ASAP7_75t_R)\r\n  51.33 9947.30 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521833_/Y (NOR2x1_ASAP7_75t_R)\r\n  14.62 9961.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_521834_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 9961.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/D (DFFHQNx2_ASAP7_75t_R)\r\n        9961.94   data arrival time\r\n\r\n8500.00 8500.00   clock clock_uncore (rise edge)\r\n1952.03 10452.03   clock network delay (propagated)\r\n -10.00 10442.03   clock uncertainty\r\n   0.00 10442.03   clock reconvergence pessimism\r\n        10442.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_719555_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -6.09 10435.94   library setup time\r\n        10435.94   data required time\r\n---------------------------------------------------------\r\n        10435.94   data required time\r\n        -9961.94   data arrival time\r\n---------------------------------------------------------\r\n         474.00   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1267_\r\n            (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nEndpoint: system/serial_tl_domain/_1188_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock serial_tl_0_clock (rise edge)\r\n  48.42   48.42   clock network delay (propagated)\r\n   0.00   48.42 ^ system/serial_tl_domain/_1267_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n 130.15  178.57 ^ system/serial_tl_domain/_1267_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n  69.41  247.98 v system/serial_tl_domain/_0676_/Y (NOR2x2_ASAP7_75t_R)\r\n  39.09  287.06 v system/serial_tl_domain/_0823_/Y (AND2x4_ASAP7_75t_R)\r\n  22.08  309.14 ^ system/serial_tl_domain/_1128_/CON (HAxp5_ASAP7_75t_R)\r\n   9.17  318.32 v system/serial_tl_domain/_1125_/Y (INVx1_ASAP7_75t_R)\r\n  13.54  331.85 ^ system/serial_tl_domain/_1129_/CON (HAxp5_ASAP7_75t_R)\r\n   8.88  340.73 v system/serial_tl_domain/_1123_/Y (INVx1_ASAP7_75t_R)\r\n  83.77  424.51 v system/serial_tl_domain/_1130_/SN (HAxp5_ASAP7_75t_R)\r\n  41.84  466.35 v load_slew119094/Y (BUFx10_ASAP7_75t_R)\r\n  24.78  491.13 v system/serial_tl_domain/_0863_/Y (AND2x2_ASAP7_75t_R)\r\n  19.53  510.67 v system/serial_tl_domain/_0864_/Y (AND2x2_ASAP7_75t_R)\r\n  23.33  534.00 v system/serial_tl_domain/_0866_/Y (AO32x1_ASAP7_75t_R)\r\n  49.05  583.05 v system/serial_tl_domain/_0870_/Y (OR5x2_ASAP7_75t_R)\r\n  22.11  605.16 v system/serial_tl_domain/_0872_/Y (OA22x2_ASAP7_75t_R)\r\n   0.01  605.17 v system/serial_tl_domain/_1188_/D (DFFHQNx2_ASAP7_75t_R)\r\n         605.17   data arrival time\r\n\r\n8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n  47.57 8547.57   clock network delay (propagated)\r\n -10.00 8537.57   clock uncertainty\r\n   0.00 8537.57   clock reconvergence pessimism\r\n        8537.57 ^ system/serial_tl_domain/_1188_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  -4.26 8533.31   library setup time\r\n        8533.31   data required time\r\n---------------------------------------------------------\r\n        8533.31   data required time\r\n        -605.17   data arrival time\r\n---------------------------------------------------------\r\n        7928.14   slack (MET)\r\n\r\n```\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock_uncore period_min = 8026.00 fmax = 124.60\r\nserial_tl_0_clock period_min = 571.86 fmax = 1748.67\r\n```\r\n\r\n```\r\n$ ./orfs make FLOW_VARIANT=flat elapsed\r\nLog                       Elapsed seconds\r\n1_1_yosys                       4057\r\n1_1_yosys_hier_report           4063\r\n2_1_floorplan                    393\r\n2_2_floorplan_io                  12\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/flat/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro             1817\r\n2_5_floorplan_tapcell            678\r\n2_6_floorplan_pdn                580\r\n3_1_place_gp_skip_io             877\r\n3_2_place_iop                     38\r\n3_3_place_gp                    7678\r\n3_4_place_resized               1341\r\n3_5_place_dp                    1934\r\n4_1_cts                        12699\r\n5_1_grt                        68906\r\n5_2_fillcell                     143\r\n5_3_route                      20911\r\n6_1_merge                        556\r\n6_report                        7928\r\ngenerate_abstract               1166\r\nTotal                         135777\r\n```\r\n", "date": "2024-01-13T10:44:53Z"}, {"author": "oharboe", "role": "assistant", "message": "@gudeh Any idea why the colors are so different for estimated and actual routing congestion? The estimate appears to give a very similar looking image, but why is the actual estimated congestion different?", "date": "2024-01-13T17:30:22Z"}, {"author": "rovinski", "role": "assistant", "message": "@oharboe Just a thought, have you properly constrained the async FIFO in SDC? I found this line https://github.com/The-OpenROAD-Project/megaboom/blob/1cce55c772d823ebca0bf8368f1d363a2e546044/constraints-chiptop.sdc#L13. I'm not sure if this covers the async FIFO or not. This would be okay for design space exploration, but for a real implementation it isn't sufficient. See [this very good guide](https://gist.github.com/brabect1/7695ead3d79be47576890bbcd61fe426).", "date": "2024-01-13T21:47:05Z"}, {"author": "oharboe", "role": "assistant", "message": "Regarding the very long global routing times. The global routing is actually fast, it is incremental repair and [reporting times](https://github.com/The-OpenROAD-Project/OpenROAD/issues/4533) that are slow.", "date": "2024-01-15T09:59:12Z"}], "date": "2024-01-13T10:44:53Z", "category": "Runtime", "subcategory": "Long run times", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4522", "id": 4522, "title": "MegaBoom, clock trees, macro placement and global routing congestion", "author": "oharboe", "description": "How can I tell if clock skew is increasing the minimum clock period for a design?\r\n\r\nHere is my current understanding:\r\n\r\nIf two flip flops are not connected, then the clock skew between the clocks that drive those two flip flops doesn't matter because there is no timing path between these two flip flops.\r\n\r\nSkew can be good and it can be bad. If there is a long timing path between two flip flops, then a negative skew for the starting flip flops or postivive skew for the capturing flip flop would make it easier to meet timing.\r\n\r\nAs a first order approximation though, the CTS will try to minimize clock skew, because in the end a very large clock skew will catch up with you and increase the minimum clock period.\r\n\r\nLatest MegaBoom update:\r\n\r\nI have [modified MegaBoom](https://github.com/The-OpenROAD-Project/megaboom/pull/18) so that it no longer has a PLL, but a clock for the TileLink (top level memory/peripheral interface) and for the RISC-V core.\r\n\r\nAs I understand, though I don't know the code very well, the RISC-V core is connected to the TileLink via an asynchronous FIFO(or equivalent thereof).\r\n\r\nTherefore there are no ChipTop inputs/outputs that have an insertion point relative to the clock for the RISC-V core. This seems like a clever way of doing things, because then the insertion latency of the RISC-V clock doesn't matter(though clock uncertainty which I would expect to grow with a long clock insertation latency) for the clock period.\r\n\r\n```\r\n>>> report_clock_skew\r\nClock clock_uncore\r\nLatency      CRPR       Skew\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_728430_/CLK ^\r\n 882.50\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/core/int_issue_unit/slots_32/_3607_/CLK ^\r\n1008.42      0.00    -125.92\r\n\r\nClock serial_tl_0_clock\r\nLatency      CRPR       Skew\r\nsystem/serial_tl_domain/_1154_/CLK ^\r\n  67.76\r\nsystem/serial_tl_domain/_1275_/CLK ^\r\n  64.77      0.00       2.99\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1df082cd-b853-44f7-8b5e-7ebeb9e1409b)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e1288f3f-c699-4fa5-9148-40a2b85e5d43)\r\n\r\nSome notes:\r\n\r\n- The area of some of those macros are mocked to be smaller than they really are so as to fit this into 1000um x 1000um and have reasonable turnaround times in builds. The L2 is *tiny* in area...\r\n- The longest timing path is part of the top level design(macros are not involved), so nothing material should be lost by ignoring what is inside the macros for now. The macros are abstracts from floorplan, so completely unrealistic.\r\n- A quick test the other day put a flattened design at ca. 3mm^2 and 3 million instances(big caveat, as I write this from my flawed memory, I'm not currently studying a flattened design). To be revisited later maybe.\r\n- W.r.t. the global placement congestion, macro placement has a fix coming up, so I don't think there's anything interesting to study w.r.t. macro placement and global routing congestion until a new build has been done after that fix. https://github.com/The-OpenROAD-Project/OpenROAD/pull/4519\r\n- almost no hold cells, 20, there used to be thousands or even tens of thousands. . :exploding_head: \r\n- running time for CTS is now much more reasonable, 5000s down from 30000s. This is not entirely suprising: now that the clock tree is not pathologically formed, the repair job is probably quick.\r\n\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_0_mem                          173\r\n1_1_yosys                       3606\r\n1_1_yosys_hier_report           3542\r\n2_1_floorplan                    277\r\n2_2_floorplan_io                   8\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/base/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro              496\r\n2_5_floorplan_tapcell            130\r\n2_6_floorplan_pdn                206\r\n3_1_place_gp_skip_io             448\r\n3_2_place_iop                     14\r\n3_3_place_gp                    4564\r\n3_4_place_resized                863\r\n3_5_place_dp                    1033\r\n4_1_cts                         5069\r\n5_1_grt                        14525\r\nTotal                          34954\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I tell if clock skew is increasing the minimum clock period for a design?\r\n\r\nHere is my current understanding:\r\n\r\nIf two flip flops are not connected, then the clock skew between the clocks that drive those two flip flops doesn't matter because there is no timing path between these two flip flops.\r\n\r\nSkew can be good and it can be bad. If there is a long timing path between two flip flops, then a negative skew for the starting flip flops or postivive skew for the capturing flip flop would make it easier to meet timing.\r\n\r\nAs a first order approximation though, the CTS will try to minimize clock skew, because in the end a very large clock skew will catch up with you and increase the minimum clock period.\r\n\r\nLatest MegaBoom update:\r\n\r\nI have [modified MegaBoom](https://github.com/The-OpenROAD-Project/megaboom/pull/18) so that it no longer has a PLL, but a clock for the TileLink (top level memory/peripheral interface) and for the RISC-V core.\r\n\r\nAs I understand, though I don't know the code very well, the RISC-V core is connected to the TileLink via an asynchronous FIFO(or equivalent thereof).\r\n\r\nTherefore there are no ChipTop inputs/outputs that have an insertion point relative to the clock for the RISC-V core. This seems like a clever way of doing things, because then the insertion latency of the RISC-V clock doesn't matter(though clock uncertainty which I would expect to grow with a long clock insertation latency) for the clock period.\r\n\r\n```\r\n>>> report_clock_skew\r\nClock clock_uncore\r\nLatency      CRPR       Skew\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_728430_/CLK ^\r\n 882.50\r\nsystem/tile_prci_domain/tile_reset_domain_boom_tile/core/int_issue_unit/slots_32/_3607_/CLK ^\r\n1008.42      0.00    -125.92\r\n\r\nClock serial_tl_0_clock\r\nLatency      CRPR       Skew\r\nsystem/serial_tl_domain/_1154_/CLK ^\r\n  67.76\r\nsystem/serial_tl_domain/_1275_/CLK ^\r\n  64.77      0.00       2.99\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1df082cd-b853-44f7-8b5e-7ebeb9e1409b)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e1288f3f-c699-4fa5-9148-40a2b85e5d43)\r\n\r\nSome notes:\r\n\r\n- The area of some of those macros are mocked to be smaller than they really are so as to fit this into 1000um x 1000um and have reasonable turnaround times in builds. The L2 is *tiny* in area...\r\n- The longest timing path is part of the top level design(macros are not involved), so nothing material should be lost by ignoring what is inside the macros for now. The macros are abstracts from floorplan, so completely unrealistic.\r\n- A quick test the other day put a flattened design at ca. 3mm^2 and 3 million instances(big caveat, as I write this from my flawed memory, I'm not currently studying a flattened design). To be revisited later maybe.\r\n- W.r.t. the global placement congestion, macro placement has a fix coming up, so I don't think there's anything interesting to study w.r.t. macro placement and global routing congestion until a new build has been done after that fix. https://github.com/The-OpenROAD-Project/OpenROAD/pull/4519\r\n- almost no hold cells, 20, there used to be thousands or even tens of thousands. . :exploding_head: \r\n- running time for CTS is now much more reasonable, 5000s down from 30000s. This is not entirely suprising: now that the clock tree is not pathologically formed, the repair job is probably quick.\r\n\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_0_mem                          173\r\n1_1_yosys                       3606\r\n1_1_yosys_hier_report           3542\r\n2_1_floorplan                    277\r\n2_2_floorplan_io                   8\r\nNo elapsed time found in bazel-bin/logs/asap7/ChipTop/base/2_3_floorplan_tdms.log\r\n2_4_floorplan_macro              496\r\n2_5_floorplan_tapcell            130\r\n2_6_floorplan_pdn                206\r\n3_1_place_gp_skip_io             448\r\n3_2_place_iop                     14\r\n3_3_place_gp                    4564\r\n3_4_place_resized                863\r\n3_5_place_dp                    1033\r\n4_1_cts                         5069\r\n5_1_grt                        14525\r\nTotal                          34954\r\n```\r\n", "date": "2024-01-11T06:33:55Z"}, {"author": "rovinski", "role": "assistant", "message": "> If two flip flops are not connected, then the clock skew between the clocks that drive those two flip flops doesn't matter because there is no timing path between these two flip flops.\r\n\r\nCorrect\r\n\r\n> Skew can be good and it can be bad. If there is a long timing path between two flip flops, then a negative skew for the starting flip flops or postivive skew for the capturing flip flop would make it easier to meet timing.\r\n\r\nCorrect\r\n\r\n> As a first order approximation though, the CTS will try to minimize clock skew, because in the end a very large clock skew will catch up with you and increase the minimum clock period.\r\n\r\nThe OR CTS engine tries to minimize skew because it is algorithmically simpler, but not necessarily the most optimal. Commercial engines use a technique called \"concurrent clock optimization\" which will look at the timing paths and purposefully skew certain registers if it makes timing better.\r\n\r\nConcurrent clock optimization has a similar effect to register retiming - the former shifts the clock so it borrows setup time from one stage to give to another stage. The latter shifts logic from one stage to another stage and therefore also shifts setup time.\r\n\r\n> As I understand, though I don't know the code very well, the RISC-V core is connected to the TileLink via an asynchronous FIFO(or equivalent thereof).\r\n\r\nYes, async FIFOs or other clock domain crossings (CDCs) are convenient ways to break up and decouple clock trees. Clock trees cannot become too large, because the larger they are, the more power they consume and the more difficult it is to minimize skew/jitter/uncertainty. A clock tree can become so large that the jitter becomes larger than the clock period, in which case timing is impossible to meet. There is a design tradeoff between how many clock domains there are and data latency because the CDCs add one or more cycles when transmitting data across the interface.\r\n\r\n> How can I tell if clock skew is increasing the minimum clock period for a design?\r\n\r\nI might rephrase the question more simply as \"How can I tell if clock skew is bad for a design?\" because clock skew always impacts the clock period, as alluded above. This is one of the areas where it takes a lot of intuition, experimentation, and heuristics to evaluate because the answer is rarely clear. A soft and perhaps unuseful rule of thumb would be \"when the clock skew/jitter/uncertainty becomes a significant fraction of the clock period\". There are no hard rules of thumb, because sometimes high skew can be tolerated in order to keep the design fully synchronous. I personally start to get suspicious if the skew is eating more than 20-40% of the clock period. But the size of the clock tree also matters and how much skew you would _expect_ from a clock tree of that size.\r\n\r\nThere are some red flags, though, to identify purely suboptimal results. One is if there are many, many hold buffers being inserted. This is usually due to bad timing constraints, but it could also be due to bad skew in the clock tree.\r\n\r\nAnother red flag is if a path is failing both setup time _and_ hold time. This most often happens not because of skew but because of jitter caused by on-chip variation. Jitter can cause clock edges to be both early and late, which means that if a path is failing both then the jitter is too high.", "date": "2024-01-11T07:47:29Z"}, {"author": "oharboe", "role": "assistant", "message": "This is the [asynchronous connection](https://github.com/The-OpenROAD-Project/megaboom/blob/9d9d44d90545dd747f38f23d1f4c37045edb5d57/rtl/ClockSinkDomain_2.sv#L163C3-L163C3) between TileLink and the rest of the system is in the Verilog code.\r\n\r\nHere is [the expected gray counter](https://github.com/The-OpenROAD-Project/megaboom/blob/9d9d44d90545dd747f38f23d1f4c37045edb5d57/rtl/AsyncQueueSink_3.sv#L56C14-L56C34)  and the corresponding [Chisel code](https://github.com/chipsalliance/rocket-chip/blob/50adbdb3e4e18c2b3de57693323f4174b60f9767/src/main/scala/util/AsyncQueue.scala#L145). \r\n\r\n", "date": "2024-01-11T11:52:46Z"}, {"author": "oharboe", "role": "assistant", "message": "I chased down the synchronous reset although it doesn't show up in the most critical path at the ChipTop level.\r\n\r\nFor now, I have created a macro out of the BranchPredictor to rein in build times. In that macro the synchronous reset has a very large fanout, which obviously is a disaster for timing.\r\n\r\nAfter some investigation at the top level, I have found out that MegaBoom, [as documented](https://docs.boom-core.org/en/latest/sections/physical-realization.html#register-retiming), is relying heavily on register retiming and that the synchronous reset [is in fact pipelined](https://github.com/The-OpenROAD-Project/megaboom/blob/9d9d44d90545dd747f38f23d1f4c37045edb5d57/rtl/AsyncResetSynchronizerPrimitiveShiftReg_d3_i0.sv#L40).\r\n\r\nHowever, since the design is hierarchical and not flattened, the design won't be able to take advantage of these three pipeline stages. Also, yosys does not support retiming.\r\n\r\nRetiming in OpenROAD/yosys has been discussed in some detail [previously](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/discussions/1710#discussioncomment-7882745), I wanted to share the results of my investigation into synchronous reset specifically for MegaBoom.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/205fd24f-9f6f-4153-ba6e-75a32f1f87a9)\r\n", "date": "2024-01-11T14:07:53Z"}, {"author": "oharboe", "role": "assistant", "message": "For my part, the questions were answered so closing.", "date": "2024-01-12T21:05:45Z"}], "date": "2024-01-11T06:33:55Z", "category": "Runtime", "subcategory": "Clock tree and timing analysis", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4504", "id": 4504, "title": "MegaBoom with clock tree", "author": "oharboe", "description": "Looks much more reasonable now. There are H-clock trees after CTS.\r\n\r\n`make cts_issue`; CTS takes ca. 25000 seconds on my machine: https://drive.google.com/file/d/13eenpP2JgzXJD0uP3KIpX4QLArBVjzT2/view?usp=sharing\r\n\r\nThis is apples and oranges comparision, but ... Minimum clock period is 5000ps, whereas I've seen claims on the order of 1000ps with commercial tools for the most similar design I know of to MegaBoom: https://carrv.github.io/2020/papers/CARRV2020_paper_15_Zhao.pdf\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock period_min = 5403.70 fmax = 185.06\r\nclock_vir period_min = 0.00 fmax = inf\r\nfake_pll_clk period_min = 5403.70 fmax = 185.06\r\nserial_tl_0_clock period_min = 953.62 fmax = 1048.63\r\n```\r\n\r\nYellow are hold cells, very reasonable... Clock tree looks odd. Those leaf nodes on the right side are flip flops. It would be nice if there was some clear visual indication of macros vs. flip flop endpoints in the CTS view....\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5837af84-df29-4b34-adbe-c8f9b1a48e14)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/6f0037fa-6c26-4904-88a0-e31fc5312cb0)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3d39c96e-5d49-4a5e-add6-6e6517d4ccf8)\r\n\r\n\r\n```\r\nreport_checks -path_delay max -fields {fanout skew}\r\nStartpoint: reset (input port clocked by clock_vir)\r\nEndpoint: system/prci_ctrl_domain/_3041_\r\n          (recovery check against rising-edge clock fake_pll_clk)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v reset (in)\r\n     1   10.58 2710.58 v hold4662/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2723.18 v hold4387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2735.67 v hold4663/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2748.32 v hold4335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2760.97 v hold4664/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2773.69 v hold4388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 2786.50 v hold4665/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2799.00 v hold64/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2811.66 v hold4666/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2824.31 v hold4389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 2836.91 v hold4667/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 2849.61 v hold4336/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 2862.09 v hold4668/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 2874.48 v hold4390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2886.88 v hold4669/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2899.21 v hold56/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 2911.54 v hold4670/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 2923.77 v hold4391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.45 2936.22 v hold4671/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2948.71 v hold4337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 2961.06 v hold4672/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2973.22 v hold4392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2985.48 v hold4673/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.38 2997.87 v hold65/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 3010.12 v hold4674/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 3022.31 v hold4393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3034.52 v hold4675/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3046.72 v hold4338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 3059.19 v hold4676/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 3071.78 v hold4394/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.63 3087.41 v hold4677/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.70 3106.12 v input5/Y (BUFx24_ASAP7_75t_R)\r\n     1   13.56 3119.68 v hold4678/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.47 3134.15 v hold4395/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3149.44 v hold4339/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3164.73 v hold4396/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3180.00 v hold66/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3195.29 v hold4397/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 3210.53 v hold4340/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3225.74 v hold4398/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3241.03 v hold57/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3256.34 v hold4399/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3271.56 v hold4341/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3286.82 v hold4400/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3302.12 v hold67/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3317.35 v hold4401/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3332.56 v hold4342/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3350.46 v hold4402/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.93 3367.38 v wire96200/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.22 3381.60 v hold4403/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.14 3396.75 v hold4343/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3412.01 v hold4404/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3427.30 v hold68/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 3442.49 v hold4405/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3457.70 v hold4344/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3472.98 v hold4406/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3488.22 v hold58/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3503.40 v hold4407/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3518.64 v hold4345/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3533.87 v hold4408/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3549.06 v hold69/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.15 3564.21 v hold4409/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.13 3579.33 v hold4346/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.89 3597.22 v hold4410/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.94 3614.16 v wire96199/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.34 3628.51 v hold4411/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3643.80 v hold4347/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3659.08 v hold4412/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3674.36 v hold70/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3689.65 v hold4413/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3704.94 v hold4348/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3720.18 v hold4414/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3735.49 v hold59/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3750.82 v hold4415/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3766.08 v hold4349/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3781.32 v hold4416/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3796.53 v hold71/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.32 3811.85 v hold4417/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.36 3827.21 v hold4350/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3845.10 v hold4418/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.84 3861.95 v wire96198/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.33 3876.27 v hold4419/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.34 3891.61 v hold4351/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3906.92 v hold4420/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3922.13 v hold72/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3937.43 v hold4421/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3952.73 v hold4352/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3967.93 v hold4422/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3983.26 v hold60/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3998.57 v hold4423/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4013.88 v hold4353/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4029.16 v hold4424/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.17 4044.33 v hold73/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4059.57 v hold4425/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4074.94 v hold4354/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.95 4092.90 v hold4426/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.85 4109.75 v wire96197/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.32 4124.07 v hold4427/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4139.40 v hold4355/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4154.77 v hold4428/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4170.01 v hold74/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 4185.20 v hold4429/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4200.45 v hold4356/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4215.67 v hold4430/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4230.98 v hold61/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4246.25 v hold4431/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4261.53 v hold4357/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4276.86 v hold4432/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4292.15 v hold75/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 4307.35 v hold4433/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 4322.59 v hold4358/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.96 4340.55 v hold4434/Y (BUFx2_ASAP7_75t_R)\r\n     1   20.57 4361.13 v wire96196/Y (BUFx24_ASAP7_75t_R)\r\n     1   14.76 4375.89 v hold4435/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4391.20 v hold4359/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4406.49 v hold4436/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4421.75 v hold76/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4437.02 v hold4437/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4452.26 v hold4360/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4467.52 v hold4438/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4482.79 v hold62/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 4497.99 v hold4439/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 4513.17 v hold4361/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 4528.42 v hold4440/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4543.66 v hold77/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4558.88 v hold4441/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 4574.23 v hold4362/Y (BUFx2_ASAP7_75t_R)\r\n     1   22.85 4597.08 v hold4442/Y (BUFx2_ASAP7_75t_R)\r\n    15   15.42 4612.50 ^ system/prci_ctrl_domain/_1567_/Y (INVx11_ASAP7_75t_R)\r\n          2.22 4614.72 ^ system/prci_ctrl_domain/_3041_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n               4614.72   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        474.60 8974.60   clock network delay (propagated)\r\n        -10.00 8964.60   clock uncertainty\r\n          0.00 8964.60   clock reconvergence pessimism\r\n               8964.60 ^ system/prci_ctrl_domain/_3041_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n          4.83 8969.43   library recovery time\r\n               8969.43   data required time\r\n---------------------------------------------------------------\r\n               8969.43   data required time\r\n               -4614.72   data arrival time\r\n---------------------------------------------------------------\r\n               4354.71   slack (MET)\r\n\r\n\r\nStartpoint: system/prci_ctrl_domain/_2967_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/prci_ctrl_domain/_1576_\r\n          (rising clock gating-check end-point clocked by fake_pll_clk)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n        983.66  983.66   clock network delay (propagated)\r\n          0.00  983.66 ^ system/prci_ctrl_domain/_2967_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n    29  134.66 1118.32 v system/prci_ctrl_domain/_2967_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n     1   41.06 1159.38 v hold6293/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.10 1173.47 v hold6165/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1185.77 v hold6294/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1198.07 v hold6101/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1210.37 v hold6295/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1222.63 v hold6166/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1234.88 v hold6296/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1247.17 v hold5379/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 1259.39 v hold6297/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 1271.74 v hold6167/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 1284.10 v hold6298/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1296.38 v hold6102/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1308.63 v hold6299/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 1321.09 v hold6168/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1333.82 v hold6300/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 1346.34 v hold4926/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1358.54 v hold6301/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1370.85 v hold6169/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 1383.12 v hold6302/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 1395.53 v hold6103/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1408.26 v hold6303/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1421.03 v hold6170/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 1433.72 v hold6304/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 1446.40 v hold5380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1459.19 v hold6305/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1472.02 v hold6171/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 1484.59 v hold6306/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 1496.96 v hold6104/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1509.22 v hold6307/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 1521.92 v hold6172/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1534.74 v hold6308/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1547.36 v hold4681/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 1559.74 v hold6309/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1572.00 v hold6173/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1584.30 v hold6310/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1597.06 v hold6105/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.51 1609.57 v hold6311/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 1621.73 v hold6174/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1634.53 v hold6312/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 1647.71 v hold5381/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 1660.86 v hold6313/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 1674.00 v hold6175/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 1687.12 v hold6314/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1699.76 v hold6106/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 1711.97 v hold6315/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 1724.29 v hold6176/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 1737.31 v hold6316/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1749.93 v hold4927/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1762.70 v hold6317/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1775.24 v hold6177/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1787.97 v hold6318/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 1801.06 v hold6107/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1814.23 v hold6319/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1827.04 v hold6178/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 1839.94 v hold6320/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 1852.42 v hold5382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1865.07 v hold6321/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 1877.55 v hold6179/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1889.85 v hold6322/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 1902.89 v hold6108/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1916.05 v hold6323/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 1928.68 v hold6180/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 1941.34 v hold6324/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1953.88 v hold4532/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1966.16 v hold6325/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 1978.40 v hold6181/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1990.60 v hold6326/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2002.76 v hold6109/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.10 2014.86 v hold6327/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2027.85 v hold6182/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2040.62 v hold6328/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 2052.84 v hold5383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2065.15 v hold6329/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2077.41 v hold6183/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 2089.71 v hold6330/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 2101.98 v hold6110/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2114.31 v hold6331/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 2127.24 v hold6184/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 2139.92 v hold6332/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2152.26 v hold4928/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 2164.78 v hold6333/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2177.41 v hold6185/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2189.99 v hold6334/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2202.48 v hold6111/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 2215.24 v hold6335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2227.82 v hold6186/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2240.82 v hold6336/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.26 2254.08 v hold5384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.10 2267.18 v hold6337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2280.06 v hold6187/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2292.45 v hold6338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 2305.14 v hold6112/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 2318.31 v hold6339/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 2331.55 v hold6188/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 2344.49 v hold6340/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2357.37 v hold4682/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 2370.45 v hold6341/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 2383.51 v hold6189/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.44 2395.95 v hold6342/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 2409.06 v hold6113/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 2422.58 v hold6343/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2435.33 v hold6190/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2448.35 v hold6344/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 2461.14 v hold5385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2473.46 v hold6345/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 2486.32 v hold6191/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.72 2500.04 v hold6346/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2514.08 v hold6114/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.71 2527.79 v hold6347/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2540.53 v hold6192/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2553.30 v hold6348/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 2566.61 v hold4929/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 2580.08 v hold6349/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.34 2593.42 v hold6193/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2606.83 v hold6350/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.19 2620.02 v hold6115/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2632.66 v hold6351/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2644.99 v hold6194/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2657.71 v hold6352/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 2670.28 v hold5386/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2682.76 v hold6353/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.07 2695.84 v hold6195/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2709.26 v hold6354/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 2722.44 v hold6116/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2735.05 v hold6355/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2747.62 v hold6196/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2759.95 v hold6356/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 2772.19 v hold4317/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 2785.42 v hold6357/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2798.42 v hold6197/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 2811.30 v hold6358/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.39 2824.69 v hold6117/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2837.72 v hold6359/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.42 2850.13 v hold6198/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2863.12 v hold6360/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2876.68 v hold5387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 2889.57 v hold6361/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 2901.86 v hold6199/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 2914.95 v hold6362/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.65 2928.60 v hold6118/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.02 2942.62 v hold6363/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.33 2956.95 v hold6200/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2970.98 v hold6364/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.62 2984.61 v hold4930/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2998.16 v hold6365/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.70 3011.86 v hold6201/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.86 3025.72 v hold6366/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3038.67 v hold6119/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3051.19 v hold6367/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3063.79 v hold6202/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3076.69 v hold6368/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3089.21 v hold5388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3101.85 v hold6369/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 3115.16 v hold6203/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 3127.95 v hold6370/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3141.13 v hold6120/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.51 3154.64 v hold6371/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 3167.48 v hold6204/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 3179.78 v hold6372/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 3192.33 v hold4683/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.37 3205.71 v hold6373/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3218.58 v hold6205/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 3231.89 v hold6374/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 3245.11 v hold6121/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3258.02 v hold6375/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 3270.59 v hold6206/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 3282.80 v hold6376/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3295.74 v hold5389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3308.36 v hold6377/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 3321.59 v hold6207/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 3334.63 v hold6378/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.57 3348.20 v hold6122/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3361.35 v hold6379/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 3374.80 v hold6208/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 3387.94 v hold6380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3400.29 v hold4931/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3413.17 v hold6381/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 3426.15 v hold6209/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3438.68 v hold6382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 3451.60 v hold6123/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 3465.10 v hold6383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3477.95 v hold6210/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3490.90 v hold6384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 3504.15 v hold5390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3516.69 v hold6385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3529.04 v hold6211/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.55 3542.59 v hold6386/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 3555.88 v hold6124/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 3568.28 v hold6387/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 3581.34 v hold6212/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3594.24 v hold6388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 3606.90 v hold4533/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3619.75 v hold6389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 3632.25 v hold6213/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3644.78 v hold6390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3657.66 v hold6125/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 3671.08 v hold6391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3683.93 v hold6214/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.78 3696.70 v hold6392/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3709.88 v hold5391/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.83 3723.71 v hold6393/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.31 3738.02 v hold6215/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.03 3751.05 v hold6394/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3764.20 v hold6126/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.54 3777.74 v hold6216/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.35 3791.09 v hold4932/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 3803.85 v hold6217/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 3816.14 v hold6127/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 3828.40 v hold6218/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3841.01 v hold5392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.96 3853.97 v hold6219/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 3866.70 v hold6128/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 3879.39 v hold6220/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3891.85 v hold4684/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 3904.28 v hold6221/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 3916.52 v hold6129/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3928.99 v hold6222/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 3941.53 v hold5393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 3953.81 v hold6223/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3966.75 v hold6130/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.08 3980.82 v hold6224/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.56 3995.38 v hold4933/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 4008.56 v hold6225/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4020.80 v hold6131/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.36 4034.16 v hold6226/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 4047.10 v hold5394/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 4059.57 v hold6227/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 4072.18 v hold6132/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4084.61 v hold6228/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 4097.02 v hold55/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 4109.60 v hold6229/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 4122.52 v hold6133/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 4135.47 v hold6230/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.91 4148.38 v hold5395/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4161.68 v hold6231/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 4174.74 v hold6134/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.38 4188.13 v hold6232/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4200.93 v hold4934/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4213.19 v hold6233/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 4225.52 v hold6135/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 4238.05 v hold6234/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4250.45 v hold5396/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4262.65 v hold6235/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 4274.89 v hold6136/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 4287.49 v hold6236/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 4300.21 v hold4685/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.12 4313.32 v hold6237/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 4326.80 v hold6137/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 4340.29 v hold6238/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 4352.98 v hold5397/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 4365.83 v hold6239/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 4379.13 v hold6138/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 4391.84 v hold6240/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4404.10 v hold4935/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4416.35 v hold6241/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 4428.54 v hold6139/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 4441.69 v hold6242/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.98 4455.68 v hold5398/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.93 4469.61 v hold6243/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 4482.41 v hold6140/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 4495.55 v hold6244/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 4509.07 v hold4534/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4521.64 v hold6245/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4533.86 v hold6141/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 4546.38 v hold6246/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 4559.05 v hold5399/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 4571.76 v hold6247/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4584.15 v hold6142/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.20 4597.34 v hold6248/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 4610.20 v hold4936/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4622.40 v hold6249/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 4634.89 v hold6143/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4647.24 v hold6250/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 4659.58 v hold5400/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4672.01 v hold6251/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 4684.29 v hold6144/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.40 4697.68 v hold6252/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.97 4710.66 v hold4686/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 4723.91 v hold6253/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.75 4737.67 v hold6145/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4750.60 v hold6254/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 4762.91 v hold5401/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 4775.05 v hold6255/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 4787.42 v hold6146/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4799.99 v hold6256/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 4812.96 v hold4937/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 4825.62 v hold6257/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4838.91 v hold6147/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.89 4852.81 v hold6258/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 4865.89 v hold5402/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4878.28 v hold6259/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4891.10 v hold6148/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 4903.94 v hold6260/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4916.29 v hold4318/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4928.52 v hold6261/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.05 4941.57 v hold6149/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 4955.33 v hold6262/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 4969.26 v hold5403/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.94 4983.20 v hold6263/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4996.14 v hold6150/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 5008.41 v hold6264/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5021.72 v hold4938/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 5034.82 v hold6265/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 5047.13 v hold6151/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 5060.37 v hold6266/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 5073.81 v hold5404/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5087.13 v hold6267/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 5100.61 v hold6152/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5114.08 v hold6268/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 5127.58 v hold4687/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 5141.34 v hold6269/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 5155.26 v hold6153/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5168.17 v hold6270/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 5181.19 v hold5405/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 5193.87 v hold6271/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5206.20 v hold6154/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 5219.02 v hold6272/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 5232.10 v hold4939/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 5244.73 v hold6273/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 5257.22 v hold6155/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 5270.15 v hold6274/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5282.79 v hold5406/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.62 5295.42 v hold6275/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 5308.07 v hold6156/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 5320.81 v hold6276/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 5334.03 v hold4535/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5347.49 v hold6277/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5360.13 v hold6157/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5372.59 v hold6278/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5385.19 v hold5407/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5397.58 v hold6279/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5409.88 v hold6158/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5422.34 v hold6280/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5434.65 v hold4940/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 5446.79 v hold6281/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5459.18 v hold6159/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 5471.66 v hold6282/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 5484.95 v hold5408/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.66 5498.61 v hold6283/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5511.37 v hold6160/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5524.28 v hold6284/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 5537.19 v hold4688/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5549.79 v hold6285/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5562.09 v hold6161/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 5574.59 v hold6286/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5586.98 v hold5409/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 5599.54 v hold6287/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 5612.33 v hold6162/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 5625.05 v hold6288/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5637.37 v hold4941/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 5649.62 v hold6289/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5661.93 v hold6163/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5674.69 v hold6290/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5687.59 v hold5410/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 5700.14 v hold6291/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5712.48 v hold6164/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5724.80 v hold6292/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 5724.82 v system/prci_ctrl_domain/_1576_/A (AND2x2_ASAP7_75t_R)\r\n               5724.82   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        898.15 9398.15   clock network delay (propagated)\r\n        -10.00 9388.15   clock uncertainty\r\n          0.00 9388.15   clock reconvergence pessimism\r\n               9388.15 ^ system/prci_ctrl_domain/_1576_/B (AND2x2_ASAP7_75t_R)\r\n          0.00 9388.15   clock gating setup time\r\n               9388.15   data required time\r\n---------------------------------------------------------------\r\n               9388.15   data required time\r\n               -5724.82   data arrival time\r\n---------------------------------------------------------------\r\n               3663.32   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock clock (rise edge)\r\n       1476.29 9976.29   clock network delay (propagated)\r\n        -10.00 9966.29   clock uncertainty\r\n          4.53 9970.81   clock reconvergence pessimism\r\n               9970.81 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9959.87   library setup time\r\n               9959.87   data required time\r\n---------------------------------------------------------------\r\n               9959.87   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3096.30   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1142_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: serial_tl_0_bits_in_ready (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1486.19 1486.19   clock network delay (propagated)\r\n          0.00 1486.19 ^ system/serial_tl_domain/_1142_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n     3   50.71 1536.90 ^ system/serial_tl_domain/_1142_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     3   35.82 1572.72 v system/serial_tl_domain/_0641_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   61.16 1633.88 v output14/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 1633.90 v serial_tl_0_bits_in_ready (out)\r\n               1633.90   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_vir (rise edge)\r\n       1000.00 9500.00   clock network delay (ideal)\r\n        -10.00 9490.00   clock uncertainty\r\n          0.00 9490.00   clock reconvergence pessimism\r\n       -1700.00 7790.00   output external delay\r\n               7790.00   data required time\r\n---------------------------------------------------------------\r\n               7790.00   data required time\r\n               -1633.90   data arrival time\r\n---------------------------------------------------------------\r\n               6156.10   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by fake_pll_clk)\r\nPath Group: fake_pll_clk\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n       1445.94 9945.94   clock network delay (propagated)\r\n        -10.00 9935.94   clock uncertainty\r\n          0.00 9935.94   clock reconvergence pessimism\r\n               9935.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9924.99   library setup time\r\n               9924.99   data required time\r\n---------------------------------------------------------------\r\n               9924.99   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3061.42   slack (MET)\r\n\r\n\r\nStartpoint: serial_tl_0_bits_out_ready (input port clocked by clock_vir)\r\nEndpoint: system/serial_tl_domain/_1190_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v serial_tl_0_bits_out_ready (in)\r\n     1   12.09 2712.09 v input11/Y (BUFx2_ASAP7_75t_R)\r\n     1   21.58 2733.66 v system/serial_tl_domain/_0823_/Y (AND2x6_ASAP7_75t_R)\r\n     1   25.37 2759.03 v wire96183/Y (BUFx12f_ASAP7_75t_R)\r\n    13  259.71 3018.74 v system/serial_tl_domain/_1128_/SN (HAxp5_ASAP7_75t_R)\r\n     3  104.06 3122.80 v system/serial_tl_domain/_0882_/Y (OR3x4_ASAP7_75t_R)\r\n     1   13.63 3136.44 ^ system/serial_tl_domain/_0897_/Y (AOI211x1_ASAP7_75t_R)\r\n     1   22.32 3158.76 ^ system/serial_tl_domain/_0898_/Y (AO221x1_ASAP7_75t_R)\r\n     1   23.94 3182.70 ^ system/serial_tl_domain/_0899_/Y (OR4x2_ASAP7_75t_R)\r\n     1   20.19 3202.89 ^ system/serial_tl_domain/_0900_/Y (OA22x2_ASAP7_75t_R)\r\n          0.01 3202.90 ^ system/serial_tl_domain/_1190_/D (DFFHQNx2_ASAP7_75t_R)\r\n               3202.90   data arrival time\r\n\r\n       8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n         99.58 8599.58   clock network delay (propagated)\r\n        -10.00 8589.58   clock uncertainty\r\n          0.00 8589.58   clock reconvergence pessimism\r\n               8589.58 ^ system/serial_tl_domain/_1190_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.33 8584.25   library setup time\r\n               8584.25   data required time\r\n---------------------------------------------------------------\r\n               8584.25   data required time\r\n               -3202.90   data arrival time\r\n---------------------------------------------------------------\r\n               5381.35   slack (MET)\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Looks much more reasonable now. There are H-clock trees after CTS.\r\n\r\n`make cts_issue`; CTS takes ca. 25000 seconds on my machine: https://drive.google.com/file/d/13eenpP2JgzXJD0uP3KIpX4QLArBVjzT2/view?usp=sharing\r\n\r\nThis is apples and oranges comparision, but ... Minimum clock period is 5000ps, whereas I've seen claims on the order of 1000ps with commercial tools for the most similar design I know of to MegaBoom: https://carrv.github.io/2020/papers/CARRV2020_paper_15_Zhao.pdf\r\n\r\n```\r\n>>> report_clock_min_period\r\nclock period_min = 5403.70 fmax = 185.06\r\nclock_vir period_min = 0.00 fmax = inf\r\nfake_pll_clk period_min = 5403.70 fmax = 185.06\r\nserial_tl_0_clock period_min = 953.62 fmax = 1048.63\r\n```\r\n\r\nYellow are hold cells, very reasonable... Clock tree looks odd. Those leaf nodes on the right side are flip flops. It would be nice if there was some clear visual indication of macros vs. flip flop endpoints in the CTS view....\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5837af84-df29-4b34-adbe-c8f9b1a48e14)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/6f0037fa-6c26-4904-88a0-e31fc5312cb0)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3d39c96e-5d49-4a5e-add6-6e6517d4ccf8)\r\n\r\n\r\n```\r\nreport_checks -path_delay max -fields {fanout skew}\r\nStartpoint: reset (input port clocked by clock_vir)\r\nEndpoint: system/prci_ctrl_domain/_3041_\r\n          (recovery check against rising-edge clock fake_pll_clk)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v reset (in)\r\n     1   10.58 2710.58 v hold4662/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2723.18 v hold4387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2735.67 v hold4663/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2748.32 v hold4335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 2760.97 v hold4664/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2773.69 v hold4388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 2786.50 v hold4665/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2799.00 v hold64/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2811.66 v hold4666/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 2824.31 v hold4389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 2836.91 v hold4667/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 2849.61 v hold4336/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 2862.09 v hold4668/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 2874.48 v hold4390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2886.88 v hold4669/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2899.21 v hold56/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 2911.54 v hold4670/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 2923.77 v hold4391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.45 2936.22 v hold4671/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2948.71 v hold4337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 2961.06 v hold4672/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2973.22 v hold4392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2985.48 v hold4673/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.38 2997.87 v hold65/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 3010.12 v hold4674/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 3022.31 v hold4393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3034.52 v hold4675/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 3046.72 v hold4338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 3059.19 v hold4676/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 3071.78 v hold4394/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.63 3087.41 v hold4677/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.70 3106.12 v input5/Y (BUFx24_ASAP7_75t_R)\r\n     1   13.56 3119.68 v hold4678/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.47 3134.15 v hold4395/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3149.44 v hold4339/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3164.73 v hold4396/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3180.00 v hold66/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3195.29 v hold4397/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 3210.53 v hold4340/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3225.74 v hold4398/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3241.03 v hold57/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3256.34 v hold4399/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3271.56 v hold4341/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3286.82 v hold4400/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3302.12 v hold67/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3317.35 v hold4401/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3332.56 v hold4342/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3350.46 v hold4402/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.93 3367.38 v wire96200/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.22 3381.60 v hold4403/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.14 3396.75 v hold4343/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 3412.01 v hold4404/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3427.30 v hold68/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 3442.49 v hold4405/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3457.70 v hold4344/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3472.98 v hold4406/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3488.22 v hold58/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3503.40 v hold4407/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3518.64 v hold4345/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 3533.87 v hold4408/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 3549.06 v hold69/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.15 3564.21 v hold4409/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.13 3579.33 v hold4346/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.89 3597.22 v hold4410/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.94 3614.16 v wire96199/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.34 3628.51 v hold4411/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3643.80 v hold4347/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3659.08 v hold4412/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 3674.36 v hold70/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3689.65 v hold4413/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3704.94 v hold4348/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3720.18 v hold4414/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3735.49 v hold59/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3750.82 v hold4415/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 3766.08 v hold4349/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 3781.32 v hold4416/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3796.53 v hold71/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.32 3811.85 v hold4417/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.36 3827.21 v hold4350/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.90 3845.10 v hold4418/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.84 3861.95 v wire96198/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.33 3876.27 v hold4419/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.34 3891.61 v hold4351/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3906.92 v hold4420/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 3922.13 v hold72/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 3937.43 v hold4421/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 3952.73 v hold4352/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 3967.93 v hold4422/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 3983.26 v hold60/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 3998.57 v hold4423/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4013.88 v hold4353/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4029.16 v hold4424/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.17 4044.33 v hold73/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4059.57 v hold4425/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4074.94 v hold4354/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.95 4092.90 v hold4426/Y (BUFx2_ASAP7_75t_R)\r\n     1   16.85 4109.75 v wire96197/Y (BUFx16f_ASAP7_75t_R)\r\n     1   14.32 4124.07 v hold4427/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4139.40 v hold4355/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4154.77 v hold4428/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4170.01 v hold74/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.19 4185.20 v hold4429/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4200.45 v hold4356/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4215.67 v hold4430/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4230.98 v hold61/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4246.25 v hold4431/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.28 4261.53 v hold4357/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.33 4276.86 v hold4432/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4292.15 v hold75/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.21 4307.35 v hold4433/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.23 4322.59 v hold4358/Y (BUFx2_ASAP7_75t_R)\r\n     1   17.96 4340.55 v hold4434/Y (BUFx2_ASAP7_75t_R)\r\n     1   20.57 4361.13 v wire96196/Y (BUFx24_ASAP7_75t_R)\r\n     1   14.76 4375.89 v hold4435/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.31 4391.20 v hold4359/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.29 4406.49 v hold4436/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4421.75 v hold76/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4437.02 v hold4437/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4452.26 v hold4360/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.26 4467.52 v hold4438/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4482.79 v hold62/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.20 4497.99 v hold4439/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.18 4513.17 v hold4361/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.25 4528.42 v hold4440/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.24 4543.66 v hold77/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.22 4558.88 v hold4441/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 4574.23 v hold4362/Y (BUFx2_ASAP7_75t_R)\r\n     1   22.85 4597.08 v hold4442/Y (BUFx2_ASAP7_75t_R)\r\n    15   15.42 4612.50 ^ system/prci_ctrl_domain/_1567_/Y (INVx11_ASAP7_75t_R)\r\n          2.22 4614.72 ^ system/prci_ctrl_domain/_3041_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n               4614.72   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        474.60 8974.60   clock network delay (propagated)\r\n        -10.00 8964.60   clock uncertainty\r\n          0.00 8964.60   clock reconvergence pessimism\r\n               8964.60 ^ system/prci_ctrl_domain/_3041_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n          4.83 8969.43   library recovery time\r\n               8969.43   data required time\r\n---------------------------------------------------------------\r\n               8969.43   data required time\r\n               -4614.72   data arrival time\r\n---------------------------------------------------------------\r\n               4354.71   slack (MET)\r\n\r\n\r\nStartpoint: system/prci_ctrl_domain/_2967_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/prci_ctrl_domain/_1576_\r\n          (rising clock gating-check end-point clocked by fake_pll_clk)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n        983.66  983.66   clock network delay (propagated)\r\n          0.00  983.66 ^ system/prci_ctrl_domain/_2967_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n    29  134.66 1118.32 v system/prci_ctrl_domain/_2967_/QN (DFFASRHQNx1_ASAP7_75t_R)\r\n     1   41.06 1159.38 v hold6293/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.10 1173.47 v hold6165/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1185.77 v hold6294/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1198.07 v hold6101/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1210.37 v hold6295/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1222.63 v hold6166/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1234.88 v hold6296/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 1247.17 v hold5379/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 1259.39 v hold6297/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 1271.74 v hold6167/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 1284.10 v hold6298/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1296.38 v hold6102/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1308.63 v hold6299/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 1321.09 v hold6168/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1333.82 v hold6300/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 1346.34 v hold4926/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1358.54 v hold6301/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 1370.85 v hold6169/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 1383.12 v hold6302/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 1395.53 v hold6103/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1408.26 v hold6303/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1421.03 v hold6170/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 1433.72 v hold6304/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 1446.40 v hold5380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1459.19 v hold6305/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1472.02 v hold6171/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 1484.59 v hold6306/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 1496.96 v hold6104/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 1509.22 v hold6307/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 1521.92 v hold6172/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1534.74 v hold6308/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1547.36 v hold4681/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 1559.74 v hold6309/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 1572.00 v hold6173/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1584.30 v hold6310/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1597.06 v hold6105/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.51 1609.57 v hold6311/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 1621.73 v hold6174/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 1634.53 v hold6312/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 1647.71 v hold5381/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 1660.86 v hold6313/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 1674.00 v hold6175/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 1687.12 v hold6314/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1699.76 v hold6106/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 1711.97 v hold6315/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 1724.29 v hold6176/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 1737.31 v hold6316/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 1749.93 v hold4927/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 1762.70 v hold6317/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1775.24 v hold6177/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 1787.97 v hold6318/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 1801.06 v hold6107/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1814.23 v hold6319/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 1827.04 v hold6178/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 1839.94 v hold6320/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 1852.42 v hold5382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 1865.07 v hold6321/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 1877.55 v hold6179/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 1889.85 v hold6322/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 1902.89 v hold6108/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 1916.05 v hold6323/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 1928.68 v hold6180/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 1941.34 v hold6324/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 1953.88 v hold4532/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 1966.16 v hold6325/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 1978.40 v hold6181/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 1990.60 v hold6326/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.16 2002.76 v hold6109/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.10 2014.86 v hold6327/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2027.85 v hold6182/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2040.62 v hold6328/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 2052.84 v hold5383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2065.15 v hold6329/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 2077.41 v hold6183/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 2089.71 v hold6330/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 2101.98 v hold6110/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2114.31 v hold6331/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 2127.24 v hold6184/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 2139.92 v hold6332/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 2152.26 v hold4928/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 2164.78 v hold6333/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2177.41 v hold6185/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2189.99 v hold6334/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 2202.48 v hold6111/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 2215.24 v hold6335/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2227.82 v hold6186/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2240.82 v hold6336/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.26 2254.08 v hold5384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.10 2267.18 v hold6337/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2280.06 v hold6187/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 2292.45 v hold6338/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 2305.14 v hold6112/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 2318.31 v hold6339/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 2331.55 v hold6188/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 2344.49 v hold6340/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.87 2357.37 v hold4682/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 2370.45 v hold6341/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 2383.51 v hold6189/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.44 2395.95 v hold6342/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.11 2409.06 v hold6113/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 2422.58 v hold6343/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2435.33 v hold6190/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2448.35 v hold6344/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 2461.14 v hold5385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 2473.46 v hold6345/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 2486.32 v hold6191/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.72 2500.04 v hold6346/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2514.08 v hold6114/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.71 2527.79 v hold6347/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.74 2540.53 v hold6192/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.77 2553.30 v hold6348/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 2566.61 v hold4929/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 2580.08 v hold6349/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.34 2593.42 v hold6193/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2606.83 v hold6350/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.19 2620.02 v hold6115/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 2632.66 v hold6351/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2644.99 v hold6194/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 2657.71 v hold6352/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 2670.28 v hold5386/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 2682.76 v hold6353/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.07 2695.84 v hold6195/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 2709.26 v hold6354/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 2722.44 v hold6116/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 2735.05 v hold6355/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.58 2747.62 v hold6196/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 2759.95 v hold6356/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 2772.19 v hold4317/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 2785.42 v hold6357/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.00 2798.42 v hold6197/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 2811.30 v hold6358/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.39 2824.69 v hold6117/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 2837.72 v hold6359/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.42 2850.13 v hold6198/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.99 2863.12 v hold6360/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2876.68 v hold5387/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.89 2889.57 v hold6361/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 2901.86 v hold6199/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 2914.95 v hold6362/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.65 2928.60 v hold6118/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.02 2942.62 v hold6363/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.33 2956.95 v hold6200/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.03 2970.98 v hold6364/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.62 2984.61 v hold4930/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.56 2998.16 v hold6365/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.70 3011.86 v hold6201/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.86 3025.72 v hold6366/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3038.67 v hold6119/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3051.19 v hold6367/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3063.79 v hold6202/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3076.69 v hold6368/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 3089.21 v hold5388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3101.85 v hold6369/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.31 3115.16 v hold6203/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 3127.95 v hold6370/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3141.13 v hold6120/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.51 3154.64 v hold6371/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 3167.48 v hold6204/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 3179.78 v hold6372/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 3192.33 v hold4683/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.37 3205.71 v hold6373/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3218.58 v hold6205/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 3231.89 v hold6374/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.23 3245.11 v hold6121/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3258.02 v hold6375/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 3270.59 v hold6206/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.22 3282.80 v hold6376/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3295.74 v hold5389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 3308.36 v hold6377/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 3321.59 v hold6207/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.04 3334.63 v hold6378/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.57 3348.20 v hold6122/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3361.35 v hold6379/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 3374.80 v hold6208/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 3387.94 v hold6380/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3400.29 v hold4931/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3413.17 v hold6381/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 3426.15 v hold6209/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3438.68 v hold6382/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 3451.60 v hold6123/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 3465.10 v hold6383/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3477.95 v hold6210/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 3490.90 v hold6384/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 3504.15 v hold5390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3516.69 v hold6385/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.35 3529.04 v hold6211/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.55 3542.59 v hold6386/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 3555.88 v hold6124/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.40 3568.28 v hold6387/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 3581.34 v hold6212/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 3594.24 v hold6388/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 3606.90 v hold4533/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3619.75 v hold6389/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 3632.25 v hold6213/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 3644.78 v hold6390/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.88 3657.66 v hold6125/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.42 3671.08 v hold6391/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 3683.93 v hold6214/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.78 3696.70 v hold6392/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.18 3709.88 v hold5391/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.83 3723.71 v hold6393/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.31 3738.02 v hold6215/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.03 3751.05 v hold6394/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.15 3764.20 v hold6126/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.54 3777.74 v hold6216/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.35 3791.09 v hold4932/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 3803.85 v hold6217/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.29 3816.14 v hold6127/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 3828.40 v hold6218/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 3841.01 v hold5392/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.96 3853.97 v hold6219/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 3866.70 v hold6128/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 3879.39 v hold6220/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3891.85 v hold4684/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 3904.28 v hold6221/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 3916.52 v hold6129/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 3928.99 v hold6222/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.54 3941.53 v hold5393/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 3953.81 v hold6223/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 3966.75 v hold6130/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.08 3980.82 v hold6224/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.56 3995.38 v hold4933/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.17 4008.56 v hold6225/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4020.80 v hold6131/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.36 4034.16 v hold6226/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.93 4047.10 v hold5394/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.47 4059.57 v hold6227/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.61 4072.18 v hold6132/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4084.61 v hold6228/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.41 4097.02 v hold55/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 4109.60 v hold6229/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 4122.52 v hold6133/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.95 4135.47 v hold6230/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.91 4148.38 v hold5395/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4161.68 v hold6231/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.06 4174.74 v hold6134/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.38 4188.13 v hold6232/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4200.93 v hold4934/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4213.19 v hold6233/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 4225.52 v hold6135/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.53 4238.05 v hold6234/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4250.45 v hold5396/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4262.65 v hold6235/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.24 4274.89 v hold6136/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 4287.49 v hold6236/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 4300.21 v hold4685/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.12 4313.32 v hold6237/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 4326.80 v hold6137/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 4340.29 v hold6238/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.69 4352.98 v hold5397/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.85 4365.83 v hold6239/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 4379.13 v hold6138/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 4391.84 v hold6240/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4404.10 v hold4935/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.25 4416.35 v hold6241/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.19 4428.54 v hold6139/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.16 4441.69 v hold6242/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.98 4455.68 v hold5398/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.93 4469.61 v hold6243/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.80 4482.41 v hold6140/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.14 4495.55 v hold6244/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.52 4509.07 v hold4534/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4521.64 v hold6245/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4533.86 v hold6141/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.52 4546.38 v hold6246/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.67 4559.05 v hold5399/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.70 4571.76 v hold6247/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4584.15 v hold6142/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.20 4597.34 v hold6248/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.86 4610.20 v hold4936/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.20 4622.40 v hold6249/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 4634.89 v hold6143/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4647.24 v hold6250/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.34 4659.58 v hold5400/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.43 4672.01 v hold6251/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.28 4684.29 v hold6144/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.40 4697.68 v hold6252/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.97 4710.66 v hold4686/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.25 4723.91 v hold6253/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.75 4737.67 v hold6145/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4750.60 v hold6254/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 4762.91 v hold5401/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 4775.05 v hold6255/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 4787.42 v hold6146/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 4799.99 v hold6256/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.98 4812.96 v hold4937/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.65 4825.62 v hold6257/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.30 4838.91 v hold6147/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.89 4852.81 v hold6258/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 4865.89 v hold5402/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 4878.28 v hold6259/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.81 4891.10 v hold6148/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.84 4903.94 v hold6260/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.36 4916.29 v hold4318/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.23 4928.52 v hold6261/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.05 4941.57 v hold6149/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 4955.33 v hold6262/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 4969.26 v hold5403/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.94 4983.20 v hold6263/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 4996.14 v hold6150/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.27 5008.41 v hold6264/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5021.72 v hold4938/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.09 5034.82 v hold6265/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.31 5047.13 v hold6151/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.24 5060.37 v hold6266/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.45 5073.81 v hold5404/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.32 5087.13 v hold6267/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.48 5100.61 v hold6152/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5114.08 v hold6268/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.50 5127.58 v hold4687/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.76 5141.34 v hold6269/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.92 5155.26 v hold6153/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5168.17 v hold6270/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.02 5181.19 v hold5405/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 5193.87 v hold6271/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5206.20 v hold6154/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.82 5219.02 v hold6272/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.08 5232.10 v hold4939/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.63 5244.73 v hold6273/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.49 5257.22 v hold6155/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.94 5270.15 v hold6274/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5282.79 v hold5406/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.62 5295.42 v hold6275/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.66 5308.07 v hold6156/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.73 5320.81 v hold6276/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.22 5334.03 v hold4535/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 5347.49 v hold6277/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.64 5360.13 v hold6157/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5372.59 v hold6278/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5385.19 v hold5407/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5397.58 v hold6279/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5409.88 v hold6158/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.46 5422.34 v hold6280/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5434.65 v hold4940/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.14 5446.79 v hold6281/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5459.18 v hold6159/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.48 5471.66 v hold6282/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.29 5484.95 v hold5408/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.66 5498.61 v hold6283/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5511.37 v hold6160/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5524.28 v hold6284/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.92 5537.19 v hold4688/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.60 5549.79 v hold6285/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5562.09 v hold6161/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.50 5574.59 v hold6286/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.39 5586.98 v hold5409/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.57 5599.54 v hold6287/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 5612.33 v hold6162/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.72 5625.05 v hold6288/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5637.37 v hold4941/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 5649.62 v hold6289/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.30 5661.93 v hold6163/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.76 5674.69 v hold6290/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.90 5687.59 v hold5410/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.56 5700.14 v hold6291/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.33 5712.48 v hold6164/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.32 5724.80 v hold6292/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 5724.82 v system/prci_ctrl_domain/_1576_/A (AND2x2_ASAP7_75t_R)\r\n               5724.82   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n        898.15 9398.15   clock network delay (propagated)\r\n        -10.00 9388.15   clock uncertainty\r\n          0.00 9388.15   clock reconvergence pessimism\r\n               9388.15 ^ system/prci_ctrl_domain/_1576_/B (AND2x2_ASAP7_75t_R)\r\n          0.00 9388.15   clock gating setup time\r\n               9388.15   data required time\r\n---------------------------------------------------------------\r\n               9388.15   data required time\r\n               -5724.82   data arrival time\r\n---------------------------------------------------------------\r\n               3663.32   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock clock (rise edge)\r\n       1476.29 9976.29   clock network delay (propagated)\r\n        -10.00 9966.29   clock uncertainty\r\n          4.53 9970.81   clock reconvergence pessimism\r\n               9970.81 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9959.87   library setup time\r\n               9959.87   data required time\r\n---------------------------------------------------------------\r\n               9959.87   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3096.30   slack (MET)\r\n\r\n\r\nStartpoint: system/serial_tl_domain/_1142_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: serial_tl_0_bits_in_ready (output port clocked by clock_vir)\r\nPath Group: clock_vir\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1486.19 1486.19   clock network delay (propagated)\r\n          0.00 1486.19 ^ system/serial_tl_domain/_1142_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n     3   50.71 1536.90 ^ system/serial_tl_domain/_1142_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     3   35.82 1572.72 v system/serial_tl_domain/_0641_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   61.16 1633.88 v output14/Y (BUFx2_ASAP7_75t_R)\r\n          0.02 1633.90 v serial_tl_0_bits_in_ready (out)\r\n               1633.90   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_vir (rise edge)\r\n       1000.00 9500.00   clock network delay (ideal)\r\n        -10.00 9490.00   clock uncertainty\r\n          0.00 9490.00   clock reconvergence pessimism\r\n       -1700.00 7790.00   output external delay\r\n               7790.00   data required time\r\n---------------------------------------------------------------\r\n               7790.00   data required time\r\n               -1633.90   data arrival time\r\n---------------------------------------------------------------\r\n               6156.10   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_\r\n            (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_\r\n          (rising edge-triggered flip-flop clocked by fake_pll_clk)\r\nPath Group: fake_pll_clk\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock (rise edge)\r\n       1459.67 1459.67   clock network delay (propagated)\r\n          0.00 1459.67 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n    16   87.80 1547.47 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100801_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     8   25.27 1572.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055753_/Y (INVx13_ASAP7_75t_R)\r\n     3   21.71 1594.45 v max_length80840/Y (BUFx12f_ASAP7_75t_R)\r\n    10  106.10 1700.55 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_100755_/CON (HAxp5_ASAP7_75t_R)\r\n     5   38.99 1739.54 ^ load_slew77788/Y (BUFx12f_ASAP7_75t_R)\r\n     6   18.39 1757.93 ^ load_slew77787/Y (BUFx12f_ASAP7_75t_R)\r\n    24   74.82 1832.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055925_/Y (OR4x2_ASAP7_75t_R)\r\n     1   52.70 1885.46 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055926_/Y (OA22x2_ASAP7_75t_R)\r\n     1   32.11 1917.56 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055940_/Y (AND5x1_ASAP7_75t_R)\r\n     4   40.36 1957.93 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055972_/Y (AND4x2_ASAP7_75t_R)\r\n    21   41.38 1999.31 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_055973_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   92.34 2091.65 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056022_/Y (OR3x4_ASAP7_75t_R)\r\n     4   34.23 2125.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/rob/_056088_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   82.97 2208.86 ^ wire54325/Y (BUFx16f_ASAP7_75t_R)\r\n     3   79.05 2287.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09171_/Y (NAND2x2_ASAP7_75t_R)\r\n     2   72.45 2360.36 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09366_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.95 2391.30 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09368_/Y (OR4x1_ASAP7_75t_R)\r\n     2   43.84 2435.15 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09369_/Y (OR4x2_ASAP7_75t_R)\r\n     5   41.86 2477.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10984_/Y (NOR3x2_ASAP7_75t_R)\r\n    20   54.43 2531.44 ^ wire46500/Y (BUFx16f_ASAP7_75t_R)\r\n     3  113.22 2644.66 ^ wire46499/Y (BUFx16f_ASAP7_75t_R)\r\n     2   74.22 2718.88 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383170_/Y (AND2x2_ASAP7_75t_R)\r\n    14   24.78 2743.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383188_/Y (NAND2x2_ASAP7_75t_R)\r\n    12   63.17 2806.83 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383224_/Y (AO21x2_ASAP7_75t_R)\r\n     5   24.83 2831.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_479882_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    11   84.15 2915.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732259_/CON (HAxp5_ASAP7_75t_R)\r\n     3   31.45 2947.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383227_/Y (INVx2_ASAP7_75t_R)\r\n     2   25.01 2972.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383231_/Y (AND2x2_ASAP7_75t_R)\r\n     2   22.19 2994.46 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/CON (HAxp5_ASAP7_75t_R)\r\n     2   31.03 3025.49 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732246_/SN (HAxp5_ASAP7_75t_R)\r\n     1   31.95 3057.44 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393218_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   40.29 3097.73 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393222_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.93 3136.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09361_/Y (AO22x2_ASAP7_75t_R)\r\n     1   60.29 3196.95 ^ wire32998/Y (BUFx16f_ASAP7_75t_R)\r\n     1   63.16 3260.11 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09362_/Y (OR4x2_ASAP7_75t_R)\r\n     1   16.20 3276.31 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09363_/Y (OR4x1_ASAP7_75t_R)\r\n     1   19.72 3296.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09371_/Y (AO22x1_ASAP7_75t_R)\r\n     3   10.78 3306.81 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09372_/Y (INVx2_ASAP7_75t_R)\r\n     5   32.27 3339.08 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10980_/Y (AND3x4_ASAP7_75t_R)\r\n     2   32.46 3371.54 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_10981_/Y (AND2x6_ASAP7_75t_R)\r\n     6   26.61 3398.15 v wire30552/Y (BUFx16f_ASAP7_75t_R)\r\n     3  117.06 3515.20 v wire30547/Y (BUFx16f_ASAP7_75t_R)\r\n     2   79.46 3594.66 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383202_/Y (AND2x2_ASAP7_75t_R)\r\n    13   30.10 3624.76 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383232_/Y (NAND2x2_ASAP7_75t_R)\r\n    37  104.44 3729.20 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383277_/Y (AO21x2_ASAP7_75t_R)\r\n     8  123.99 3853.19 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383285_/Y (NOR2x2_ASAP7_75t_R)\r\n     2   69.54 3922.74 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383289_/Y (AND2x2_ASAP7_75t_R)\r\n     2   70.43 3993.16 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732263_/SN (HAxp5_ASAP7_75t_R)\r\n     1   35.94 4029.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393224_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   33.88 4062.98 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393228_/Y (AND5x2_ASAP7_75t_R)\r\n     1   22.63 4085.61 v wire18339/Y (BUFx12f_ASAP7_75t_R)\r\n     1   90.65 4176.26 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09348_/Y (AO221x2_ASAP7_75t_R)\r\n     1   78.25 4254.51 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09352_/Y (OR4x1_ASAP7_75t_R)\r\n     2   12.50 4267.01 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09353_/Y (INVx1_ASAP7_75t_R)\r\n     2   29.33 4296.34 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13707_/Y (AND3x4_ASAP7_75t_R)\r\n     2   16.51 4312.85 ^ max_length17970/Y (BUFx12f_ASAP7_75t_R)\r\n     2   58.75 4371.60 ^ wire17968/Y (BUFx16f_ASAP7_75t_R)\r\n     4   69.67 4441.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383260_/Y (AND2x4_ASAP7_75t_R)\r\n     8   22.60 4463.87 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_383290_/Y (NAND2x2_ASAP7_75t_R)\r\n    25   39.78 4503.65 v load_slew17553/Y (BUFx16f_ASAP7_75t_R)\r\n     8   52.97 4556.62 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_389614_/Y (OA21x2_ASAP7_75t_R)\r\n    15   27.29 4583.91 v max_length15743/Y (BUFx16f_ASAP7_75t_R)\r\n     6   44.22 4628.14 v wire15739/Y (BUFx16f_ASAP7_75t_R)\r\n     2   96.47 4724.61 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732319_/CON (HAxp5_ASAP7_75t_R)\r\n    10   26.31 4750.92 ^ wire10637/Y (BUFx12f_ASAP7_75t_R)\r\n     9   28.31 4779.22 ^ wire10635/Y (BUFx12f_ASAP7_75t_R)\r\n     5   23.85 4803.08 ^ wire10634/Y (BUFx16f_ASAP7_75t_R)\r\n     3   49.02 4852.10 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393150_/Y (INVx3_ASAP7_75t_R)\r\n     1   19.43 4871.53 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732322_/CON (HAxp5_ASAP7_75t_R)\r\n     2   13.70 4885.23 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732225_/Y (INVx1_ASAP7_75t_R)\r\n     2   54.56 4939.79 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/CON (HAxp5_ASAP7_75t_R)\r\n     2   57.06 4996.85 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_732324_/SN (HAxp5_ASAP7_75t_R)\r\n     1   39.36 5036.22 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393230_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   29.47 5065.69 v system/tile_prci_domain/tile_reset_domain_boom_tile/lsu/_393234_/Y (AND5x2_ASAP7_75t_R)\r\n     1   38.32 5104.01 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09177_/Y (AO22x2_ASAP7_75t_R)\r\n     1   65.68 5169.69 v wire10120/Y (BUFx16f_ASAP7_75t_R)\r\n     1   85.75 5255.45 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09180_/Y (OR4x2_ASAP7_75t_R)\r\n     1   47.72 5303.17 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09181_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.50 5317.66 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09182_/Y (INVx1_ASAP7_75t_R)\r\n     3   20.96 5338.62 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09346_/Y (AO31x2_ASAP7_75t_R)\r\n     1   22.09 5360.71 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09357_/Y (AND2x2_ASAP7_75t_R)\r\n     3   22.17 5382.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/_09375_/Y (NAND3x2_ASAP7_75t_R)\r\n     2   44.87 5427.75 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_13855_/Y (NOR2x2_ASAP7_75t_R)\r\n     4   31.84 5459.59 ^ max_length10066/Y (BUFx16f_ASAP7_75t_R)\r\n     3   46.40 5505.98 ^ wire10064/Y (BUFx16f_ASAP7_75t_R)\r\n     1   74.29 5580.27 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/_14394_/Y (AND2x2_ASAP7_75t_R)\r\n     1    5.61 5585.88 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065683_/Y (INVx1_ASAP7_75t_R)\r\n     2   61.87 5647.75 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065702_/Y (OR5x2_ASAP7_75t_R)\r\n     2   53.28 5701.03 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/_065722_/Y (NAND2x2_ASAP7_75t_R)\r\n    24   24.22 5725.25 ^ max_length8441/Y (BUFx16f_ASAP7_75t_R)\r\n    22   43.01 5768.26 ^ wire8439/Y (BUFx16f_ASAP7_75t_R)\r\n    19   49.84 5818.10 ^ load_slew8429/Y (BUFx16f_ASAP7_75t_R)\r\n    14   47.09 5865.20 ^ wire8426/Y (BUFx16f_ASAP7_75t_R)\r\n    11   48.21 5913.41 ^ max_length8425/Y (BUFx16f_ASAP7_75t_R)\r\n    10   58.85 5972.26 ^ wire8424/Y (BUFx16f_ASAP7_75t_R)\r\n    10   61.11 6033.37 ^ max_length8423/Y (BUFx12f_ASAP7_75t_R)\r\n    11   38.21 6071.58 ^ wire8422/Y (BUFx16f_ASAP7_75t_R)\r\n    25   51.58 6123.15 ^ wire8421/Y (BUFx16f_ASAP7_75t_R)\r\n     6   60.76 6183.91 v system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1678_/Y (INVx11_ASAP7_75t_R)\r\n    24   21.32 6205.24 v max_length4569/Y (BUFx16f_ASAP7_75t_R)\r\n    11   62.98 6268.22 v wire4568/Y (BUFx16f_ASAP7_75t_R)\r\n    10   53.54 6321.76 v wire4567/Y (BUFx16f_ASAP7_75t_R)\r\n    12   73.47 6395.22 v wire4566/Y (BUFx16f_ASAP7_75t_R)\r\n    35  109.03 6504.25 v max_length4564/Y (BUFx16f_ASAP7_75t_R)\r\n    57   67.38 6571.63 v load_slew4563/Y (BUFx16f_ASAP7_75t_R)\r\n     1   95.45 6667.09 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1885_/Y (NAND2x1_ASAP7_75t_R)\r\n    13   52.03 6719.12 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_1886_/Y (OA21x2_ASAP7_75t_R)\r\n     1   30.21 6749.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3041_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   30.06 6779.38 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3043_/Y (AND4x1_ASAP7_75t_R)\r\n     1   32.88 6812.26 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3047_/Y (AND5x1_ASAP7_75t_R)\r\n     1   19.43 6831.69 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3048_/Y (OR4x1_ASAP7_75t_R)\r\n     1   29.64 6861.33 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3133_/Y (OA31x2_ASAP7_75t_R)\r\n          2.24 6863.57 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/D (DFFHQNx2_ASAP7_75t_R)\r\n               6863.57   data arrival time\r\n\r\n       8500.00 8500.00   clock fake_pll_clk (rise edge)\r\n       1445.94 9945.94   clock network delay (propagated)\r\n        -10.00 9935.94   clock uncertainty\r\n          0.00 9935.94   clock reconvergence pessimism\r\n               9935.94 ^ system/tile_prci_domain/tile_reset_domain_boom_tile/core/mem_issue_unit/slots_23/_3405_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n        -10.95 9924.99   library setup time\r\n               9924.99   data required time\r\n---------------------------------------------------------------\r\n               9924.99   data required time\r\n               -6863.57   data arrival time\r\n---------------------------------------------------------------\r\n               3061.42   slack (MET)\r\n\r\n\r\nStartpoint: serial_tl_0_bits_out_ready (input port clocked by clock_vir)\r\nEndpoint: system/serial_tl_domain/_1190_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_0_clock)\r\nPath Group: serial_tl_0_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v serial_tl_0_bits_out_ready (in)\r\n     1   12.09 2712.09 v input11/Y (BUFx2_ASAP7_75t_R)\r\n     1   21.58 2733.66 v system/serial_tl_domain/_0823_/Y (AND2x6_ASAP7_75t_R)\r\n     1   25.37 2759.03 v wire96183/Y (BUFx12f_ASAP7_75t_R)\r\n    13  259.71 3018.74 v system/serial_tl_domain/_1128_/SN (HAxp5_ASAP7_75t_R)\r\n     3  104.06 3122.80 v system/serial_tl_domain/_0882_/Y (OR3x4_ASAP7_75t_R)\r\n     1   13.63 3136.44 ^ system/serial_tl_domain/_0897_/Y (AOI211x1_ASAP7_75t_R)\r\n     1   22.32 3158.76 ^ system/serial_tl_domain/_0898_/Y (AO221x1_ASAP7_75t_R)\r\n     1   23.94 3182.70 ^ system/serial_tl_domain/_0899_/Y (OR4x2_ASAP7_75t_R)\r\n     1   20.19 3202.89 ^ system/serial_tl_domain/_0900_/Y (OA22x2_ASAP7_75t_R)\r\n          0.01 3202.90 ^ system/serial_tl_domain/_1190_/D (DFFHQNx2_ASAP7_75t_R)\r\n               3202.90   data arrival time\r\n\r\n       8500.00 8500.00   clock serial_tl_0_clock (rise edge)\r\n         99.58 8599.58   clock network delay (propagated)\r\n        -10.00 8589.58   clock uncertainty\r\n          0.00 8589.58   clock reconvergence pessimism\r\n               8589.58 ^ system/serial_tl_domain/_1190_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.33 8584.25   library setup time\r\n               8584.25   data required time\r\n---------------------------------------------------------------\r\n               8584.25   data required time\r\n               -3202.90   data arrival time\r\n---------------------------------------------------------------\r\n               5381.35   slack (MET)\r\n```\r\n\r\n", "date": "2024-01-09T10:03:53Z"}, {"author": "oharboe", "role": "assistant", "message": "To get this to build in Yosys, I had to mock fake_pll_clk:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/931c2a882510bf5735dbf5efab1a8c474f838c49/mock/ChipTop.sv#L31\r\n\r\nWhereas Chipyard has this clock coming out of a PLL:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/931c2a882510bf5735dbf5efab1a8c474f838c49/rtl/ChipTop.sv#L150\r\n\r\nI don't know what the relationships are between these clocks, this is my first cut .sdc file that I used:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/main/constraints-chiptop.sdc", "date": "2024-01-09T10:15:35Z"}, {"author": "oharboe", "role": "assistant", "message": "I've reached out to Chipyard to get some help with the .sdc file for the clocks: https://groups.google.com/g/chipyard/c/PzVcnnqRwf8/m/t1pIDPnuAwAJ", "date": "2024-01-09T10:55:44Z"}, {"author": "oharboe", "role": "assistant", "message": "Failed in global routing, ca. 7000 seconds.\r\n\r\n`make macro_place_issue` reproducible case for mpl2: https://drive.google.com/file/d/1w_vIUNtWp7dBntP9i7WGEkgtGhTRD6M_/view?usp=sharing\r\n\r\nI suppose I could try to flatten the design for the two macros with contention, but if macro placement can't place these two bigger macros, what are the chances it can place many smaller macros(there are SRAMs inside the branch predictor and the data cache that have all the congestion on top)?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/520a354a-1e5e-42a3-b3c4-090050a08c42)\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a4a48871-f7c9-4445-aff2-4621b73f551a)\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/199c6c47-e6ba-4471-8f98-1befb9677a22)\r\n\r\nIntentionally, BranchPredictor has all the pins on the left side. This is to break the rotational and mirroring symmetry such that mpl2 can try different directions to find one that is better.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7272e784-c63e-4209-b0ac-3dd59f43b22d)\r\n\r\nThis is odd... Why is the macro rotated R180? That puts the pins on the right hand side... I would have thought, looking at the floorplan, that having the pins on the left side was better, given the placement...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c54e3016-9444-4b17-805f-9a82a1d003d7)\r\n", "date": "2024-01-09T13:31:26Z"}, {"author": "maliberty", "role": "assistant", "message": "You can zoom in with the mouse wheel in the CTS view. If you do so on the odd branch on the right you can select the end points and see what they are.  That would be helpful.\r\n\r\nThe setup paths with tons of hold buffers are quite odd. I suspect an SDC issue.\r\n\r\nYou might lower the placement density slightly to see if that helps with congestion.  \r\n\r\nA test case for the flipping is needed to say much about it.  Perhaps the connections go to pins on the right?", "date": "2024-01-09T17:59:03Z"}, {"author": "oharboe", "role": "assistant", "message": "Broke out #4513 and #4512 for further investigation", "date": "2024-01-10T08:39:08Z"}, {"author": "oharboe", "role": "assistant", "message": "So, I think I understand more or less what is going on.\r\n\r\nThe Verilog is not the way I want it yet. It contains a fake PLL that is controlled via the TileLink interface at the top level that multiplies the top level clock to the core frequency. This PLL is set up out of bounds of a single core.\r\n\r\nhttps://github.com/ucb-bar/chipyard/blob/c9fa23edf049f35f9b8e6291b0e2b82b1056540b/generators/chipyard/src/main/scala/clocking/ClockBinders.scala#L12", "date": "2024-01-10T12:15:39Z"}], "date": "2024-01-09T10:03:53Z", "category": "Runtime", "subcategory": "Clock tree issue", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4495", "id": 4495, "title": "pad_left/right units for GPL and repair_clock_inverters description", "author": "lustefan97", "description": "\r\n\r\nI looked in OpenROAD documentation for Global Placement and Gate Resizer to get more detail about the units of the pad_left/right parameters of the `global_placement` command [(GPL)](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gpl) and the use/behavior of `repair_clock_inverters` [(RSZ).](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/rsz/README.md) \r\n\r\nBoth the variables units description is missing (while present for DPL (site count units), but since the two tools are different I don't want to assume it is the same for both) in GPL, and there is no description concerning `repair_clock_inverters` use case or behavior description (like there would be for `repair_timing` or `repair_design`.\r\n\r\nWhat are the units of pad_left/right, and what does `repair_clock_inverters` do/how to use it ?", "content": [{"author": "lustefan97", "role": "user", "message": "\r\n\r\nI looked in OpenROAD documentation for Global Placement and Gate Resizer to get more detail about the units of the pad_left/right parameters of the `global_placement` command [(GPL)](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gpl) and the use/behavior of `repair_clock_inverters` [(RSZ).](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/rsz/README.md) \r\n\r\nBoth the variables units description is missing (while present for DPL (site count units), but since the two tools are different I don't want to assume it is the same for both) in GPL, and there is no description concerning `repair_clock_inverters` use case or behavior description (like there would be for `repair_timing` or `repair_design`.\r\n\r\nWhat are the units of pad_left/right, and what does `repair_clock_inverters` do/how to use it ?", "date": "2024-01-06T18:24:28Z"}, {"author": "maliberty", "role": "assistant", "message": "The units are sites from the LEF.\r\n\r\nrepair_clock_inverters is useful when you have an inverter in the clock tree that would split the tree.  It clones the inverter so you have one per flop instead.", "date": "2024-01-06T19:37:29Z"}, {"author": "maliberty", "role": "assistant", "message": "before CTS see https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/181e9133776117ea1b9f74dbacbfdaadff8c331b/flow/scripts/cts.tcl#L7\r\n\r\nYou might benefit from investigating how ORFS works", "date": "2024-01-08T01:33:18Z"}], "date": "2024-01-06T18:24:28Z", "category": "Documentation", "subcategory": "Missing information", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4490", "id": 4490, "title": "Any thoughts on what to do to solve the global routing problems in MegaBoom?", "author": "oharboe", "description": "I would like to get https://github.com/The-OpenROAD-Project/megaboom to the point where it goes through a full build and then incrementally improve.\r\n\r\nThe idea with such big projects is to get the build under CI, separate concerns and continously improve...\r\n\r\nCurrently it stops in global routing:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/02068fde-3bb1-4ae7-a7b2-45f9a83db528)\r\n\r\nCurrent options for DigitalTop:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/391bbbd8d59b93b15b1cdb850294696a60d2dd4f/BUILD.bazel#L1636\r\n\r\n- the yellow are hold cells. Given the 2000+ps skew in the clock tree, I don't find it shocking that there's ca. 100000 hold cells. I have set clock_latency to 3300, which I could try to change to 1000 to be closer to what is actually going on, but that still leaves 1000ps of clock skew on either side of that... There is the familiar hold cell log jam at the pins...\r\n- there is a lot of congestion on top of the macro. What does that mean and how can it be fixed?\r\n- reduce placement density?\r\n- Increase number of global routing iterations from 30 to 100?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f32c23ae-cb26-4b40-a649-c47071f3a21b)\r\n\r\nIf you want to have a look... \r\n\r\n1. Build OpenROAD https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/master/docs/user/BuildLocally.md\r\n2. download. 1.3gByte. https://drive.google.com/file/d/1HcAU-pOsPvhcMGKdSWvy_mV17By0qH65/view?usp=sharing\r\n3. untar\r\n4. run:\r\n\r\n```\r\n$ . ~/OpenROAD-flow-scripts/env.sh \r\nOPENROAD: /home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD\r\n$ ./run-me-DigitalTop-asap7-base.sh\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I would like to get https://github.com/The-OpenROAD-Project/megaboom to the point where it goes through a full build and then incrementally improve.\r\n\r\nThe idea with such big projects is to get the build under CI, separate concerns and continously improve...\r\n\r\nCurrently it stops in global routing:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/02068fde-3bb1-4ae7-a7b2-45f9a83db528)\r\n\r\nCurrent options for DigitalTop:\r\n\r\nhttps://github.com/The-OpenROAD-Project/megaboom/blob/391bbbd8d59b93b15b1cdb850294696a60d2dd4f/BUILD.bazel#L1636\r\n\r\n- the yellow are hold cells. Given the 2000+ps skew in the clock tree, I don't find it shocking that there's ca. 100000 hold cells. I have set clock_latency to 3300, which I could try to change to 1000 to be closer to what is actually going on, but that still leaves 1000ps of clock skew on either side of that... There is the familiar hold cell log jam at the pins...\r\n- there is a lot of congestion on top of the macro. What does that mean and how can it be fixed?\r\n- reduce placement density?\r\n- Increase number of global routing iterations from 30 to 100?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f32c23ae-cb26-4b40-a649-c47071f3a21b)\r\n\r\nIf you want to have a look... \r\n\r\n1. Build OpenROAD https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/master/docs/user/BuildLocally.md\r\n2. download. 1.3gByte. https://drive.google.com/file/d/1HcAU-pOsPvhcMGKdSWvy_mV17By0qH65/view?usp=sharing\r\n3. untar\r\n4. run:\r\n\r\n```\r\n$ . ~/OpenROAD-flow-scripts/env.sh \r\nOPENROAD: /home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD\r\n$ ./run-me-DigitalTop-asap7-base.sh\r\n```\r\n\r\n", "date": "2024-01-04T12:16:52Z"}, {"author": "rovinski", "role": "assistant", "message": "Some miscellaneous thoughts:\r\n\r\n* The keep-out region around the macros seems higher than necessary. Can it be shrunk?\r\n* Is there a way to push the macros all the way to the edges? If there are no pins on one side, then it should be fine to push it all the way to the edge. Right now, the gap between the macro and the edge is just wasted space.\r\n\r\n> ![image](https://private-user-images.githubusercontent.com/2798822/294173465-f32c23ae-cb26-4b40-a649-c47071f3a21b.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDQzODc5MjUsIm5iZiI6MTcwNDM4NzYyNSwicGF0aCI6Ii8yNzk4ODIyLzI5NDE3MzQ2NS1mMzJjMjNhZS1jYjI2LTRiNDAtYTY0OS1jNDcwNzFmM2EyMWIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDEwNCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAxMDRUMTcwMDI1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NTc2NGJiMzAxYjU3ZmFkMzc3ZDk4OWExM2M2ZWY3NzhiOTdhMDJmMjc0N2MwZDllNzU0MzEyZDA0NzY5ZjI2ZiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.1T6oUzQvPgbEHYZep6GOnSjXk8Xz7V07M8CsSou38jI)\r\n\r\n* I'm assuming the highlighted yellow are the hold cells? If so, it looks like they are feeding towards the I/Os. You should double check that your I/O constraints are in reference to the clock tree latency so that they are reasonable. For example, if the input constraint is 50ps, but the capture register has a 2000ps clock latency, then the tools need to insert 1950ps of hold buffers. If the output constraint is 50ps and the launch register clock latency is 2000ps, the best it could do is -1950ps slack.\r\n* Do your large macros have the clock tree latency annotated in them when extracted? I believe that CTS support for this was added to help balancing, but I am not sure if the GUI or the skew report reflect this. If a macro and a register have 1000ps of skew, it could be totally fine if the macro has an internal clock tree of 1000ps.\r\n* Even with that consideration, the clock tree looks very unbalanced. There might be something breaking down with the algorithm.", "date": "2024-01-04T17:23:12Z"}, {"author": "maliberty", "role": "assistant", "message": "I think resolve the clock skew will go a long way to resolving the other problems so let's start there.  Even without insertion delay the tree is quite skewed.\r\n\r\nMACRO_PLACE_HALO=\"20 20\" seems rather large.  How did you pick those?", "date": "2024-01-04T18:56:00Z"}, {"author": "oharboe", "role": "assistant", "message": "Still cooking, but 100 global routing iterations + some fixes from the list above and only 6 violations. Lets see if it can push through...\r\n\r\nMany more things to test and tweak in the design, this is just intended to be a baseline. \r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9fc2d3e7-1d39-4615-b3ae-2a714bcb1f32)\r\n", "date": "2024-01-04T19:08:25Z"}, {"author": "maliberty", "role": "assistant", "message": "In looking at auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock it goes into a user buffer prci_ctrl_domain/_1019_.  I'm not clear why we would have a user buffer in the clock tree.  Did you skip remove_buffers in floorplanning?", "date": "2024-01-04T19:37:44Z"}, {"author": "maliberty", "role": "assistant", "message": "How did you run cts?  I see 75 instances named 'cklbuf*'.  The clkbuf seem only related to a small area (showing only 'Clock tree' instances):\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/4dfbc6d9-ab65-4b1a-8e4a-a1d3ed27c2dd)\r\n\r\nI see 7535 instances named 'load_slew*'.  It seems most of the tree is not actually clock buffers:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/05340a29-8d33-42b8-a98b-9c65969a1d56)\r\n", "date": "2024-01-04T19:45:09Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty So it seems to me that outputting the clock from a module, so that you have the clock coming in with 0 insertion latency and the clock output with the clock tree leaf insertion latency would be useful to deal with a very large clock tree latency as follows:\r\n\r\nCreate FIFOs on the outside that take the input clock for the module with large clock tree insertion latency as well as the output clock. Now you have two clock domains, use this FIFO to cross the two clock domain. The input/output pins of the module with large clock tree insertion latency can now have a clock latency constraints that is approximately equal to the clock tree insertion latency, which relaxes the constraints within the module.\r\n\r\nIt is a bit annoying to set up that .sdc file, because you can't know the clock tree insertion latency until after you have run CTS, so a few iterations are probably needed...\r\n", "date": "2024-01-05T06:33:22Z"}, {"author": "oharboe", "role": "assistant", "message": "Another datapoint, running times for this design (macros not included):\r\n\r\n```\r\nLog                       Elapsed seconds\r\n1_1_yosys                       2614\r\n1_1_yosys_hier_report           2518\r\n2_1_floorplan                    186\r\n2_2_floorplan_io                   6\r\n2_4_floorplan_macro              312\r\n2_5_floorplan_tapcell            108\r\n2_6_floorplan_pdn                234\r\n3_1_place_gp_skip_io             322\r\n3_2_place_iop                     12\r\n3_3_place_gp                    2904\r\n3_4_place_resized                590\r\n3_5_place_dp                     683\r\n4_1_cts                         5259\r\n```\r\n", "date": "2024-01-05T08:49:51Z"}, {"author": "maliberty", "role": "assistant", "message": "The cts runtime is likely mostly comprised of rsz runtime buffering that huge clock net. \r\n\r\nI haven't looked at the floorplan test case but I think I know what's going on.  remove_buffers will not remove a buffer that is between a primary input and output (that would leave a pure feedthru which is a generally a bad thing).  So it likely removes all the buffers but one as you have both in and out clock ports tied together.\r\n\r\nCTS sees the buffer and assumes you have a manually constructed tree and skips as shown above.\r\n\r\nThis is not a methodology that OR supports.  It seems a difficult one to do in general as you have no real idea what the skew requirement on the output pin should be.  I don't understand chipyard or this design so I'm not sure what to suggest here.\r\n\r\nre \"However, Yosys can't compile ChipTop, nor flatten the entire design(it would run forever), so I only build DigitalTop and hence we get clocks going out at the top level.\"  Can you flatten just DigitalTop into ChipTop and not the whole design?", "date": "2024-01-06T03:58:48Z"}, {"author": "oharboe", "role": "assistant", "message": "@rovinski \r\n> Bad logical designs can absolutely hamper physical design, and this is one example. It is taking away options from the algorithms and defecting to the user to make the proper decision, which is the opposite of what is wanted for automated design and design space exploration.\r\n> \r\n> I have done a decent amount of clock tree structuring for taped out chips, and this is simply a bad methodology except in very specific hand-tuned circumstances. It only works if you ensure the tree is manually balanced and the only reason to do it is to save clock power by reducing the branching factor and/or to reduce clock tree jitter for specific endpoints.\r\n\r\nDon't take my word for what MegaBoom is doing and not doing and why. I just have a default assumption that the authors knew what they were doing and did what they did the way they did for a reason...\r\n\r\nSince I know they are making a CPU, it makes sense to me(a default assumption until I learn more) that the memory master interface of that CPU is running on a different clock domain and that it is providing the clock which slave devices must use is an output.\r\n\r\nOr.... perhaps I'm not generating the Verilog in the right way...? The AXI output clock for the memory master interface might be there for the simulation test harness rather than synthesis?\r\n\r\nThis Hammer file is for SonicBOOM (a smaller design than MegaBoom), it doesn't offer any clues as to what the AXI output clock means...\r\n\r\nhttps://github.com/ucb-bar/chipyard/blob/main/vlsi/example-designs/sky130-openroad.yml", "date": "2024-01-06T20:14:53Z"}, {"author": "oharboe", "role": "assistant", "message": "This is a screenshot from after global route of ChipTop.sv:\r\n\r\n- Standalone reproduction case for CTS in this case which includes the global routing result & congestion report: https://drive.google.com/file/d/1sAFbG_MpjmaN4inulYWUqbeuPsYLqx73/view?usp=sharing\r\n- I was wrong that ChipTop.sv didn't go through synthesis with Yosys. I can't recall what problems I was having, though there are some simulation only .sv files that won't go through Yosys that are not used by ChipTop, perhaps I was confused by those?\r\n- Only two global route failures indicated (white crosses)\r\n- How can I tell if I have a clock tree?\r\n- There are significant caveats still in that the macro abstracts are mocked: they only went through floorplan. I'll do a full build later. Still it is possible to learn something at this stage.\r\n- clock_uncore_clock is fed through to axi4_mem_0_clock and the text says that it is clocked by clock_uncore_clock_vir, which makes sense. clock_uncore_clock_vir is clock_uncore_clock + source latency.\r\n\r\n```\r\nStartpoint: clock_uncore_clock (clock source 'clock_uncore_clock')\r\nEndpoint: axi4_mem_0_clock (output port clocked by clock_uncore_clock_vir)\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/abb63910-5d13-4ef2-b837-cb8060439fd1)\r\n\r\nThere is a second clock into the design, but my guess is that this has something to do with a peripheral or other, not the CPU:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/66e066a5-c2b6-4054-994c-7e02b7a74da1)\r\n\r\n```\r\nOpenROAD v2.0-11704-gfb0df7fb7 \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\n[WARNING STA-0357] virtual clock clock_uncore_clock_vir can not be propagated.\r\nEstimating parasitics\r\n[WARNING GUI-0076] QXcbConnection: XCB error: 3 (BadWindow), sequence: 3175, resource id: 16788675, major code: 40 (TranslateCoords), minor code: 0\r\n>>> report_checks -path_delay max -fields {fanout skew}\r\nStartpoint: reset_io (input port clocked by clock_uncore_clock_vir)\r\nEndpoint: system/prci_ctrl_domain/_0952_\r\n          (recovery check against rising-edge clock clock_uncore_clock)\r\nPath Group: asynchronous\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_uncore_clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v reset_io (in)\r\n     1   12.54 2712.54 v input87/Y (BUFx12f_ASAP7_75t_R)\r\n     1   70.17 2782.71 v wire49778/Y (BUFx16f_ASAP7_75t_R)\r\n     4   59.30 2842.00 ^ system/prci_ctrl_domain/_0722_/Y (INVx2_ASAP7_75t_R)\r\n          0.53 2842.54 ^ system/prci_ctrl_domain/_0952_/SETN (DFFASRHQNx1_ASAP7_75t_R)\r\n               2842.54   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock (rise edge)\r\n        871.54 9371.54   clock network delay (propagated)\r\n        -10.00 9361.54   clock uncertainty\r\n          0.00 9361.54   clock reconvergence pessimism\r\n               9361.54 ^ system/prci_ctrl_domain/_0952_/CLK (DFFASRHQNx1_ASAP7_75t_R)\r\n         15.79 9377.33   library recovery time\r\n               9377.33   data required time\r\n---------------------------------------------------------------\r\n               9377.33   data required time\r\n               -2842.54   data arrival time\r\n---------------------------------------------------------------\r\n               6534.79   slack (MET)\r\n\r\n\r\nStartpoint: _32_ (negative level-sensitive latch clocked by clock_uncore_clock)\r\nEndpoint: _10_\r\n          (rising clock gating-check end-point clocked by clock_uncore_clock)\r\nPath Group: gated clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n       4250.00 4250.00   clock clock_uncore_clock (fall edge)\r\n        532.14 4782.14   clock network delay (propagated)\r\n          0.00 4782.14 v _32_/CLK (DLLx1_ASAP7_75t_R)\r\n     1   45.86 4828.00 v _32_/Q (DLLx1_ASAP7_75t_R)\r\n          0.02 4828.02 v _10_/B (AND2x4_ASAP7_75t_R)\r\n               4828.02   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock (rise edge)\r\n        492.25 8992.25   clock network delay (propagated)\r\n        -10.00 8982.25   clock uncertainty\r\n          0.00 8982.25   clock reconvergence pessimism\r\n               8982.25 ^ _10_/A (AND2x4_ASAP7_75t_R)\r\n          0.00 8982.25   clock gating setup time\r\n               8982.25   data required time\r\n---------------------------------------------------------------\r\n               8982.25   data required time\r\n               -4828.02   data arrival time\r\n---------------------------------------------------------------\r\n               4154.23   slack (MET)\r\n\r\n\r\nStartpoint: system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095120_\r\n            (rising edge-triggered flip-flop clocked by clock_uncore_clock)\r\nEndpoint: system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_80484_\r\n          (rising edge-triggered flip-flop clocked by clock_uncore_clock)\r\nPath Group: clock_uncore_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_uncore_clock (rise edge)\r\n       1899.28 1899.28   clock network delay (propagated)\r\n          0.00 1899.28 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095120_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n     6   75.38 1974.65 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095120_/QN (DFFHQNx2_ASAP7_75t_R)\r\n     1   22.16 1996.82 ^ hold78251/Y (BUFx2_ASAP7_75t_R)\r\n     3   20.28 2017.09 ^ hold24171/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.71 2035.80 ^ hold78252/Y (BUFx2_ASAP7_75t_R)\r\n     6   44.43 2080.23 ^ hold14462/Y (BUFx2_ASAP7_75t_R)\r\n    14   32.26 2112.50 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052537_/Y (CKINVDCx20_ASAP7_75t_R)\r\n    10  114.99 2227.49 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095077_/CON (HAxp5_ASAP7_75t_R)\r\n     4   27.96 2255.44 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052831_/Y (INVx4_ASAP7_75t_R)\r\n     2   30.15 2285.59 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064284_/Y (AND2x2_ASAP7_75t_R)\r\n     6   64.65 2350.24 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095079_/CON (HAxp5_ASAP7_75t_R)\r\n     6   43.78 2394.03 ^ wire30543/Y (BUFx12_ASAP7_75t_R)\r\n     2   20.98 2415.01 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052672_/Y (INVx11_ASAP7_75t_R)\r\n     3   15.28 2430.28 v max_length29072/Y (BUFx12f_ASAP7_75t_R)\r\n     3   32.78 2463.06 v max_length29071/Y (BUFx10_ASAP7_75t_R)\r\n    13   69.31 2532.38 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052686_/Y (OR4x2_ASAP7_75t_R)\r\n     2   63.47 2595.85 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052855_/Y (OR3x4_ASAP7_75t_R)\r\n     2   43.49 2639.34 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052856_/Y (AND3x4_ASAP7_75t_R)\r\n    16   17.48 2656.82 v wire25227/Y (BUFx16f_ASAP7_75t_R)\r\n     4   89.89 2746.71 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052858_/Y (AND4x2_ASAP7_75t_R)\r\n     1   21.42 2768.12 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (NAND2x2_ASAP7_75t_R)\r\n     3   27.61 2795.74 ^ wire22599/Y (BUFx12f_ASAP7_75t_R)\r\n     2   63.18 2858.92 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09478_/Y (OA21x2_ASAP7_75t_R)\r\n     1   21.19 2880.10 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09481_/Y (OR3x4_ASAP7_75t_R)\r\n     1   15.57 2895.67 ^ hold11148/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.93 2911.60 ^ hold8869/Y (BUFx2_ASAP7_75t_R)\r\n     3   22.93 2934.53 ^ hold11149/Y (BUFx2_ASAP7_75t_R)\r\n     5   33.02 2967.55 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_10524_/Y (NOR3x2_ASAP7_75t_R)\r\n     2   32.14 2999.70 v wire20615/Y (BUFx16f_ASAP7_75t_R)\r\n    19   76.62 3076.32 v wire20614/Y (BUFx16f_ASAP7_75t_R)\r\n    30  123.33 3199.65 v wire20613/Y (BUFx16f_ASAP7_75t_R)\r\n    16   26.25 3225.90 v wire20612/Y (BUFx16f_ASAP7_75t_R)\r\n     1   60.57 3286.46 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140035_/Y (AND3x1_ASAP7_75t_R)\r\n     9   19.01 3305.47 v wire19271/Y (BUFx16f_ASAP7_75t_R)\r\n     1   89.99 3395.47 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140050_/Y (AND2x2_ASAP7_75t_R)\r\n     7   36.72 3432.19 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140051_/Y (AO21x2_ASAP7_75t_R)\r\n     6   51.35 3483.53 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140087_/Y (INVx13_ASAP7_75t_R)\r\n     5   35.71 3519.24 ^ wire16755/Y (BUFx16f_ASAP7_75t_R)\r\n     7  104.20 3623.44 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267695_/CON (HAxp5_ASAP7_75t_R)\r\n     5   26.52 3649.96 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140053_/Y (INVx3_ASAP7_75t_R)\r\n     2   31.74 3681.71 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140060_/Y (AND3x1_ASAP7_75t_R)\r\n     2   23.56 3705.27 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267682_/CON (HAxp5_ASAP7_75t_R)\r\n     2   24.40 3729.67 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267682_/SN (HAxp5_ASAP7_75t_R)\r\n     1   28.23 3757.89 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149590_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   43.36 3801.25 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149594_/Y (AND5x2_ASAP7_75t_R)\r\n     1   24.45 3825.70 ^ wire13571/Y (BUFx12f_ASAP7_75t_R)\r\n     1   64.03 3889.73 ^ wire13570/Y (BUFx16f_ASAP7_75t_R)\r\n     1   79.93 3969.66 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09472_/Y (AO221x2_ASAP7_75t_R)\r\n     1   68.57 4038.23 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09473_/Y (OR5x2_ASAP7_75t_R)\r\n     1   13.72 4051.94 ^ hold11977/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.26 4064.20 ^ hold7674/Y (BUFx2_ASAP7_75t_R)\r\n     2   14.63 4078.84 ^ hold11978/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.72 4094.55 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OA21x2_ASAP7_75t_R)\r\n     2   20.63 4115.18 ^ hold7675/Y (BUFx2_ASAP7_75t_R)\r\n     5   24.11 4139.29 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_10522_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   22.06 4161.35 v hold18417/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.68 4174.03 v hold10243/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.21 4186.24 v hold18418/Y (BUFx2_ASAP7_75t_R)\r\n     2   20.53 4206.77 v hold7676/Y (BUFx2_ASAP7_75t_R)\r\n     1   18.19 4224.96 v hold18419/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.59 4237.55 v hold10244/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.38 4252.93 v hold18420/Y (BUFx2_ASAP7_75t_R)\r\n     2   13.31 4266.24 v load_slew12502/Y (BUFx12f_ASAP7_75t_R)\r\n     1   15.05 4281.29 v hold18421/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.37 4296.67 v hold10245/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 4312.02 v hold18422/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.30 4327.32 v hold7677/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.27 4342.59 v hold18423/Y (BUFx2_ASAP7_75t_R)\r\n     3   30.80 4373.39 v hold10246/Y (BUFx2_ASAP7_75t_R)\r\n     3   35.71 4409.10 v max_length12501/Y (BUFx16f_ASAP7_75t_R)\r\n    17   68.42 4477.52 v wire12498/Y (BUFx16f_ASAP7_75t_R)\r\n    29  122.51 4600.04 v max_length12497/Y (BUFx16f_ASAP7_75t_R)\r\n    18   24.10 4624.14 v max_length12496/Y (BUFx16f_ASAP7_75t_R)\r\n     3   67.14 4691.28 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140063_/Y (AND3x4_ASAP7_75t_R)\r\n    10   59.39 4750.67 v max_length12300/Y (BUFx16f_ASAP7_75t_R)\r\n     3   72.57 4823.25 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140076_/Y (XNOR2x2_ASAP7_75t_R)\r\n     9   20.37 4843.61 ^ load_slew11681/Y (BUFx16f_ASAP7_75t_R)\r\n     5   23.34 4866.96 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_201351_/Y (CKINVDCx16_ASAP7_75t_R)\r\n     3   45.17 4912.12 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267727_/CON (HAxp5_ASAP7_75t_R)\r\n     3   20.27 4932.39 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140092_/Y (INVx2_ASAP7_75t_R)\r\n     1   21.44 4953.83 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267721_/CON (HAxp5_ASAP7_75t_R)\r\n     2   16.81 4970.65 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267668_/Y (INVx1_ASAP7_75t_R)\r\n     2   57.58 5028.23 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267723_/SN (HAxp5_ASAP7_75t_R)\r\n     1   30.13 5058.35 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149595_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   35.26 5093.62 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149601_/Y (AND5x2_ASAP7_75t_R)\r\n     1   34.85 5128.46 v wire8234/Y (BUFx16f_ASAP7_75t_R)\r\n     1   69.42 5197.89 v wire8233/Y (BUFx16f_ASAP7_75t_R)\r\n     1   86.50 5284.38 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09501_/Y (AO221x2_ASAP7_75t_R)\r\n     1   64.90 5349.29 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09502_/Y (OR4x2_ASAP7_75t_R)\r\n     1   15.04 5364.33 v hold11691/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.71 5377.04 v hold8103/Y (BUFx2_ASAP7_75t_R)\r\n     2   15.24 5392.28 v hold11692/Y (BUFx2_ASAP7_75t_R)\r\n     1    8.30 5400.59 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09503_/Y (NOR2x1_ASAP7_75t_R)\r\n     1   16.07 5416.66 ^ hold11693/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.98 5428.63 ^ hold8104/Y (BUFx2_ASAP7_75t_R)\r\n     2   14.25 5442.89 ^ hold11694/Y (BUFx2_ASAP7_75t_R)\r\n     6   33.66 5476.55 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_13871_/Y (AND3x4_ASAP7_75t_R)\r\n     1   19.94 5496.49 ^ hold17405/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.17 5508.66 ^ hold11980/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.81 5520.46 ^ hold17406/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.68 5532.14 ^ hold11695/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.84 5543.97 ^ hold11981/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.84 5555.81 ^ hold8105/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.69 5567.50 ^ hold11982/Y (BUFx2_ASAP7_75t_R)\r\n     1   11.65 5579.15 ^ hold11696/Y (BUFx2_ASAP7_75t_R)\r\n     1   14.92 5594.07 ^ hold11983/Y (BUFx2_ASAP7_75t_R)\r\n     2   13.10 5607.17 ^ max_length7476/Y (BUFx12f_ASAP7_75t_R)\r\n     1   16.07 5623.24 ^ hold11984/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.88 5639.12 ^ hold11697/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.95 5655.07 ^ hold11985/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.87 5670.94 ^ hold8106/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.89 5686.83 ^ hold11986/Y (BUFx2_ASAP7_75t_R)\r\n     2   26.49 5713.32 ^ hold11698/Y (BUFx2_ASAP7_75t_R)\r\n     2   26.12 5739.44 ^ hold11987/Y (BUFx2_ASAP7_75t_R)\r\n     3   20.02 5759.46 ^ wire7475/Y (BUFx16f_ASAP7_75t_R)\r\n     6   50.30 5809.76 ^ max_length7474/Y (BUFx12f_ASAP7_75t_R)\r\n     2   66.91 5876.68 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140099_/Y (AND2x2_ASAP7_75t_R)\r\n     1   17.15 5893.83 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_140100_/Y (NAND2x2_ASAP7_75t_R)\r\n     8   30.84 5924.67 v wire6776/Y (BUFx16f_ASAP7_75t_R)\r\n    13  114.72 6039.39 v load_slew6775/Y (BUFx16f_ASAP7_75t_R)\r\n     1   54.63 6094.02 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_146049_/Y (OR2x2_ASAP7_75t_R)\r\n     7   41.21 6135.24 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_146050_/Y (OA21x2_ASAP7_75t_R)\r\n     9   39.67 6174.90 v wire5396/Y (BUFx16f_ASAP7_75t_R)\r\n     5   51.31 6226.22 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267763_/CON (HAxp5_ASAP7_75t_R)\r\n     5   17.32 6243.54 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149526_/Y (INVx5_ASAP7_75t_R)\r\n     1   56.08 6299.62 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267765_/CON (HAxp5_ASAP7_75t_R)\r\n     2   29.02 6328.63 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267663_/Y (INVx1_ASAP7_75t_R)\r\n     2  126.39 6455.02 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267767_/SN (HAxp5_ASAP7_75t_R)\r\n     1   54.46 6509.49 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149603_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   37.55 6547.04 v system/tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149608_/Y (AND5x2_ASAP7_75t_R)\r\n     1   37.85 6584.88 v wire4143/Y (BUFx16f_ASAP7_75t_R)\r\n     1   69.84 6654.72 v wire4142/Y (BUFx16f_ASAP7_75t_R)\r\n     1   84.81 6739.53 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09493_/Y (AO221x2_ASAP7_75t_R)\r\n     1   57.90 6797.43 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09494_/Y (OR4x2_ASAP7_75t_R)\r\n     1   14.94 6812.38 v hold30872/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.79 6825.17 v hold13130/Y (BUFx2_ASAP7_75t_R)\r\n     2   14.65 6839.82 v hold30873/Y (BUFx2_ASAP7_75t_R)\r\n     2   20.21 6860.03 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09495_/Y (OR2x2_ASAP7_75t_R)\r\n     1   14.23 6874.25 v hold30874/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.10 6886.36 v hold13131/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.38 6898.74 v hold30875/Y (BUFx2_ASAP7_75t_R)\r\n     1   13.47 6912.20 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09505_/Y (AO21x1_ASAP7_75t_R)\r\n     1   12.83 6925.03 v hold30876/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 6937.40 v hold13132/Y (BUFx2_ASAP7_75t_R)\r\n     1   15.35 6952.75 v hold30877/Y (BUFx2_ASAP7_75t_R)\r\n    17   31.60 6984.35 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_09506_/Y (NOR3x2_ASAP7_75t_R)\r\n     1   22.33 7006.68 ^ hold32043/Y (BUFx2_ASAP7_75t_R)\r\n     1   12.37 7019.06 ^ hold30878/Y (BUFx2_ASAP7_75t_R)\r\n     4   22.96 7042.02 ^ hold13133/Y (BUFx2_ASAP7_75t_R)\r\n    35   24.88 7066.90 ^ load_slew4133/Y (BUFx16f_ASAP7_75t_R)\r\n     2   26.42 7093.32 ^ hold13134/Y (BUFx2_ASAP7_75t_R)\r\n     5   31.12 7124.44 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/_13971_/Y (AND2x6_ASAP7_75t_R)\r\n     2   27.47 7151.91 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/_3835_/Y (INVx2_ASAP7_75t_R)\r\n     1   14.40 7166.30 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/_5294_/Y (NOR2x2_ASAP7_75t_R)\r\n     5   17.30 7183.60 ^ wire3988/Y (BUFx16f_ASAP7_75t_R)\r\n     1   84.04 7267.64 ^ wire3987/Y (BUFx16f_ASAP7_75t_R)\r\n     8   66.05 7333.69 ^ wire3986/Y (BUFx16f_ASAP7_75t_R)\r\n     9  136.20 7469.90 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_52698_/Y (AND4x2_ASAP7_75t_R)\r\n     6   60.97 7530.87 ^ wire3601/Y (BUFx16f_ASAP7_75t_R)\r\n    10   86.11 7616.98 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_54157_/Y (AND2x6_ASAP7_75t_R)\r\n    14   23.34 7640.32 ^ wire2977/Y (BUFx16f_ASAP7_75t_R)\r\n     8   50.78 7691.10 ^ max_length2976/Y (BUFx12f_ASAP7_75t_R)\r\n    16   39.60 7730.70 ^ max_length2975/Y (BUFx16f_ASAP7_75t_R)\r\n    14   17.45 7748.16 ^ wire2974/Y (BUFx16f_ASAP7_75t_R)\r\n    16   29.41 7777.57 ^ wire2973/Y (BUFx16f_ASAP7_75t_R)\r\n     3   77.98 7855.55 ^ wire2972/Y (BUFx16f_ASAP7_75t_R)\r\n     2   82.43 7937.98 v system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_54165_/Y (NOR2x2_ASAP7_75t_R)\r\n    10   30.56 7968.54 v max_length1585/Y (BUFx16f_ASAP7_75t_R)\r\n    12   70.74 8039.28 v load_slew1584/Y (BUFx12f_ASAP7_75t_R)\r\n     8   18.25 8057.53 v max_length1583/Y (BUFx12f_ASAP7_75t_R)\r\n    11   46.63 8104.16 v load_slew1582/Y (BUFx16f_ASAP7_75t_R)\r\n    12   55.12 8159.28 v wire1580/Y (BUFx16f_ASAP7_75t_R)\r\n    12   57.79 8217.07 v max_length1579/Y (BUFx16f_ASAP7_75t_R)\r\n     1   39.31 8256.38 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_54636_/Y (AOI221x1_ASAP7_75t_R)\r\n          0.01 8256.39 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_80484_/D (DFFHQNx2_ASAP7_75t_R)\r\n               8256.39   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock (rise edge)\r\n        380.41 8880.41   clock network delay (propagated)\r\n        -10.00 8870.41   clock uncertainty\r\n          0.00 8870.41   clock reconvergence pessimism\r\n               8870.41 ^ system/tile_prci_domain/tile_reset_domain/boom_tile/core/fp_rename_stage/maptable/_80484_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.21 8865.20   library setup time\r\n               8865.20   data required time\r\n---------------------------------------------------------------\r\n               8865.20   data required time\r\n               -8256.39   data arrival time\r\n---------------------------------------------------------------\r\n                608.81   slack (MET)\r\n\r\n\r\nStartpoint: clock_uncore_clock (clock source 'clock_uncore_clock')\r\nEndpoint: axi4_mem_0_clock (output port clocked by clock_uncore_clock_vir)\r\nPath Group: clock_uncore_clock_vir\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n       4250.00 4250.00   clock clock_uncore_clock (fall edge)\r\n       1775.06 6025.06   clock network delay\r\n               6025.06 v axi4_mem_0_clock (out)\r\n               6025.06   data arrival time\r\n\r\n       8500.00 8500.00   clock clock_uncore_clock_vir (rise edge)\r\n       1000.00 9500.00   clock network delay (ideal)\r\n        -10.00 9490.00   clock uncertainty\r\n          0.00 9490.00   clock reconvergence pessimism\r\n       -1700.00 7790.00   output external delay\r\n               7790.00   data required time\r\n---------------------------------------------------------------\r\n               7790.00   data required time\r\n               -6025.06   data arrival time\r\n---------------------------------------------------------------\r\n               1764.93   slack (MET)\r\n\r\n\r\nStartpoint: serial_tl_bits_out_ready\r\n            (input port clocked by clock_uncore_clock_vir)\r\nEndpoint: system/subsystem_fbus/out_async/_1122_\r\n          (rising edge-triggered flip-flop clocked by serial_tl_clock)\r\nPath Group: serial_tl_clock\r\nPath Type: max\r\n\r\nFanout   Delay    Time   Description\r\n---------------------------------------------------------------\r\n          0.00    0.00   clock clock_uncore_clock_vir (rise edge)\r\n       1000.00 1000.00   clock network delay (ideal)\r\n       1700.00 2700.00 v input external delay\r\n     1    0.00 2700.00 v serial_tl_bits_out_ready (in)\r\n     1   11.42 2711.42 v input121/Y (BUFx2_ASAP7_75t_R)\r\n     1   21.57 2733.00 v system/subsystem_fbus/out_async/_0655_/Y (AND2x6_ASAP7_75t_R)\r\n     1   27.18 2760.18 ^ system/subsystem_fbus/out_async/_1119_/CON (HAxp5_ASAP7_75t_R)\r\n     1    9.72 2769.90 v system/subsystem_fbus/out_async/_1118_/Y (INVx1_ASAP7_75t_R)\r\n     1   13.58 2783.48 ^ system/subsystem_fbus/out_async/_1120_/CON (HAxp5_ASAP7_75t_R)\r\n     1    8.76 2792.23 v system/subsystem_fbus/out_async/_1117_/Y (INVx1_ASAP7_75t_R)\r\n    12  204.22 2996.46 v system/subsystem_fbus/out_async/_1121_/SN (HAxp5_ASAP7_75t_R)\r\n    12   53.79 3050.25 v load_slew27103/Y (BUFx6f_ASAP7_75t_R)\r\n     2   24.58 3074.83 v system/subsystem_fbus/out_async/_0587_/Y (XNOR2x1_ASAP7_75t_R)\r\n     1   26.20 3101.02 v system/subsystem_fbus/out_async/_0588_/Y (OR3x1_ASAP7_75t_R)\r\n    33   54.44 3155.46 v system/subsystem_fbus/out_async/_0593_/Y (AO22x2_ASAP7_75t_R)\r\n    33  113.80 3269.27 ^ system/subsystem_fbus/out_async/_0594_/Y (NAND2x2_ASAP7_75t_R)\r\n     1   46.55 3315.82 ^ system/subsystem_fbus/out_async/_0679_/Y (OA21x2_ASAP7_75t_R)\r\n          0.02 3315.84 ^ system/subsystem_fbus/out_async/_1122_/D (DFFHQNx2_ASAP7_75t_R)\r\n               3315.84   data arrival time\r\n\r\n       8500.00 8500.00   clock serial_tl_clock (rise edge)\r\n        191.14 8691.14   clock network delay (propagated)\r\n        -10.00 8681.14   clock uncertainty\r\n          0.00 8681.14   clock reconvergence pessimism\r\n               8681.14 ^ system/subsystem_fbus/out_async/_1122_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n         -5.07 8676.07   library setup time\r\n               8676.07   data required time\r\n---------------------------------------------------------------\r\n               8676.07   data required time\r\n               -3315.84   data arrival time\r\n---------------------------------------------------------------\r\n               5360.23   slack (MET)\r\n```\r\n", "date": "2024-01-07T09:24:51Z"}, {"author": "oharboe", "role": "assistant", "message": "I've posted a question to Chipyard: https://groups.google.com/g/chipyard/c/BXsafsGlhJ0", "date": "2024-01-08T05:23:51Z"}], "date": "2024-01-04T12:16:52Z", "category": "Runtime", "subcategory": "Global routing congestion", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4442", "id": 4442, "title": "Custom Placement of Two-Row Tall Cells", "author": "harshkhandeparkar", "description": "In the OpenFASoC [LDO generator](https://github.com/idea-fasoc/OpenFASOC/tree/main/openfasoc/generators/ldo-gen), a two-row tall comparator latch is custom placed using the `place_cell` command in a [tcl script](https://github.com/idea-fasoc/OpenFASOC/blob/f7b3440c485ff2accbf549aa11a12a75c01186c1/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl#L7).\r\n\r\nThis used to work in earlier versions of OpenROAD, but recently the CI is [failing](https://github.com/idea-fasoc/OpenFASOC/actions/runs/7301239627/job/19897490889#step:4:1990) with the following error:\r\n```\r\n[ERROR DPL-0017] cannot place instance cmp1.\r\n```\r\n The custom placement is done before running the `detailed_placement` command in the [detail_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/detail_place.tcl) script. If the `detailed_placement` command is removed, the following error is returned:\r\n```\r\n[ERROR DPL-0044] Cell cmp1 with height 8140 is taller than any row.\r\nError: detail_place.tcl, 26 DPL-0044\r\n```\r\n\r\nRelevant Information:\r\n- OpenROAD Version hash: `e89829335596b351ce665dcc3b73619c0b191c14`\r\n- Comparator Latch Cell: [LEF](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/lef/LDO_COMPARATOR_LATCH.lef) / [GDS](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/gds/LDO_COMPARATOR_LATCH.gds)\r\n- Custom placement script: [custom_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl)\r\n\r\nIs there a way to place this cell (not as a macro) without placement violations?\r\n\r\ncc: @msaligane ", "content": [{"author": "harshkhandeparkar", "role": "user", "message": "In the OpenFASoC [LDO generator](https://github.com/idea-fasoc/OpenFASOC/tree/main/openfasoc/generators/ldo-gen), a two-row tall comparator latch is custom placed using the `place_cell` command in a [tcl script](https://github.com/idea-fasoc/OpenFASOC/blob/f7b3440c485ff2accbf549aa11a12a75c01186c1/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl#L7).\r\n\r\nThis used to work in earlier versions of OpenROAD, but recently the CI is [failing](https://github.com/idea-fasoc/OpenFASOC/actions/runs/7301239627/job/19897490889#step:4:1990) with the following error:\r\n```\r\n[ERROR DPL-0017] cannot place instance cmp1.\r\n```\r\n The custom placement is done before running the `detailed_placement` command in the [detail_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/detail_place.tcl) script. If the `detailed_placement` command is removed, the following error is returned:\r\n```\r\n[ERROR DPL-0044] Cell cmp1 with height 8140 is taller than any row.\r\nError: detail_place.tcl, 26 DPL-0044\r\n```\r\n\r\nRelevant Information:\r\n- OpenROAD Version hash: `e89829335596b351ce665dcc3b73619c0b191c14`\r\n- Comparator Latch Cell: [LEF](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/lef/LDO_COMPARATOR_LATCH.lef) / [GDS](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/blocks/sky130hvl/gds/LDO_COMPARATOR_LATCH.gds)\r\n- Custom placement script: [custom_place.tcl](https://github.com/idea-fasoc/OpenFASOC/blob/main/openfasoc/generators/ldo-gen/flow/scripts/openfasoc/custom_place.tcl)\r\n\r\nIs there a way to place this cell (not as a macro) without placement violations?\r\n\r\ncc: @msaligane ", "date": "2023-12-25T14:47:28Z"}, {"author": "rovinski", "role": "assistant", "message": "Have you tried marking the cells as `FIXED` instead of `PLACED`?", "date": "2023-12-26T06:48:09Z"}, {"author": "maliberty", "role": "assistant", "message": "We have recently being doing work related to multi-height cells.  The error indicates that the detailed placer is trying to legalize this instance which is sounds like you don't want.  FIRM should work for that purpose.  Can you provide a test case?", "date": "2023-12-26T15:48:03Z"}, {"author": "maliberty", "role": "assistant", "message": "Your other option is to provide double height site rows.", "date": "2023-12-26T15:48:34Z"}], "date": "2023-12-25T14:47:28Z", "category": "Runtime", "subcategory": "Placement violation", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4464", "id": 4464, "title": "Avoiding overallocation of CPU and memory for OpenROAD builds", "author": "oharboe", "description": "I am running into problems with too many OpenROAD binaries running in parallel when using Bazel ORFS layer.\r\n\r\nI'm looking into whether I can get Bazel not to overuse CPUs in the system: https://groups.google.com/g/bazel-discuss/c/KVDcZ-EDfZw\r\n\r\nWhat other options are there? Surely this is not a new problem. What does other types of toolchains do?\r\n\r\nHowever, could and should OpenROAD be modified so that it communicates with other OpenROAD instances in the system and throttles usage to avoid overallocation of CPU and memory?\r\n\r\nIdea:\r\n\r\n- add new option to openroad `-limit <path>`\r\n- this would cause openroad instances to communicate with eachother not to overallocate CPU and memory", "content": [{"author": "oharboe", "role": "user", "message": "I am running into problems with too many OpenROAD binaries running in parallel when using Bazel ORFS layer.\r\n\r\nI'm looking into whether I can get Bazel not to overuse CPUs in the system: https://groups.google.com/g/bazel-discuss/c/KVDcZ-EDfZw\r\n\r\nWhat other options are there? Surely this is not a new problem. What does other types of toolchains do?\r\n\r\nHowever, could and should OpenROAD be modified so that it communicates with other OpenROAD instances in the system and throttles usage to avoid overallocation of CPU and memory?\r\n\r\nIdea:\r\n\r\n- add new option to openroad `-limit <path>`\r\n- this would cause openroad instances to communicate with eachother not to overallocate CPU and memory", "date": "2023-12-30T09:33:55Z"}, {"author": "maliberty", "role": "assistant", "message": "This seems to be more about job scheduling than OR.  Usually a job scheduler will have some ability to specify the required resources for a job.   OR itself will allow you to give a max number of threads if that's helpful.\r\n\r\nFor example in [condor](https://htcondor.readthedocs.io/en/latest/users-manual/submitting-a-job.html):\r\n```\r\nrequest_cpus   = 1\r\nrequest_memory = 1024M\r\nrequest_disk   = 10240K\r\n```\r\n\r\nI don't think OR should try to solve this as you can run into the same issue between unrelated tools (yosys, klayout, or, etc).  ", "date": "2023-12-30T15:59:32Z"}, {"author": "oharboe", "role": "assistant", "message": "Turns out there is an infinite loop, probably, in DRC. I thought things ground to a halt because of CPU thrashing, but the detailed router might actually be stuck here. https://github.com/The-OpenROAD-Project/OpenROAD/issues/4466\r\n\r\nIf there is some performance degradation like 30-50% when running multiple detailed routing in parallel, that's tolerable.", "date": "2023-12-31T10:33:14Z"}], "date": "2023-12-30T09:33:55Z", "category": "Runtime", "subcategory": "Resource management", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4461", "id": 4461, "title": "MegaBoom clock skew", "author": "oharboe", "description": "I get a lot of clock skew with https://github.com/The-OpenROAD-Project/megaboom/commit/f5dd1af7841cf1c811a51206bda6f36b446ff335 \r\n\r\n\r\n\r\n```\r\n>>> report_clock_skew\r\nClock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nLatency      CRPR       Skew\r\nprci_ctrl_domain/_0952_/CLK ^\r\n  11.20\r\ntile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095958_/CLK ^\r\n2185.78      0.00    -2174.58\r\n\r\nClock clock\r\nNo launch/capture paths found.\r\n\r\nClock clock_vir\r\nNo launch/capture paths found.\r\n\r\nClock debug_clock\r\nLatency      CRPR       Skew\r\ntlDM/dmInner/_0926_/CLK ^\r\n 118.89\r\ntlDM/dmInner/dmInner/_13930_/CLK ^\r\n 143.67      0.00     -24.78\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/faff2190-acda-4d7f-a513-7d4a3c847cdd)\r\n\r\nHowever, a simple clock skew number doesn't really tell me if the clock skew is a problem.  This presentation talks about that: https://www.eng.biu.ac.il/temanad/files/2017/02/Lecture-8-CTS.pdf\r\n\r\nThe clock skew is a problem if two flip flops that have a path between them have a large clock skew. Overcompensating for clock skew is bad for power/area/performance.\r\n\r\nThough, it is hard to believe that 2000ps clock skew isn't going to be an issue....\r\n\r\n\r\nLooking at the max path, ignoring all the hold elements(clock skew?), it seems like a very deep logic path going from the reorder buffer, through the load store unit and back into the rename stage. I can definitely see how this needs to be flattened in synthesis.\r\n\r\n```\r\nStartpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_\r\n            (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nEndpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_\r\n          (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nPath Group: auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n1958.08 1958.08   clock network delay (propagated)\r\n   0.00 1958.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  37.20 2244.42 v load_slew37373/Y (BUFx6f_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  51.73 2428.42 v max_cap29793/Y (BUFx10_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  12.60 2733.05 v hold3456/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 2745.47 v hold3147/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 2757.83 v hold3457/Y (BUFx2_ASAP7_75t_R)\r\n  12.25 2770.08 v hold2749/Y (BUFx2_ASAP7_75t_R)\r\n  12.23 2782.31 v hold3458/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2794.54 v hold3148/Y (BUFx2_ASAP7_75t_R)\r\n  12.34 2806.88 v hold3459/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 2819.16 v hold2589/Y (BUFx2_ASAP7_75t_R)\r\n  12.26 2831.41 v hold3460/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2843.64 v hold3149/Y (BUFx2_ASAP7_75t_R)\r\n  12.29 2855.93 v hold3461/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 2868.23 v hold2750/Y (BUFx2_ASAP7_75t_R)\r\n  12.57 2880.80 v hold3462/Y (BUFx2_ASAP7_75t_R)\r\n  13.60 2894.40 v hold3150/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 2908.22 v hold3463/Y (BUFx2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  18.64 2954.30 v wire17733/Y (BUFx16f_ASAP7_75t_R)\r\n  89.70 3044.00 v wire17732/Y (BUFx16f_ASAP7_75t_R)\r\n 119.92 3163.91 v max_length17731/Y (BUFx16f_ASAP7_75t_R)\r\n  30.15 3194.06 v wire17730/Y (BUFx16f_ASAP7_75t_R)\r\n  91.23 3285.29 v wire17729/Y (BUFx16f_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n  27.75 3477.02 v max_cap15253/Y (BUFx12f_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  20.78 3822.73 v wire11834/Y (BUFx12f_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  25.17 3929.30 v wire11643/Y (BUFx16f_ASAP7_75t_R)\r\n  70.74 4000.04 v wire11642/Y (BUFx16f_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n  15.55 4100.01 v hold2875/Y (BUFx2_ASAP7_75t_R)\r\n  12.67 4112.67 v hold2611/Y (BUFx2_ASAP7_75t_R)\r\n  12.70 4125.38 v hold2876/Y (BUFx2_ASAP7_75t_R)\r\n  12.45 4137.83 v hold2489/Y (BUFx2_ASAP7_75t_R)\r\n  12.41 4150.23 v hold2877/Y (BUFx2_ASAP7_75t_R)\r\n  12.47 4162.71 v hold2612/Y (BUFx2_ASAP7_75t_R)\r\n  14.28 4176.98 v hold2878/Y (BUFx2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.17 4195.32 ^ hold2613/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 4206.97 ^ hold2490/Y (BUFx2_ASAP7_75t_R)\r\n  11.89 4218.86 ^ hold2614/Y (BUFx2_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  12.91 4244.43 ^ hold2615/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 4256.17 ^ hold2491/Y (BUFx2_ASAP7_75t_R)\r\n  13.34 4269.51 ^ hold2616/Y (BUFx2_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  12.97 4304.23 ^ hold2753/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4316.36 ^ hold2617/Y (BUFx2_ASAP7_75t_R)\r\n  12.16 4328.52 ^ hold2754/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4340.65 ^ hold2591/Y (BUFx2_ASAP7_75t_R)\r\n  12.20 4352.86 ^ hold2755/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4365.04 ^ hold2618/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4377.23 ^ hold2756/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4389.36 ^ hold2492/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 4401.58 ^ hold2757/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 4413.89 ^ hold2619/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 4426.24 ^ hold2758/Y (BUFx2_ASAP7_75t_R)\r\n  25.20 4451.44 ^ hold2592/Y (BUFx2_ASAP7_75t_R)\r\n  39.44 4490.88 ^ wire10835/Y (BUFx16f_ASAP7_75t_R)\r\n 118.30 4609.18 ^ wire10834/Y (BUFx16f_ASAP7_75t_R)\r\n  42.72 4651.90 ^ wire10832/Y (BUFx16f_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  25.32 4924.57 v max_length9483/Y (BUFx16f_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  25.28 5252.66 v wire7254/Y (BUFx12f_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  21.54 5351.72 v wire7115/Y (BUFx16f_ASAP7_75t_R)\r\n  69.67 5421.39 v wire7114/Y (BUFx16f_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n  14.86 5510.88 v hold3695/Y (BUFx2_ASAP7_75t_R)\r\n  12.38 5523.26 v hold2552/Y (BUFx2_ASAP7_75t_R)\r\n  12.33 5535.59 v hold3696/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5547.89 v hold2504/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5560.21 v hold3697/Y (BUFx2_ASAP7_75t_R)\r\n  13.56 5573.77 v hold2553/Y (BUFx2_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  12.23 5591.93 ^ hold2554/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 5603.59 ^ hold2505/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 5615.32 ^ hold2555/Y (BUFx2_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  13.70 5657.64 ^ hold2883/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5669.51 ^ hold2556/Y (BUFx2_ASAP7_75t_R)\r\n  11.76 5681.27 ^ hold2884/Y (BUFx2_ASAP7_75t_R)\r\n  11.68 5692.95 ^ hold2525/Y (BUFx2_ASAP7_75t_R)\r\n  11.99 5704.94 ^ hold2885/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 5717.06 ^ hold2557/Y (BUFx2_ASAP7_75t_R)\r\n  12.07 5729.14 ^ hold2886/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 5740.97 ^ hold2506/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 5752.66 ^ hold2887/Y (BUFx2_ASAP7_75t_R)\r\n  11.82 5764.48 ^ hold2558/Y (BUFx2_ASAP7_75t_R)\r\n  11.91 5776.39 ^ hold2888/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5788.33 ^ hold2526/Y (BUFx2_ASAP7_75t_R)\r\n  12.00 5800.33 ^ hold2889/Y (BUFx2_ASAP7_75t_R)\r\n  16.89 5817.22 ^ hold2559/Y (BUFx2_ASAP7_75t_R)\r\n  34.94 5852.15 ^ hold2890/Y (BUFx2_ASAP7_75t_R)\r\n  26.15 5878.30 ^ max_length6496/Y (BUFx16f_ASAP7_75t_R)\r\n  13.60 5891.91 ^ hold2891/Y (BUFx2_ASAP7_75t_R)\r\n  12.02 5903.93 ^ hold2560/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5915.80 ^ hold2892/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 5927.54 ^ hold2527/Y (BUFx2_ASAP7_75t_R)\r\n  11.79 5939.33 ^ hold2893/Y (BUFx2_ASAP7_75t_R)\r\n  11.81 5951.14 ^ hold2561/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 5963.09 ^ hold2894/Y (BUFx2_ASAP7_75t_R)\r\n  11.93 5975.03 ^ hold2507/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5986.97 ^ hold2895/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5998.84 ^ hold2562/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 6010.80 ^ hold2896/Y (BUFx2_ASAP7_75t_R)\r\n  11.88 6022.68 ^ hold2528/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 6034.51 ^ hold2897/Y (BUFx2_ASAP7_75t_R)\r\n  29.92 6064.43 ^ hold2563/Y (BUFx2_ASAP7_75t_R)\r\n  64.30 6128.72 ^ wire6494/Y (BUFx12f_ASAP7_75t_R)\r\n  65.09 6193.82 ^ wire6493/Y (BUFx16f_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  37.31 6337.19 v max_length5802/Y (BUFx16f_ASAP7_75t_R)\r\n  41.02 6378.21 v load_slew5800/Y (BUFx16f_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  57.64 6800.51 ^ wire3875/Y (BUFx16f_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  34.79 6913.78 ^ wire3865/Y (BUFx16f_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  13.02 6983.41 ^ hold3416/Y (BUFx2_ASAP7_75t_R)\r\n  11.71 6995.11 ^ hold2992/Y (BUFx2_ASAP7_75t_R)\r\n  11.65 7006.76 ^ hold3417/Y (BUFx2_ASAP7_75t_R)\r\n  11.64 7018.40 ^ hold2679/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 7030.09 ^ hold3418/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7041.75 ^ hold2993/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7053.52 ^ hold3419/Y (BUFx2_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n  12.18 7080.22 ^ hold3699/Y (BUFx2_ASAP7_75t_R)\r\n  11.67 7091.90 ^ hold2994/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7103.56 ^ hold3700/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 7115.29 ^ hold2680/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7127.06 ^ hold3701/Y (BUFx2_ASAP7_75t_R)\r\n  11.84 7138.90 ^ hold2995/Y (BUFx2_ASAP7_75t_R)\r\n  11.86 7150.75 ^ hold3702/Y (BUFx2_ASAP7_75t_R)\r\n  16.27 7167.03 ^ hold3420/Y (BUFx2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  12.83 7186.26 v hold2996/Y (BUFx2_ASAP7_75t_R)\r\n  12.44 7198.70 v hold2681/Y (BUFx2_ASAP7_75t_R)\r\n  13.05 7211.75 v hold2997/Y (BUFx2_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  17.05 7252.74 v hold3703/Y (BUFx2_ASAP7_75t_R)\r\n  13.73 7266.47 v hold2998/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 7280.29 v hold3704/Y (BUFx2_ASAP7_75t_R)\r\n  13.62 7293.91 v hold2682/Y (BUFx2_ASAP7_75t_R)\r\n  13.64 7307.54 v hold3705/Y (BUFx2_ASAP7_75t_R)\r\n  13.25 7320.80 v hold2999/Y (BUFx2_ASAP7_75t_R)\r\n  12.85 7333.65 v hold3706/Y (BUFx2_ASAP7_75t_R)\r\n  36.78 7370.43 v hold3421/Y (BUFx2_ASAP7_75t_R)\r\n  38.82 7409.25 v hold3707/Y (BUFx2_ASAP7_75t_R)\r\n  15.66 7424.91 v max_length3853/Y (BUFx12f_ASAP7_75t_R)\r\n  11.90 7436.81 v hold3708/Y (BUFx2_ASAP7_75t_R)\r\n  12.17 7448.98 v hold3000/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 7461.26 v hold3709/Y (BUFx2_ASAP7_75t_R)\r\n  12.32 7473.58 v hold2683/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 7486.00 v hold3710/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 7498.22 v hold3001/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 7510.52 v hold3711/Y (BUFx2_ASAP7_75t_R)\r\n  30.05 7540.57 v hold3422/Y (BUFx2_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  17.31 7592.60 v hold4909/Y (BUFx2_ASAP7_75t_R)\r\n  17.42 7610.02 v hold3002/Y (BUFx2_ASAP7_75t_R)\r\n  17.51 7627.53 v hold4910/Y (BUFx2_ASAP7_75t_R)\r\n  17.30 7644.84 v hold2684/Y (BUFx2_ASAP7_75t_R)\r\n  16.93 7661.77 v hold4911/Y (BUFx2_ASAP7_75t_R)\r\n  15.77 7677.54 v hold3003/Y (BUFx2_ASAP7_75t_R)\r\n  14.70 7692.24 v hold4912/Y (BUFx2_ASAP7_75t_R)\r\n  27.90 7720.14 v hold3423/Y (BUFx2_ASAP7_75t_R)\r\n  56.26 7776.40 v wire3837/Y (BUFx16f_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  41.42 7889.00 ^ wire3756/Y (BUFx16f_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  48.71 8029.36 v wire3438/Y (BUFx12f_ASAP7_75t_R)\r\n  70.54 8099.90 v wire3437/Y (BUFx16f_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n  29.19 8275.99 v max_length2710/Y (BUFx12f_ASAP7_75t_R)\r\n  38.04 8314.04 v wire2709/Y (BUFx16f_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  40.95 8641.07 ^ max_cap481/Y (BUFx10_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n        8671.92   data arrival time\r\n\r\n8500.00 8500.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n 201.71 8701.71   clock network delay (propagated)\r\n -10.00 8691.71   clock uncertainty\r\n   0.00 8691.71   clock reconvergence pessimism\r\n        8691.71 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  15.71 8707.42   library setup time\r\n        8707.42   data required time\r\n---------------------------------------------------------\r\n        8707.42   data required time\r\n        -8671.92   data arrival time\r\n---------------------------------------------------------\r\n          35.50   slack (MET)\r\n```\r\n\r\n\r\nIf I strip away everything but the logic, I get:\r\n\r\n```\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n```\r\n\r\nThis is a delay of 70 levels of logic yielding 3445.12ps. The fanout of a number of these levels are in the 10-20 range.\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I get a lot of clock skew with https://github.com/The-OpenROAD-Project/megaboom/commit/f5dd1af7841cf1c811a51206bda6f36b446ff335 \r\n\r\n\r\n\r\n```\r\n>>> report_clock_skew\r\nClock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nLatency      CRPR       Skew\r\nprci_ctrl_domain/_0952_/CLK ^\r\n  11.20\r\ntile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095958_/CLK ^\r\n2185.78      0.00    -2174.58\r\n\r\nClock clock\r\nNo launch/capture paths found.\r\n\r\nClock clock_vir\r\nNo launch/capture paths found.\r\n\r\nClock debug_clock\r\nLatency      CRPR       Skew\r\ntlDM/dmInner/_0926_/CLK ^\r\n 118.89\r\ntlDM/dmInner/dmInner/_13930_/CLK ^\r\n 143.67      0.00     -24.78\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/faff2190-acda-4d7f-a513-7d4a3c847cdd)\r\n\r\nHowever, a simple clock skew number doesn't really tell me if the clock skew is a problem.  This presentation talks about that: https://www.eng.biu.ac.il/temanad/files/2017/02/Lecture-8-CTS.pdf\r\n\r\nThe clock skew is a problem if two flip flops that have a path between them have a large clock skew. Overcompensating for clock skew is bad for power/area/performance.\r\n\r\nThough, it is hard to believe that 2000ps clock skew isn't going to be an issue....\r\n\r\n\r\nLooking at the max path, ignoring all the hold elements(clock skew?), it seems like a very deep logic path going from the reorder buffer, through the load store unit and back into the rename stage. I can definitely see how this needs to be flattened in synthesis.\r\n\r\n```\r\nStartpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_\r\n            (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nEndpoint: tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_\r\n          (rising edge-triggered flip-flop clocked by auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock)\r\nPath Group: auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n1958.08 1958.08   clock network delay (propagated)\r\n   0.00 1958.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  37.20 2244.42 v load_slew37373/Y (BUFx6f_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  51.73 2428.42 v max_cap29793/Y (BUFx10_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  12.60 2733.05 v hold3456/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 2745.47 v hold3147/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 2757.83 v hold3457/Y (BUFx2_ASAP7_75t_R)\r\n  12.25 2770.08 v hold2749/Y (BUFx2_ASAP7_75t_R)\r\n  12.23 2782.31 v hold3458/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2794.54 v hold3148/Y (BUFx2_ASAP7_75t_R)\r\n  12.34 2806.88 v hold3459/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 2819.16 v hold2589/Y (BUFx2_ASAP7_75t_R)\r\n  12.26 2831.41 v hold3460/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 2843.64 v hold3149/Y (BUFx2_ASAP7_75t_R)\r\n  12.29 2855.93 v hold3461/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 2868.23 v hold2750/Y (BUFx2_ASAP7_75t_R)\r\n  12.57 2880.80 v hold3462/Y (BUFx2_ASAP7_75t_R)\r\n  13.60 2894.40 v hold3150/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 2908.22 v hold3463/Y (BUFx2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  18.64 2954.30 v wire17733/Y (BUFx16f_ASAP7_75t_R)\r\n  89.70 3044.00 v wire17732/Y (BUFx16f_ASAP7_75t_R)\r\n 119.92 3163.91 v max_length17731/Y (BUFx16f_ASAP7_75t_R)\r\n  30.15 3194.06 v wire17730/Y (BUFx16f_ASAP7_75t_R)\r\n  91.23 3285.29 v wire17729/Y (BUFx16f_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n  27.75 3477.02 v max_cap15253/Y (BUFx12f_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  20.78 3822.73 v wire11834/Y (BUFx12f_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  25.17 3929.30 v wire11643/Y (BUFx16f_ASAP7_75t_R)\r\n  70.74 4000.04 v wire11642/Y (BUFx16f_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n  15.55 4100.01 v hold2875/Y (BUFx2_ASAP7_75t_R)\r\n  12.67 4112.67 v hold2611/Y (BUFx2_ASAP7_75t_R)\r\n  12.70 4125.38 v hold2876/Y (BUFx2_ASAP7_75t_R)\r\n  12.45 4137.83 v hold2489/Y (BUFx2_ASAP7_75t_R)\r\n  12.41 4150.23 v hold2877/Y (BUFx2_ASAP7_75t_R)\r\n  12.47 4162.71 v hold2612/Y (BUFx2_ASAP7_75t_R)\r\n  14.28 4176.98 v hold2878/Y (BUFx2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.17 4195.32 ^ hold2613/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 4206.97 ^ hold2490/Y (BUFx2_ASAP7_75t_R)\r\n  11.89 4218.86 ^ hold2614/Y (BUFx2_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  12.91 4244.43 ^ hold2615/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 4256.17 ^ hold2491/Y (BUFx2_ASAP7_75t_R)\r\n  13.34 4269.51 ^ hold2616/Y (BUFx2_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  12.97 4304.23 ^ hold2753/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4316.36 ^ hold2617/Y (BUFx2_ASAP7_75t_R)\r\n  12.16 4328.52 ^ hold2754/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4340.65 ^ hold2591/Y (BUFx2_ASAP7_75t_R)\r\n  12.20 4352.86 ^ hold2755/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4365.04 ^ hold2618/Y (BUFx2_ASAP7_75t_R)\r\n  12.19 4377.23 ^ hold2756/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 4389.36 ^ hold2492/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 4401.58 ^ hold2757/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 4413.89 ^ hold2619/Y (BUFx2_ASAP7_75t_R)\r\n  12.35 4426.24 ^ hold2758/Y (BUFx2_ASAP7_75t_R)\r\n  25.20 4451.44 ^ hold2592/Y (BUFx2_ASAP7_75t_R)\r\n  39.44 4490.88 ^ wire10835/Y (BUFx16f_ASAP7_75t_R)\r\n 118.30 4609.18 ^ wire10834/Y (BUFx16f_ASAP7_75t_R)\r\n  42.72 4651.90 ^ wire10832/Y (BUFx16f_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  25.32 4924.57 v max_length9483/Y (BUFx16f_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  25.28 5252.66 v wire7254/Y (BUFx12f_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  21.54 5351.72 v wire7115/Y (BUFx16f_ASAP7_75t_R)\r\n  69.67 5421.39 v wire7114/Y (BUFx16f_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n  14.86 5510.88 v hold3695/Y (BUFx2_ASAP7_75t_R)\r\n  12.38 5523.26 v hold2552/Y (BUFx2_ASAP7_75t_R)\r\n  12.33 5535.59 v hold3696/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5547.89 v hold2504/Y (BUFx2_ASAP7_75t_R)\r\n  12.31 5560.21 v hold3697/Y (BUFx2_ASAP7_75t_R)\r\n  13.56 5573.77 v hold2553/Y (BUFx2_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  12.23 5591.93 ^ hold2554/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 5603.59 ^ hold2505/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 5615.32 ^ hold2555/Y (BUFx2_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  13.70 5657.64 ^ hold2883/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5669.51 ^ hold2556/Y (BUFx2_ASAP7_75t_R)\r\n  11.76 5681.27 ^ hold2884/Y (BUFx2_ASAP7_75t_R)\r\n  11.68 5692.95 ^ hold2525/Y (BUFx2_ASAP7_75t_R)\r\n  11.99 5704.94 ^ hold2885/Y (BUFx2_ASAP7_75t_R)\r\n  12.13 5717.06 ^ hold2557/Y (BUFx2_ASAP7_75t_R)\r\n  12.07 5729.14 ^ hold2886/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 5740.97 ^ hold2506/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 5752.66 ^ hold2887/Y (BUFx2_ASAP7_75t_R)\r\n  11.82 5764.48 ^ hold2558/Y (BUFx2_ASAP7_75t_R)\r\n  11.91 5776.39 ^ hold2888/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5788.33 ^ hold2526/Y (BUFx2_ASAP7_75t_R)\r\n  12.00 5800.33 ^ hold2889/Y (BUFx2_ASAP7_75t_R)\r\n  16.89 5817.22 ^ hold2559/Y (BUFx2_ASAP7_75t_R)\r\n  34.94 5852.15 ^ hold2890/Y (BUFx2_ASAP7_75t_R)\r\n  26.15 5878.30 ^ max_length6496/Y (BUFx16f_ASAP7_75t_R)\r\n  13.60 5891.91 ^ hold2891/Y (BUFx2_ASAP7_75t_R)\r\n  12.02 5903.93 ^ hold2560/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5915.80 ^ hold2892/Y (BUFx2_ASAP7_75t_R)\r\n  11.74 5927.54 ^ hold2527/Y (BUFx2_ASAP7_75t_R)\r\n  11.79 5939.33 ^ hold2893/Y (BUFx2_ASAP7_75t_R)\r\n  11.81 5951.14 ^ hold2561/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 5963.09 ^ hold2894/Y (BUFx2_ASAP7_75t_R)\r\n  11.93 5975.03 ^ hold2507/Y (BUFx2_ASAP7_75t_R)\r\n  11.94 5986.97 ^ hold2895/Y (BUFx2_ASAP7_75t_R)\r\n  11.87 5998.84 ^ hold2562/Y (BUFx2_ASAP7_75t_R)\r\n  11.96 6010.80 ^ hold2896/Y (BUFx2_ASAP7_75t_R)\r\n  11.88 6022.68 ^ hold2528/Y (BUFx2_ASAP7_75t_R)\r\n  11.83 6034.51 ^ hold2897/Y (BUFx2_ASAP7_75t_R)\r\n  29.92 6064.43 ^ hold2563/Y (BUFx2_ASAP7_75t_R)\r\n  64.30 6128.72 ^ wire6494/Y (BUFx12f_ASAP7_75t_R)\r\n  65.09 6193.82 ^ wire6493/Y (BUFx16f_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  37.31 6337.19 v max_length5802/Y (BUFx16f_ASAP7_75t_R)\r\n  41.02 6378.21 v load_slew5800/Y (BUFx16f_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  57.64 6800.51 ^ wire3875/Y (BUFx16f_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  34.79 6913.78 ^ wire3865/Y (BUFx16f_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  13.02 6983.41 ^ hold3416/Y (BUFx2_ASAP7_75t_R)\r\n  11.71 6995.11 ^ hold2992/Y (BUFx2_ASAP7_75t_R)\r\n  11.65 7006.76 ^ hold3417/Y (BUFx2_ASAP7_75t_R)\r\n  11.64 7018.40 ^ hold2679/Y (BUFx2_ASAP7_75t_R)\r\n  11.69 7030.09 ^ hold3418/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7041.75 ^ hold2993/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7053.52 ^ hold3419/Y (BUFx2_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n  12.18 7080.22 ^ hold3699/Y (BUFx2_ASAP7_75t_R)\r\n  11.67 7091.90 ^ hold2994/Y (BUFx2_ASAP7_75t_R)\r\n  11.66 7103.56 ^ hold3700/Y (BUFx2_ASAP7_75t_R)\r\n  11.73 7115.29 ^ hold2680/Y (BUFx2_ASAP7_75t_R)\r\n  11.77 7127.06 ^ hold3701/Y (BUFx2_ASAP7_75t_R)\r\n  11.84 7138.90 ^ hold2995/Y (BUFx2_ASAP7_75t_R)\r\n  11.86 7150.75 ^ hold3702/Y (BUFx2_ASAP7_75t_R)\r\n  16.27 7167.03 ^ hold3420/Y (BUFx2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  12.83 7186.26 v hold2996/Y (BUFx2_ASAP7_75t_R)\r\n  12.44 7198.70 v hold2681/Y (BUFx2_ASAP7_75t_R)\r\n  13.05 7211.75 v hold2997/Y (BUFx2_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  17.05 7252.74 v hold3703/Y (BUFx2_ASAP7_75t_R)\r\n  13.73 7266.47 v hold2998/Y (BUFx2_ASAP7_75t_R)\r\n  13.82 7280.29 v hold3704/Y (BUFx2_ASAP7_75t_R)\r\n  13.62 7293.91 v hold2682/Y (BUFx2_ASAP7_75t_R)\r\n  13.64 7307.54 v hold3705/Y (BUFx2_ASAP7_75t_R)\r\n  13.25 7320.80 v hold2999/Y (BUFx2_ASAP7_75t_R)\r\n  12.85 7333.65 v hold3706/Y (BUFx2_ASAP7_75t_R)\r\n  36.78 7370.43 v hold3421/Y (BUFx2_ASAP7_75t_R)\r\n  38.82 7409.25 v hold3707/Y (BUFx2_ASAP7_75t_R)\r\n  15.66 7424.91 v max_length3853/Y (BUFx12f_ASAP7_75t_R)\r\n  11.90 7436.81 v hold3708/Y (BUFx2_ASAP7_75t_R)\r\n  12.17 7448.98 v hold3000/Y (BUFx2_ASAP7_75t_R)\r\n  12.28 7461.26 v hold3709/Y (BUFx2_ASAP7_75t_R)\r\n  12.32 7473.58 v hold2683/Y (BUFx2_ASAP7_75t_R)\r\n  12.42 7486.00 v hold3710/Y (BUFx2_ASAP7_75t_R)\r\n  12.22 7498.22 v hold3001/Y (BUFx2_ASAP7_75t_R)\r\n  12.30 7510.52 v hold3711/Y (BUFx2_ASAP7_75t_R)\r\n  30.05 7540.57 v hold3422/Y (BUFx2_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  17.31 7592.60 v hold4909/Y (BUFx2_ASAP7_75t_R)\r\n  17.42 7610.02 v hold3002/Y (BUFx2_ASAP7_75t_R)\r\n  17.51 7627.53 v hold4910/Y (BUFx2_ASAP7_75t_R)\r\n  17.30 7644.84 v hold2684/Y (BUFx2_ASAP7_75t_R)\r\n  16.93 7661.77 v hold4911/Y (BUFx2_ASAP7_75t_R)\r\n  15.77 7677.54 v hold3003/Y (BUFx2_ASAP7_75t_R)\r\n  14.70 7692.24 v hold4912/Y (BUFx2_ASAP7_75t_R)\r\n  27.90 7720.14 v hold3423/Y (BUFx2_ASAP7_75t_R)\r\n  56.26 7776.40 v wire3837/Y (BUFx16f_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  41.42 7889.00 ^ wire3756/Y (BUFx16f_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  48.71 8029.36 v wire3438/Y (BUFx12f_ASAP7_75t_R)\r\n  70.54 8099.90 v wire3437/Y (BUFx16f_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n  29.19 8275.99 v max_length2710/Y (BUFx12f_ASAP7_75t_R)\r\n  38.04 8314.04 v wire2709/Y (BUFx16f_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  40.95 8641.07 ^ max_cap481/Y (BUFx10_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n        8671.92   data arrival time\r\n\r\n8500.00 8500.00   clock auto_prci_ctrl_domain_reset_setter_clock_in_member_allClocks_uncore_clock (rise edge)\r\n 201.71 8701.71   clock network delay (propagated)\r\n -10.00 8691.71   clock uncertainty\r\n   0.00 8691.71   clock reconvergence pessimism\r\n        8691.71 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n  15.71 8707.42   library setup time\r\n        8707.42   data required time\r\n---------------------------------------------------------\r\n        8707.42   data required time\r\n        -8671.92   data arrival time\r\n---------------------------------------------------------\r\n          35.50   slack (MET)\r\n```\r\n\r\n\r\nIf I strip away everything but the logic, I get:\r\n\r\n```\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n  82.49 2040.56 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095683_/QN (DFFHQNx2_ASAP7_75t_R)\r\n  80.51 2121.07 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052821_/Y (CKINVDCx20_ASAP7_75t_R)\r\n  86.15 2207.22 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095639_/CON (HAxp5_ASAP7_75t_R)\r\n  19.23 2263.65 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_052860_/Y (CKINVDCx9p33_ASAP7_75t_R)\r\n  24.44 2288.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_064857_/Y (AND2x2_ASAP7_75t_R)\r\n  88.61 2376.70 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_095641_/CON (HAxp5_ASAP7_75t_R)\r\n  34.45 2462.87 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053096_/Y (OA222x2_ASAP7_75t_R)\r\n  20.54 2483.41 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053100_/Y (AND5x1_ASAP7_75t_R)\r\n  25.37 2508.78 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053118_/Y (AND3x4_ASAP7_75t_R)\r\n  49.24 2558.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053120_/Y (AND2x6_ASAP7_75t_R)\r\n  46.31 2604.33 v tile_prci_domain/tile_reset_domain/boom_tile/core/rob/_053122_/Y (AND4x2_ASAP7_75t_R)\r\n  72.25 2676.58 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09441_/Y (NAND2x1_ASAP7_75t_R)\r\n  23.28 2699.86 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09452_/Y (OA21x2_ASAP7_75t_R)\r\n   6.13 2705.99 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09453_/Y (INVx1_ASAP7_75t_R)\r\n  14.46 2720.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09455_/Y (AND4x2_ASAP7_75t_R)\r\n  27.44 2935.66 v tile_prci_domain/tile_reset_domain/boom_tile/core/_10541_/Y (AND3x4_ASAP7_75t_R)\r\n  79.50 3364.80 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139693_/Y (AND2x2_ASAP7_75t_R)\r\n  30.15 3394.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139694_/Y (NAND2x2_ASAP7_75t_R)\r\n  54.32 3449.26 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139729_/Y (AOI21x1_ASAP7_75t_R)\r\n 108.62 3585.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267045_/CON (HAxp5_ASAP7_75t_R)\r\n  21.51 3607.14 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139732_/Y (CKINVDCx12_ASAP7_75t_R)\r\n  28.07 3635.22 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267043_/CON (HAxp5_ASAP7_75t_R)\r\n  15.42 3650.63 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267017_/Y (INVx1_ASAP7_75t_R)\r\n  53.40 3704.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/CON (HAxp5_ASAP7_75t_R)\r\n  35.49 3739.53 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267041_/SN (HAxp5_ASAP7_75t_R)\r\n  31.36 3770.89 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149214_/Y (XNOR2x1_ASAP7_75t_R)\r\n  31.07 3801.95 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149219_/Y (AND5x2_ASAP7_75t_R)\r\n  81.40 3904.13 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09445_/Y (AO221x2_ASAP7_75t_R)\r\n  84.41 4084.45 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09446_/Y (OR5x2_ASAP7_75t_R)\r\n   6.16 4183.14 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09447_/Y (INVx1_ASAP7_75t_R)\r\n  12.66 4231.52 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09449_/Y (AO21x1_ASAP7_75t_R)\r\n  21.75 4291.26 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_10540_/Y (AND3x4_ASAP7_75t_R)\r\n  92.03 4743.92 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139741_/Y (AND3x4_ASAP7_75t_R)\r\n 131.71 4875.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139752_/Y (XNOR2x2_ASAP7_75t_R)\r\n  23.62 4899.25 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_200474_/Y (INVx13_ASAP7_75t_R)\r\n  70.19 4994.76 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267079_/CON (HAxp5_ASAP7_75t_R)\r\n  16.21 5010.97 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139765_/Y (CKINVDCx6p67_ASAP7_75t_R)\r\n  31.91 5042.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139770_/Y (AND3x1_ASAP7_75t_R)\r\n 106.34 5149.23 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267049_/SN (HAxp5_ASAP7_75t_R)\r\n  44.98 5194.21 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149221_/Y (XNOR2x1_ASAP7_75t_R)\r\n  33.17 5227.38 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149226_/Y (AND5x2_ASAP7_75t_R)\r\n  77.52 5330.18 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09462_/Y (AO221x2_ASAP7_75t_R)\r\n  74.63 5496.02 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09468_/Y (OR4x1_ASAP7_75t_R)\r\n   5.94 5579.70 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13953_/Y (INVx1_ASAP7_75t_R)\r\n  28.61 5643.93 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_13955_/Y (AND4x2_ASAP7_75t_R)\r\n  75.13 6268.94 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139772_/Y (AND2x2_ASAP7_75t_R)\r\n  30.93 6299.88 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_139794_/Y (NAND2x2_ASAP7_75t_R)\r\n  20.76 6398.97 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145708_/Y (NOR2x1_ASAP7_75t_R)\r\n  55.06 6454.03 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_145709_/Y (XNOR2x2_ASAP7_75t_R)\r\n 103.05 6557.08 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_193309_/Y (NOR2x2_ASAP7_75t_R)\r\n  50.56 6607.64 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_212054_/Y (AND2x2_ASAP7_75t_R)\r\n  26.07 6633.71 v tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/CON (HAxp5_ASAP7_75t_R)\r\n  25.60 6659.31 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_267110_/SN (HAxp5_ASAP7_75t_R)\r\n  25.32 6684.63 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149203_/Y (XOR2x1_ASAP7_75t_R)\r\n  58.24 6742.87 ^ tile_prci_domain/tile_reset_domain/boom_tile/lsu/_149205_/Y (AND5x2_ASAP7_75t_R)\r\n  78.48 6878.99 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09474_/Y (AO221x2_ASAP7_75t_R)\r\n  56.61 6970.39 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09475_/Y (OR4x1_ASAP7_75t_R)\r\n  14.52 7068.04 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/_09476_/Y (AO22x2_ASAP7_75t_R)\r\n   6.40 7173.43 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09477_/Y (INVx1_ASAP7_75t_R)\r\n  23.94 7235.69 v tile_prci_domain/tile_reset_domain/boom_tile/core/_09480_/Y (AND3x4_ASAP7_75t_R)\r\n  34.72 7575.29 v tile_prci_domain/tile_reset_domain/boom_tile/core/_14044_/Y (AND2x6_ASAP7_75t_R)\r\n  43.71 7820.11 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05007_/Y (INVx1_ASAP7_75t_R)\r\n  27.46 7847.57 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05009_/Y (OR3x4_ASAP7_75t_R)\r\n  91.66 7980.65 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/_05011_/Y (CKINVDCx20_ASAP7_75t_R)\r\n 146.90 8246.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25600_/Y (AND3x4_ASAP7_75t_R)\r\n 127.32 8441.35 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25735_/Y (AND3x4_ASAP7_75t_R)\r\n  44.12 8485.47 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25736_/Y (AO21x2_ASAP7_75t_R)\r\n  48.25 8533.72 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25737_/Y (AO21x2_ASAP7_75t_R)\r\n  66.41 8600.12 ^ tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_25738_/Y (AOI21x1_ASAP7_75t_R)\r\n  12.72 8653.80 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38380_/Y (OAI21x1_ASAP7_75t_R)\r\n  18.12 8671.91 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_38384_/Y (AO21x1_ASAP7_75t_R)\r\n   0.01 8671.92 v tile_prci_domain/tile_reset_domain/boom_tile/core/rename_stage/freelist/_44863_/D (DFFHQNx2_ASAP7_75t_R)\r\n```\r\n\r\nThis is a delay of 70 levels of logic yielding 3445.12ps. The fanout of a number of these levels are in the 10-20 range.\r\n", "date": "2023-12-29T07:04:22Z"}, {"author": "oharboe", "role": "assistant", "message": "@precisionmoon FYI", "date": "2023-12-30T09:17:46Z"}, {"author": "maliberty", "role": "assistant", "message": "The reported clock skew from sta considers only ff that have a path between them.", "date": "2023-12-30T15:50:54Z"}], "date": "2023-12-29T07:04:22Z", "category": "Runtime", "subcategory": "Clock skew issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4420", "id": 4420, "title": "Report total number of paths vs. number of failing path", "author": "lustefan97", "description": "I was wondering if there was a way to quickly summarize the ratio between the number of paths and number of failing paths (with regard to timing) using OpenSTA. I know it can report the slack in each path in a detailled manner, but I would like to have a report in the vein of : \"Here is the number of paths that the design has that needs to be tested for timing vs. the number of path that failed the test\"", "content": [{"author": "lustefan97", "role": "user", "message": "I was wondering if there was a way to quickly summarize the ratio between the number of paths and number of failing paths (with regard to timing) using OpenSTA. I know it can report the slack in each path in a detailled manner, but I would like to have a report in the vein of : \"Here is the number of paths that the design has that needs to be tested for timing vs. the number of path that failed the test\"", "date": "2023-12-20T15:52:12Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't see an easy way as the number of paths is exponential.  How would you use the result?\r\n\r\n@tspyrou any thoughts?", "date": "2023-12-20T17:28:48Z"}, {"author": "oharboe", "role": "assistant", "message": "@lustefan97 Could this be a use-case for timing histogram(supported in OpenROAD under Charts).", "date": "2023-12-21T08:51:44Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that to get the histograms you have to have qt charts installed.   During cmake you should get a message like \"Charts widget is enabled\" and not \"Charts widget is not enabled\"", "date": "2023-12-21T16:18:58Z"}, {"author": "maliberty", "role": "assistant", "message": "> It is just a shame that it is so out if the way, I forget that we do... Can it be moved to the tabs where clocktree, hierarchy, etc. is?\r\n\r\nIt is a docking window the same as all the others and can be position wherever you like.", "date": "2023-12-22T00:29:36Z"}, {"author": "maliberty", "role": "assistant", "message": "> Anyway: I think it would be great if this feature could be made more available out of the box and not hidden away behind \"cmake magic\" and curious defaults.\r\n\r\nIt is on by default, but qtcharts is not available for centos7 and so can't be assumed.", "date": "2023-12-22T00:31:11Z"}, {"author": "oharboe", "role": "assistant", "message": "A less anaemic slack histogram example:\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/aes/config.mk cts\r\n```\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/aes/config.mk gui_cts\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1caeb16b-836f-4ae5-b5a6-6b235791ab90)\r\n", "date": "2023-12-22T08:25:21Z"}, {"author": "lustefan97", "role": "assistant", "message": "@maliberty @oharboe Ok so I updated my OpenROAD to the latest version while having QT chart installed and enabled. After loading a database in that I knew had reported a slack, I tried to make a timing chart but resulted in the GUI crashing. \r\n\r\nI got a warning telling me that timing data was not stored  in the database and must be loaded separately if needed, are they not stored in the .odb ? Is the .odb file only \"geometric\" (would not be surprising since a .lef and .def files are needed), even if .lib files and RC rules have been used to produce the final result ?", "date": "2023-12-22T15:04:04Z"}, {"author": "maliberty", "role": "assistant", "message": "@AcKoucher FYI", "date": "2023-12-22T18:05:50Z"}, {"author": "oharboe", "role": "assistant", "message": "@AcKoucher Just one more example of where the horizontal labels are gone completely:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/7fa91044-d0df-4ffe-84b2-b5a264d959db)\r\n", "date": "2023-12-27T11:19:42Z"}, {"author": "lustefan97", "role": "assistant", "message": "@oharboe @maliberty I have a quick but important question, right now I run my TCL scripts on a device that has no GUI, how would I need to proceed if I wanted to design a chip on it using OpenROAD but then move the results and generate the histogram on another computer (capable of opening a GUI).\r\n\r\nI ran a test script in which I saved the design in a .odb file and the timing results from OpenSTA in a .sdf file, but when I loaded the .odb back in another GUI session (as well as the .sdf file using `read_sdf`), multiple warnings were raised during loading and no histogram was created...", "date": "2023-12-27T19:37:28Z"}], "date": "2023-12-20T15:52:12Z", "category": "Feature Request", "subcategory": "Reporting enhancement", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4445", "id": 4445, "title": "Creating a mock 8192x64 SRAM for megaboom", "author": "oharboe", "description": "I'm trying to create a mock SRAM for the L2 in https://github.com/The-OpenROAD-Project/megaboom\r\n\r\nHere is the behavioral model:\r\n\r\n```verilog\r\nmodule cc_banks_8192x64(\r\n  input  [12:0] RW0_addr,\r\n  input         RW0_en,\r\n                RW0_clk,\r\n                RW0_wmode,\r\n  input  [63:0] RW0_wdata,\r\n  output [63:0] RW0_rdata\r\n);\r\n\r\n  reg [63:0] Memory[0:8191];\r\n  reg [12:0] _RW0_raddr_d0;\r\n  reg        _RW0_ren_d0;\r\n  reg        _RW0_rmode_d0;\r\n  always @(posedge RW0_clk) begin\r\n    _RW0_raddr_d0 <= RW0_addr;\r\n    _RW0_ren_d0 <= RW0_en;\r\n    _RW0_rmode_d0 <= RW0_wmode;\r\n    if (RW0_en & RW0_wmode)\r\n      Memory[RW0_addr] <= RW0_wdata;\r\n  end // always @(posedge)\r\n  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 64'bx;\r\nendmodule\r\n```\r\n\r\n`8192 rows x 64 bits = 5*10^5 bits`. This yields `2.7*10^6` instances. At CORE_UTILIZATION=40%, this yields the following floorplan 640um * 1400um.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c86a5532-5e36-4b32-a3aa-5bbf0f4396e1)\r\n\r\nThe build times for this module become prohibitive. Synthesis is ca. 6000s, 30000s for global placement, and at least as long for CTS. So I really don't want to run through more than the floorplan and at that point create an abstract.\r\n\r\nI have some work in progress where I can mock a smaller area: https://github.com/The-OpenROAD-Project/megaboom/pull/9\r\n\r\nI don't have a way to mock a realistic clock period for the .lib file that comes out of the floorplan, nor do I know exactly what is realistic for such an SRAM on ASAP7.\r\n\r\n90ps minimum clock period for a 8192x64 SRAM seems pretty good...\r\n\r\n```\r\n>>> report_clock_min_period\r\nRW0_clk period min = 89.24 fmax 11206.30\r\n```\r\n\r\nI can't reconcile the min period of 90ps with what is observed in Timing Report:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f397f170-1746-4e77-8dfc-f2fd34ef50d7)\r\n\r\nI wonder if the .lib file that comes out of the floorplan can be useful in architectural exploration.\r\n\r\nThis raises a rather open ended question...\r\n\r\nQ: How does the .lib file that comes out of the floorplan compare to a realistic .lib file?\r\n\r\nIs it a \"simple matter of scaling\" the .lib file, like I can scale area to get something that is something that is in the range of what I want in my architectural exploration?\r\n\r\n\r\n\r\n\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm trying to create a mock SRAM for the L2 in https://github.com/The-OpenROAD-Project/megaboom\r\n\r\nHere is the behavioral model:\r\n\r\n```verilog\r\nmodule cc_banks_8192x64(\r\n  input  [12:0] RW0_addr,\r\n  input         RW0_en,\r\n                RW0_clk,\r\n                RW0_wmode,\r\n  input  [63:0] RW0_wdata,\r\n  output [63:0] RW0_rdata\r\n);\r\n\r\n  reg [63:0] Memory[0:8191];\r\n  reg [12:0] _RW0_raddr_d0;\r\n  reg        _RW0_ren_d0;\r\n  reg        _RW0_rmode_d0;\r\n  always @(posedge RW0_clk) begin\r\n    _RW0_raddr_d0 <= RW0_addr;\r\n    _RW0_ren_d0 <= RW0_en;\r\n    _RW0_rmode_d0 <= RW0_wmode;\r\n    if (RW0_en & RW0_wmode)\r\n      Memory[RW0_addr] <= RW0_wdata;\r\n  end // always @(posedge)\r\n  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 64'bx;\r\nendmodule\r\n```\r\n\r\n`8192 rows x 64 bits = 5*10^5 bits`. This yields `2.7*10^6` instances. At CORE_UTILIZATION=40%, this yields the following floorplan 640um * 1400um.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c86a5532-5e36-4b32-a3aa-5bbf0f4396e1)\r\n\r\nThe build times for this module become prohibitive. Synthesis is ca. 6000s, 30000s for global placement, and at least as long for CTS. So I really don't want to run through more than the floorplan and at that point create an abstract.\r\n\r\nI have some work in progress where I can mock a smaller area: https://github.com/The-OpenROAD-Project/megaboom/pull/9\r\n\r\nI don't have a way to mock a realistic clock period for the .lib file that comes out of the floorplan, nor do I know exactly what is realistic for such an SRAM on ASAP7.\r\n\r\n90ps minimum clock period for a 8192x64 SRAM seems pretty good...\r\n\r\n```\r\n>>> report_clock_min_period\r\nRW0_clk period min = 89.24 fmax 11206.30\r\n```\r\n\r\nI can't reconcile the min period of 90ps with what is observed in Timing Report:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f397f170-1746-4e77-8dfc-f2fd34ef50d7)\r\n\r\nI wonder if the .lib file that comes out of the floorplan can be useful in architectural exploration.\r\n\r\nThis raises a rather open ended question...\r\n\r\nQ: How does the .lib file that comes out of the floorplan compare to a realistic .lib file?\r\n\r\nIs it a \"simple matter of scaling\" the .lib file, like I can scale area to get something that is something that is in the range of what I want in my architectural exploration?\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-12-26T11:06:06Z"}, {"author": "maliberty", "role": "assistant", "message": "I believe the min clock period is based on internal reg-to-reg paths and not reg-IO paths as shown above.\r\n\r\nUsing a memory generator is a better idea as this will only get worse the bigger you make the rams.  ", "date": "2023-12-26T15:55:04Z"}, {"author": "maliberty", "role": "assistant", "message": "Expecting to build to build 2.5M instance blocks quickly will be very difficult in any tool.", "date": "2023-12-26T21:25:49Z"}, {"author": "oharboe", "role": "assistant", "message": "Trying a different approach... Since all I care about is to mock area and timing(creating realistic SRAMs is a separate concern that I'm not tackling now), it doens't matter what the Verilog actually does. Below I have reduced the size of the Memory while I'm using all the address bits.\r\n\r\n```\r\nmodule cc_banks_8192x64(\r\n  input  [12:0] RW0_addr,\r\n  input         RW0_en,\r\n                RW0_clk,\r\n                RW0_wmode,\r\n  input  [63:0] RW0_wdata,\r\n  output [63:0] RW0_rdata\r\n);\r\n\r\n  reg [63:0] Memory[0:127]; // Smaller memory array\r\n  reg [12:0] _RW0_raddr_d0;\r\n  reg        _RW0_ren_d0;\r\n  reg        _RW0_rmode_d0;\r\n  // XOR high and low bits of the address to use all bits\r\n  wire [6:0] effective_addr = RW0_addr[6:0] ^ RW0_addr[12:7];\r\n  always @(posedge RW0_clk) begin\r\n    _RW0_raddr_d0 <= effective_addr;\r\n    _RW0_ren_d0 <= RW0_en;\r\n    _RW0_rmode_d0 <= RW0_wmode;\r\n    if (RW0_en & RW0_wmode)\r\n      Memory[effective_addr] <= RW0_wdata;\r\n  end // always @(posedge)\r\n  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 64'bx;\r\nendmodule\r\n```\r\n\r\nAfter a few minutes, I have some area and timing for a mock SRAM that should allow me to see what else is going on in this design...\r\n\r\nIf I want more aggressive timing, I can adjust the Verilog to be even simpler. Area can be scaled up and down, using the mock_area feature.\r\n\r\nAfter CTS:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e59c2ccd-b58f-4940-8c8c-96bf9286e638)\r\n\r\n", "date": "2023-12-26T22:37:53Z"}, {"author": "oharboe", "role": "assistant", "message": "So with the above approach, I can easily mock large SRAMs and I also have a way to mock the area.\r\n\r\nThis allows me to set aside the SRAM concerns to investigate what else is going on in the design and learn something interesting.\r\n\r\nSetting aside the SRAM concern, I can see a lot of logic and high fanout in the timing path for the FpPipeline in the megaboom design.\r\n\r\nWhat timing closure does this have in commercial tools at a small node? It seems like a lot to ask that PDK and improved post synthesis stages are going to get this to GHz frequencies. Could it be a synthesis problem? Perhaps this version of MegaBoom is missing a pipeline stage or two here? Could there be some structure that has to be specialized in floating point units just like SRAM must be?\r\n\r\nFrom `make DESIGN_NAME=FpPipeline gui_place`:\r\n\r\n```\r\n>>> report_checks -rise_from io_flush_pipeline -rise_through input504/A -rise_through input504/Y -rise_through wire12207/A -rise_through wire12207/Y -rise_through max_length12204/A -rise_through max_length12204/Y -rise_through fp_issue_unit/_46407_/B -fall_through fp_issue_unit/_46407_/Y -fall_through fp_issue_unit/_46408_/B -rise_through fp_issue_unit/_46408_/Y -rise_through max_length4078/A -rise_through max_length4078/Y -rise_through fp_issue_unit/_46439_/C -rise_through fp_issue_unit/_46439_/Y -rise_through fp_issue_unit/_46571_/A -fall_through fp_issue_unit/_46571_/Y -fall_through fp_issue_unit/_47883_/A -rise_through fp_issue_unit/_47883_/Y -rise_through fp_issue_unit/_47884_/B -rise_through fp_issue_unit/_47884_/Y -rise_through fp_issue_unit/_47885_/C -rise_through fp_issue_unit/_47885_/Y -rise_through fp_issue_unit/_47886_/D -rise_through fp_issue_unit/_47886_/Y -rise_through fp_issue_unit/_47887_/C -rise_through fp_issue_unit/_47887_/Y -rise_through fp_issue_unit/_47888_/C ...\r\nStartpoint: io_flush_pipeline (input port clocked by clock_vir)\r\nEndpoint: fp_issue_unit/_89827_\r\n          (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                  0.00    0.00    0.00   clock clock_vir (rise edge)\r\n                        400.00  400.00   clock network delay (ideal)\r\n                        300.00  700.00 ^ input external delay\r\n     1    0.79    0.00    0.00  700.00 ^ io_flush_pipeline (in)\r\n                                         io_flush_pipeline (net)\r\n                  0.06    0.02  700.02 ^ input504/A (BUFx2_ASAP7_75t_R)\r\n     1    4.55   17.58   15.46  715.48 ^ input504/Y (BUFx2_ASAP7_75t_R)\r\n                                         net504 (net)\r\n                 17.89    1.29  716.77 ^ wire12207/A (BUFx16f_ASAP7_75t_R)\r\n    24   53.86   28.61   18.16  734.93 ^ wire12207/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net12207 (net)\r\n                 83.92   25.50  760.43 ^ max_length12204/A (BUFx16f_ASAP7_75t_R)\r\n    32   49.26   12.98   29.13  789.57 ^ max_length12204/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net12204 (net)\r\n                220.31   69.86  859.42 ^ fp_issue_unit/_46407_/B (AOI211x1_ASAP7_75t_R)\r\n     3    3.74   59.98   45.43  904.85 v fp_issue_unit/_46407_/Y (AOI211x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44478_ (net)\r\n                 59.98    0.21  905.07 v fp_issue_unit/_46408_/B (NAND2x2_ASAP7_75t_R)\r\n    26   33.42  134.87   68.93  973.99 ^ fp_issue_unit/_46408_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44479_ (net)\r\n                134.89    1.12  975.12 ^ max_length4078/A (BUFx16f_ASAP7_75t_R)\r\n    22   31.72   20.83   33.87 1008.99 ^ max_length4078/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net4078 (net)\r\n                 22.31    2.51 1011.50 ^ fp_issue_unit/_46439_/C (AND4x2_ASAP7_75t_R)\r\n     5    7.55   36.45   46.10 1057.60 ^ fp_issue_unit/_46439_/Y (AND4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44510_ (net)\r\n                 36.56    1.15 1058.76 ^ fp_issue_unit/_46571_/A (NAND2x2_ASAP7_75t_R)\r\n     4    3.26   16.65   13.84 1072.59 v fp_issue_unit/_46571_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_44641_ (net)\r\n                 16.66    0.11 1072.70 v fp_issue_unit/_47883_/A (INVx1_ASAP7_75t_R)\r\n     2    1.33   12.37   10.21 1082.91 ^ fp_issue_unit/_47883_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45951_ (net)\r\n                 12.37    0.02 1082.93 ^ fp_issue_unit/_47884_/B (AND4x2_ASAP7_75t_R)\r\n     3    5.96   30.73   40.69 1123.62 ^ fp_issue_unit/_47884_/Y (AND4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45952_ (net)\r\n                 30.87    1.14 1124.77 ^ fp_issue_unit/_47885_/C (AND3x4_ASAP7_75t_R)\r\n     3    5.79   18.52   31.17 1155.94 ^ fp_issue_unit/_47885_/Y (AND3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45953_ (net)\r\n                 19.20    1.89 1157.83 ^ fp_issue_unit/_47886_/D (AND4x2_ASAP7_75t_R)\r\n     3    5.98   31.11   42.40 1200.23 ^ fp_issue_unit/_47886_/Y (AND4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45954_ (net)\r\n                 31.45    1.82 1202.06 ^ fp_issue_unit/_47887_/C (AND3x4_ASAP7_75t_R)\r\n     3    5.71   17.88   31.40 1233.46 ^ fp_issue_unit/_47887_/Y (AND3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45955_ (net)\r\n                 18.17    1.22 1234.68 ^ fp_issue_unit/_47888_/C (AND3x4_ASAP7_75t_R)\r\n     2    5.25   17.00   29.05 1263.73 ^ fp_issue_unit/_47888_/Y (AND3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45956_ (net)\r\n                 17.11    0.76 1264.49 ^ fp_issue_unit/_47889_/B (NAND2x2_ASAP7_75t_R)\r\n     3    3.85   15.69   11.87 1276.36 v fp_issue_unit/_47889_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45957_ (net)\r\n                 15.84    0.84 1277.19 v fp_issue_unit/_47890_/B (OR2x2_ASAP7_75t_R)\r\n     2    3.01   13.61   25.21 1302.41 v fp_issue_unit/_47890_/Y (OR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45958_ (net)\r\n                 13.61    0.09 1302.50 v fp_issue_unit/_47907_/C (OR3x4_ASAP7_75t_R)\r\n   105   99.41  170.82   89.41 1391.91 v fp_issue_unit/_47907_/Y (OR3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45975_ (net)\r\n                172.27    9.22 1401.13 v fp_issue_unit/_47909_/C (NAND3x2_ASAP7_75t_R)\r\n     4    5.43   62.45   62.61 1463.73 ^ fp_issue_unit/_47909_/Y (NAND3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_45977_ (net)\r\n                 62.45    0.14 1463.88 ^ fp_issue_unit/_47962_/A (NAND3x2_ASAP7_75t_R)\r\n     2    3.47   24.56   17.68 1481.56 v fp_issue_unit/_47962_/Y (NAND3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46030_ (net)\r\n                 24.59    0.45 1482.00 v fp_issue_unit/_47966_/B (OR3x2_ASAP7_75t_R)\r\n     3    3.30   17.68   37.03 1519.04 v fp_issue_unit/_47966_/Y (OR3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46034_ (net)\r\n                 17.73    0.51 1519.55 v fp_issue_unit/_47971_/C (OR4x2_ASAP7_75t_R)\r\n     7   20.75   71.34   71.67 1591.22 v fp_issue_unit/_47971_/Y (OR4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46039_ (net)\r\n                 71.41    1.35 1592.57 v fp_issue_unit/_47972_/A (CKINVDCx16_ASAP7_75t_R)\r\n    32   25.55   28.08   16.95 1609.51 ^ fp_issue_unit/_47972_/Y (CKINVDCx16_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46040_ (net)\r\n                 28.08    0.03 1609.55 ^ fp_issue_unit/_47975_/B (OR3x4_ASAP7_75t_R)\r\n     4    5.14   14.79   26.50 1636.05 ^ fp_issue_unit/_47975_/Y (OR3x4_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46043_ (net)\r\n                 15.26    1.43 1637.47 ^ fp_issue_unit/_47976_/B (OR2x2_ASAP7_75t_R)\r\n     2    2.90   13.93   21.14 1658.61 ^ fp_issue_unit/_47976_/Y (OR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46044_ (net)\r\n                 13.93    0.13 1658.74 ^ fp_issue_unit/_47980_/B (OR3x2_ASAP7_75t_R)\r\n     2    3.24   14.84   19.30 1678.04 ^ fp_issue_unit/_47980_/Y (OR3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46048_ (net)\r\n                 14.93    0.63 1678.68 ^ fp_issue_unit/_47985_/C (OR4x2_ASAP7_75t_R)\r\n    21   25.71   98.46   51.90 1730.57 ^ fp_issue_unit/_47985_/Y (OR4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46053_ (net)\r\n                 98.46    0.42 1730.99 ^ load_slew1306/A (BUFx16f_ASAP7_75t_R)\r\n    28   30.02   16.08   30.35 1761.34 ^ load_slew1306/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1306 (net)\r\n                 17.27    1.57 1762.91 ^ fp_issue_unit/_48140_/B (NAND2x1_ASAP7_75t_R)\r\n     2    1.81   14.47   11.73 1774.64 v fp_issue_unit/_48140_/Y (NAND2x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06668_ (net)\r\n                 14.47    0.03 1774.67 v fp_issue_unit/_48141_/B (OR3x2_ASAP7_75t_R)\r\n     3    3.52   18.24   35.07 1809.73 v fp_issue_unit/_48141_/Y (OR3x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06669_ (net)\r\n                 18.24    0.11 1809.84 v fp_issue_unit/_48142_/D (OR4x2_ASAP7_75t_R)\r\n    13   37.62  133.19   75.35 1885.19 v fp_issue_unit/_48142_/Y (OR4x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06670_ (net)\r\n                133.22    1.49 1886.68 v load_slew1217/A (BUFx16f_ASAP7_75t_R)\r\n    25   39.76   25.02   40.53 1927.21 v load_slew1217/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1217 (net)\r\n                 25.03    0.48 1927.69 v fp_issue_unit/_48144_/B (AND2x2_ASAP7_75t_R)\r\n     3    3.40   13.73   25.88 1953.57 v fp_issue_unit/_48144_/Y (AND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06672_ (net)\r\n                 13.73    0.05 1953.63 v fp_issue_unit/_48145_/B (NOR2x2_ASAP7_75t_R)\r\n     3    2.92   20.73   12.02 1965.65 ^ fp_issue_unit/_48145_/Y (NOR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06673_ (net)\r\n                 20.73    0.02 1965.66 ^ fp_issue_unit/_48146_/A2 (AOI21x1_ASAP7_75t_R)\r\n     6   10.17   53.11   27.64 1993.30 v fp_issue_unit/_48146_/Y (AOI21x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_06674_ (net)\r\n                 53.17    1.07 1994.37 v fp_issue_unit/_65458_/A (NAND2x2_ASAP7_75t_R)\r\n     7   16.17   72.15   46.53 2040.90 ^ fp_issue_unit/_65458_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_22642_ (net)\r\n                 72.97    4.40 2045.30 ^ wire1108/A (BUFx16f_ASAP7_75t_R)\r\n    30   37.30   21.35   27.72 2073.02 ^ wire1108/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1108 (net)\r\n                 75.70   23.26 2096.27 ^ fp_issue_unit/_65465_/A (NAND2x2_ASAP7_75t_R)\r\n    13   21.19   71.00   42.21 2138.48 v fp_issue_unit/_65465_/Y (NAND2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_22649_ (net)\r\n                 71.33    2.88 2141.36 v load_slew1091/A (BUFx16f_ASAP7_75t_R)\r\n    25   35.92   17.57   30.98 2172.34 v load_slew1091/Y (BUFx16f_ASAP7_75t_R)\r\n                                         net1091 (net)\r\n                 78.63   24.44 2196.78 v fp_issue_unit/_67437_/B (AO21x2_ASAP7_75t_R)\r\n     1    4.12   17.15   34.88 2231.66 v fp_issue_unit/_67437_/Y (AO21x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46219_ (net)\r\n                 17.44    1.21 2232.86 v fp_issue_unit/_89797_/A (FAx1_ASAP7_75t_R)\r\n     1    6.02  144.25  107.03 2339.89 v fp_issue_unit/_89797_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46223_ (net)\r\n                144.48    3.10 2343.00 v fp_issue_unit/_89798_/A (FAx1_ASAP7_75t_R)\r\n     1    2.72   73.82   58.15 2401.14 ^ fp_issue_unit/_89798_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46254_ (net)\r\n     1    1.06   45.86   22.62 2423.76 v fp_issue_unit/_89798_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00644_ (net)\r\n                 45.86    0.06 2423.83 v fp_issue_unit/_67461_/A (INVx1_ASAP7_75t_R)\r\n     1    2.41   25.51   20.41 2444.24 ^ fp_issue_unit/_67461_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46226_ (net)\r\n                 25.51    0.10 2444.34 ^ fp_issue_unit/_89799_/B (FAx1_ASAP7_75t_R)\r\n     1    1.65   36.10   24.28 2468.62 v fp_issue_unit/_89799_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46261_ (net)\r\n     1    0.86   37.25   19.10 2487.72 ^ fp_issue_unit/_89799_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46232_ (net)\r\n                 37.25    0.03 2487.75 ^ fp_issue_unit/_67462_/A (INVx1_ASAP7_75t_R)\r\n     1    2.56   21.51   16.75 2504.50 v fp_issue_unit/_67462_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46229_ (net)\r\n                 21.51    0.24 2504.74 v fp_issue_unit/_89800_/A (FAx1_ASAP7_75t_R)\r\n     1    1.68   39.83   26.98 2531.72 ^ fp_issue_unit/_89800_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46264_ (net)\r\n     1    0.90   25.69   17.11 2548.83 v fp_issue_unit/_89800_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46244_ (net)\r\n                 25.69    0.03 2548.86 v fp_issue_unit/_89787_/A (INVx1_ASAP7_75t_R)\r\n     1    2.56   21.35   16.40 2565.26 ^ fp_issue_unit/_89787_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46231_ (net)\r\n                 21.36    0.17 2565.43 ^ fp_issue_unit/_89803_/B (FAx1_ASAP7_75t_R)\r\n     1    2.30   44.45   26.10 2591.54 v fp_issue_unit/_89803_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46267_ (net)\r\n     1    0.78   39.67   20.18 2611.72 ^ fp_issue_unit/_89803_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46249_ (net)\r\n                 39.67    0.01 2611.73 ^ fp_issue_unit/_89786_/A (INVx1_ASAP7_75t_R)\r\n     1    1.74   17.87   14.14 2625.88 v fp_issue_unit/_89786_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46243_ (net)\r\n                 17.87    0.04 2625.92 v fp_issue_unit/_89804_/CI (FAx1_ASAP7_75t_R)\r\n     1    0.76   33.65   19.73 2645.65 ^ fp_issue_unit/_89804_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00646_ (net)\r\n     1    0.74   28.73   15.02 2660.67 v fp_issue_unit/_89804_/SN (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00645_ (net)\r\n                 28.73    0.01 2660.68 v fp_issue_unit/_67482_/A (INVx1_ASAP7_75t_R)\r\n     1    1.02   13.34   11.32 2672.00 ^ fp_issue_unit/_67482_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46248_ (net)\r\n                 13.34    0.02 2672.02 ^ fp_issue_unit/_89817_/B (HAxp5_ASAP7_75t_R)\r\n     1    0.78   21.67   12.77 2684.79 v fp_issue_unit/_89817_/CON (HAxp5_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00647_ (net)\r\n                 21.67    0.01 2684.80 v fp_issue_unit/_89769_/A (INVx1_ASAP7_75t_R)\r\n     1    2.06   17.70   13.87 2698.68 ^ fp_issue_unit/_89769_/Y (INVx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46269_ (net)\r\n                 17.70    0.03 2698.70 ^ fp_issue_unit/_89811_/A (FAx1_ASAP7_75t_R)\r\n     2    2.91   47.02   26.02 2724.72 v fp_issue_unit/_89811_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_46274_ (net)\r\n                 47.02    0.08 2724.80 v fp_issue_unit/_89814_/A (FAx1_ASAP7_75t_R)\r\n     1    1.69   43.76   33.26 2758.06 ^ fp_issue_unit/_89814_/CON (FAx1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_04309_ (net)\r\n                 43.76    0.01 2758.07 ^ fp_issue_unit/_48635_/B (XOR2x1_ASAP7_75t_R)\r\n     1    1.16   22.73   24.82 2782.89 ^ fp_issue_unit/_48635_/Y (XOR2x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_07145_ (net)\r\n                 22.73    0.02 2782.92 ^ fp_issue_unit/_48636_/B (NAND2x1_ASAP7_75t_R)\r\n     2    1.32   14.09   11.34 2794.26 v fp_issue_unit/_48636_/Y (NAND2x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_07146_ (net)\r\n                 14.09    0.02 2794.27 v fp_issue_unit/_48637_/B (OR2x2_ASAP7_75t_R)\r\n     3    2.18   11.43   23.11 2817.38 v fp_issue_unit/_48637_/Y (OR2x2_ASAP7_75t_R)\r\n                                         fp_issue_unit/_07147_ (net)\r\n                 11.43    0.05 2817.43 v fp_issue_unit/_48639_/C (OR3x1_ASAP7_75t_R)\r\n     1    0.71   10.68   24.49 2841.92 v fp_issue_unit/_48639_/Y (OR3x1_ASAP7_75t_R)\r\n                                         fp_issue_unit/_00000_ (net)\r\n                 10.68    0.01 2841.93 v fp_issue_unit/_89827_/D (DFFHQNx2_ASAP7_75t_R)\r\n                               2841.93   data arrival time\r\n\r\n                  0.00 1500.00 1500.00   clock clock (rise edge)\r\n                          0.00 1500.00   clock network delay (ideal)\r\n                        -10.00 1490.00   clock uncertainty\r\n                          0.00 1490.00   clock reconvergence pessimism\r\n                               1490.00 ^ fp_issue_unit/_89827_/CLK (DFFHQNx2_ASAP7_75t_R)\r\n                         -7.35 1482.65   library setup time\r\n                               1482.65   data required time\r\n-----------------------------------------------------------------------------\r\n                               1482.65   data required time\r\n                               -2841.93   data arrival time\r\n-----------------------------------------------------------------------------\r\n                               -1359.27   slack (VIOLATED)\r\n\r\n\r\n```\r\n ", "date": "2023-12-27T09:14:35Z"}], "date": "2023-12-26T11:06:06Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3943", "id": 3943, "title": "How to develop the \" setRC.tcl \"  file from a captable for a foreign PDK ?", "author": "faisaladilquadery", "description": "I have a foreign PDK which I want to invoke in openroad. But for that I need to develop the setRC.tcl file. How do I accurately input the resistance and capacitance for the setRC.tcl file . \r\n\r\nN.B : I have a captable for the pdk\r\nI can also generate a spef file from Innovus for the PDK", "content": [{"author": "faisaladilquadery", "role": "user", "message": "I have a foreign PDK which I want to invoke in openroad. But for that I need to develop the setRC.tcl file. How do I accurately input the resistance and capacitance for the setRC.tcl file . \r\n\r\nN.B : I have a captable for the pdk\r\nI can also generate a spef file from Innovus for the PDK", "date": "2023-09-05T04:21:21Z"}, {"author": "maliberty", "role": "assistant", "message": "@vvbandeira @luarss do we have any documentation for correlateRC ?\r\n\r\nNote that if you LEF res & cap has values you can use those without a setRC to get started.", "date": "2023-09-05T14:07:54Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@faisaladilquadery \r\nWe have a section on the `setRC.tcl` file configuration in our platform bring-up documentation.\r\nhttps://openroad-flow-scripts.readthedocs.io/en/latest/contrib/PlatformBringUp.html#setrc-configuration", "date": "2023-09-05T16:38:58Z"}, {"author": "faisaladilquadery", "role": "assistant", "message": "Thankyou! @maliberty @vvbandeira . I have used the lef file in replacement of the setRC.tcl file . But I am getting **net delay** mismatch between the same path with the same cells for Innovus and OpenRoad. Any Idea why ?", "date": "2023-09-07T03:40:38Z"}, {"author": "faisaladilquadery", "role": "assistant", "message": "Thankyou @maliberty I have used the the RCX flow you  mentioned to generate a rc tech file for my pdk and used the tech file to generate a spef in ORFS to obtain a more accurate RC.", "date": "2023-10-02T04:27:30Z"}, {"author": "b224hisl", "role": "assistant", "message": "> set_wire_rc is used to set a default layer to use when doing placement based parasitic estimation. There is no meaning to multiple layers here as there would be no way to divide up the estimate meaningfully.\r\n\r\nSo I'm confused why it needs to set jsut one layer, do you mean only placement based parasitic estimation is related to `set_wire_rc` ? If there' s no way to divide up the estimate meaningfully, the layer can be set randomly?", "date": "2023-12-16T12:57:32Z"}], "date": "2023-09-05T04:21:21Z", "category": "Configuration", "subcategory": "Setting up foreign PDK", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4269", "id": 4269, "title": "How to add new classes/structures to OpenROAD's schema?", "author": "fgaray", "description": "Hello OpenRoad devs,\r\n\r\nI am following https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3619 to implement a structure to share scan chain data between OpenROAD's components but I am blocked at an compile issue.\r\n\r\nSee: https://github.com/fgaray/OpenROAD/tree/ctl_db, path src/odb/src/codeGenerator/schema/scan\r\n\r\nI am adding 3 new *.json files: dbScanInst.json dbScanPartition.json dbScanPin.json\r\n\r\nIn dbScanPin.json I am defining an \"union\" of dbBTerm and dbITerm\r\n\r\nIn dbScanPartition.json I am trying to use dbScanPin for my \"start\" and \"stop\" fields.\r\n\r\n\r\nI am running the ./generate script in src/odb/src/codeGenerator to generate the C++ code but I am getting the following error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/fc8774d8-b742-4407-86ef-e877d347f5d3)\r\n\r\nLooks like it is trying to use dbScanPin in the private dbScanPartition.h class, but if I change it to _dbScanPin in my  dbScanPartition.json, then it fails in the public class definition in db.h.\r\n\r\nIs there an step that I am missing or maybe some config?\r\n\r\nThanks!\r\n", "content": [{"author": "fgaray", "role": "user", "message": "Hello OpenRoad devs,\r\n\r\nI am following https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3619 to implement a structure to share scan chain data between OpenROAD's components but I am blocked at an compile issue.\r\n\r\nSee: https://github.com/fgaray/OpenROAD/tree/ctl_db, path src/odb/src/codeGenerator/schema/scan\r\n\r\nI am adding 3 new *.json files: dbScanInst.json dbScanPartition.json dbScanPin.json\r\n\r\nIn dbScanPin.json I am defining an \"union\" of dbBTerm and dbITerm\r\n\r\nIn dbScanPartition.json I am trying to use dbScanPin for my \"start\" and \"stop\" fields.\r\n\r\n\r\nI am running the ./generate script in src/odb/src/codeGenerator to generate the C++ code but I am getting the following error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/fc8774d8-b742-4407-86ef-e877d347f5d3)\r\n\r\nLooks like it is trying to use dbScanPin in the private dbScanPartition.h class, but if I change it to _dbScanPin in my  dbScanPartition.json, then it fails in the public class definition in db.h.\r\n\r\nIs there an step that I am missing or maybe some config?\r\n\r\nThanks!\r\n", "date": "2023-11-15T18:46:43Z"}, {"author": "maliberty", "role": "assistant", "message": "Use dbId to store references to other db objects\r\n```\r\n       \"name\": \"start\",\r\n-      \"type\": \"dbScanPin\"\r\n+      \"type\": \"dbId<dbScanPin>\"\r\n     },\r\n     {\r\n       \"name\": \"stop\",\r\n-      \"type\": \"dbScanPin\"\r\n+      \"type\": \"dbId<dbScanPin>\"\r\n     },\r\n```", "date": "2023-11-15T22:45:11Z"}, {"author": "fgaray", "role": "assistant", "message": "I forgot to close this issue, but the answer was given by @maliberty .\r\n\r\nWriting the custom setter was the way to go when implementing this.", "date": "2023-12-14T23:30:30Z"}], "date": "2023-11-15T18:46:43Z", "category": "Build", "subcategory": "Code generation issue", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4329", "id": 4329, "title": "Design area utilization seems misleading", "author": "TanjIsGray", "description": "I realized that size of my designs is not matching \"design area\" reported.  On the GUI view I can see my design uses a rectangular space of around 24 um2 (not including the halo) but\r\n\r\n    finish report_design_area\r\n    Design area 15 u^2 60% utilization.\r\n\r\nwas in the log.  So, that seems to mean that the macros placed totaled 15 um2 of space but packed into 24 um2 of silicon.  It is useful to know both numbers but I think the size of the space inside the halo is more practical to know.  It certainly seems that space would be the most likely expectation for the meaning of \"design area\".\r\n\r\nJust calling attention to this.  Not a bug, but users could be easily misled about what it means.", "content": [{"author": "TanjIsGray", "role": "user", "message": "I realized that size of my designs is not matching \"design area\" reported.  On the GUI view I can see my design uses a rectangular space of around 24 um2 (not including the halo) but\r\n\r\n    finish report_design_area\r\n    Design area 15 u^2 60% utilization.\r\n\r\nwas in the log.  So, that seems to mean that the macros placed totaled 15 um2 of space but packed into 24 um2 of silicon.  It is useful to know both numbers but I think the size of the space inside the halo is more practical to know.  It certainly seems that space would be the most likely expectation for the meaning of \"design area\".\r\n\r\nJust calling attention to this.  Not a bug, but users could be easily misled about what it means.", "date": "2023-11-30T07:05:45Z"}, {"author": "rovinski", "role": "assistant", "message": "This is standard terminology.\r\n\"Design area\": total area consumed by instances.\r\n\"Core area\": total area in which instances can be placed.\r\n\"Die area\": the total area of the chip.\r\nDie area >= core area >= design area. Design area utilization (the 60% in the above) is also always expressed as (design area)/(core area)", "date": "2023-11-30T07:20:47Z"}, {"author": "maliberty", "role": "assistant", "message": "By 'halo' do you mean the area between the core and the die area?", "date": "2023-12-02T04:56:51Z"}], "date": "2023-11-30T07:05:45Z", "category": "Query", "subcategory": "Terminology clarification", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4325", "id": 4325, "title": "place_pins positional arguments not supported", "author": "TanjIsGray", "description": "I see from chatter here that some folks use place_pins, but it seems not to work for me, with the error message showing in the title.  My io.tcl is:\r\n-----\r\n\r\nset leftPins {}\r\nforeach port [get_ports _l_*] {\r\n    lappend leftPins [get_property $port name]\r\n}\r\n\r\nset_io_pin_constraint -region left:* -pin_names $leftPins\r\n\r\nset_io_pin_constraint -region right:* -pin_names {\r\n    _r_h_in _r_g_in _r_f_in _r_e_rot25 _r_e_rot11 _r_e_rot06 _r_e_in\r\n    _r_d_in _r_c_in _r_l_in _r_a_rot22 _r_a_rot13 _r_a_rot02 _r_a_in\r\n    _r_KW0_in\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names {\r\n    _t_aCarryIn0 _t_aCarryIn1 _t_aCpropIn\r\n    _t_eCarryIn0 _t_eCarryIn1 _t_eCarryIn2 _t_eCpropIn\r\n}\r\n\r\nset_io_pin_constraint -region bottom:* -pin_names {\r\n    _b_aCarryOut0 _b_aCarryOut1 _b_aCpropOut\r\n    _b_eCarryOut0 _b_eCarryOut1 _b_eCarryOut2 _b_eCpropOut\r\n}\r\n\r\nplace_pins -hor_layers metal4 -ver_layers metal5 -min_distance_in_tracks 4\r\n---\r\n\r\nwhich works fine until I added the place_pins command.\r\n\r\nI also used M4 and M5 for layer names (ASAP7) since those are what the openroad -gui viewer shows.\r\n\r\nIs this command blocked by something else?  Is the track-multiplier not supported?\r\nThanks!", "content": [{"author": "TanjIsGray", "role": "user", "message": "I see from chatter here that some folks use place_pins, but it seems not to work for me, with the error message showing in the title.  My io.tcl is:\r\n-----\r\n\r\nset leftPins {}\r\nforeach port [get_ports _l_*] {\r\n    lappend leftPins [get_property $port name]\r\n}\r\n\r\nset_io_pin_constraint -region left:* -pin_names $leftPins\r\n\r\nset_io_pin_constraint -region right:* -pin_names {\r\n    _r_h_in _r_g_in _r_f_in _r_e_rot25 _r_e_rot11 _r_e_rot06 _r_e_in\r\n    _r_d_in _r_c_in _r_l_in _r_a_rot22 _r_a_rot13 _r_a_rot02 _r_a_in\r\n    _r_KW0_in\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names {\r\n    _t_aCarryIn0 _t_aCarryIn1 _t_aCpropIn\r\n    _t_eCarryIn0 _t_eCarryIn1 _t_eCarryIn2 _t_eCpropIn\r\n}\r\n\r\nset_io_pin_constraint -region bottom:* -pin_names {\r\n    _b_aCarryOut0 _b_aCarryOut1 _b_aCpropOut\r\n    _b_eCarryOut0 _b_eCarryOut1 _b_eCarryOut2 _b_eCpropOut\r\n}\r\n\r\nplace_pins -hor_layers metal4 -ver_layers metal5 -min_distance_in_tracks 4\r\n---\r\n\r\nwhich works fine until I added the place_pins command.\r\n\r\nI also used M4 and M5 for layer names (ASAP7) since those are what the openroad -gui viewer shows.\r\n\r\nIs this command blocked by something else?  Is the track-multiplier not supported?\r\nThanks!", "date": "2023-11-28T22:02:39Z"}, {"author": "maliberty", "role": "assistant", "message": "You might try the recent -annealing options.  @eder-matheus any further comments?", "date": "2023-11-28T22:06:46Z"}, {"author": "maliberty", "role": "assistant", "message": "Would you include a screen shot of what you are seeing?  Note that -min_distance means pin can be that close together at a minimum, not that they will necessarily be that close together if there is extra space available.", "date": "2023-11-28T22:57:10Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@TanjIsGray Do you have a reproducible you can share regarding the minimum distance not being respected? We have a bunch of unit tests with different minimum distance values, and all seem to work properly.", "date": "2023-11-29T00:09:07Z"}, {"author": "TanjIsGray", "role": "assistant", "message": "I can share the source, make and tcl.  These are not large, a few hundred lines of verilog.", "date": "2023-11-29T01:59:15Z"}], "date": "2023-11-28T22:02:39Z", "category": "Runtime", "subcategory": "Tool behavior issue", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4287", "id": 4287, "title": "OpenRCX query", "author": "faisaladilquadery", "description": "I just want to know if OpenRCX a engine integrated in OpenRoad or is it a RC signoff tool  like Cadence Quantas ", "content": [{"author": "faisaladilquadery", "role": "user", "message": "I just want to know if OpenRCX a engine integrated in OpenRoad or is it a RC signoff tool  like Cadence Quantas ", "date": "2023-11-20T03:14:54Z"}, {"author": "maliberty", "role": "assistant", "message": "It is integrated with OR but aspires to be signoff quality.  During optimization we use estimated parasitics.", "date": "2023-11-20T03:16:46Z"}, {"author": "faisaladilquadery", "role": "assistant", "message": "thankyou @maliberty ", "date": "2023-11-24T08:33:55Z"}], "date": "2023-11-20T03:14:54Z", "category": "Query", "subcategory": "Tool functionality", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4289", "id": 4289, "title": "Disable LEF Warning Messages", "author": "abaababa", "description": "Hi all,\r\n\r\nI am trying to load custom lef/lib files for pnr, and my lef files contain some properties unsupported by openroad. I got too much warning messages from this and the unsupported properties didn't have effect on my pnr results. Is there any way to disable the LEF warning messages temporarily? I checked the documents but failed to find an option that can turn off the warnings. Sorry if I missed it from the documents.\r\n\r\nThanks in advance!\r\n\r\n", "content": [{"author": "abaababa", "role": "user", "message": "Hi all,\r\n\r\nI am trying to load custom lef/lib files for pnr, and my lef files contain some properties unsupported by openroad. I got too much warning messages from this and the unsupported properties didn't have effect on my pnr results. Is there any way to disable the LEF warning messages temporarily? I checked the documents but failed to find an option that can turn off the warnings. Sorry if I missed it from the documents.\r\n\r\nThanks in advance!\r\n\r\n", "date": "2023-11-20T21:58:57Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no method to do that currently.  No single message will print more than 1k times.", "date": "2023-11-20T22:06:15Z"}, {"author": "luarss", "role": "assistant", "message": "@maliberty  Correct me if I am wrong, but doesn't Tcl function `suppress_message` do this? \r\n\r\nEdit: i guess there's no function that achieves full suppression for all warnings, what OP requested\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/28892de3bef1af52f3371d547f752acf0af20021/test/helpers.tcl#L203\r\n\r\nCorresponding source:\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/utl/src/Logger.cpp\r\n", "date": "2023-11-21T06:07:17Z"}], "date": "2023-11-20T21:58:57Z", "category": "Configuration", "subcategory": "Warnings and messages", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4258", "id": 4258, "title": "Need help in custom cell placement since they overlap with power grip", "author": "OuDret", "description": "Hello,\r\n\r\nI'm trying to use openroad commands to place custom pdk cells but they overlap with power grid.\r\n\r\nHere in https://github.com/OuDret/my_pdk/tree/main you can see all the files I'm using. \r\n\r\nThere are also all the commands I'm running in ./flow.txt. You can simply copy-paste all the lines in flow.txt file into OpenRoad command line at once to reproduce the case. \r\n\r\nUnfortunately I'm using absolute path when loading tech and design so you may need to change it.\r\n\r\nI'm trying to simplify the flow as much as I can so I may have forgotten to run some important steps.\r\n\r\nThank you for any advice you can provide\r\n\r\n[EDIT] I forgot to show the 2 warnings that are raised when I run ```improve_placement``` which must be related to the overlap issue.\r\n```\r\n  [WARNING DPO-0201] Placement check failure during legalization.\r\n  [WARNING DPO-0381] Encountered 57 issues when orienting cells for rows.\r\n```\r\n\r\n![cell_overlap_power_grid](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/43d68ad2-28ab-4749-968d-c9cfd65a4397)\r\n![counter_design](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/849b8ffe-5426-4157-b8a2-60d43c628e38)\r\n", "content": [{"author": "OuDret", "role": "user", "message": "Hello,\r\n\r\nI'm trying to use openroad commands to place custom pdk cells but they overlap with power grid.\r\n\r\nHere in https://github.com/OuDret/my_pdk/tree/main you can see all the files I'm using. \r\n\r\nThere are also all the commands I'm running in ./flow.txt. You can simply copy-paste all the lines in flow.txt file into OpenRoad command line at once to reproduce the case. \r\n\r\nUnfortunately I'm using absolute path when loading tech and design so you may need to change it.\r\n\r\nI'm trying to simplify the flow as much as I can so I may have forgotten to run some important steps.\r\n\r\nThank you for any advice you can provide\r\n\r\n[EDIT] I forgot to show the 2 warnings that are raised when I run ```improve_placement``` which must be related to the overlap issue.\r\n```\r\n  [WARNING DPO-0201] Placement check failure during legalization.\r\n  [WARNING DPO-0381] Encountered 57 issues when orienting cells for rows.\r\n```\r\n\r\n![cell_overlap_power_grid](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/43d68ad2-28ab-4749-968d-c9cfd65a4397)\r\n![counter_design](https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/849b8ffe-5426-4157-b8a2-60d43c628e38)\r\n", "date": "2023-11-13T11:46:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Where is this process are you manually placing these cells?  Are you marking them as fixed?", "date": "2023-11-13T16:50:33Z"}, {"author": "maliberty", "role": "assistant", "message": "I tried to run flow.txt but I get in global placement:\r\n```\r\n[ERROR GRT-0126] Layers met2 and met3 have the same preferred routing direction \r\n(VERTICAL).\r\n```\r\nThis seems wrong - can you explain what the intention is?", "date": "2023-11-15T16:31:17Z"}], "date": "2023-11-13T11:46:14Z", "category": "Runtime", "subcategory": "Placement conflict", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4249", "id": 4249, "title": "Unknown layer VV while reading tech file", "author": "msingh9", "description": "I am trying to use a proprietary pdk and I hit issue when running command pin_access.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n\r\nFrom the error message, it looks like layer \"VV\" is not recognized. However, while reading tech file (earlier in the flow), It did find this layer. There are lots of warnings during tech file read but I see similar warnings for other layers too.\r\n\r\nThis is the error message I get:\r\n[WARNING DRT-0124] Via VV with unused layer VV_XX_450_450_450_450_VV will be ignored.\r\n[ERROR DRT-0129] Unknown layer VV for viarule VV_VIAGEN.\r\n\r\nThese are some of information and warnings while reading tech file.\r\n[WARNING ODB-0279] parse mismatch in layer property LEF58_TYPE for layer II_QM_BOT : \"TYPE SPECIALCUT LAYER IA QM ;\"\r\n[INFO ODB-0388] unsupported LEF58_ANTENNAGATEPLUSDIFF property for layer VV :\"ANTENNAGATEPLUSDIFF OXIDE1 5.0 ; \"\r\n\r\nMy question is -\r\nIt seems to read tech file without error at the beginning of the flow. Then why is it reading tech and libs again with the command pin_access. First time it didn't error out, but it generates error during this step.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n[INFO DRT-0149] Reading tech and libs.\r\n\r\nI have checked that layer VV is defined in the tech file.\r\n\r\nAny suggestions and ideas on what I can try to bypass this error.\r\n\r\nI am only interested in rough timing and area results after global routing.\r\n\r\n\r\n\r\n", "content": [{"author": "msingh9", "role": "user", "message": "I am trying to use a proprietary pdk and I hit issue when running command pin_access.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n\r\nFrom the error message, it looks like layer \"VV\" is not recognized. However, while reading tech file (earlier in the flow), It did find this layer. There are lots of warnings during tech file read but I see similar warnings for other layers too.\r\n\r\nThis is the error message I get:\r\n[WARNING DRT-0124] Via VV with unused layer VV_XX_450_450_450_450_VV will be ignored.\r\n[ERROR DRT-0129] Unknown layer VV for viarule VV_VIAGEN.\r\n\r\nThese are some of information and warnings while reading tech file.\r\n[WARNING ODB-0279] parse mismatch in layer property LEF58_TYPE for layer II_QM_BOT : \"TYPE SPECIALCUT LAYER IA QM ;\"\r\n[INFO ODB-0388] unsupported LEF58_ANTENNAGATEPLUSDIFF property for layer VV :\"ANTENNAGATEPLUSDIFF OXIDE1 5.0 ; \"\r\n\r\nMy question is -\r\nIt seems to read tech file without error at the beginning of the flow. Then why is it reading tech and libs again with the command pin_access. First time it didn't error out, but it generates error during this step.\r\n\r\n# Global routing\r\npin_access -bottom_routing_layer $min_routing_layer \\\r\n           -top_routing_layer $max_routing_layer\r\n[INFO DRT-0149] Reading tech and libs.\r\n\r\nI have checked that layer VV is defined in the tech file.\r\n\r\nAny suggestions and ideas on what I can try to bypass this error.\r\n\r\nI am only interested in rough timing and area results after global routing.\r\n\r\n\r\n\r\n", "date": "2023-11-10T22:25:15Z"}, {"author": "maliberty", "role": "assistant", "message": "If you only want rough results you can skip the pin_access command.  The LEF was read earlier but the interpretation is being made now and some issue is being flagged.  The exact issue is hard to say from this info.", "date": "2023-11-11T00:00:06Z"}, {"author": "msingh9", "role": "assistant", "message": "Thanks for suggestion. This enabled me to get past this point and finish global route. ", "date": "2023-11-11T02:09:06Z"}], "date": "2023-11-10T22:25:15Z", "category": "Runtime", "subcategory": "Layer parsing issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4155", "id": 4155, "title": "PPL vs PAD for IO", "author": "lustefan97", "description": "Hello,\r\n\r\nI have a question regarding the differences between the PPL and PAD tools, especially the PAD bump placement for flip chip designs. I don't really get the differences between the PPL and PAD tools when it comes to IO placed on the top metal layer, and their \"relationship\" with the GPL tool.\r\n\r\nI am right now doing some tests using different designs using the PPL tool. It is used with GPL first by placing the IO without considering GPL, then doing Global PLacement followed by a Pin PLacement after it, finishing by a final GPL. I read that it was due to some circular dependency between the two tools, so this was the way things were done. \r\nNow I am using PPL to do some 3D Face-to-Face implementation, and am using the `define_pin_shape_pattern` command to place the IO on the top metal layer.\r\n\r\nFrom what I understood PPL doesn't have/need a LEF object for the bump as it will create a metal shape in place of the pin, based off of the constraint given to the tool by the user before being routed in the subsequent steps.\r\n\r\n\r\nI am now trying to understand what the PAD tool really is about, how it differs from what PPL is and what his use case may be, but I am a bit confused when it comes to 3D interconnect.\r\n\r\nI understand that PAD is used for chip level connection, which raise a question for me (that is asked below), that requires a LEF object for top layer bumps.\r\nWhen it comes to flip chip design, the PAD tool seems to be the default candidate but something is bothering me,  it is simply that there is no pin position optimization in it as opposed to PPL (which would probably not give a minimal \"3D\" wire length), that the bump assignement is done manually, and that in the example script given in _OpenROAD/src/pad/test_ link the bumps to an IO ring which I don't think is the goal in my application.\r\n\r\nAbout the pin position optimization, I was told by @rovinski in #4061 that GPL will still do some HPWL optimization (and that the team would probably be interested in implementing 3D interconnect as part of the PPL tool), but at first sight it doesn't seem to be the most optimal way to proceed for \"3D\" routing since the assignement will be done manually. This leads me to the second question about assignment : Since I will probably need to have thousands of IOs on the top layer, manual assignment seems tedious if not even suboptimal due to the lack of automatic bump repositioning. \r\nI get that using a tool for flip-chip design would be make more sense but I must say that, when it comes to top layer bumps, I don't see really the interest in going for PAD rather than PPL\r\n\r\n\r\n\r\nMy questions thus are : \r\n\r\n0) What are the exact mechanisms that OpenROAD use to minimize wire length w.r.t. IO pins ?\r\n1) If PAD is used for chip level connections then what is the use case for PPL ?\r\n2) What are the inherent differences between PAD and PPL ?\r\n3) If PAD is the default for flip-chip design, why implementing such a thing as part of PPL ?\r\n4) Does will OpenROAD route differently when using PAD or PPL ? Especially when talking about memory usage ?\r\n5) Will the use of a LEF object in the PAD tool create a difference with regard to the pin created by PPL ? Could I use a LEF object for PPL instead to benefit from the placement optimization?\r\n6) Could we imaging eventually a flow mixing PAD and PPL, where the PPL tool is used for 3D interconnections ?\r\n\r\n\r\n", "content": [{"author": "lustefan97", "role": "user", "message": "Hello,\r\n\r\nI have a question regarding the differences between the PPL and PAD tools, especially the PAD bump placement for flip chip designs. I don't really get the differences between the PPL and PAD tools when it comes to IO placed on the top metal layer, and their \"relationship\" with the GPL tool.\r\n\r\nI am right now doing some tests using different designs using the PPL tool. It is used with GPL first by placing the IO without considering GPL, then doing Global PLacement followed by a Pin PLacement after it, finishing by a final GPL. I read that it was due to some circular dependency between the two tools, so this was the way things were done. \r\nNow I am using PPL to do some 3D Face-to-Face implementation, and am using the `define_pin_shape_pattern` command to place the IO on the top metal layer.\r\n\r\nFrom what I understood PPL doesn't have/need a LEF object for the bump as it will create a metal shape in place of the pin, based off of the constraint given to the tool by the user before being routed in the subsequent steps.\r\n\r\n\r\nI am now trying to understand what the PAD tool really is about, how it differs from what PPL is and what his use case may be, but I am a bit confused when it comes to 3D interconnect.\r\n\r\nI understand that PAD is used for chip level connection, which raise a question for me (that is asked below), that requires a LEF object for top layer bumps.\r\nWhen it comes to flip chip design, the PAD tool seems to be the default candidate but something is bothering me,  it is simply that there is no pin position optimization in it as opposed to PPL (which would probably not give a minimal \"3D\" wire length), that the bump assignement is done manually, and that in the example script given in _OpenROAD/src/pad/test_ link the bumps to an IO ring which I don't think is the goal in my application.\r\n\r\nAbout the pin position optimization, I was told by @rovinski in #4061 that GPL will still do some HPWL optimization (and that the team would probably be interested in implementing 3D interconnect as part of the PPL tool), but at first sight it doesn't seem to be the most optimal way to proceed for \"3D\" routing since the assignement will be done manually. This leads me to the second question about assignment : Since I will probably need to have thousands of IOs on the top layer, manual assignment seems tedious if not even suboptimal due to the lack of automatic bump repositioning. \r\nI get that using a tool for flip-chip design would be make more sense but I must say that, when it comes to top layer bumps, I don't see really the interest in going for PAD rather than PPL\r\n\r\n\r\n\r\nMy questions thus are : \r\n\r\n0) What are the exact mechanisms that OpenROAD use to minimize wire length w.r.t. IO pins ?\r\n1) If PAD is used for chip level connections then what is the use case for PPL ?\r\n2) What are the inherent differences between PAD and PPL ?\r\n3) If PAD is the default for flip-chip design, why implementing such a thing as part of PPL ?\r\n4) Does will OpenROAD route differently when using PAD or PPL ? Especially when talking about memory usage ?\r\n5) Will the use of a LEF object in the PAD tool create a difference with regard to the pin created by PPL ? Could I use a LEF object for PPL instead to benefit from the placement optimization?\r\n6) Could we imaging eventually a flow mixing PAD and PPL, where the PPL tool is used for 3D interconnections ?\r\n\r\n\r\n", "date": "2023-10-19T15:38:35Z"}, {"author": "maliberty", "role": "assistant", "message": "What is driving the bumps?   Usually you need an IO driver and that means you need to use pad.", "date": "2023-10-19T15:48:16Z"}, {"author": "QuantamHD", "role": "assistant", "message": "I think the biggest difference between pad and ppl is that pad tries to deal with io cells. Typically the foundry will require you to place specialized io cells that deal with esd and what not.\r\n\r\nppl does a similar pin placement, but doesn't deal with io cells. If you don't need io cells between your dies then ppl probably is the solution you should use or enhance ", "date": "2023-10-19T16:46:09Z"}], "date": "2023-10-19T15:38:35Z", "category": "Query", "subcategory": "Tool usage clarification", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4165", "id": 4165, "title": "fastroute: What is the minimum number of metal layers OpenROAD can route in?", "author": "Sleighbells64", "description": "My apologies if this is an obvious question. I am working with a fab trying to develop a new process that currently has 2 metal layers, and we were wondering if we could use OpenROAD/OpenLANE to build test chips. I was unable to find an answer in the documentation, but if it is there I would love to know where to look. Thank you for your help!", "content": [{"author": "Sleighbells64", "role": "user", "message": "My apologies if this is an obvious question. I am working with a fab trying to develop a new process that currently has 2 metal layers, and we were wondering if we could use OpenROAD/OpenLANE to build test chips. I was unable to find an answer in the documentation, but if it is there I would love to know where to look. Thank you for your help!", "date": "2023-10-23T15:05:32Z"}, {"author": "maliberty", "role": "assistant", "message": "In theory we could route in two layers but we've never tried it.  We don't have a specialized channel router.  My expectation is that we will hit some issues and have to iterate.  If the PDK is closed it will be harder to do so.", "date": "2023-10-23T15:32:18Z"}, {"author": "JackFz", "role": "assistant", "message": "I'm sure that Fastroute and TritonRoute are capable of routing on two layers. ", "date": "2023-10-29T03:34:28Z"}], "date": "2023-10-23T15:05:32Z", "category": "Query", "subcategory": "Routing capabilities", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4163", "id": 4163, "title": "[WARNING GRT-0350] Missing route to pin iregister_read/io_bypass_1_bits_data[0].", "author": "oharboe", "description": "This is for the top level of MegaBoom that I'm playing around with.\r\n\r\nIs this warning telling me that it can't find a route for the buffer tree for the pin in the warning?\r\n\r\nIt looks like this buffer tree is going from the iregister_read macro to the ALUExeUnit, which traverses Rob(reorder buffer), rename stage and the memory issue unit. The mpl2 macro placement is unfortunate here...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e3c6b965-bf83-403c-9dd5-70413735a8ca)\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2a76f06-f286-4b5a-8bc7-2fc0219bc9f8)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "This is for the top level of MegaBoom that I'm playing around with.\r\n\r\nIs this warning telling me that it can't find a route for the buffer tree for the pin in the warning?\r\n\r\nIt looks like this buffer tree is going from the iregister_read macro to the ALUExeUnit, which traverses Rob(reorder buffer), rename stage and the memory issue unit. The mpl2 macro placement is unfortunate here...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e3c6b965-bf83-403c-9dd5-70413735a8ca)\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2a76f06-f286-4b5a-8bc7-2fc0219bc9f8)\r\n", "date": "2023-10-23T05:32:30Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please respond", "date": "2023-10-23T06:06:52Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@oharboe @maliberty This warning is related to the estimate_parasitics using global route parasitics. It usually happens when a routing topology is not correctly translated to the parasitics estimation structures. I will look into the test case and fix the cause of this bug.", "date": "2023-10-23T15:13:41Z"}], "date": "2023-10-23T05:32:30Z", "category": "Bug", "subcategory": "Parasitics estimation issue", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4096", "id": 4096, "title": "Detailed Routing abort on libc.so.6", "author": "marcopoles", "description": "Hi ,\r\nI'm working on tsmc 40nm porting and the flow stops to work on detailed routing with this error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/24896919/7c4d6959-f126-4b62-940f-2b3ec59e3d26)\r\n\r\nDo you have any suggestion about the problem?\r\n\r\nThanks\r\n\r\nPS: working on not open source PDK I can't submit a testcase", "content": [{"author": "marcopoles", "role": "user", "message": "Hi ,\r\nI'm working on tsmc 40nm porting and the flow stops to work on detailed routing with this error:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/24896919/7c4d6959-f126-4b62-940f-2b3ec59e3d26)\r\n\r\nDo you have any suggestion about the problem?\r\n\r\nThanks\r\n\r\nPS: working on not open source PDK I can't submit a testcase", "date": "2023-10-05T15:57:05Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 any guesses?\r\n", "date": "2023-10-05T16:28:44Z"}, {"author": "osamahammad21", "role": "assistant", "message": "@marcopoles Could you build openroad in DEBUG mode so that I can locate exactly at which line does this happen?", "date": "2023-10-05T17:00:16Z"}, {"author": "marcopoles", "role": "assistant", "message": "Hi, here the new output:\r\n<img width=\"883\" alt=\"image\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/24896919/bcd2041d-b033-47e4-a166-9304b0c63bfc\">\r\n", "date": "2023-10-06T07:11:26Z"}, {"author": "osamahammad21", "role": "assistant", "message": "@refaay Could you start a PR to ignore via definitions that include masterslice layers in DRT?", "date": "2023-10-10T12:09:10Z"}, {"author": "refaay", "role": "assistant", "message": "Submitted PR #4149 to ignore masterslice vias in drt.\r\nPR #4149 merged.", "date": "2023-10-23T16:30:31Z"}], "date": "2023-10-05T15:57:05Z", "category": "Runtime", "subcategory": "Crash report", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4162", "id": 4162, "title": "Libfmt v8 required for conda installation", "author": "chetanyagoyal", "description": "Trying to use \r\nopenroad==2.0_10145_g0de6f5131 installed with conda gives the following error -\r\n`openroad: error while loading shared libraries: libfmt.so.8: cannot open shared object file: No such file or directory`\r\n\r\nThis error occurs only on Ubuntu20.04 because libfmt version 8 does not exist for it. \r\nAre there any workarounds to this? ", "content": [{"author": "chetanyagoyal", "role": "user", "message": "Trying to use \r\nopenroad==2.0_10145_g0de6f5131 installed with conda gives the following error -\r\n`openroad: error while loading shared libraries: libfmt.so.8: cannot open shared object file: No such file or directory`\r\n\r\nThis error occurs only on Ubuntu20.04 because libfmt version 8 does not exist for it. \r\nAre there any workarounds to this? ", "date": "2023-10-22T06:40:23Z"}, {"author": "rovinski", "role": "assistant", "message": "I don't think we host a conda installation. The installer would be from a third party and you should ask them for support.", "date": "2023-10-22T06:42:56Z"}, {"author": "maliberty", "role": "assistant", "message": "@proppy is the conda installer something you support?", "date": "2023-10-22T15:13:26Z"}, {"author": "proppy", "role": "assistant", "message": "yes, it seems they already filed an issue over at https://github.com/hdl/conda-eda/issues/360 (so feel free to close the issue here).", "date": "2023-10-22T15:18:09Z"}], "date": "2023-10-22T06:40:23Z", "category": "Installation", "subcategory": "Dependency issue", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4137", "id": 4137, "title": "OpenROAD build issue", "author": "idokoike", "description": "\r\nI've been trying to fully install OpenROAD using the` ./build_openroad.sh --local --threads 1` command but I keep getting the error\r\n```\r\n[INFO FLW-0027] Saving logs to build_openroad.log\r\n[INFO FLW-0028] ./build_openroad.sh --local --threads 1\r\n[INFO FLW-0002] Updating git submodules.\r\n[INFO FLW-0001] Using local build method. This will create binaries at 'tools/install' unless overwritten.\r\n[INFO FLW-0017] Compiling Yosys.\r\nmake: Entering directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\ncp yosys yosys-config yosys-abc yosys-filterlib yosys-smtbmc /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\nstrip -S /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-abc\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-filterlib\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys\r\ncp -r share/. /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys/.\r\nmake: Leaving directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\n[INFO FLW-0018] Compiling OpenROAD.\r\n-- OpenROAD version: v2.0-10669-g436c7801a\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- C++ Standard: 17\r\n-- C++ Standard Required: ON\r\n-- C++ Extensions: OFF\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- TCL readline library: /usr/lib/x86_64-linux-gnu/libtclreadline.so\r\n-- TCL readline header: /usr/include/x86_64-linux-gnu\r\n-- boost: 1.74.0\r\n-- spdlog: 1.9.2\r\nCMake Warning at src/CMakeLists.txt:242 (message):\r\n  spdlog: SPDLOG_FMT_EXTERNAL=ON\r\n\r\n\r\n-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \r\n-- STA version: 2.4.0\r\n-- STA git sha: 44f06c521560e803859218732255b3259de048e1\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Build CXX_FLAGS: -O3 -DNDEBUG\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- SSTA: 0\r\n-- STA executable: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/OpenROAD/src/sta/app/sta\r\nCMake Error at src/gpl/CMakeLists.txt:44 (find_package):\r\n  By not providing \"Findortools.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"ortools\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"ortools\" with any\r\n  of the following names:\r\n\r\n    ortoolsConfig.cmake\r\n    ortools-config.cmake\r\n\r\n  Add the installation prefix of \"ortools\" to CMAKE_PREFIX_PATH or set\r\n  \"ortools_DIR\" to a directory containing one of the above files.  If\r\n  \"ortools\" provides a separate development package or SDK, be sure it has\r\n  been installed.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n\r\n```\r\nI've installed or-tools using `git clone  https://github.com/google/or-tools.git` and I'm still getting the error ", "content": [{"author": "idokoike", "role": "user", "message": "\r\nI've been trying to fully install OpenROAD using the` ./build_openroad.sh --local --threads 1` command but I keep getting the error\r\n```\r\n[INFO FLW-0027] Saving logs to build_openroad.log\r\n[INFO FLW-0028] ./build_openroad.sh --local --threads 1\r\n[INFO FLW-0002] Updating git submodules.\r\n[INFO FLW-0001] Using local build method. This will create binaries at 'tools/install' unless overwritten.\r\n[INFO FLW-0017] Compiling Yosys.\r\nmake: Entering directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\ncp yosys yosys-config yosys-abc yosys-filterlib yosys-smtbmc /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\nstrip -S /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-abc\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-filterlib\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys\r\ncp -r share/. /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys/.\r\nmake: Leaving directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\n[INFO FLW-0018] Compiling OpenROAD.\r\n-- OpenROAD version: v2.0-10669-g436c7801a\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- C++ Standard: 17\r\n-- C++ Standard Required: ON\r\n-- C++ Extensions: OFF\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- TCL readline library: /usr/lib/x86_64-linux-gnu/libtclreadline.so\r\n-- TCL readline header: /usr/include/x86_64-linux-gnu\r\n-- boost: 1.74.0\r\n-- spdlog: 1.9.2\r\nCMake Warning at src/CMakeLists.txt:242 (message):\r\n  spdlog: SPDLOG_FMT_EXTERNAL=ON\r\n\r\n\r\n-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \r\n-- STA version: 2.4.0\r\n-- STA git sha: 44f06c521560e803859218732255b3259de048e1\r\n-- System name: Linux\r\n-- Compiler: GNU 11.4.0\r\n-- Build type: RELEASE\r\n-- Build CXX_FLAGS: -O3 -DNDEBUG\r\n-- Install prefix: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n-- TCL library: /usr/lib/x86_64-linux-gnu/libtcl.so\r\n-- TCL header: /usr/include/tcl/tcl.h\r\n-- SSTA: 0\r\n-- STA executable: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/OpenROAD/src/sta/app/sta\r\nCMake Error at src/gpl/CMakeLists.txt:44 (find_package):\r\n  By not providing \"Findortools.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"ortools\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"ortools\" with any\r\n  of the following names:\r\n\r\n    ortoolsConfig.cmake\r\n    ortools-config.cmake\r\n\r\n  Add the installation prefix of \"ortools\" to CMAKE_PREFIX_PATH or set\r\n  \"ortools_DIR\" to a directory containing one of the above files.  If\r\n  \"ortools\" provides a separate development package or SDK, be sure it has\r\n  been installed.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n\r\n```\r\nI've installed or-tools using `git clone  https://github.com/google/or-tools.git` and I'm still getting the error ", "date": "2023-10-16T17:52:14Z"}, {"author": "rovinski", "role": "assistant", "message": "This is better to submit as an issue in order to get a better handle on your environment.\r\n\r\nThat being said, where are you installing ortools? The default location that CMake looks for is the default paths searched by CMake's `find_package` and also `/opt/or-tools/lib64/` and `/opt/or-tools/lib/`. If it's not in one of those locations, you should either install it there, or add `--openroad-args \"ortools_DIR=path/to/your/ortools/cmake/file\"` to your script invocation.", "date": "2023-10-16T18:08:17Z"}, {"author": "idokoike", "role": "assistant", "message": "Thanks. I've added `--openroad-args \"ortools_DIR=path/to/your/ortools/cmake/file\"` to my script, and it works kind of but I'm getting another error\r\n\r\n```\r\n[INFO FLW-0027] Saving logs to build_openroad.log\r\n[INFO FLW-0028] ./build_openroad.sh --local threads 2 --openroad-args /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build\r\n[INFO FLW-0002] Updating git submodules.\r\n[INFO FLW-0001] Using local build method. This will create binaries at 'tools/install' unless overwritten.\r\n[INFO FLW-0017] Compiling Yosys.\r\nmake: Entering directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\ncp yosys yosys-config yosys-abc yosys-filterlib yosys-smtbmc /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin\r\nstrip -S /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-abc\r\nstrip /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/bin/yosys-filterlib\r\nmkdir -p /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys\r\ncp -r share/. /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/yosys/share/yosys/.\r\nmake: Leaving directory '/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/yosys'\r\n[INFO FLW-0018] Compiling OpenROAD.\r\n-- ortools version: 9.7.3002\r\n-- Build type: Release\r\n-- Build C++ library: ON\r\n-- Build Python: OFF\r\n-- Build Java: OFF\r\n-- Build .Net: OFF\r\n-- Build Flatzinc: ON\r\n-- Build LP Parser: ON\r\n-- Build standalone Glop: OFF\r\n-- Build samples: ON\r\n-- Build C++ samples: ON\r\n-- Build Python samples: OFF\r\n-- Build Java samples: OFF\r\n-- Build .Net samples: OFF\r\n-- Build examples: ON\r\n-- Build C++ examples: ON\r\n-- Build Python examples: OFF\r\n-- Build Java examples: OFF\r\n-- Build .Net examples: OFF\r\n-- Build documentation: OFF\r\n-- Install doc: OFF\r\n-- Build all dependencies: ON\r\n-- Build ZLIB: ON\r\n-- Build abseil-cpp: ON\r\n-- Build protobuf: ON\r\n-- Build re2: ON\r\n-- Build googletest: ON\r\n-- COIN-OR support: OFF\r\n-- GLPK support: OFF\r\n-- HiGHS support: OFF\r\n-- PDLP support: ON\r\n-- Build PDLP: ON\r\n-- Build eigen3: ON\r\n-- SCIP support: OFF\r\n-- CPLEX support: OFF\r\n-- XPRESS support: OFF\r\n-- C++: Build doc: OFF\r\n-- Fetching ZLIB\r\n--   Populating zlib\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/zlib-subbuild\r\n[100%] Built target zlib-populate\r\n-- Fetching ZLIB - fetched\r\n-- Fetching Abseil-cpp\r\n--   Populating absl\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/absl-subbuild\r\n[100%] Built target absl-populate\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:605 (message):\r\n  ABSL_CXX_STANDARD:\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:606 (message):\r\n  CMAKE_CXX_STANDARD: 17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:607 (message):\r\n  CMAKE_CXX_STANDARD_REQUIRED: ON\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:608 (message):\r\n  CMAKE_CXX_FLAGS:\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMakeLists.txt:86 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/absl/copts/AbseilConfigureCopts.cmake:97 (message):\r\n  ABSL_CXX_STANDARD: 17.\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:18 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:605 (message):\r\n  ABSL_CXX_STANDARD: 17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:606 (message):\r\n  CMAKE_CXX_STANDARD: 17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:607 (message):\r\n  CMAKE_CXX_STANDARD_REQUIRED: ON\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilDll.cmake:608 (message):\r\n  CMAKE_CXX_FLAGS:\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/CMake/AbseilHelpers.cmake:19 (include)\r\n  build/_deps/absl-src/CMakeLists.txt:87 (include)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:20 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:33 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:44 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:58 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:76 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:95 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:107 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:121 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:140 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:161 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:177 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:220 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:249 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:428 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:539 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:591 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:623 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/base/CMakeLists.txt:649 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/algorithm/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/algorithm/CMakeLists.txt:42 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/cleanup/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/cleanup/CMakeLists.txt:30 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:91 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:120 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:170 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:186 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:204 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:277 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:313 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:351 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:387 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:423 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:453 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:530 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:556 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:581 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:613 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:625 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:638 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:664 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:679 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:691 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/container/CMakeLists.txt:760 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:31 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:56 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:97 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:109 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/crc/CMakeLists.txt:150 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:19 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:61 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:115 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:132 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:169 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:191 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:223 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/debugging/CMakeLists.txt:285 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:18 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:34 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:54 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:75 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:96 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:113 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:133 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:151 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:174 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:199 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:224 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:250 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/flags/CMakeLists.txt:269 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/functional/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/functional/CMakeLists.txt:53 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/functional/CMakeLists.txt:81 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/hash/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/hash/CMakeLists.txt:106 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/hash/CMakeLists.txt:134 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:18 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:36 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:56 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:74 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:89 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:103 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:127 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:147 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:163 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:182 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:219 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:248 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:264 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:281 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:363 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:377 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:394 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:409 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:424 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:444 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:463 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:487 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:507 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:526 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:541 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:563 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:580 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:597 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:643 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/log/CMakeLists.txt:658 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/memory/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/meta/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/meta/CMakeLists.txt:45 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:44 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:79 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/numeric/CMakeLists.txt:89 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/profiling/CMakeLists.txt:15 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/profiling/CMakeLists.txt:40 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/profiling/CMakeLists.txt:67 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:35 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:70 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:161 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:199 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:214 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:517 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:531 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:547 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:561 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:583 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:639 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:657 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:672 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:689 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:705 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:719 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:739 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:757 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:775 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:792 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:810 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:827 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:847 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:864 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/random/CMakeLists.txt:1155 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/status/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/status/CMakeLists.txt:58 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:77 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:396 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:409 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:579 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:620 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:647 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:676 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:691 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:725 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:794 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:833 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/strings/CMakeLists.txt:866 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/synchronization/CMakeLists.txt:18 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/synchronization/CMakeLists.txt:37 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/synchronization/CMakeLists.txt:50 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/time/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/time/CMakeLists.txt:45 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/time/CMakeLists.txt:61 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:16 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:33 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:47 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:106 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:163 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:183 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:293 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:198 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:296 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/types/CMakeLists.txt:332 (absl_cc_library)\r\n\r\n\r\nCMake Warning at build/_deps/absl-src/CMake/AbseilHelpers.cmake:342 (message):\r\n  Force CXX_FLAGS flags to cxx_std_17\r\nCall Stack (most recent call first):\r\n  build/_deps/absl-src/absl/utility/CMakeLists.txt:17 (absl_cc_library)\r\n\r\n\r\n-- Fetching Abseil-cpp - fetched\r\n-- Fetching Protobuf\r\n--   Populating protobuf\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/protobuf-subbuild\r\n[100%] Built target protobuf-populate\r\n--   \r\n--   23.3.0\r\n-- Fetching Protobuf - fetched\r\n-- Fetching re2\r\n--   Populating re2\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/re2-subbuild\r\n[100%] Built target re2-populate\r\n-- Fetching re2 - fetched\r\n-- Fetching Eigen3\r\n--   Populating eigen3\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/eigen3-subbuild\r\n[100%] Built target eigen3-populate\r\n--   Performing Test COMPILER_SUPPORT_std=cpp03\r\n--   Performing Test COMPILER_SUPPORT_std=cpp03 - Success\r\n--   Standard libraries to link to explicitly: none\r\n--   Found unsuitable Qt version \"5.15.3\" from /usr/bin/qmake\r\n--   Qt4 not found, so disabling the mandelbrot and opengl demos\r\n--   Could NOT find CHOLMOD (missing: CHOLMOD_INCLUDES CHOLMOD_LIBRARIES) \r\n--   Could NOT find UMFPACK (missing: UMFPACK_INCLUDES UMFPACK_LIBRARIES) \r\n--   Could NOT find KLU (missing: KLU_INCLUDES KLU_LIBRARIES) \r\n--   Could NOT find SuperLU (missing: SUPERLU_INCLUDES SUPERLU_LIBRARIES SUPERLU_VERSION_OK) (Required is at least version \"4.0\")\r\n--   A version of Pastix has been found but pastix_nompi.h does not exist in the include directory. Because Eigen tests require a version without MPI, we disable the Pastix backend.\r\n--   \r\n--   Configured Eigen 3.4.0\r\n--   \r\n--   Available targets (use: make TARGET):\r\n--   ---------+--------------------------------------------------------------\r\n--   Target   |   Description\r\n--   ---------+--------------------------------------------------------------\r\n--   install  | Install Eigen. Headers will be installed to:\r\n--            |     <CMAKE_INSTALL_PREFIX>/<INCLUDE_INSTALL_DIR>\r\n--            |   Using the following values:\r\n--            |     CMAKE_INSTALL_PREFIX: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/tools/install/OpenROAD\r\n--            |     INCLUDE_INSTALL_DIR:  include/eigen3\r\n--            |   Change the install location of Eigen headers using:\r\n--            |     cmake . -DCMAKE_INSTALL_PREFIX=yourprefix\r\n--            |   Or:\r\n--            |     cmake . -DINCLUDE_INSTALL_DIR=yourdir\r\n--   doc      | Generate the API documentation, requires Doxygen & LaTeX\r\n--   blas     | Build BLAS library (not the same thing as Eigen)\r\n--   uninstall| Remove files installed by the install target\r\n--   ---------+--------------------------------------------------------------\r\n--   \r\n-- Fetching Eigen3 - fetched\r\n-- Fetching googletest\r\n--   Populating googletest\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/googletest-subbuild\r\n[100%] Built target googletest-populate\r\n-- Fetching googletest - fetched\r\n-- Found long size: 8\r\n-- Found long long size: 8\r\n-- Found int64_t size: 8\r\n-- Found unsigned long size: 8\r\n-- Found unsigned long long size: 8\r\n-- Found uint64_t size: 8\r\n-- Found int * size: 8\r\n-- Adding proto path: $<BUILD_INTERFACE:/home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build/_deps/protobuf-src/src>\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/knapsack.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/knapsack.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/simple_knapsack_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/algorithms/samples/simple_knapsack_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_linear_sum_assignment.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_linear_sum_assignment.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_min_flow.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/assignment_min_flow.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/balance_min_flow.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/balance_min_flow.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_max_flow_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_max_flow_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_min_cost_flow_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/graph/samples/simple_min_cost_flow_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/glop/samples/simple_glop_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/glop/samples/simple_glop_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/cp_is_fun_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/cp_is_fun_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/minimal_jobshop_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/minimal_jobshop_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nqueens_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nqueens_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nurses_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/nurses_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/rabbits_and_pheasants_cp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/rabbits_and_pheasants_cp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_cp_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_cp_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_ls_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_ls_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_routing_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/simple_routing_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_circuit_board.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_circuit_board.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities_routes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_cities_routes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_distance_matrix.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/tsp_distance_matrix.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_breaks.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_breaks.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_capacity.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_capacity.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_drop_nodes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_drop_nodes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_global_span.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_global_span.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_initial_routes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_initial_routes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_fifo.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_fifo.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_lifo.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_pickup_delivery_lifo.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_resources.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_resources.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_routes.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_routes.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_solution_callback.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_solution_callback.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_starts_ends.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_starts_ends.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_time_windows.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_time_windows.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_with_time_limit.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrp_with_time_limit.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrptw_store_solution_data.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/constraint_solver/samples/vrptw_store_solution_data.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_groups_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_groups_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_task_sizes_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_task_sizes_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_teams_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/assignment_teams_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/basic_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/basic_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/bin_packing_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/bin_packing_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/integer_programming_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/integer_programming_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/linear_programming_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/linear_programming_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/mip_var_array.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/mip_var_array.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/multiple_knapsack_mip.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/multiple_knapsack_mip.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_lp_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_lp_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_mip_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/simple_mip_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/stigler_diet.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/linear_solver/samples/stigler_diet.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/pdlp/samples/simple_pdlp_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/pdlp/samples/simple_pdlp_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_groups_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_groups_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_task_sizes_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_task_sizes_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_teams_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assignment_teams_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assumptions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/assumptions_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/binpacking_problem_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/binpacking_problem_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/bool_or_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/bool_or_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/channeling_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/channeling_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/copy_model_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/copy_model_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_is_fun_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_is_fun_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_sat_example.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/cp_sat_example.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/earliness_tardiness_cost_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/earliness_tardiness_cost_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/interval_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/interval_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/literal_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/literal_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/minimal_jobshop_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/minimal_jobshop_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/multiple_knapsack_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/multiple_knapsack_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/no_overlap_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/no_overlap_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/non_linear_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/non_linear_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nqueens_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nqueens_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nurses_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/nurses_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/optional_interval_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/optional_interval_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/rabbits_and_pheasants_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/rabbits_and_pheasants_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/ranking_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/ranking_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/reified_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/reified_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/schedule_requests_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/schedule_requests_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/search_for_all_solutions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/search_for_all_solutions_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/simple_sat_program.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/simple_sat_program.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solution_hinting_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solution_hinting_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_and_print_intermediate_solutions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_and_print_intermediate_solutions_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_with_time_limit_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/solve_with_time_limit_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/step_function_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/step_function_sample_sat.cc: ...DONE\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/stop_after_n_solutions_sample_sat.cc: ...\r\n-- Configuring sample /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/ortools/sat/samples/stop_after_n_solutions_sample_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/constraint_programming_cp.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/constraint_programming_cp.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/costas_array_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/costas_array_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cryptarithm_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cryptarithm_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrp_disjoint_tw.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrp_disjoint_tw.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_resources.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_resources.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_stop_times_and_resources.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/cvrptw_with_stop_times_and_resources.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/flow_api.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/flow_api.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/golomb_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/golomb_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/integer_programming.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/integer_programming.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_assignment_api.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_assignment_api.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_programming.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_programming.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_solver_protocol_buffers.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/linear_solver_protocol_buffers.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_sequence_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_sequence_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_square_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/magic_square_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/max_flow.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/max_flow.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/min_cost_flow.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/min_cost_flow.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/nqueens.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/nqueens.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/qap_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/qap_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/random_tsp.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/random_tsp.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/slitherlink_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/slitherlink_sat.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/uncapacitated_facility_location.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/uncapacitated_facility_location.cc: ...DONE\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/variable_intervals_sat.cc: ...\r\n-- Configuring example /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/cpp/variable_intervals_sat.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/bug_fz1.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/bug_fz1.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/cpp11_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/cpp11_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/forbidden_intervals_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/forbidden_intervals_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/init_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/init_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue1303.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue1303.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue173.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue173.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue57.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/issue57.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/lp_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/lp_test.cc: ...DONE\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/min_max_test.cc: ...\r\n-- Configuring test /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/examples/tests/min_max_test.cc: ...DONE\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ikenna/Work/vlsi/tools/OpenROAD-flow-scripts/or-tools/build\r\ngmake: Makefile: No such file or directory\r\ngmake: *** No rule to make target 'Makefile'.  Stop.\r\n\r\n```", "date": "2023-10-17T09:35:42Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@idokoike, please file a GitHub Issue and fill out our form which includes you environment and OS, also include which steps did you take, e.g., did you run the DependencyInstaller.sh? If not, any reason why?", "date": "2023-10-19T11:30:29Z"}], "date": "2023-10-16T17:52:14Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4061", "id": 4061, "title": "How does OpenROAD computes the number of possible locations for IO's ?", "author": "lustefan97", "description": "Hello,\r\n\r\nI have a question to know how does OpenROAD computes the possible IO pin locations, when placed on the top-most metal layer. I use the ASAP7 PDK, I already routed a \"hello world\" design using the ibex core which has 264 IO pins. Now I want to test a bit the capabilities of OpenROAD and start doing increasingly bigger designs. \r\n\r\nRight now I have a design that has 4100 IO pins to place on the top layer. The die size is 20um x 20um more or less which, since I want to place the IO's on the Pad Layer whose track pitch is 0.08um, would give me more or less 62 tracks on which I can place my pins (mind you I place the pins with a minimum width of 0.32um). The M9 metal layer also has a track pitch of 0.08, so I could think that I would also have 62 tracks  on which I could have a pin routed (on top). This would give me 62 x 62 = 3844 potential pin locations with this die size, but the tool give me the following error : \r\n\r\n`[ERROR PPL-0024] Number of IO pins (4100) exceeds maximum number of available positions (788).`\r\n\r\nWhich is far less than what I expect, so my questions are as follows : \r\n\r\n1. How does OpenROAD compute those available positions ?\r\n2. Could those locations be linked to an oversight/mistake in my synthesis script ?\r\n3. If I am mistaken in the way to compute the \"potential location\", how does one compute it properly based of the design size (number of cells/die area) ?", "content": [{"author": "lustefan97", "role": "user", "message": "Hello,\r\n\r\nI have a question to know how does OpenROAD computes the possible IO pin locations, when placed on the top-most metal layer. I use the ASAP7 PDK, I already routed a \"hello world\" design using the ibex core which has 264 IO pins. Now I want to test a bit the capabilities of OpenROAD and start doing increasingly bigger designs. \r\n\r\nRight now I have a design that has 4100 IO pins to place on the top layer. The die size is 20um x 20um more or less which, since I want to place the IO's on the Pad Layer whose track pitch is 0.08um, would give me more or less 62 tracks on which I can place my pins (mind you I place the pins with a minimum width of 0.32um). The M9 metal layer also has a track pitch of 0.08, so I could think that I would also have 62 tracks  on which I could have a pin routed (on top). This would give me 62 x 62 = 3844 potential pin locations with this die size, but the tool give me the following error : \r\n\r\n`[ERROR PPL-0024] Number of IO pins (4100) exceeds maximum number of available positions (788).`\r\n\r\nWhich is far less than what I expect, so my questions are as follows : \r\n\r\n1. How does OpenROAD compute those available positions ?\r\n2. Could those locations be linked to an oversight/mistake in my synthesis script ?\r\n3. If I am mistaken in the way to compute the \"potential location\", how does one compute it properly based of the design size (number of cells/die area) ?", "date": "2023-10-01T14:31:46Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please help", "date": "2023-10-02T03:33:31Z"}, {"author": "rovinski", "role": "assistant", "message": "I don't know how the pin capacity is calculated exactly, but I know that the pin placer only works on edges of the die, not across an area. The total pins on the top layer would be around the perimeter, i.e. 62 * 4 = 248.\r\nBut, usually PPL does not want to place pins on edges that do not correspond to the preferred direction of that layer. PAD layers may or may not have a preferred direction. The other pins in the 788 reported may be coming from other layers along the edge of the die.\r\n\r\nBut anyways, you are probably looking at the wrong tool. You want to be looking at the [PAD tool](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/pad/README.md) which is meant for bump placement on flip-chip designs, which is much closer to what you are trying to do.", "date": "2023-10-02T05:39:36Z"}, {"author": "maliberty", "role": "assistant", "message": "We support pins over the top of the core area through define_pin_shape_pattern.  The number of pins locations will be determined by the region and the x/y step given.  If you need to actually place bumps at specific locations that is different than pin placement.  What is your goal?", "date": "2023-10-02T17:16:52Z"}], "date": "2023-10-01T14:31:46Z", "category": "Query", "subcategory": "Pin placement", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4062", "id": 4062, "title": "Openroad compatibility with multi vt cells and mmmc", "author": "faisaladilquadery", "description": "Can openroad work with multi VT cells ( HVT , LVT , SVT ) and swap between them in a single run ? \r\nalso can openroad work with MultiModeMulti Corner File (mmmc) ?", "content": [{"author": "faisaladilquadery", "role": "user", "message": "Can openroad work with multi VT cells ( HVT , LVT , SVT ) and swap between them in a single run ? \r\nalso can openroad work with MultiModeMulti Corner File (mmmc) ?", "date": "2023-10-02T04:24:06Z"}, {"author": "maliberty", "role": "assistant", "message": "OR can swap between VT cells.  OR supports multi-corner but not multi-mode STA.", "date": "2023-10-02T04:54:31Z"}, {"author": "rovinski", "role": "assistant", "message": "> can openroad work with MultiModeMulti Corner File (mmmc) ?\r\n\r\nIf you are asking about MMMC files from commercial vendors, those are proprietary formats which we don't support. We support multi-corner analysis as mentioned. You can look in the [OpenSTA manual](https://github.com/The-OpenROAD-Project/OpenSTA/blob/master/doc/OpenSTA.pdf) to find the relevant commands.", "date": "2023-10-02T05:46:04Z"}], "date": "2023-10-02T04:24:06Z", "category": "Query", "subcategory": "Tool compatibility", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3846", "id": 3846, "title": "Does TritonRoute support all design rules in  ISPD 2014/2015 tech files?", "author": "liangrj2014", "description": "We wonder whether TritonRoute support all design rules in ISPD 2014/2015 tech files (https://www.ispd.cc/contests/14/web/benchmarks.html)? Example design rules are as follows:\r\n\r\n1. PROPERTY LEF57_MINSTEP \"MINSTEP 0.100 MAXEDGES 1 ;\" ;\r\n2. MINIMUMCUT 2 WIDTH 0.400 ;\r\n3. MINENCLOSEDAREA 0.30 ;\r\n4. PROPERTY LEF57_SPACING \"SPACING 0.13 PARALLELOVERLAP ;\u201d;\r\n", "content": [{"author": "liangrj2014", "role": "user", "message": "We wonder whether TritonRoute support all design rules in ISPD 2014/2015 tech files (https://www.ispd.cc/contests/14/web/benchmarks.html)? Example design rules are as follows:\r\n\r\n1. PROPERTY LEF57_MINSTEP \"MINSTEP 0.100 MAXEDGES 1 ;\" ;\r\n2. MINIMUMCUT 2 WIDTH 0.400 ;\r\n3. MINENCLOSEDAREA 0.30 ;\r\n4. PROPERTY LEF57_SPACING \"SPACING 0.13 PARALLELOVERLAP ;\u201d;\r\n", "date": "2023-08-11T15:35:04Z"}, {"author": "maliberty", "role": "assistant", "message": "We test with ispd 18&19 but not those.  2 is only relevant for pdn and I know we support 3.  @osamahammad21 would you check on 1 & 4", "date": "2023-08-11T16:27:43Z"}, {"author": "refaay", "role": "assistant", "message": "We currently parse for LEF58 rules. We don't parse LEF57 (by looking at /src/odb/src/lefin/lefin.cpp and /src/drt/src/io/io.cpp).\r\nI will start a PR for parsing LEF57.\r\n\r\nAlso, we don't support PARALLELOVERLAP option for LEF58_SPACING in drt according to io.cpp:\r\n\r\n```\r\ncase odb::dbTechLayerCutSpacingRule::CutSpacingType::PARALLELOVERLAP:\r\n        logger_->warn(utl::DRT,\r\n                      260,\r\n                      \"Unsupported LEF58_SPACING rule for layer {} of type \"\r\n                      \"PARALLELOVERLAP.\",\r\n                      layer->getName());\r\n        break;\r\n```\r\n\r\nWe support MAXEDGES for LEF58_MINSTEP as in io.cpp:\r\n\r\n```\r\nfor (auto rule : layer->getTechLayerMinStepRules()) {\r\n    auto con = make_unique<frLef58MinStepConstraint>();\r\n    con->setMinStepLength(rule->getMinStepLength());\r\n    con->setMaxEdges(rule->isMaxEdgesValid() ? rule->getMaxEdges() : -1);\r\n    con->setMinAdjacentLength(\r\n        rule->isMinAdjLength1Valid() ? rule->getMinAdjLength1() : -1);\r\n    con->setEolWidth(rule->isNoBetweenEol() ? rule->getEolWidth() : -1);\r\n    tmpLayer->addLef58MinStepConstraint(con.get());\r\n    tech_->addUConstraint(std::move(con));\r\n  }\r\n```", "date": "2023-08-15T15:24:01Z"}, {"author": "maliberty", "role": "assistant", "message": "We could add support for new rules if there is strong interest", "date": "2023-08-16T03:24:15Z"}, {"author": "refaay", "role": "assistant", "message": "Hi @liangrj2014 , we added support for PROPERTY LEF57_MINSTEP & PROPERTY LEF57_SPACING.\r\nAlso, support for PARALLELOVERLAP will be added soon.", "date": "2023-08-29T17:11:19Z"}, {"author": "refaay", "role": "assistant", "message": "@liangrj2014 PARALLELOVERLAP is now supported for LEF57_SPACING &LEF58_SPACING properties.", "date": "2023-09-24T22:23:55Z"}], "date": "2023-08-11T15:35:04Z", "category": "Query", "subcategory": "Design rule support", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/4001", "id": 4001, "title": "I have some trouble when running Openroad tools for foreign pdk.", "author": "OuDret", "description": "Hello, I have been reading documentation and trying stuff with given pdks for about two weeks. My goal was to run OpenRoadFlowScripts but, since there is a lot of stuff, I\u2019ve took its makefile, config files and scripts and just extracted the openroad commands that I really need, so I can exactly know what args and what files i need and create them. Also running the commands 1 by 1 alongside GUI application helps me understanding what\u2019s going on.\r\n\r\nWhen calling the commands tho, I had some issues i could not solve. If you have an idea of any of the following problems I'm facing or any advice let me know.\r\n\r\n**1. I didn\u2019t manage to initialize floorplan with custom die area. It doesn\u2019t matter which values I use as die_are or core_area, it just doesn\u2019t work properly.** \r\n\r\nWhen I run something like the command below, having stdSite size defined as 400 by 400 um it just does nothing. The verilog file provided is a simple inverter already synthesized using yosys into a single NAND cell which size is set in .lef as 200 by 200. \r\n\r\n<img width=\"368\" alt=\"Screenshot 2023-09-15 101107\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/3e31cb25-5394-40b2-86be-92df69e3e751\">\r\n\r\n\r\nMeanwhile, if I just let openroad to decide what size to give it just works for small core utilization value, which kinda makes sense.\r\n\r\n<img width=\"356\" alt=\"Screenshot 2023-09-15 101209\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/e4fb9b00-9224-44a5-8771-2688296f0bf6\">\r\n\r\n\r\nDo you think I\u2019m forgetting any step? The commands I run before getting to that point are the following:\r\n\r\n```\r\nread_liberty /path/lib/NandCellLibrary.lib\r\nread_lef /path/lef/NandCellLibrary.tech.lef\r\nread_lef /path/lef/NandCellLibrary.macro.lef  \r\nread_verilog /path//inverter.v\r\nlink_design inverter\r\nread_sdc /path/constraint.sdc\r\n\r\ninitialize_floorplan -die_area {0 0 10000 10000} -core_area {1000 1000 5000 5000} -site stdSite\r\n```\r\n\r\n**2. I have no macros stored in odb despite having them declared in lef/NandCellLibrary.macro.lef**  \r\n\r\nIf I just use utilization_area **floorplan_initialization** and keep running the following commands all seems to be working properly\r\n\r\n```\r\nmake_tracks met1 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met2 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met3 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nremove_buffers\r\nplace_pins -hor_layer met2 -ver_layer met3 -random\r\nglobal_placement -density 0.5 -pad_left 0 -pad_right 0\r\n```\r\n\r\n<img width=\"343\" alt=\"Screenshot 2023-09-15 101442\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/5367aa8f-4e66-4fe4-97b1-a0e7fed6f10d\">\r\n\r\nuntil I try to run macro placement\r\n\r\n<img width=\"350\" alt=\"Screenshot 2023-09-15 101654\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/35713305-ea34-4e1e-b481-b7402269ea8e\">\r\n\r\nthe error raised means that when running the following tcl procedure it has not found any macro\r\n```\r\nproc find_macros {} {\r\n  set macros \"\"\r\n\r\n  set db [ord::get_db]\r\n  set block [[$db getChip] getBlock]\r\n  foreach inst [$block getInsts] {\r\n\tset inst_master [$inst getMaster]\r\n\r\n\t# BLOCK means MACRO cells\r\n\tif { [string match [$inst_master getType] \"BLOCK\"] } {\r\n  \tappend macros \" \" $inst\r\n\t}\r\n  }\r\n  return $macros\r\n}\r\n```\r\n\r\nthe thing is that I have the NAND macro and another one called FILL defined in my .lefs and .lib . Then why could it be that there is no macro in db ?\r\n\r\n**Some things to be said.**\r\nWhen running  **read_liberty**, it prints 1 into terminal. Does it mean that there\u2019s an error? It seems I can keep running things. If so, is there any way to properly debug it?\r\nIt also happens if I run **check_status** command after reading all input files, which I didn\u2019t even find in documentation, so I just ignored it.\r\n\r\nAgain, if you had any idea or advice of what I\u2019m doing wrong, if I skipt some important step, etc. let me know, please.\r\n\r\nIf i manage to make it work i will try to post the whole flow command by command. It may help someone someday\r\n\r\nThank you.\r\n\r\n", "content": [{"author": "OuDret", "role": "user", "message": "Hello, I have been reading documentation and trying stuff with given pdks for about two weeks. My goal was to run OpenRoadFlowScripts but, since there is a lot of stuff, I\u2019ve took its makefile, config files and scripts and just extracted the openroad commands that I really need, so I can exactly know what args and what files i need and create them. Also running the commands 1 by 1 alongside GUI application helps me understanding what\u2019s going on.\r\n\r\nWhen calling the commands tho, I had some issues i could not solve. If you have an idea of any of the following problems I'm facing or any advice let me know.\r\n\r\n**1. I didn\u2019t manage to initialize floorplan with custom die area. It doesn\u2019t matter which values I use as die_are or core_area, it just doesn\u2019t work properly.** \r\n\r\nWhen I run something like the command below, having stdSite size defined as 400 by 400 um it just does nothing. The verilog file provided is a simple inverter already synthesized using yosys into a single NAND cell which size is set in .lef as 200 by 200. \r\n\r\n<img width=\"368\" alt=\"Screenshot 2023-09-15 101107\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/3e31cb25-5394-40b2-86be-92df69e3e751\">\r\n\r\n\r\nMeanwhile, if I just let openroad to decide what size to give it just works for small core utilization value, which kinda makes sense.\r\n\r\n<img width=\"356\" alt=\"Screenshot 2023-09-15 101209\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/e4fb9b00-9224-44a5-8771-2688296f0bf6\">\r\n\r\n\r\nDo you think I\u2019m forgetting any step? The commands I run before getting to that point are the following:\r\n\r\n```\r\nread_liberty /path/lib/NandCellLibrary.lib\r\nread_lef /path/lef/NandCellLibrary.tech.lef\r\nread_lef /path/lef/NandCellLibrary.macro.lef  \r\nread_verilog /path//inverter.v\r\nlink_design inverter\r\nread_sdc /path/constraint.sdc\r\n\r\ninitialize_floorplan -die_area {0 0 10000 10000} -core_area {1000 1000 5000 5000} -site stdSite\r\n```\r\n\r\n**2. I have no macros stored in odb despite having them declared in lef/NandCellLibrary.macro.lef**  \r\n\r\nIf I just use utilization_area **floorplan_initialization** and keep running the following commands all seems to be working properly\r\n\r\n```\r\nmake_tracks met1 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met2 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nmake_tracks met3 -x_offset 10 -x_pitch 10 -y_offset 10 -y_pitch 10\r\nremove_buffers\r\nplace_pins -hor_layer met2 -ver_layer met3 -random\r\nglobal_placement -density 0.5 -pad_left 0 -pad_right 0\r\n```\r\n\r\n<img width=\"343\" alt=\"Screenshot 2023-09-15 101442\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/5367aa8f-4e66-4fe4-97b1-a0e7fed6f10d\">\r\n\r\nuntil I try to run macro placement\r\n\r\n<img width=\"350\" alt=\"Screenshot 2023-09-15 101654\" src=\"https://github.com/The-OpenROAD-Project/OpenROAD/assets/74424277/35713305-ea34-4e1e-b481-b7402269ea8e\">\r\n\r\nthe error raised means that when running the following tcl procedure it has not found any macro\r\n```\r\nproc find_macros {} {\r\n  set macros \"\"\r\n\r\n  set db [ord::get_db]\r\n  set block [[$db getChip] getBlock]\r\n  foreach inst [$block getInsts] {\r\n\tset inst_master [$inst getMaster]\r\n\r\n\t# BLOCK means MACRO cells\r\n\tif { [string match [$inst_master getType] \"BLOCK\"] } {\r\n  \tappend macros \" \" $inst\r\n\t}\r\n  }\r\n  return $macros\r\n}\r\n```\r\n\r\nthe thing is that I have the NAND macro and another one called FILL defined in my .lefs and .lib . Then why could it be that there is no macro in db ?\r\n\r\n**Some things to be said.**\r\nWhen running  **read_liberty**, it prints 1 into terminal. Does it mean that there\u2019s an error? It seems I can keep running things. If so, is there any way to properly debug it?\r\nIt also happens if I run **check_status** command after reading all input files, which I didn\u2019t even find in documentation, so I just ignored it.\r\n\r\nAgain, if you had any idea or advice of what I\u2019m doing wrong, if I skipt some important step, etc. let me know, please.\r\n\r\nIf i manage to make it work i will try to post the whole flow command by command. It may help someone someday\r\n\r\nThank you.\r\n\r\n", "date": "2023-09-15T08:30:16Z"}, {"author": "maliberty", "role": "assistant", "message": "What is the size of stdSite?  Is this a PDK you can share or is it proprietary?\r\n\r\nDo you have any instances of the macro in your netlist?", "date": "2023-09-15T15:11:43Z"}, {"author": "maliberty", "role": "assistant", "message": "```\r\nSITE stdSite\r\n  SYMMETRY Y ;\r\n  CLASS CORE ;\r\n  SIZE 500 BY 500 ;\r\nEND stdSite\r\n```\r\nis a huge site (500um x 500um) - I'm guessing that is a mistake though it doesn't explain the problem.", "date": "2023-09-18T20:24:47Z"}, {"author": "maliberty", "role": "assistant", "message": "Your LEF is missing the units for \"  DATABASE MICRONS \\<val\\>;\".  There is a bug when this is unspecified that I'll fix but you should set it (the LEF default value is very old).", "date": "2023-09-18T20:46:40Z"}], "date": "2023-09-15T08:30:16Z", "category": "Runtime", "subcategory": "Floorplan initialization issue", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3974", "id": 3974, "title": "Scaling the detailed router to handle circuits with 50 million cells", "author": "liangrj2014", "description": "Any ideas in scaling the detailed router to handle circuits with 50 million cells? The memory footprint and runtime will be serious concerns. Blows are suggestions from ChatGPT :) \r\n\r\n1.\tParallelization: Leverage parallel processing techniques to distribute the routing tasks across multiple CPU cores or GPUs. Multithreading and GPU acceleration can significantly speed up the routing process.\r\n2.\tHierarchical Routing: Implement hierarchical routing techniques that break down the routing problem into smaller, more manageable subproblems. This reduces the complexity of routing large circuits.\r\n3.\tIncremental Routing: Instead of routing the entire circuit in one go, use incremental routing where you route smaller sections of the circuit at a time. This can improve efficiency and reduce memory requirements.\r\n4.\tAdvanced Algorithms: Explore advanced routing algorithms that are optimized for large-scale circuits. Some algorithms are specifically designed to handle massive designs efficiently.\r\n5.\tMemory Management: Optimize memory usage by employing data structures and algorithms that reduce memory overhead. Use memory-efficient representations of the circuit.\r\n6.\tDistributed Computing: Consider distributed computing approaches where the routing task is distributed across multiple machines or nodes in a cluster. This can further speed up routing for large circuits.\r\n7.\tMachine Learning: Investigate the use of machine learning techniques to predict and guide the routing process. Machine learning can help in making routing decisions more efficiently.\r\n8.\tResource-Aware Routing: Develop routing algorithms that are aware of available resources (e.g., routing tracks, vias) and can make intelligent decisions to optimize routing.\r\n9.\tAlgorithmic Improvements: Continuously research and implement algorithmic improvements and optimizations specific to global and detailed routing for large-scale circuits.\r\n10.\tHardware Acceleration: Explore the use of specialized hardware accelerators, such as FPGA-based routers, to handle the routing tasks efficiently.\r\n11.\tCircuit Abstraction: Utilize abstraction techniques to reduce the complexity of the circuit during routing without sacrificing the quality of the final solution.\r\n12.\tMemory Hierarchy: Optimize the use of cache and memory hierarchies to minimize data access latencies during the routing process.\r\n13.\tBenchmarking and Profiling: Regularly benchmark and profile the routing tool to identify performance bottlenecks and areas for improvement.\r\n14.\tUser Guidance: Provide options for users to guide the router's behavior, allowing them to make trade-offs between runtime and routing quality.\r\n15.\tIncremental Updates: Implement mechanisms for incremental updates, allowing users to modify parts of the design without rerouting the entire circuit.\r\n", "content": [{"author": "liangrj2014", "role": "user", "message": "Any ideas in scaling the detailed router to handle circuits with 50 million cells? The memory footprint and runtime will be serious concerns. Blows are suggestions from ChatGPT :) \r\n\r\n1.\tParallelization: Leverage parallel processing techniques to distribute the routing tasks across multiple CPU cores or GPUs. Multithreading and GPU acceleration can significantly speed up the routing process.\r\n2.\tHierarchical Routing: Implement hierarchical routing techniques that break down the routing problem into smaller, more manageable subproblems. This reduces the complexity of routing large circuits.\r\n3.\tIncremental Routing: Instead of routing the entire circuit in one go, use incremental routing where you route smaller sections of the circuit at a time. This can improve efficiency and reduce memory requirements.\r\n4.\tAdvanced Algorithms: Explore advanced routing algorithms that are optimized for large-scale circuits. Some algorithms are specifically designed to handle massive designs efficiently.\r\n5.\tMemory Management: Optimize memory usage by employing data structures and algorithms that reduce memory overhead. Use memory-efficient representations of the circuit.\r\n6.\tDistributed Computing: Consider distributed computing approaches where the routing task is distributed across multiple machines or nodes in a cluster. This can further speed up routing for large circuits.\r\n7.\tMachine Learning: Investigate the use of machine learning techniques to predict and guide the routing process. Machine learning can help in making routing decisions more efficiently.\r\n8.\tResource-Aware Routing: Develop routing algorithms that are aware of available resources (e.g., routing tracks, vias) and can make intelligent decisions to optimize routing.\r\n9.\tAlgorithmic Improvements: Continuously research and implement algorithmic improvements and optimizations specific to global and detailed routing for large-scale circuits.\r\n10.\tHardware Acceleration: Explore the use of specialized hardware accelerators, such as FPGA-based routers, to handle the routing tasks efficiently.\r\n11.\tCircuit Abstraction: Utilize abstraction techniques to reduce the complexity of the circuit during routing without sacrificing the quality of the final solution.\r\n12.\tMemory Hierarchy: Optimize the use of cache and memory hierarchies to minimize data access latencies during the routing process.\r\n13.\tBenchmarking and Profiling: Regularly benchmark and profile the routing tool to identify performance bottlenecks and areas for improvement.\r\n14.\tUser Guidance: Provide options for users to guide the router's behavior, allowing them to make trade-offs between runtime and routing quality.\r\n15.\tIncremental Updates: Implement mechanisms for incremental updates, allowing users to modify parts of the design without rerouting the entire circuit.\r\n", "date": "2023-09-12T02:34:04Z"}, {"author": "maliberty", "role": "assistant", "message": "If the goal is detailed routing then you could look at the work we have done for distributed detailed routing.  It doesn't solve the memory concern but it does allow you to apply a lot more CPU to the runtime.", "date": "2023-09-12T04:09:28Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 would you run (or have Ahmed run) bsg_chip and mempool_group from [ISPD2024_benchmarks](https://drive.google.com/drive/u/2/folders/1afrsbeS_KuSeHEVfuQOuLWPuuZqlDVlw) on a 96-core machine on GCP to get a runtime & memory baseline.  Also run with the distributed router to see how much it helps with runtime as you have before.", "date": "2023-09-12T15:52:09Z"}, {"author": "osamahammad21", "role": "assistant", "message": "bsg_chip:\r\n\r\n- Machine: 96-CPU 360GB RAM\r\n- Total RUNTIME: 04:14:16\r\n- Peak Memory: 24.5GB\r\n- Pin Access:\r\n  - [INFO DRT-0267] cpu time = 18:12:07, elapsed time = 00:33:37, memory = 8956.00 (MB), peak = 9547.98 (MB)\r\n- Detailed Routing:\r\n  - [INFO DRT-0267] cpu time = 80:21:46, elapsed time = 03:26:59, memory = 19989.62 (MB), peak = 24497.96 (MB)\r\n- Converged After 57 Iterations\r\n- Did not set a min/max routing layer", "date": "2023-09-13T17:57:03Z"}], "date": "2023-09-12T02:34:04Z", "category": "Runtime", "subcategory": "Performance scalability", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3619", "id": 3619, "title": "DFT: Storing scan chain information in odb", "author": "fgaray", "description": "Hello everyone,\r\n\r\nTo support drawing scan chains in OpenROAD in the gui and CTL ([Core Test Language](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626)) parser/generator we need to make the scan info available in odb. Here I describe a DB schema to represent CTLs in odb.\r\n\r\n## Objective\r\n\r\n* Make scan chains available to the gui to be able to highlight scan structures and display information related to scan.\r\n* Provide a common source of true for other commands to query and find scan structures on the design.\r\n* Provide support for a future parser for CTLs files.\r\n\r\n## Out of scope\r\n\r\n* Parsing and writing a CTL file at this time.\r\n* Handling test patterns.\r\n\r\n## CTLs\r\n\r\nCTLs are files based on the [STIL standard](https://grouper.ieee.org/groups/1450/dot1/p1450.1-D14.pdf) that allow us to share information between DFT tools for optimizations and interoperability between different vendors. They describe the internal scan structures and they are useful too to share information between internal commands inside OpenROAD, like scan insertion and the GUI.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/b513ec9c-4575-45c4-bac0-0401ab164da2)\r\n\r\nSource: CTL for Test Information of Digital ICs, Rohit Kapur\r\n\r\n**The schema described here is not a 1:1 map of a CTL file but should be enough to create one or to store the information coming from a CTL.**\r\n\r\n## dbScanChain\r\n\r\n* name: string\r\n* length: uint\r\n* cells: list\\<dbInst\\>\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* scanClock: dbScanPin\r\n* scanEnable: dbScanPin\r\n* testMode: string\r\n* partitions: list\\<dbScanPartition\\>\r\n* scanInsts: list\\<dbScanInst\\>\r\n\r\n## dbScanPin\r\n\r\nWrapper to handle either dbBTerm or dbITerm:\r\n\r\n* bterm: dbBTerm\r\n* iterm: dbITerm\r\n\r\n## dbScanPartition\r\n\r\n* start: dbScanPin\r\n* stop: dbScanPin\r\n* name: string\r\n\r\n## dbScanInst\r\n\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* bits: uint\r\n* type: enum [OneBit, ShiftRegister, BlackBox]\r\n\r\n\r\n## Flow\r\n\r\nAt the end of *insert_dft* we will be storing the scan chain information into odb using the created dbCTL object. The gui will be able to query this information and display it. dbScanChain will be attached to the dbBlock that contains the scan chains that are inside it.\r\n\r\n\r\n## Open Questions\r\n\r\n* Where can I add a new dbObject (dbCTL) to dbBlock? \r\n* How can I represent maps (will std::map work?) string-> dbObject in the json db format?\r\n* I am creating a wrapper for dbBTerm and dbITerm for cases where the scan pins are not coming from the block, is there any way to handle this in the json db format? \r\n\r\n", "content": [{"author": "fgaray", "role": "user", "message": "Hello everyone,\r\n\r\nTo support drawing scan chains in OpenROAD in the gui and CTL ([Core Test Language](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626)) parser/generator we need to make the scan info available in odb. Here I describe a DB schema to represent CTLs in odb.\r\n\r\n## Objective\r\n\r\n* Make scan chains available to the gui to be able to highlight scan structures and display information related to scan.\r\n* Provide a common source of true for other commands to query and find scan structures on the design.\r\n* Provide support for a future parser for CTLs files.\r\n\r\n## Out of scope\r\n\r\n* Parsing and writing a CTL file at this time.\r\n* Handling test patterns.\r\n\r\n## CTLs\r\n\r\nCTLs are files based on the [STIL standard](https://grouper.ieee.org/groups/1450/dot1/p1450.1-D14.pdf) that allow us to share information between DFT tools for optimizations and interoperability between different vendors. They describe the internal scan structures and they are useful too to share information between internal commands inside OpenROAD, like scan insertion and the GUI.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/1619948/b513ec9c-4575-45c4-bac0-0401ab164da2)\r\n\r\nSource: CTL for Test Information of Digital ICs, Rohit Kapur\r\n\r\n**The schema described here is not a 1:1 map of a CTL file but should be enough to create one or to store the information coming from a CTL.**\r\n\r\n## dbScanChain\r\n\r\n* name: string\r\n* length: uint\r\n* cells: list\\<dbInst\\>\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* scanClock: dbScanPin\r\n* scanEnable: dbScanPin\r\n* testMode: string\r\n* partitions: list\\<dbScanPartition\\>\r\n* scanInsts: list\\<dbScanInst\\>\r\n\r\n## dbScanPin\r\n\r\nWrapper to handle either dbBTerm or dbITerm:\r\n\r\n* bterm: dbBTerm\r\n* iterm: dbITerm\r\n\r\n## dbScanPartition\r\n\r\n* start: dbScanPin\r\n* stop: dbScanPin\r\n* name: string\r\n\r\n## dbScanInst\r\n\r\n* scanIn: dbScanPin\r\n* scanOut: dbScanPin\r\n* bits: uint\r\n* type: enum [OneBit, ShiftRegister, BlackBox]\r\n\r\n\r\n## Flow\r\n\r\nAt the end of *insert_dft* we will be storing the scan chain information into odb using the created dbCTL object. The gui will be able to query this information and display it. dbScanChain will be attached to the dbBlock that contains the scan chains that are inside it.\r\n\r\n\r\n## Open Questions\r\n\r\n* Where can I add a new dbObject (dbCTL) to dbBlock? \r\n* How can I represent maps (will std::map work?) string-> dbObject in the json db format?\r\n* I am creating a wrapper for dbBTerm and dbITerm for cases where the scan pins are not coming from the block, is there any way to handle this in the json db format? \r\n\r\n", "date": "2023-07-14T21:21:09Z"}, {"author": "fgaray", "role": "assistant", "message": "Hi @maliberty , who do you think is the right person to review this? Specially the open questions at the end.\r\n\r\nThanks!", "date": "2023-07-20T16:27:46Z"}, {"author": "maliberty", "role": "assistant", "message": "Scan chain is used in both CTL and in DEF.  Can dbScanChain accommodate both or do we need to consider having two classes?  If the later, how would you suggest naming them ?", "date": "2023-08-02T20:06:48Z"}, {"author": "maliberty", "role": "assistant", "message": "Looking at DEF:\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/6a7a39c4-e9b0-44e5-8beb-0fe450c7928d)\r\n\r\nIt looks like the dbScanPartition needs a way to store MAXBITS.  \r\n\r\nEach element of the chain also has a BITS field which seems hard to represent here.  Perhaps we need a dbScanInst?\r\n\r\nHow would you infer FLOATING or ORDERED from the design?", "date": "2023-08-02T23:21:57Z"}, {"author": "fgaray", "role": "assistant", "message": "Hi @maliberty ,\r\n\r\nDo you think we are ready to start the implementation?\r\n\r\nThanks!,\r\nFelipe", "date": "2023-08-09T23:13:53Z"}, {"author": "QuantamHD", "role": "assistant", "message": "LGTM. Thanks for the contirbution @fgaray ", "date": "2023-09-15T17:08:21Z"}], "date": "2023-07-14T21:21:09Z", "category": "Feature Request", "subcategory": "Scan chain representation", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3953", "id": 3953, "title": "Odd looking placement density in designs/nangate45/gcd", "author": "oharboe", "description": "Run `make designs/nangate45/gcd/config.mk &&  make designs/nangate45/gcd/config.mk gui_final` and enable placement heat map.\r\n\r\nThis looks odd. There is less going on in the top and right edges, but it still \"looks wrong\" to me.\r\n\r\nThoughts?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/532929ca-34bd-4bce-b3b2-df547ff91e26)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Run `make designs/nangate45/gcd/config.mk &&  make designs/nangate45/gcd/config.mk gui_final` and enable placement heat map.\r\n\r\nThis looks odd. There is less going on in the top and right edges, but it still \"looks wrong\" to me.\r\n\r\nThoughts?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/532929ca-34bd-4bce-b3b2-df547ff91e26)\r\n", "date": "2023-09-06T05:25:04Z"}, {"author": "maliberty", "role": "assistant", "message": "It does look a bit odd.  @AcKoucher can you take a look?", "date": "2023-09-06T15:20:11Z"}, {"author": "AcKoucher", "role": "assistant", "message": "With nets being draw it's a bit hard to see. I just ran master in nangate45/gcd and as far as I see, everything looks ok.\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/104802710/28693f96-c91d-4b92-a1af-4985741156c5)\r\n\r\n\r\n", "date": "2023-09-06T17:23:50Z"}, {"author": "AcKoucher", "role": "assistant", "message": "I just realized in the discussion name it says Placement Density, but in your image we see Routing Congestion. ", "date": "2023-09-06T17:27:02Z"}], "date": "2023-09-06T05:25:04Z", "category": "Runtime", "subcategory": "Visualization issue", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3955", "id": 3955, "title": "`-balance_levels`", "author": "kareefardi", "description": "`-balance_levels` is not documented. What is does this flag do and what are the uses of it?\r\nEdit: \r\nMore context: It is a flag for `clock_tree_synthesis` command ", "content": [{"author": "kareefardi", "role": "user", "message": "`-balance_levels` is not documented. What is does this flag do and what are the uses of it?\r\nEdit: \r\nMore context: It is a flag for `clock_tree_synthesis` command ", "date": "2023-09-06T14:36:02Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@luarss\r\ndid we miss this flag?", "date": "2023-09-06T14:46:12Z"}, {"author": "maliberty", "role": "assistant", "message": "When you have a non-register in the clock tree (eg clock-gate or inverter) then it attempts to ensure the are similar number of levels in the tree across that object.  The idea is captured in this image\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/eddb3913-086a-4c3f-8744-7a3cadc90543)\r\n", "date": "2023-09-06T15:30:54Z"}], "date": "2023-09-06T14:36:02Z", "category": "Query", "subcategory": "Tool usage", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3939", "id": 3939, "title": "Possible summary of changes format", "author": "vvbandeira", "description": "While discussion #3856 has leaned to whether there should be a release and how frequent it should be, this discussion thread is to help guide the format and the process we would use to do such releases. We are considering using an automated way to generate \"release notes\" or at least a summary of recent changes. One proposed way to achieve this is to use PR titles and \"Merge commit\" messages. We would define and enforce a style of PR title, e.g., `[<TYPE>] <TOOL>: <SUMMARY>` where `[FEAT] drt: added shiny router cmd`. While `<TOOL>` is well defined (i.e., any module under `src/third-party` and `<SUMMARY>` will depend on the PR, what would be the most relevant values `<TYPE>` to include and their definition? As a starter point:\r\n\r\n- `[FEAT]` or `[NEW]`: for when we add new features, either in the form of Tcl/Python API changes -- e.g., new commands or flags.\r\n- `[DOCS]` or `[DOC]`: for documentation only changes.\r\n- `[BUGF]` or `[FIX]`: when fixing bugs or issues.\r\n- `[UPGR]` or `[ENH]`: upgrade/enhance -- not very sure about this, but it was what I thought with 4/3 letters to keep similar to above, mostly a self-imposed restriction, open to feedback.\r\n\r\n\r\ncc/ @maliberty @dralabeing @luarss @rovinski @QuantamHD ", "content": [{"author": "vvbandeira", "role": "user", "message": "While discussion #3856 has leaned to whether there should be a release and how frequent it should be, this discussion thread is to help guide the format and the process we would use to do such releases. We are considering using an automated way to generate \"release notes\" or at least a summary of recent changes. One proposed way to achieve this is to use PR titles and \"Merge commit\" messages. We would define and enforce a style of PR title, e.g., `[<TYPE>] <TOOL>: <SUMMARY>` where `[FEAT] drt: added shiny router cmd`. While `<TOOL>` is well defined (i.e., any module under `src/third-party` and `<SUMMARY>` will depend on the PR, what would be the most relevant values `<TYPE>` to include and their definition? As a starter point:\r\n\r\n- `[FEAT]` or `[NEW]`: for when we add new features, either in the form of Tcl/Python API changes -- e.g., new commands or flags.\r\n- `[DOCS]` or `[DOC]`: for documentation only changes.\r\n- `[BUGF]` or `[FIX]`: when fixing bugs or issues.\r\n- `[UPGR]` or `[ENH]`: upgrade/enhance -- not very sure about this, but it was what I thought with 4/3 letters to keep similar to above, mostly a self-imposed restriction, open to feedback.\r\n\r\n\r\ncc/ @maliberty @dralabeing @luarss @rovinski @QuantamHD ", "date": "2023-09-04T18:15:29Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't think of it as \"summary of recent changes\" as we still don't plan to do releases.  <TOOL> is also optional as some changes may span multiple tools though that should be less common.", "date": "2023-09-04T21:32:22Z"}, {"author": "rovinski", "role": "assistant", "message": "I like the spirit, but I can foresee a few issues:\r\n\r\n1. A PR might span multiple tools, in which case it's hard to accommodate the format\r\n2. A PR might implement a feature only partially, in which case it's not ready for full use yet\r\n3. A PR might span multiple types (e.g. both feature and enhancement).\r\n4. If we want this scheme to stick, we will likely need a bot to enforce it or at least remind PR authors\r\n\r\nAs such,\r\n\r\n* I think that enhancement and feature should probably just be one tag. I think PRs end up being both too often to distinguish\r\n* We need some sort of mechanism or identifying a feature as not ready for general use yet.", "date": "2023-09-06T04:06:07Z"}], "date": "2023-09-04T18:15:29Z", "category": "Feature Request", "subcategory": "Release process enhancement", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3931", "id": 3931, "title": "about the meaning of frBlockObjectEnum", "author": "gilgamsh", "description": "in src/frBaseTypes.h , there is a enum class called frBlockObjectEnum, and it has lots of types. I want to know the prefix meanings. Such as `frc`,`drc`,`tac`,`gcc`", "content": [{"author": "gilgamsh", "role": "user", "message": "in src/frBaseTypes.h , there is a enum class called frBlockObjectEnum, and it has lots of types. I want to know the prefix meanings. Such as `frc`,`drc`,`tac`,`gcc`", "date": "2023-08-31T06:02:17Z"}, {"author": "maliberty", "role": "assistant", "message": "The c is for constant.  fr = base types, dr = detailed router, ta = track assignment, gc = drc  (these correspond to the subdirs of src/).\r\n", "date": "2023-08-31T14:05:06Z"}, {"author": "gilgamsh", "role": "assistant", "message": "Thank you very much", "date": "2023-09-05T08:21:52Z"}], "date": "2023-08-31T06:02:17Z", "category": "Query", "subcategory": "Code understanding", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3589", "id": 3589, "title": "how to fix metal spacing DRCs", "author": "gkamendje", "description": "After 64 iterations DRT stopped on my design a generated a DRC report. It turns out that most of the DRC are related to METAL1 spacing  (with net VSS) and Metal SpacingTableTw. The design is not very congested so I wonder why the tool could not fix these rules. Could it be that I am missing something here (maybe something in my platform definition)? Is there a way to fix these violations? \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/af73acfe-92fb-4590-baaf-31be8548e95e)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/4ed7f795-fef7-4d49-9f78-76b85c9cae37)\r\n\r\n", "content": [{"author": "gkamendje", "role": "user", "message": "After 64 iterations DRT stopped on my design a generated a DRC report. It turns out that most of the DRC are related to METAL1 spacing  (with net VSS) and Metal SpacingTableTw. The design is not very congested so I wonder why the tool could not fix these rules. Could it be that I am missing something here (maybe something in my platform definition)? Is there a way to fix these violations? \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/af73acfe-92fb-4590-baaf-31be8548e95e)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/56942214/4ed7f795-fef7-4d49-9f78-76b85c9cae37)\r\n\r\n", "date": "2023-07-08T04:13:11Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you provide a test case?  ", "date": "2023-07-08T04:28:06Z"}, {"author": "maliberty", "role": "assistant", "message": "You have very wide METAL1 power stripes:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/ec146977-bcb3-4725-8140-4bef3c0137ef)\r\n\r\nThe pin is less than the min space (0.19 < 0.23) from the stripe so there is always going to be a DRC error here.   You need to adjust your PDN definition to be resolve this.", "date": "2023-09-05T04:01:19Z"}], "date": "2023-07-08T04:13:11Z", "category": "Bug", "subcategory": "DRC violation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3881", "id": 3881, "title": "Comparing ASAP7 and sky130hd with respect to ALU operations", "author": "oharboe", "description": "The [mock-alu](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/src/mock-alu) allows studying the speed and area of various typical ALU operations.\r\n\r\nThe mock-alu has two 64 bit inputs and one 64 bit output. The inputs and outputs are registered within the mock-alu. This is to have clear boundary conditions when studying the guts of the mock-alu.\r\n\r\nThe mock-alu implements a number of operations and variants of these operations to study the area and minimum clock period for these operations.\r\n\r\nThe operations fall into a couple of categories:\r\n\r\n- *add, subtract and compare*: ADD, SUB, SETCC_EQ(equal), SETCC_NE (not equal), SETCC_LT (less than), SETT_LE (less than or equal), SETCC_ULT (unsigned less than), SETCC_ULE(unsigned less than or equal)\r\n- *barrel shifter*: SHR(logical shift right), SRA(arithmetic shift right), SHL(shift left)\r\n- *bitwise logic*: OR(bitwise or), AND(bitwise and), XOR(bitwise xor)\r\n- *multiplication*: 64 bit multiply. There are various algorithms used, default Han Carlson. The implementation is PDK specific and comes from https://github.com/antonblanchard/vlsiffra/\r\n- *multiplexor*: MUX1..8. This is not really an ALU operation. All that is happening here is that bits from the input as selected using a mux and put into the output. This allows studying the performance of the mux that sits before the output of an ALU, which is selecting between the various supported operations.\r\n\r\nNext, the mock-alu allows implementing any combination of these operations. This allows implementing an ALU that only supports the shift operations, which can be labelled \"SHR,SHL,SRA\". This shift operation only mock-alu has a single shared barrelshifter. Similarly, a bitwise logic only mock-alu, can be labelled \"OR,AND,XOR\".\r\n\r\nAt this point, we can plot various mock-alu implementations for ASAP7 and sky130hd:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b9234684-43f4-4a74-98dd-81cf8b74f9ce)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/fefae238-58ed-4bfe-a307-780046acdb83)\r\n\r\nHere 8,16,32 and 64 wide ADD operations are plotted:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f4a837e6-700c-4436-81ac-221bdfafdb57)\r\n\r\nVarious multiplication algorithms for 64 bit multiplication, 4 pipeline stages:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/0a8d6518-5999-4d18-87fa-38a13857764f)\r\n\r\nPlotting Han Carlson multiply algorithm with 8, 16, 32 and 64 bit bit width:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97fb01d7-e535-4578-9fe9-cdb80a4e945f)\r\n\r\nThoughts?", "content": [{"author": "oharboe", "role": "user", "message": "The [mock-alu](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/src/mock-alu) allows studying the speed and area of various typical ALU operations.\r\n\r\nThe mock-alu has two 64 bit inputs and one 64 bit output. The inputs and outputs are registered within the mock-alu. This is to have clear boundary conditions when studying the guts of the mock-alu.\r\n\r\nThe mock-alu implements a number of operations and variants of these operations to study the area and minimum clock period for these operations.\r\n\r\nThe operations fall into a couple of categories:\r\n\r\n- *add, subtract and compare*: ADD, SUB, SETCC_EQ(equal), SETCC_NE (not equal), SETCC_LT (less than), SETT_LE (less than or equal), SETCC_ULT (unsigned less than), SETCC_ULE(unsigned less than or equal)\r\n- *barrel shifter*: SHR(logical shift right), SRA(arithmetic shift right), SHL(shift left)\r\n- *bitwise logic*: OR(bitwise or), AND(bitwise and), XOR(bitwise xor)\r\n- *multiplication*: 64 bit multiply. There are various algorithms used, default Han Carlson. The implementation is PDK specific and comes from https://github.com/antonblanchard/vlsiffra/\r\n- *multiplexor*: MUX1..8. This is not really an ALU operation. All that is happening here is that bits from the input as selected using a mux and put into the output. This allows studying the performance of the mux that sits before the output of an ALU, which is selecting between the various supported operations.\r\n\r\nNext, the mock-alu allows implementing any combination of these operations. This allows implementing an ALU that only supports the shift operations, which can be labelled \"SHR,SHL,SRA\". This shift operation only mock-alu has a single shared barrelshifter. Similarly, a bitwise logic only mock-alu, can be labelled \"OR,AND,XOR\".\r\n\r\nAt this point, we can plot various mock-alu implementations for ASAP7 and sky130hd:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b9234684-43f4-4a74-98dd-81cf8b74f9ce)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/fefae238-58ed-4bfe-a307-780046acdb83)\r\n\r\nHere 8,16,32 and 64 wide ADD operations are plotted:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f4a837e6-700c-4436-81ac-221bdfafdb57)\r\n\r\nVarious multiplication algorithms for 64 bit multiplication, 4 pipeline stages:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/0a8d6518-5999-4d18-87fa-38a13857764f)\r\n\r\nPlotting Han Carlson multiply algorithm with 8, 16, 32 and 64 bit bit width:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/97fb01d7-e535-4578-9fe9-cdb80a4e945f)\r\n\r\nThoughts?", "date": "2023-08-20T09:26:49Z"}, {"author": "maliberty", "role": "assistant", "message": "Its interesting that the various multiply algorithms have the same delay (excluding ripple).\r\n\r\nI don't see a MULT for sky130", "date": "2023-08-20T14:12:30Z"}, {"author": "oharboe", "role": "assistant", "message": "Here are the `vlsi-adder` algorith, excluding ripple that was ca. 2000+ ps. It would have made the graph harder to read:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/07c8e764-81d1-48fe-858a-39175a1d3c68)\r\n", "date": "2023-08-21T17:31:48Z"}, {"author": "maliberty", "role": "assistant", "message": "Do all your runs end in negative slack at the end of the cts & the complete flow?  Once we reach zero slack we stop optimizing.", "date": "2023-08-21T17:34:41Z"}, {"author": "maliberty", "role": "assistant", "message": "One thing worth noting is that asap7 doesn't have a full or half adder cells in the library (sky130 does).", "date": "2023-08-21T20:46:50Z"}, {"author": "mithro", "role": "assistant", "message": "BTW Have you seen Teo's spreadsheet @ https://docs.google.com/spreadsheets/d/1pTGzZo5XYU7iuUryxorfzJwNuE9rM3le5t44wmLohy4/edit#gid=126548956 ?", "date": "2023-08-21T23:31:43Z"}, {"author": "mithro", "role": "assistant", "message": "BTW I would love to get a similar spreadsheet to Teo's for GF180MCU and ASAP7 too. \r\n\r\nSadly, Teo got distracted by the mathematical theory and then was stolen by NVIDIA before he could get to that.", "date": "2023-08-22T21:47:32Z"}, {"author": "tspyrou", "role": "assistant", "message": "@oharboe did you try using set_clock_uncertainty to force the slack to be negative and make the tool work harder.\r\nAs @maliberty mentioned optimization will stop once timing passes. ", "date": "2023-08-23T15:25:48Z"}, {"author": "mithro", "role": "assistant", "message": "@oharboe - Any chance you could do a write up of what you discovered?", "date": "2023-09-01T22:40:33Z"}, {"author": "oharboe", "role": "assistant", "message": "> There is a lot bunch of back and forth and I'm unclear what the final results are (and exactly how you produced them).\r\n> \r\n> Various questions include;\r\n> \r\n> * How do I reproduce your results and graphs?\r\n\r\nRun this script:  https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/master/flow/designs/src/mock-alu/plot-area-min-clock-period.py\r\n\r\nSome tinkering required.\r\n\r\n> * What settings did you end up using and why did you end up using those settings? (Particularly around making the tool work harder?)\r\n\r\nI didn't study how to make a best possible ALU, I was only interested the relationship between the ALU operations.\r\n\r\n> * How do the various implementations compare? Do you understand why the compare this way?\r\n\r\nThe various implementation of additions and multiplications?\r\n\r\nIt is a mystery why there is essentially no difference between multiplication implementation clock periods...\r\n\r\n> * How do SKY130 and ASAP7 compare in the end here?\r\n\r\nThe lessons learned on the relative size and speed of ALU operations appear to be much the same with SKY130 and ASAP7. Which is surprising. Ca. 15 years separate them...\r\n\r\n> * Do the relative \"positions\" between the implementations hold across SKY130 and ASAP7?\r\n\r\nPretty much.\r\n\r\n> * What was the most interesting / unexpected thing you discovered?\r\n\r\nThat relative size and speed of simple ALU operations are essentially unchanged across process nodes.\r\n\r\nAlso, it would appear that if an ALU operation is 200ps on x86 7nm, yielding 5GHz, then one could choose to divide clock period of ASAP7+OpenROAD by 4 for simple ALU operations when one models and decide to take the lessons learned and apply them to architectural exploration. Further choose to treat the speed of ASAP7+OpenROAD as not terribly important in terms of making architctural choices as the choices will be the same if everything is optimized.\r\n\r\nBy this I mean that to drive your architctural exploration, as a [first order approximation](https://en.wikipedia.org/wiki/Order_of_approximation#First-order), write the RTL in an idiomatic way, run them through ASAP7+OpenROAD and if your design is 4x the desired clock period, your design isn't completely off.\r\n\r\nNobody who have information on commercial tools and PDKs can challenge me here. :-) Not because I'm right, but because PDKs and commercial tools are under strict NDAs... This also explains why there are a lot of unsaid things in this thread...\r\n\r\n> Writing it up as a nice coherent blog post would be pretty awesome but totally understand if you do nt have the time to do so.\r\n\r\nAgreed. At least I summarize a bit here. I'm happy to hear that there are some that are interested in this.\r\n\r\nPerhaps you would like to write a blog-post using the script above?\r\n", "date": "2023-09-03T08:22:17Z"}], "date": "2023-08-20T09:26:49Z", "category": "Query", "subcategory": "Usage question", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3856", "id": 3856, "title": "Release scheme", "author": "Blebowski", "description": "Hello,\r\n\r\nI see there is a lot of development going on. I am wondering whether there are any opinions/plans about introducing a release scheme (e.g. once a month or quarterly, or after major feature changes / enhancements) ? Maintaining something like `CHANGES.md` or `NEWS.md` would be also very handy. Once user does not follow the development almost day-to-day, it is easy to get lost.\r\n\r\n", "content": [{"author": "Blebowski", "role": "user", "message": "Hello,\r\n\r\nI see there is a lot of development going on. I am wondering whether there are any opinions/plans about introducing a release scheme (e.g. once a month or quarterly, or after major feature changes / enhancements) ? Maintaining something like `CHANGES.md` or `NEWS.md` would be also very handy. Once user does not follow the development almost day-to-day, it is easy to get lost.\r\n\r\n", "date": "2023-08-14T19:14:12Z"}, {"author": "QuantamHD", "role": "assistant", "message": "I would be in favor of a news/changes file, but I'm a little bit more hesitant on slow releases. \r\n\r\nPrecision Innovations provides a daily release https://github.com/Precision-Innovations/OpenROAD/releases which I feel like is a good cadence given the fast pace of developement.\r\n\r\nI think slower stable releases make sense when you have an entity that's willing to cherry pick bug fixes into older releases, which we don't have yet. I feel like if we embraced a slower release process at this point in time the net result would be people stuck with bugs for longer.\r\n\r\n", "date": "2023-08-14T19:41:59Z"}, {"author": "mithro", "role": "assistant", "message": "A monthly newsletter might be a good way to let people see the improvements.", "date": "2023-08-14T19:49:12Z"}, {"author": "dralabeing", "role": "assistant", "message": "Daily releases are good to get the best , updated and stable versions especially with prebuilt binaries from the Precision releases.  I do think it would be good to add some sort of updates that are not yet in the docs or clear in the commit histories. For e.g mpl2 works well but this is not yet reflected in the default flow or docs but can be flagged in an Updates.md for users to try out --somewhat like a beta version. Similar any new features that are ready for use (partitioning, pin swapping,  gate cloning etc.) can be mentioned along with a special release tag .\r\nMonthly update frequency should be good as in special cases when an update is done sooner on a major feature.", "date": "2023-08-17T21:32:46Z"}, {"author": "rovinski", "role": "assistant", "message": "I really like the [KLayout release notes](https://www.klayout.de/development.html) which have a list of PRs in that release (with hyperlinks) and a one-line description, as well as classifying as a bugfix or enhancement. It doesn't sound like we're moving from daily releases, but it could form a semi-automatically generated monthly newsletter or similar.", "date": "2023-08-31T07:19:37Z"}], "date": "2023-08-14T19:14:12Z", "category": "Feature Request", "subcategory": "Release management", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3915", "id": 3915, "title": "Slack histogram horizontal axis", "author": "oharboe", "description": "What is the horizontal axis?\r\n\r\nI would have thought picoseconds, but the horizontal axis is not labeled...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9b5c6daa-25f6-42b7-adf4-e11c30bf3234)\r\n\r\nThis is from `make gui_place` in #3910", "content": [{"author": "oharboe", "role": "user", "message": "What is the horizontal axis?\r\n\r\nI would have thought picoseconds, but the horizontal axis is not labeled...\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9b5c6daa-25f6-42b7-adf4-e11c30bf3234)\r\n\r\nThis is from `make gui_place` in #3910", "date": "2023-08-28T05:19:11Z"}, {"author": "oharboe", "role": "assistant", "message": "Also, when I click on \"Endpoint slack\" upper left corner, it looks like there should have been more than one choice?\r\n\r\nhttps://drive.google.com/file/d/1xCo_SBrhFjxZfQ-IOakjJyKaGkyZcZIP/view?usp=sharing", "date": "2023-08-28T05:22:22Z"}, {"author": "maliberty", "role": "assistant", "message": "It looks like \r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/202fee93-b91e-4c1c-a8da-65d0e27a213c)\r\n is in the wrong place  @AcKoucher any idea why?", "date": "2023-08-28T14:17:17Z"}], "date": "2023-08-28T05:19:11Z", "category": "Query", "subcategory": "Visualization issue", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3800", "id": 3800, "title": "Why three buffers for a through signal in mock-array/Element?", "author": "oharboe", "description": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1322(soon to be merged, but the same issue exists in master), I looked at a path going through Element (no registers, just a signal going from left to right through the Element):\r\n\r\nThere are three buffers in this path: input, a middle buffer inserted by synthesis, and an output buffer. The input and output buffers are introduced by OpenROAD. What motivates synthesis to introduce this middle buffer? Isn't that the job of resizing?\r\n\r\nFrom 1_synth.v we see the middle buffer:\r\n\r\n```\r\n  BUFx2_ASAP7_75t_R _776_ (\r\n    .A(io_lsbIns_5),\r\n    .Y(io_lsbOuts_4)\r\n  );\r\n```\r\n\r\nThe buffer is inserted by this code: \r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 v input external delay\r\n                  6.80    0.80    0.80 v io_lsbIns_5 (in)\r\n     1    0.83                           io_lsbIns_5 (net)\r\n                  4.97   12.72   13.52 v input261/Y (BUFx2_ASAP7_75t_R)\r\n     1    0.79                           net261 (net)\r\n                 13.54   15.20   28.72 v _776_/Y (BUFx3_ASAP7_75t_R)\r\n     1    5.63                           net268 (net)\r\n                 17.44   23.37   52.09 v output268/Y (BUFx4f_ASAP7_75t_R)\r\n     1   10.23                           io_lsbOuts_4 (net)\r\n                 17.59    0.91   53.00 v io_lsbOuts_4 (out)\r\n                                 53.00   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -53.00   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                -23.40   slack (VIOLATED)\r\n\r\n```\r\n\r\nOverview:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/bd71b9bc-4f8e-4b36-a922-825c52c25fbd)\r\n\r\nThe two nearly back-to-back buffers on the output:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c5eb763c-10c1-4be0-8b8d-1279242608c7)\r\n\r\n\r\nMoreover: there are two buffers(synthesis introduced buffer + output buffer) nearly back to back at the output. The Element is routed by abutment horizontall, so we get a third input buffer immediately from the Element to the right.\r\n\r\n\r\nIf I disable https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96, I get no buffers, which was unexpected as OpenROAD, not synthesis inserts input and output buffers...\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 ^ input external delay\r\n                 31.60   16.96   16.96 ^ io_lsbIns_5 (in)\r\n     1   15.09                           io_lsbIns_5 (net)\r\n                 42.77    0.00   16.96 ^ io_lsbOuts_4 (out)\r\n                                 16.96   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -16.96   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                 12.64   slack (MET)\r\n```\r\n\r\nAt the mock-array level, I see something unexpected, 0 delay for the in-out paths:\r\n\r\n```\r\n>>> report_checks -path_delay max -through ces_7_1/io_lsbIns_* -fields {net cap slew}\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: ces_7_4 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                        287.91  287.91   clock network delay (propagated)\r\n                 83.67    0.00  287.91 ^ ces_7_0/clock (Element)\r\n                  3.44  164.65  452.56 v ces_7_0/io_lsbOuts_7 (Element)\r\n     1    0.00                           ces_7_0_io_lsbOuts_7 (net)\r\n                  5.80    0.00  452.56 v ces_7_1/io_lsbOuts_6 (Element)\r\n     1    0.00                           ces_7_1_io_lsbOuts_6 (net)\r\n                  5.80    0.00  452.56 v ces_7_2/io_lsbOuts_5 (Element)\r\n     1    0.00                           ces_7_2_io_lsbOuts_5 (net)\r\n                  5.80    0.00  452.56 v ces_7_3/io_lsbOuts_4 (Element)\r\n     1    0.69                           ces_7_3_io_lsbOuts_4 (net)\r\n                  5.80    0.00  452.56 v ces_7_4/io_lsbIns_4 (Element)\r\n                                452.56   data arrival time\r\n\r\n                        300.00  300.00   clock clock (rise edge)\r\n                        238.74  538.74   clock network delay (propagated)\r\n                        -10.00  528.74   clock uncertainty\r\n                          1.40  530.14   clock reconvergence pessimism\r\n                                530.14 ^ ces_7_4/clock (Element)\r\n                         70.02  600.16   library setup time\r\n                                600.16   data required time\r\n-----------------------------------------------------------------------------\r\n                                600.16   data required time\r\n                               -452.56   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                147.59   slack (MET)\r\n```\r\n\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1322(soon to be merged, but the same issue exists in master), I looked at a path going through Element (no registers, just a signal going from left to right through the Element):\r\n\r\nThere are three buffers in this path: input, a middle buffer inserted by synthesis, and an output buffer. The input and output buffers are introduced by OpenROAD. What motivates synthesis to introduce this middle buffer? Isn't that the job of resizing?\r\n\r\nFrom 1_synth.v we see the middle buffer:\r\n\r\n```\r\n  BUFx2_ASAP7_75t_R _776_ (\r\n    .A(io_lsbIns_5),\r\n    .Y(io_lsbOuts_4)\r\n  );\r\n```\r\n\r\nThe buffer is inserted by this code: \r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 v input external delay\r\n                  6.80    0.80    0.80 v io_lsbIns_5 (in)\r\n     1    0.83                           io_lsbIns_5 (net)\r\n                  4.97   12.72   13.52 v input261/Y (BUFx2_ASAP7_75t_R)\r\n     1    0.79                           net261 (net)\r\n                 13.54   15.20   28.72 v _776_/Y (BUFx3_ASAP7_75t_R)\r\n     1    5.63                           net268 (net)\r\n                 17.44   23.37   52.09 v output268/Y (BUFx4f_ASAP7_75t_R)\r\n     1   10.23                           io_lsbOuts_4 (net)\r\n                 17.59    0.91   53.00 v io_lsbOuts_4 (out)\r\n                                 53.00   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -53.00   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                -23.40   slack (VIOLATED)\r\n\r\n```\r\n\r\nOverview:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/bd71b9bc-4f8e-4b36-a922-825c52c25fbd)\r\n\r\nThe two nearly back-to-back buffers on the output:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c5eb763c-10c1-4be0-8b8d-1279242608c7)\r\n\r\n\r\nMoreover: there are two buffers(synthesis introduced buffer + output buffer) nearly back to back at the output. The Element is routed by abutment horizontall, so we get a third input buffer immediately from the Element to the right.\r\n\r\n\r\nIf I disable https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/4a6fdcebf8361481090acde05d596e8db946c806/flow/scripts/synth.tcl#L96, I get no buffers, which was unexpected as OpenROAD, not synthesis inserts input and output buffers...\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_lsbOuts_4 -fields {slew net cap}\r\nStartpoint: io_lsbIns_5 (input port)\r\nEndpoint: io_lsbOuts_4 (output port)\r\nPath Group: path delay\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00 ^ input external delay\r\n                 31.60   16.96   16.96 ^ io_lsbIns_5 (in)\r\n     1   15.09                           io_lsbIns_5 (net)\r\n                 42.77    0.00   16.96 ^ io_lsbOuts_4 (out)\r\n                                 16.96   data arrival time\r\n\r\n                         29.60   29.60   max_delay\r\n                          0.00   29.60   output external delay\r\n                                 29.60   data required time\r\n-----------------------------------------------------------------------------\r\n                                 29.60   data required time\r\n                                -16.96   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                 12.64   slack (MET)\r\n```\r\n\r\nAt the mock-array level, I see something unexpected, 0 delay for the in-out paths:\r\n\r\n```\r\n>>> report_checks -path_delay max -through ces_7_1/io_lsbIns_* -fields {net cap slew}\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: ces_7_4 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                        287.91  287.91   clock network delay (propagated)\r\n                 83.67    0.00  287.91 ^ ces_7_0/clock (Element)\r\n                  3.44  164.65  452.56 v ces_7_0/io_lsbOuts_7 (Element)\r\n     1    0.00                           ces_7_0_io_lsbOuts_7 (net)\r\n                  5.80    0.00  452.56 v ces_7_1/io_lsbOuts_6 (Element)\r\n     1    0.00                           ces_7_1_io_lsbOuts_6 (net)\r\n                  5.80    0.00  452.56 v ces_7_2/io_lsbOuts_5 (Element)\r\n     1    0.00                           ces_7_2_io_lsbOuts_5 (net)\r\n                  5.80    0.00  452.56 v ces_7_3/io_lsbOuts_4 (Element)\r\n     1    0.69                           ces_7_3_io_lsbOuts_4 (net)\r\n                  5.80    0.00  452.56 v ces_7_4/io_lsbIns_4 (Element)\r\n                                452.56   data arrival time\r\n\r\n                        300.00  300.00   clock clock (rise edge)\r\n                        238.74  538.74   clock network delay (propagated)\r\n                        -10.00  528.74   clock uncertainty\r\n                          1.40  530.14   clock reconvergence pessimism\r\n                                530.14 ^ ces_7_4/clock (Element)\r\n                         70.02  600.16   library setup time\r\n                                600.16   data required time\r\n-----------------------------------------------------------------------------\r\n                                600.16   data required time\r\n                               -452.56   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                147.59   slack (MET)\r\n```\r\n\r\n\r\n", "date": "2023-08-06T11:52:32Z"}, {"author": "maliberty", "role": "assistant", "message": "The third buffer buffer looks to have been from yosys.  I imagine the incoming netlist was a single buffer (_776_).   The other two come from buffer_ports.  You could skip that if you want a single buffer.", "date": "2023-08-07T02:09:09Z"}, {"author": "oharboe", "role": "assistant", "message": "> The third buffer buffer looks to have been from yosys.\r\n\r\nYep.\r\n\r\n> I imagine the incoming netlist was a single buffer (_776_). The other two come from buffer_ports. You could skip that if you want a single buffer.\r\n\r\nSurprisingly, the input output buffers go away if I disable yosys buffer insertions. Any thoughts about why that is happening?\r\n\r\nIt sounds like you only expected input/output buffers in this case...\r\n\r\nHow can I disable output/input buffers for only in-out paths and is it a good idea in this case?\r\n\r\nAlso, I didn't expect zero propagation time when there are no buffers, is that expected?\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-08-07T04:41:47Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty One last question, why is this line in synth.tcl? I understand what it does, I just don't know why it is there.\r\n\r\n```\r\ninsbuf -buf {*}$::env(MIN_BUF_CELL_AND_PORTS)\r\n```", "date": "2023-08-08T05:03:56Z"}], "date": "2023-08-06T11:52:32Z", "category": "Query", "subcategory": "Usage question", "Tool": "Verilog to DB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3871", "id": 3871, "title": "Where can I find the block findInst implementation?", "author": "oharboe", "description": "Silly question: where do I find the source code for `findInst`?\r\n\r\nI seem unable to find it in the OpenROAD source code.\r\n\r\n```\r\n    set inst [$block findInst [format \"ces_%d_%d\" $row $col]]\r\n```\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/f90d853b3705338fa2d142acd20ac57626c71f12/flow/designs/asap7/mock-array/macro-placement.tcl#L10\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Silly question: where do I find the source code for `findInst`?\r\n\r\nI seem unable to find it in the OpenROAD source code.\r\n\r\n```\r\n    set inst [$block findInst [format \"ces_%d_%d\" $row $col]]\r\n```\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/f90d853b3705338fa2d142acd20ac57626c71f12/flow/designs/asap7/mock-array/macro-placement.tcl#L10\r\n\r\n", "date": "2023-08-16T20:42:44Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Header: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/include/odb/db.h#L992\r\nImpl: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/src/db/dbBlock.cpp#L1790\r\nHidden Impl: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/odb/src/db/dbBlock.h#L173", "date": "2023-08-16T20:50:08Z"}, {"author": "oharboe", "role": "assistant", "message": "So `findInst` doesn't throw an exception if the element doesn't exist, like https://cplusplus.com/reference/map/map/at/ does.\r\n\r\nThis leads to a lot of repetition and context unique error messages and in tcl very poor error messages like:\r\n\r\n```\r\nError: macro-placement.tcl, 27 invalid command name \"NULL\"\r\n```\r\n\r\n`std::map` has explicit accessors that either creates an element if it doesn't exist(returns empty by default) and another that throws an exception if it doesn't exist.\r\n\r\nThe equivalent here would be that findInst() threw an exception with an error message and the name, and that another hasInst() that doesn't and allows the user to handle it. try/catch is not approperiate because both findInst() that throws exception and hasInst() that checks for presence would both be part of normal exception.", "date": "2023-08-16T21:02:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The odb code is old and was written without the use of exceptions.  I would be fine to change that but it will require testing the full app to see if problems arise and resolving them.  There are a number of similar APIs that return nullptr on failure.", "date": "2023-08-16T21:48:22Z"}, {"author": "oharboe", "role": "assistant", "message": "I see. I was just curious and surprised: there are LOT of methods in that .h file that are exposed in .tcl.\r\n\r\nNot all of them are obviously compatible with a .tcl calling convention or even intended for .tcl?", "date": "2023-08-17T15:19:38Z"}], "date": "2023-08-16T20:42:44Z", "category": "Query", "subcategory": "Implementation details", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3694", "id": 3694, "title": "report_worst_slack returns INF", "author": "xiaosinju", "description": "I have run the following script:\r\n```\r\nread_lef ispd19_test6.input.lef\r\nread_def ispd19_test6.input.def\r\nset thread_count 8\r\nglobal_route\r\ndetailed_route\r\nwrite_db route.db\r\nreport wns\r\n>> wns 0\r\nreport tns\r\n>> tns 0\r\nreport worst_slack\r\n>> worst slack INF\r\n```\r\nDid anything go wrong? How can I get correct metrics? Thanks a lot!", "content": [{"author": "xiaosinju", "role": "user", "message": "I have run the following script:\r\n```\r\nread_lef ispd19_test6.input.lef\r\nread_def ispd19_test6.input.def\r\nset thread_count 8\r\nglobal_route\r\ndetailed_route\r\nwrite_db route.db\r\nreport wns\r\n>> wns 0\r\nreport tns\r\n>> tns 0\r\nreport worst_slack\r\n>> worst slack INF\r\n```\r\nDid anything go wrong? How can I get correct metrics? Thanks a lot!", "date": "2023-07-22T04:42:51Z"}, {"author": "vijayank88", "role": "assistant", "message": "Do estimate parasitic and then report the metrics. Refer here: https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/test/flow.tcl#L264-L280 @xiaosinju ", "date": "2023-07-22T07:09:18Z"}, {"author": "maliberty", "role": "assistant", "message": "This is a routing test case and has no timing information (no .lib or .sdc).  What are you trying to accomplish?", "date": "2023-07-22T10:37:34Z"}], "date": "2023-07-22T04:42:51Z", "category": "Runtime", "subcategory": "Timing analysis issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3812", "id": 3812, "title": "Feature to OpenROAD that lets us drag views with the mouse?", "author": "oharboe", "description": "It would make moving around the design a lot easier.\r\n\r\nIs there a way to do this already?\r\n\r\nThe arrow keys is a bit clunky compared to dragging the view with the mouse.", "content": [{"author": "oharboe", "role": "user", "message": "It would make moving around the design a lot easier.\r\n\r\nIs there a way to do this already?\r\n\r\nThe arrow keys is a bit clunky compared to dragging the view with the mouse.", "date": "2023-08-08T07:07:48Z"}, {"author": "stefanottili", "role": "assistant", "message": "OpenRoad will hopefully take hint's from KLayout's layout view controls instead of inventing yet another scheme.\r\n\r\nzoom in/out at the cursor position (mouse wheel zoom in/out)\r\nmake the cursor key \"shift width\" adjustable (40% seem like a better value then the defaults)\r\nhave \"gestures\" for fit, zoom in, zoom out (move mouse right-up, down, left-up), so no \"mouse drag viewpoint\".\r\n\r\nThere doesn't seem to be a consensus for zoom in/out, fit, level down/up keys.\r\nI override the klayout defaults and use z/Z, f, l/L, curious what other people use.", "date": "2023-08-08T15:44:26Z"}, {"author": "stefanottili", "role": "assistant", "message": "I stand corrected, there is dragging the view in Klayout, on a Mac is \"right mouse + shift\"", "date": "2023-08-08T16:27:03Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no method currently.  It could be an enhancement request as could gestures.", "date": "2023-08-08T18:16:14Z"}, {"author": "oharboe", "role": "assistant", "message": "Added feature request https://github.com/The-OpenROAD-Project/OpenROAD/issues/3840", "date": "2023-08-10T06:33:27Z"}], "date": "2023-08-08T07:07:48Z", "category": "Feature Request", "subcategory": "User interface enhancement", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3811", "id": 3811, "title": "A lot of slew in asap7/sram-64x16", "author": "oharboe", "description": "Is this amount of slew expected on the clock pin to the SRAM? \r\n\r\n`SRAM2RW16x32_2/CE2` is one of two clocks to the SRAM, the SRAM has one read and one write port.\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk\r\n```\r\n\r\n```\r\n>>> report_checks -path_delay max -fields {slew net cap} -to _351_/D\r\nStartpoint: SRAM2RW16x32_2 (rising edge-triggered flip-flop clocked by io_clk)\r\nEndpoint: _351_ (falling edge-triggered flip-flop clocked by io_clk')\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock io_clk (rise edge)\r\n                        241.44  241.44   clock network delay (propagated)\r\n                150.83    0.00  241.44 ^ SRAM2RW16x32_2/CE2 (SRAM2RW16x32)\r\n                 40.24  202.07  443.51 v SRAM2RW16x32_2/O2[4] (SRAM2RW16x32)\r\n     1    9.73                           _SRAM2RW16x32_2_O2[4] (net)\r\n                 53.97    5.14  448.65 v _351_/D (DFFLQNx1_ASAP7_75t_R)\r\n                                448.65   data arrival time\r\n\r\n                        500.00  500.00   clock io_clk' (fall edge)\r\n                        186.47  686.47   clock network delay (propagated)\r\n                          0.52  686.99   clock reconvergence pessimism\r\n                                686.99 v _351_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                        -22.88  664.11   library setup time\r\n                                664.11   data required time\r\n-----------------------------------------------------------------------------\r\n                                664.11   data required time\r\n                               -448.65   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                215.46   slack (MET)\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Is this amount of slew expected on the clock pin to the SRAM? \r\n\r\n`SRAM2RW16x32_2/CE2` is one of two clocks to the SRAM, the SRAM has one read and one write port.\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk\r\n```\r\n\r\n```\r\n>>> report_checks -path_delay max -fields {slew net cap} -to _351_/D\r\nStartpoint: SRAM2RW16x32_2 (rising edge-triggered flip-flop clocked by io_clk)\r\nEndpoint: _351_ (falling edge-triggered flip-flop clocked by io_clk')\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock io_clk (rise edge)\r\n                        241.44  241.44   clock network delay (propagated)\r\n                150.83    0.00  241.44 ^ SRAM2RW16x32_2/CE2 (SRAM2RW16x32)\r\n                 40.24  202.07  443.51 v SRAM2RW16x32_2/O2[4] (SRAM2RW16x32)\r\n     1    9.73                           _SRAM2RW16x32_2_O2[4] (net)\r\n                 53.97    5.14  448.65 v _351_/D (DFFLQNx1_ASAP7_75t_R)\r\n                                448.65   data arrival time\r\n\r\n                        500.00  500.00   clock io_clk' (fall edge)\r\n                        186.47  686.47   clock network delay (propagated)\r\n                          0.52  686.99   clock reconvergence pessimism\r\n                                686.99 v _351_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                        -22.88  664.11   library setup time\r\n                                664.11   data required time\r\n-----------------------------------------------------------------------------\r\n                                664.11   data required time\r\n                               -448.65   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                215.46   slack (MET)\r\n```\r\n", "date": "2023-08-08T06:06:42Z"}, {"author": "maliberty", "role": "assistant", "message": "Probably not but without a test case not much more can be said.", "date": "2023-08-08T16:28:15Z"}, {"author": "oharboe", "role": "assistant", "message": "`make DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk issue_cts` standalone testcase:\r\n\r\n1. Unzip (note! bzip2 compression so that it would fit into github limit) [slew.zip](https://github.com/The-OpenROAD-Project/OpenROAD/files/12294012/slew.zip)\r\n2. run `./run*.sh`\r\n3. Enter `report_checks -path_delay max -fields {slew net cap} -to _351_/D` in the GUI\r\n\r\nYou should get:\r\n\r\n\r\n```\r\n>>> report_checks -path_delay max -fields {slew net cap} -to _351_/D\r\nStartpoint: SRAM2RW16x32_2 (rising edge-triggered flip-flop clocked by io_clk)\r\nEndpoint: _351_ (falling edge-triggered flip-flop clocked by io_clk')\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock io_clk (rise edge)\r\n                        274.66  274.66   clock network delay (propagated)\r\n                186.64    0.00  274.66 ^ SRAM2RW16x32_2/CE2 (SRAM2RW16x32)\r\n                 35.53  205.56  480.22 v SRAM2RW16x32_2/O2[4] (SRAM2RW16x32)\r\n     1    7.54                           _SRAM2RW16x32_2_O2[4] (net)\r\n                 47.76    5.26  485.49 v _351_/D (DFFLQNx1_ASAP7_75t_R)\r\n                                485.49   data arrival time\r\n\r\n                        500.00  500.00   clock io_clk' (fall edge)\r\n                        212.33  712.33   clock network delay (propagated)\r\n                          0.00  712.33   clock reconvergence pessimism\r\n                                712.33 v _351_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                        -21.20  691.13   library setup time\r\n                                691.13   data required time\r\n-----------------------------------------------------------------------------\r\n                                691.13   data required time\r\n                               -485.49   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                205.64   slack (MET)\r\n\r\n```\r\n\r\n", "date": "2023-08-08T16:53:04Z"}, {"author": "maliberty", "role": "assistant", "message": "Converted to an issue https://github.com/The-OpenROAD-Project/OpenROAD/issues/3817", "date": "2023-08-08T18:11:02Z"}], "date": "2023-08-08T06:06:42Z", "category": "Runtime", "subcategory": "Timing analysis issue", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3788", "id": 3788, "title": "Clock Tree Viewer and trying to get to the information in the tooltips", "author": "oharboe", "description": "The tooltips in the Clock Tree Viewer contain interesting information: which macro or flip flop has how much clock network latency.\r\n\r\nHowever, the tooltip information is hard to get to and it is not searchable.\r\n\r\nI mocked a text report that is printed when I click update...\r\n\r\nI think perhaps a better approach to this is to have a tcl utility procedure that navigates the clock tree and print out this information. Perhaps that is possible today, but I don't know how to...\r\n\r\nChange I used to mock the report below: https://github.com/Pinata-Consulting/OpenROAD/commit/17283788372d98cafc1e6bbd056f1074a1539bc6\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1a874efa-2b66-41f2-b365-7990f3ed5399)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "The tooltips in the Clock Tree Viewer contain interesting information: which macro or flip flop has how much clock network latency.\r\n\r\nHowever, the tooltip information is hard to get to and it is not searchable.\r\n\r\nI mocked a text report that is printed when I click update...\r\n\r\nI think perhaps a better approach to this is to have a tcl utility procedure that navigates the clock tree and print out this information. Perhaps that is possible today, but I don't know how to...\r\n\r\nChange I used to mock the report below: https://github.com/Pinata-Consulting/OpenROAD/commit/17283788372d98cafc1e6bbd056f1074a1539bc6\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/1a874efa-2b66-41f2-b365-7990f3ed5399)\r\n", "date": "2023-08-04T09:01:31Z"}, {"author": "oharboe", "role": "assistant", "message": "Mocking a heatmap of arrival times. I only have location information for the Elements. Got the idea here. https://www.eng.biu.ac.il/temanad/files/2017/02/Lecture-8-CTS.pdf\r\n\r\n```\r\nimport re\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\n# Extracting data from the text\r\ntext = \"\"\"\r\n# Your log content goes here\r\n\"\"\"\r\n\r\nlines = text.strip().split('\\n')\r\nfiltered_lines = [line for line in lines if \"ces\" in line]\r\n\r\n# Finding the maximum indices for rows and columns\r\nmax_row = max_col = 0\r\ndata_dict = {}\r\nfor line in filtered_lines:\r\n    match = re.search(r\"ces_(\\d+)_(\\d+)/clock\\s*Arrival:\\s*(\\d+\\.\\d+)\", line)\r\n    if match:\r\n        row, col, value = map(int, map(float, match.groups()))\r\n        max_row = max(max_row, row)\r\n        max_col = max(max_col, col)\r\n        data_dict[(row, col)] = value\r\n\r\n# Constructing the data matrix\r\ndata_matrix = np.zeros((max_row + 1, max_col + 1))\r\nfor (row, col), value in data_dict.items():\r\n    data_matrix[row, col] = value\r\n\r\n# Plotting the heatmap\r\nplt.imshow(data_matrix, origin='upper', cmap='viridis', aspect='auto')\r\nplt.colorbar(label='Arrival (ps)')\r\nplt.title('Heatmap of Arrival Times')\r\nplt.xlabel('Column')\r\nplt.ylabel('Row')\r\nplt.show()\r\n```\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/aceb47d0-d673-461d-a0f0-e0b3df96a8d6)\r\n", "date": "2023-08-04T09:14:14Z"}, {"author": "oharboe", "role": "assistant", "message": "Adding some 3d bling...\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/ad5b4839-f77e-4643-89d8-4426b4137f89)\r\n\r\n\r\n```\r\n# Sample data\r\ntext = \"\"\"\r\n[INFO GUI-0088] Register                                 _131_/CLK                                Arrival: 258.115 ps\r\n[INFO GUI-0088] Register                                 _132_/CLK                                Arrival: 257.882 ps\r\n[INFO GUI-0088] Register                                 _133_/CLK                                Arrival: 258.944 ps\r\n[INFO GUI-0088] Register                                 _134_/CLK                                Arrival: 258.636 ps\r\n[INFO GUI-0088] Register                                 _135_/CLK                                Arrival: 258.069 ps\r\n[INFO GUI-0088] Register                                 _137_/CLK                                Arrival: 257.527 ps\r\n[INFO GUI-0088] Register                                 _139_/CLK                                Arrival: 246.072 ps\r\n[INFO GUI-0088] Register                                 _143_/CLK                                Arrival: 245.541 ps\r\n[INFO GUI-0088] Register                                 _145_/CLK                                Arrival: 245.360 ps\r\n[INFO GUI-0088] Register                                 ces_0_7/clock                            Arrival: 232.150 ps\r\n[INFO GUI-0088] Register                                 ces_1_7/clock                            Arrival: 225.713 ps\r\n[INFO GUI-0088] Register                                 _136_/CLK                                Arrival: 250.476 ps\r\n[INFO GUI-0088] Register                                 _138_/CLK                                Arrival: 250.337 ps\r\n[INFO GUI-0088] Register                                 _140_/CLK                                Arrival: 246.845 ps\r\n[INFO GUI-0088] Register                                 _141_/CLK                                Arrival: 246.075 ps\r\n[INFO GUI-0088] Register                                 _142_/CLK                                Arrival: 246.461 ps\r\n[INFO GUI-0088] Register                                 _144_/CLK                                Arrival: 246.885 ps\r\n[INFO GUI-0088] Register                                 _146_/CLK                                Arrival: 245.560 ps\r\n[INFO GUI-0088] Register                                 ces_0_6/clock                            Arrival: 235.587 ps\r\n[INFO GUI-0088] Register                                 _147_/CLK                                Arrival: 239.633 ps\r\n[INFO GUI-0088] Register                                 _148_/CLK                                Arrival: 238.903 ps\r\n[INFO GUI-0088] Register                                 _149_/CLK                                Arrival: 239.580 ps\r\n[INFO GUI-0088] Register                                 _150_/CLK                                Arrival: 238.791 ps\r\n[INFO GUI-0088] Register                                 _151_/CLK                                Arrival: 239.418 ps\r\n[INFO GUI-0088] Register                                 _152_/CLK                                Arrival: 239.304 ps\r\n[INFO GUI-0088] Register                                 _153_/CLK                                Arrival: 238.755 ps\r\n[INFO GUI-0088] Register                                 _154_/CLK                                Arrival: 238.495 ps\r\n[INFO GUI-0088] Register                                 _155_/CLK                                Arrival: 250.283 ps\r\n[INFO GUI-0088] Register                                 _156_/CLK                                Arrival: 250.061 ps\r\n[INFO GUI-0088] Register                                 _157_/CLK                                Arrival: 250.546 ps\r\n[INFO GUI-0088] Register                                 _158_/CLK                                Arrival: 250.032 ps\r\n[INFO GUI-0088] Register                                 _159_/CLK                                Arrival: 250.760 ps\r\n[INFO GUI-0088] Register                                 _160_/CLK                                Arrival: 249.826 ps\r\n[INFO GUI-0088] Register                                 _161_/CLK                                Arrival: 250.433 ps\r\n[INFO GUI-0088] Register                                 _162_/CLK                                Arrival: 249.956 ps\r\n[INFO GUI-0088] Register                                 ces_2_7/clock                            Arrival: 233.829 ps\r\n[INFO GUI-0088] Register                                 ces_3_6/clock                            Arrival: 243.645 ps\r\n[INFO GUI-0088] Register                                 ces_3_7/clock                            Arrival: 239.027 ps\r\n[INFO GUI-0088] Register                                 ces_0_0/clock                            Arrival: 290.815 ps\r\n[INFO GUI-0088] Register                                 ces_0_1/clock                            Arrival: 287.224 ps\r\n[INFO GUI-0088] Register                                 ces_0_2/clock                            Arrival: 276.359 ps\r\n[INFO GUI-0088] Register                                 ces_1_0/clock                            Arrival: 262.155 ps\r\n[INFO GUI-0088] Register                                 ces_1_1/clock                            Arrival: 258.349 ps\r\n[INFO GUI-0088] Register                                 ces_1_2/clock                            Arrival: 248.148 ps\r\n[INFO GUI-0088] Register                                 ces_0_3/clock                            Arrival: 226.049 ps\r\n[INFO GUI-0088] Register                                 ces_1_3/clock                            Arrival: 224.760 ps\r\n[INFO GUI-0088] Register                                 ces_0_4/clock                            Arrival: 242.883 ps\r\n[INFO GUI-0088] Register                                 ces_0_5/clock                            Arrival: 247.124 ps\r\n[INFO GUI-0088] Register                                 ces_1_4/clock                            Arrival: 237.497 ps\r\n[INFO GUI-0088] Register                                 ces_1_5/clock                            Arrival: 249.241 ps\r\n[INFO GUI-0088] Register                                 ces_1_6/clock                            Arrival: 253.384 ps\r\n[INFO GUI-0088] Register                                 ces_2_0/clock                            Arrival: 253.191 ps\r\n[INFO GUI-0088] Register                                 ces_2_1/clock                            Arrival: 248.850 ps\r\n[INFO GUI-0088] Register                                 ces_2_2/clock                            Arrival: 236.498 ps\r\n[INFO GUI-0088] Register                                 ces_3_0/clock                            Arrival: 261.042 ps\r\n[INFO GUI-0088] Register                                 ces_3_1/clock                            Arrival: 257.075 ps\r\n[INFO GUI-0088] Register                                 ces_3_2/clock                            Arrival: 244.640 ps\r\n[INFO GUI-0088] Register                                 ces_2_3/clock                            Arrival: 225.582 ps\r\n[INFO GUI-0088] Register                                 ces_2_4/clock                            Arrival: 239.450 ps\r\n[INFO GUI-0088] Register                                 ces_2_5/clock                            Arrival: 251.290 ps\r\n[INFO GUI-0088] Register                                 ces_2_6/clock                            Arrival: 255.456 ps\r\n[INFO GUI-0088] Register                                 ces_3_3/clock                            Arrival: 227.135 ps\r\n[INFO GUI-0088] Register                                 ces_3_4/clock                            Arrival: 243.496 ps\r\n[INFO GUI-0088] Register                                 ces_3_5/clock                            Arrival: 248.000 ps\r\n[INFO GUI-0088] Register                                 _163_/CLK                                Arrival: 253.020 ps\r\n[INFO GUI-0088] Register                                 _164_/CLK                                Arrival: 253.796 ps\r\n[INFO GUI-0088] Register                                 _165_/CLK                                Arrival: 254.691 ps\r\n[INFO GUI-0088] Register                                 _166_/CLK                                Arrival: 254.356 ps\r\n[INFO GUI-0088] Register                                 _167_/CLK                                Arrival: 254.200 ps\r\n[INFO GUI-0088] Register                                 _168_/CLK                                Arrival: 253.308 ps\r\n[INFO GUI-0088] Register                                 _169_/CLK                                Arrival: 252.967 ps\r\n[INFO GUI-0088] Register                                 _170_/CLK                                Arrival: 253.566 ps\r\n[INFO GUI-0088] Register                                 ces_4_6/clock                            Arrival: 236.291 ps\r\n[INFO GUI-0088] Register                                 ces_4_7/clock                            Arrival: 232.063 ps\r\n[INFO GUI-0088] Register                                 _171_/CLK                                Arrival: 231.291 ps\r\n[INFO GUI-0088] Register                                 _172_/CLK                                Arrival: 231.543 ps\r\n[INFO GUI-0088] Register                                 _173_/CLK                                Arrival: 231.174 ps\r\n[INFO GUI-0088] Register                                 _174_/CLK                                Arrival: 230.426 ps\r\n[INFO GUI-0088] Register                                 _175_/CLK                                Arrival: 231.306 ps\r\n[INFO GUI-0088] Register                                 _176_/CLK                                Arrival: 231.412 ps\r\n[INFO GUI-0088] Register                                 _177_/CLK                                Arrival: 231.484 ps\r\n[INFO GUI-0088] Register                                 _178_/CLK                                Arrival: 231.182 ps\r\n[INFO GUI-0088] Register                                 _179_/CLK                                Arrival: 244.957 ps\r\n[INFO GUI-0088] Register                                 _180_/CLK                                Arrival: 242.174 ps\r\n[INFO GUI-0088] Register                                 _181_/CLK                                Arrival: 244.902 ps\r\n[INFO GUI-0088] Register                                 _182_/CLK                                Arrival: 242.804 ps\r\n[INFO GUI-0088] Register                                 _183_/CLK                                Arrival: 244.575 ps\r\n[INFO GUI-0088] Register                                 _184_/CLK                                Arrival: 243.857 ps\r\n[INFO GUI-0088] Register                                 _185_/CLK                                Arrival: 242.949 ps\r\n[INFO GUI-0088] Register                                 _186_/CLK                                Arrival: 244.352 ps\r\n[INFO GUI-0088] Register                                 _187_/CLK                                Arrival: 253.289 ps\r\n[INFO GUI-0088] Register                                 _189_/CLK                                Arrival: 253.454 ps\r\n[INFO GUI-0088] Register                                 _193_/CLK                                Arrival: 253.757 ps\r\n[INFO GUI-0088] Register                                 _194_/CLK                                Arrival: 253.377 ps\r\n[INFO GUI-0088] Register                                 _188_/CLK                                Arrival: 249.940 ps\r\n[INFO GUI-0088] Register                                 _190_/CLK                                Arrival: 250.214 ps\r\n[INFO GUI-0088] Register                                 _191_/CLK                                Arrival: 250.193 ps\r\n[INFO GUI-0088] Register                                 _192_/CLK                                Arrival: 250.440 ps\r\n[INFO GUI-0088] Register                                 ces_6_6/clock                            Arrival: 237.794 ps\r\n[INFO GUI-0088] Register                                 ces_6_7/clock                            Arrival: 237.428 ps\r\n[INFO GUI-0088] Register                                 ces_7_6/clock                            Arrival: 248.387 ps\r\n[INFO GUI-0088] Register                                 ces_7_7/clock                            Arrival: 243.904 ps\r\n[INFO GUI-0088] Register                                 ces_4_0/clock                            Arrival: 269.870 ps\r\n[INFO GUI-0088] Register                                 ces_4_1/clock                            Arrival: 265.959 ps\r\n[INFO GUI-0088] Register                                 ces_4_2/clock                            Arrival: 254.121 ps\r\n[INFO GUI-0088] Register                                 ces_4_3/clock                            Arrival: 227.621 ps\r\n[INFO GUI-0088] Register                                 ces_5_0/clock                            Arrival: 260.539 ps\r\n[INFO GUI-0088] Register                                 ces_5_1/clock                            Arrival: 256.515 ps\r\n[INFO GUI-0088] Register                                 ces_5_2/clock                            Arrival: 245.174 ps\r\n[INFO GUI-0088] Register                                 ces_5_3/clock                            Arrival: 225.957 ps\r\n[INFO GUI-0088] Register                                 ces_5_4/clock                            Arrival: 233.418 ps\r\n[INFO GUI-0088] Register                                 ces_5_5/clock                            Arrival: 250.130 ps\r\n[INFO GUI-0088] Register                                 ces_5_6/clock                            Arrival: 260.323 ps\r\n[INFO GUI-0088] Register                                 ces_5_7/clock                            Arrival: 263.816 ps\r\n[INFO GUI-0088] Register                                 ces_4_4/clock                            Arrival: 219.267 ps\r\n[INFO GUI-0088] Register                                 ces_4_5/clock                            Arrival: 223.542 ps\r\n[INFO GUI-0088] Register                                 ces_7_0/clock                            Arrival: 287.112 ps\r\n[INFO GUI-0088] Register                                 ces_7_1/clock                            Arrival: 283.560 ps\r\n[INFO GUI-0088] Register                                 ces_7_2/clock                            Arrival: 273.081 ps\r\n[INFO GUI-0088] Register                                 ces_7_3/clock                            Arrival: 272.904 ps\r\n[INFO GUI-0088] Register                                 ces_6_0/clock                            Arrival: 250.403 ps\r\n[INFO GUI-0088] Register                                 ces_6_1/clock                            Arrival: 246.424 ps\r\n[INFO GUI-0088] Register                                 ces_6_2/clock                            Arrival: 235.488 ps\r\n[INFO GUI-0088] Register                                 ces_6_3/clock                            Arrival: 230.871 ps\r\n[INFO GUI-0088] Register                                 ces_6_4/clock                            Arrival: 234.553 ps\r\n[INFO GUI-0088] Register                                 ces_6_5/clock                            Arrival: 238.808 ps\r\n[INFO GUI-0088] Register                                 ces_7_4/clock                            Arrival: 240.051 ps\r\n[INFO GUI-0088] Register                                 ces_7_5/clock                            Arrival: 244.454 ps\r\n\"\"\"\r\n\r\nimport re\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\nlines = text.strip().split('\\n')\r\nfiltered_lines = [line for line in lines if \"ces\" in line]\r\n\r\n# Finding the maximum indices for rows and columns\r\nmax_row = max_col = 0\r\ndata_dict = {}\r\nfor line in filtered_lines:\r\n    match = re.search(r\"ces_(\\d+)_(\\d+)/clock\\s*Arrival:\\s*(\\d+\\.\\d+)\", line)\r\n    if match:\r\n        row, col, value = map(int, map(float, match.groups()))\r\n        max_row = max(max_row, row)\r\n        max_col = max(max_col, col)\r\n        data_dict[(row, col)] = value\r\n\r\n# Constructing the data matrix\r\ndata_matrix = np.zeros((max_row + 1, max_col + 1))\r\nfor (row, col), value in data_dict.items():\r\n    data_matrix[row, col] = value\r\n\r\n# Plotting the heatmap\r\nplt.imshow(data_matrix, origin='upper', cmap='viridis', aspect='auto')\r\nplt.colorbar(label='Arrival (ps)')\r\nplt.title('Heatmap of Arrival Times')\r\nplt.xlabel('Column')\r\nplt.ylabel('Row')\r\nplt.show()\r\n```\r\n\r\n", "date": "2023-08-04T09:25:04Z"}, {"author": "oharboe", "role": "assistant", "message": "The reason I was interested in the skew heatmap as a function of location, is that for the mock-array, it is more important to have low skew at the edges, where the input/output pins are, than in the center... If I understand the presentation correctly...\r\n\r\nFrom the heatmap, I can see that I get the \"inverse\" of what I am looking for: I get high latency/skew at the edges and lowest clock network latency in the middle of the array.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/2a02ed4e-16d1-40cf-87cb-b356f6942acb)\r\n", "date": "2023-08-04T09:28:04Z"}, {"author": "oharboe", "role": "assistant", "message": "Export to yaml everywhere? Then ask ChatGPT to write a program to graph whatever you want :-)", "date": "2023-08-04T09:58:05Z"}, {"author": "oharboe", "role": "assistant", "message": "One more round of tinkering, extracting leaf latency (macros & flip flops) for mock-array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f9324f3c-9b7d-4186-b202-73ddd958e478)\r\n\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom scipy.interpolate import griddata\r\nfrom mpl_toolkits.mplot3d import Axes3D\r\n\r\n# Extract data from the table\r\ndata = \"\"\"\r\n[INFO GUI-0090] 353016 31894 _131_/CLK 2.5811525e-10\r\n[INFO GUI-0090] 353610 32704 _132_/CLK 2.578819e-10\r\n[INFO GUI-0090] 353448 29734 _133_/CLK 2.589441e-10\r\n[INFO GUI-0090] 353232 30004 _134_/CLK 2.5863567e-10\r\n[INFO GUI-0090] 353232 32164 _135_/CLK 2.5806945e-10\r\n[INFO GUI-0090] 353232 33514 _137_/CLK 2.5752672e-10\r\n[INFO GUI-0090] 352962 73474 _139_/CLK 2.4607233e-10\r\n[INFO GUI-0090] 353070 75094 _143_/CLK 2.455407e-10\r\n[INFO GUI-0090] 353232 74554 _145_/CLK 2.4536023e-10\r\n[INFO GUI-0090] 325488 49596 ces_0_7/clock 2.3215012e-10\r\n[INFO GUI-0090] 325488 97116 ces_1_7/clock 2.2571323e-10\r\n[INFO GUI-0090] 353070 30274 _136_/CLK 2.504758e-10\r\n[INFO GUI-0090] 353232 32974 _138_/CLK 2.5033728e-10\r\n[INFO GUI-0090] 353988 74824 _140_/CLK 2.468455e-10\r\n[INFO GUI-0090] 353070 74284 _141_/CLK 2.4607524e-10\r\n[INFO GUI-0090] 353124 73744 _142_/CLK 2.4646146e-10\r\n[INFO GUI-0090] 353718 74014 _144_/CLK 2.4688515e-10\r\n[INFO GUI-0090] 353070 75364 _146_/CLK 2.455602e-10\r\n[INFO GUI-0090] 282288 49596 ces_0_6/clock 2.3558674e-10\r\n[INFO GUI-0090] 354312 120724 _147_/CLK 2.396328e-10\r\n[INFO GUI-0090] 353070 120184 _148_/CLK 2.389033e-10\r\n[INFO GUI-0090] 353070 120724 _149_/CLK 2.3958044e-10\r\n[INFO GUI-0090] 353070 120454 _150_/CLK 2.3879088e-10\r\n[INFO GUI-0090] 352908 120994 _151_/CLK 2.3941804e-10\r\n[INFO GUI-0090] 354150 120994 _152_/CLK 2.3930402e-10\r\n[INFO GUI-0090] 353070 121264 _153_/CLK 2.387552e-10\r\n[INFO GUI-0090] 353070 121534 _154_/CLK 2.3849495e-10\r\n[INFO GUI-0090] 354312 167704 _155_/CLK 2.5028343e-10\r\n[INFO GUI-0090] 353070 167434 _156_/CLK 2.5006122e-10\r\n[INFO GUI-0090] 354312 167974 _157_/CLK 2.5054644e-10\r\n[INFO GUI-0090] 353070 167704 _158_/CLK 2.5003247e-10\r\n[INFO GUI-0090] 353502 168244 _159_/CLK 2.5076013e-10\r\n[INFO GUI-0090] 353070 167974 _160_/CLK 2.4982605e-10\r\n[INFO GUI-0090] 353070 168514 _161_/CLK 2.504333e-10\r\n[INFO GUI-0090] 353070 168784 _162_/CLK 2.4995647e-10\r\n[INFO GUI-0090] 325488 144636 ces_2_7/clock 2.3382915e-10\r\n[INFO GUI-0090] 282288 192156 ces_3_6/clock 2.4364535e-10\r\n[INFO GUI-0090] 325488 192156 ces_3_7/clock 2.3902733e-10\r\n[INFO GUI-0090] 23088 49596 ces_0_0/clock 2.908152e-10\r\n[INFO GUI-0090] 66288 49596 ces_0_1/clock 2.8722372e-10\r\n[INFO GUI-0090] 109488 49596 ces_0_2/clock 2.7635877e-10\r\n[INFO GUI-0090] 23088 97116 ces_1_0/clock 2.6215496e-10\r\n[INFO GUI-0090] 66288 97116 ces_1_1/clock 2.5834934e-10\r\n[INFO GUI-0090] 109488 97116 ces_1_2/clock 2.481484e-10\r\n[INFO GUI-0090] 152688 49596 ces_0_3/clock 2.2604922e-10\r\n[INFO GUI-0090] 152688 97116 ces_1_3/clock 2.2475981e-10\r\n[INFO GUI-0090] 195888 49596 ces_0_4/clock 2.4288263e-10\r\n[INFO GUI-0090] 239088 49596 ces_0_5/clock 2.4712393e-10\r\n[INFO GUI-0090] 195888 97116 ces_1_4/clock 2.3749708e-10\r\n[INFO GUI-0090] 239088 97116 ces_1_5/clock 2.492415e-10\r\n[INFO GUI-0090] 282288 97116 ces_1_6/clock 2.5338398e-10\r\n[INFO GUI-0090] 23088 144636 ces_2_0/clock 2.5319144e-10\r\n[INFO GUI-0090] 66288 144636 ces_2_1/clock 2.488505e-10\r\n[INFO GUI-0090] 109488 144636 ces_2_2/clock 2.3649802e-10\r\n[INFO GUI-0090] 23088 192156 ces_3_0/clock 2.6104152e-10\r\n[INFO GUI-0090] 66288 192156 ces_3_1/clock 2.5707544e-10\r\n[INFO GUI-0090] 109488 192156 ces_3_2/clock 2.4463978e-10\r\n[INFO GUI-0090] 152688 144636 ces_2_3/clock 2.2558208e-10\r\n[INFO GUI-0090] 195888 144636 ces_2_4/clock 2.394501e-10\r\n[INFO GUI-0090] 239088 144636 ces_2_5/clock 2.5129004e-10\r\n[INFO GUI-0090] 282288 144636 ces_2_6/clock 2.5545635e-10\r\n[INFO GUI-0090] 152688 192156 ces_3_3/clock 2.271353e-10\r\n[INFO GUI-0090] 195888 192156 ces_3_4/clock 2.4349614e-10\r\n[INFO GUI-0090] 239088 192156 ces_3_5/clock 2.4800043e-10\r\n[INFO GUI-0090] 353070 215224 _163_/CLK 2.5301994e-10\r\n[INFO GUI-0090] 354150 215764 _164_/CLK 2.5379573e-10\r\n[INFO GUI-0090] 352908 215764 _165_/CLK 2.546915e-10\r\n[INFO GUI-0090] 353016 215494 _166_/CLK 2.543563e-10\r\n[INFO GUI-0090] 352908 216034 _167_/CLK 2.5420016e-10\r\n[INFO GUI-0090] 353016 216304 _168_/CLK 2.53308e-10\r\n[INFO GUI-0090] 353070 216844 _169_/CLK 2.529667e-10\r\n[INFO GUI-0090] 353070 216574 _170_/CLK 2.5356642e-10\r\n[INFO GUI-0090] 282288 239676 ces_4_6/clock 2.362913e-10\r\n[INFO GUI-0090] 325488 239676 ces_4_7/clock 2.3206259e-10\r\n[INFO GUI-0090] 353556 262474 _171_/CLK 2.312914e-10\r\n[INFO GUI-0090] 353070 263014 _172_/CLK 2.3154262e-10\r\n[INFO GUI-0090] 353070 263284 _173_/CLK 2.3117369e-10\r\n[INFO GUI-0090] 353070 262744 _174_/CLK 2.3042566e-10\r\n[INFO GUI-0090] 353070 263824 _175_/CLK 2.3130639e-10\r\n[INFO GUI-0090] 353070 263554 _176_/CLK 2.3141243e-10\r\n[INFO GUI-0090] 353124 264094 _177_/CLK 2.3148382e-10\r\n[INFO GUI-0090] 354312 263554 _178_/CLK 2.3118188e-10\r\n[INFO GUI-0090] 353502 308644 _179_/CLK 2.4495708e-10\r\n[INFO GUI-0090] 353232 308914 _180_/CLK 2.421735e-10\r\n[INFO GUI-0090] 353394 309184 _181_/CLK 2.449023e-10\r\n[INFO GUI-0090] 352962 309454 _182_/CLK 2.428038e-10\r\n[INFO GUI-0090] 354204 309454 _183_/CLK 2.4457464e-10\r\n[INFO GUI-0090] 353664 309994 _184_/CLK 2.4385688e-10\r\n[INFO GUI-0090] 353070 309724 _185_/CLK 2.4294902e-10\r\n[INFO GUI-0090] 353664 310264 _186_/CLK 2.443524e-10\r\n[INFO GUI-0090] 353934 351844 _187_/CLK 2.53289e-10\r\n[INFO GUI-0090] 353016 353734 _189_/CLK 2.5345356e-10\r\n[INFO GUI-0090] 353016 354274 _193_/CLK 2.5375743e-10\r\n[INFO GUI-0090] 353556 352114 _194_/CLK 2.533773e-10\r\n[INFO GUI-0090] 353880 349684 _188_/CLK 2.4994018e-10\r\n[INFO GUI-0090] 353286 351574 _190_/CLK 2.502142e-10\r\n[INFO GUI-0090] 354042 349414 _191_/CLK 2.501929e-10\r\n[INFO GUI-0090] 353016 354004 _192_/CLK 2.5043992e-10\r\n[INFO GUI-0090] 282288 334716 ces_6_6/clock 2.3779426e-10\r\n[INFO GUI-0090] 325488 334716 ces_6_7/clock 2.374277e-10\r\n[INFO GUI-0090] 282288 382236 ces_7_6/clock 2.4838717e-10\r\n[INFO GUI-0090] 325488 382236 ces_7_7/clock 2.4390354e-10\r\n[INFO GUI-0090] 23088 239676 ces_4_0/clock 2.6987032e-10\r\n[INFO GUI-0090] 66288 239676 ces_4_1/clock 2.6595942e-10\r\n[INFO GUI-0090] 109488 239676 ces_4_2/clock 2.5412097e-10\r\n[INFO GUI-0090] 152688 239676 ces_4_3/clock 2.2762146e-10\r\n[INFO GUI-0090] 23088 287196 ces_5_0/clock 2.6053942e-10\r\n[INFO GUI-0090] 66288 287196 ces_5_1/clock 2.5651453e-10\r\n[INFO GUI-0090] 109488 287196 ces_5_2/clock 2.451736e-10\r\n[INFO GUI-0090] 152688 287196 ces_5_3/clock 2.2595725e-10\r\n[INFO GUI-0090] 195888 287196 ces_5_4/clock 2.334176e-10\r\n[INFO GUI-0090] 239088 287196 ces_5_5/clock 2.501299e-10\r\n[INFO GUI-0090] 282288 287196 ces_5_6/clock 2.6032337e-10\r\n[INFO GUI-0090] 325488 287196 ces_5_7/clock 2.6381633e-10\r\n[INFO GUI-0090] 195888 239676 ces_4_4/clock 2.1926745e-10\r\n[INFO GUI-0090] 239088 239676 ces_4_5/clock 2.2354223e-10\r\n[INFO GUI-0090] 23088 382236 ces_7_0/clock 2.871124e-10\r\n[INFO GUI-0090] 66288 382236 ces_7_1/clock 2.8355954e-10\r\n[INFO GUI-0090] 109488 382236 ces_7_2/clock 2.7308103e-10\r\n[INFO GUI-0090] 152688 382236 ces_7_3/clock 2.729042e-10\r\n[INFO GUI-0090] 23088 334716 ces_6_0/clock 2.504028e-10\r\n[INFO GUI-0090] 66288 334716 ces_6_1/clock 2.464243e-10\r\n[INFO GUI-0090] 109488 334716 ces_6_2/clock 2.3548827e-10\r\n[INFO GUI-0090] 152688 334716 ces_6_3/clock 2.3087125e-10\r\n[INFO GUI-0090] 195888 334716 ces_6_4/clock 2.3455274e-10\r\n[INFO GUI-0090] 239088 334716 ces_6_5/clock 2.388076e-10\r\n[INFO GUI-0090] 195888 382236 ces_7_4/clock 2.4005137e-10\r\n[INFO GUI-0090] 239088 382236 ces_7_5/clock 2.4445432e-10\r\n\"\"\"\r\nrows = data.strip().split(\"\\n\")\r\nx = []\r\ny = []\r\nz = []\r\nfor row in rows:\r\n    _, _, x_val, y_val, _, z_val = row.split()\r\n    x.append(float(x_val))\r\n    y.append(float(y_val))\r\n    z.append(float(z_val)/1E-12)\r\n\r\n# Prepare grid for interpolation\r\nxi = np.linspace(min(x), max(x), 100)\r\nyi = np.linspace(min(y), max(y), 100)\r\nxi, yi = np.meshgrid(xi, yi)\r\n\r\n# Interpolate the z values\r\nzi = griddata((x, y), z, (xi, yi), method='linear')\r\n\r\n# Plot the 3D heatmap\r\nfig = plt.figure()\r\nax = fig.add_subplot(111, projection='3d')\r\nsurf = ax.plot_surface(xi, yi, zi, rstride=1, cstride=1, cmap=plt.cm.jet,\r\n                       linewidth=0, antialiased=False)\r\n\r\nfig.colorbar(surf)\r\n\r\nplt.show()\r\n```\r\n", "date": "2023-08-04T12:44:23Z"}, {"author": "oharboe", "role": "assistant", "message": "asap7/sha3 using python snippet above...\r\n\r\nAnimation: https://drive.google.com/file/d/1k64ew7QkB9AeRaFs9ZOX09EqzeMZupMG/view\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/01ef0594-b8dd-4188-b35d-1978d9ec762e)\r\n", "date": "2023-08-04T12:56:26Z"}, {"author": "maliberty", "role": "assistant", "message": "@precisionmoon any thoughts here as I know you want more visualization as well.", "date": "2023-08-04T17:25:43Z"}], "date": "2023-08-04T09:01:31Z", "category": "Feature Request", "subcategory": "Data visualization improvement", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3771", "id": 3771, "title": "Generate report", "author": "AayushiRV", "description": "Is there any way to generate a report for max cap, max fanout and max slew after \u201crepair_design\u201d is applied?", "content": [{"author": "AayushiRV", "role": "user", "message": "Is there any way to generate a report for max cap, max fanout and max slew after \u201crepair_design\u201d is applied?", "date": "2023-08-03T10:26:09Z"}, {"author": "maliberty", "role": "assistant", "message": "If you are using ORFS then we already do that in 3_4_place_resized.log.  If any flow you can insert the relevant commands.", "date": "2023-08-03T12:37:34Z"}, {"author": "AayushiRV", "role": "assistant", "message": "I am not using ORFS.", "date": "2023-08-04T04:57:30Z"}, {"author": "maliberty", "role": "assistant", "message": "You can add ``` report_check_types -max_slew -max_capacitance -max_fanout``` to whatever you are using then", "date": "2023-08-04T05:28:58Z"}, {"author": "AayushiRV", "role": "assistant", "message": "OK, I am using this, if after using this command nothing is shown does that means all the violations are cleared? \r\n", "date": "2023-08-04T05:32:17Z"}], "date": "2023-08-03T10:26:09Z", "category": "Query", "subcategory": "Reporting", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3779", "id": 3779, "title": "arm64 release for Ubuntu", "author": "ilyaext", "description": "I'm looking for an arm64 OpenROAD architecture release to install on Linux AWS EC2 arm64.\r\nCan anyone give me a link or suggest how to compile?", "content": [{"author": "ilyaext", "role": "user", "message": "I'm looking for an arm64 OpenROAD architecture release to install on Linux AWS EC2 arm64.\r\nCan anyone give me a link or suggest how to compile?", "date": "2023-08-03T20:02:32Z"}, {"author": "maliberty", "role": "assistant", "message": "We don't test or release on arm64 but you can probably build from source.", "date": "2023-08-03T22:00:56Z"}, {"author": "maliberty", "role": "assistant", "message": "https://openroad.readthedocs.io/en/latest/user/Build.html", "date": "2023-08-03T22:01:30Z"}, {"author": "maliberty", "role": "assistant", "message": "https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildLocally.html for ORFS", "date": "2023-08-03T22:02:22Z"}], "date": "2023-08-03T20:02:32Z", "category": "Build", "subcategory": "Cross-platform compilation", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3772", "id": 3772, "title": "Reducing slew on clock tree with set_max_transition?", "author": "oharboe", "description": "With `make DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk` I get a lot of slew and I heard about `set_max_transition` and found it used in some designs in ORFS, so I thought I would see what it did...\r\n\r\n\r\n```\r\n==========================================================================\r\nresizer pre report_checks -path_delay max\r\n--------------------------------------------------------------------------\r\nStartpoint: _358_ (falling edge-triggered flip-flop clocked by io_clk')\r\nEndpoint: io_ram_dout2[43] (output port clocked by io_clk)\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                  0.00    0.00    0.00   clock io_clk' (fall edge)\r\n                          0.00    0.00   clock network delay (ideal)\r\n                  0.00    0.00    0.00 v _358_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                 95.79  123.37  123.37 v _358_/QN (DFFLQNx1_ASAP7_75t_R)\r\n     1    6.79                           _038_ (net)\r\n                 96.33    4.05  127.42 v _173_/A (INVx3_ASAP7_75t_R)\r\n                 45.29   35.23  162.65 ^ _173_/Y (INVx3_ASAP7_75t_R)\r\n     1    3.94                           io_ram_dout2[43] (net)\r\n                 45.43    1.45  164.10 ^ io_ram_dout2[43] (out)\r\n                                164.10   data arrival time\r\n\r\n                  0.00  500.00  500.00   clock io_clk (rise edge)\r\n                          0.00  500.00   clock network delay (ideal)\r\n                          0.00  500.00   clock reconvergence pessimism\r\n                       -100.00  400.00   output external delay\r\n                                400.00   data required time\r\n-----------------------------------------------------------------------------\r\n                                400.00   data required time\r\n                               -164.10   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                235.90   slack (MET)\r\n```\r\n\r\n\r\n0.050 ns seems to be a good place to start to bring down the slew from 95.79 above.\r\n\r\nWhen I add `set_max_transition 0.05 [current_design]` to the constraints.sdc, the flow seems to get stuck:\r\n\r\n```\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 79 input buffers.\r\n[INFO RSZ-0028] Inserted 128 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 232um.\r\n[no further output after 10 minutes or so]\r\n```\r\n\r\nmaybe the units are picoseconds? `set_max_transition 50 [current_design]`, same result, resizing doesn't seem to complete.\r\n\r\nCreated a draft pull request to check if it completes... https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1315\r\n", "content": [{"author": "oharboe", "role": "user", "message": "With `make DESIGN_CONFIG=designs/asap7/sram-64x16/config.mk` I get a lot of slew and I heard about `set_max_transition` and found it used in some designs in ORFS, so I thought I would see what it did...\r\n\r\n\r\n```\r\n==========================================================================\r\nresizer pre report_checks -path_delay max\r\n--------------------------------------------------------------------------\r\nStartpoint: _358_ (falling edge-triggered flip-flop clocked by io_clk')\r\nEndpoint: io_ram_dout2[43] (output port clocked by io_clk)\r\nPath Group: io_clk\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                  0.00    0.00    0.00   clock io_clk' (fall edge)\r\n                          0.00    0.00   clock network delay (ideal)\r\n                  0.00    0.00    0.00 v _358_/CLK (DFFLQNx1_ASAP7_75t_R)\r\n                 95.79  123.37  123.37 v _358_/QN (DFFLQNx1_ASAP7_75t_R)\r\n     1    6.79                           _038_ (net)\r\n                 96.33    4.05  127.42 v _173_/A (INVx3_ASAP7_75t_R)\r\n                 45.29   35.23  162.65 ^ _173_/Y (INVx3_ASAP7_75t_R)\r\n     1    3.94                           io_ram_dout2[43] (net)\r\n                 45.43    1.45  164.10 ^ io_ram_dout2[43] (out)\r\n                                164.10   data arrival time\r\n\r\n                  0.00  500.00  500.00   clock io_clk (rise edge)\r\n                          0.00  500.00   clock network delay (ideal)\r\n                          0.00  500.00   clock reconvergence pessimism\r\n                       -100.00  400.00   output external delay\r\n                                400.00   data required time\r\n-----------------------------------------------------------------------------\r\n                                400.00   data required time\r\n                               -164.10   data arrival time\r\n-----------------------------------------------------------------------------\r\n                                235.90   slack (MET)\r\n```\r\n\r\n\r\n0.050 ns seems to be a good place to start to bring down the slew from 95.79 above.\r\n\r\nWhen I add `set_max_transition 0.05 [current_design]` to the constraints.sdc, the flow seems to get stuck:\r\n\r\n```\r\nPerform port buffering...\r\n[INFO RSZ-0027] Inserted 79 input buffers.\r\n[INFO RSZ-0028] Inserted 128 output buffers.\r\nPerform buffer insertion...\r\n[INFO RSZ-0058] Using max wire length 232um.\r\n[no further output after 10 minutes or so]\r\n```\r\n\r\nmaybe the units are picoseconds? `set_max_transition 50 [current_design]`, same result, resizing doesn't seem to complete.\r\n\r\nCreated a draft pull request to check if it completes... https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1315\r\n", "date": "2023-08-03T11:38:18Z"}, {"author": "maliberty", "role": "assistant", "message": "You are setting it 0.05ps not ns which is an impossibly fast target.", "date": "2023-08-03T12:39:44Z"}, {"author": "oharboe", "role": "assistant", "message": "`set_max_transition 80 [current_design]` is as low as I could get and `make cts` completing in a reasonable amount of time.\r\n\r\nLots of violations:\r\n\r\n```\r\n==========================================================================\r\ncts final report_check_types -max_slew -max_cap -max_fanout -violators\r\n--------------------------------------------------------------------------\r\nmax slew\r\n\r\nPin                                    Limit    Slew   Slack\r\n------------------------------------------------------------\r\n_8_44/A                                80.00  330.31 -250.31 (VIOLATED)\r\n_8_46/A                                80.00  309.18 -229.18 (VIOLATED)\r\nclkbuf_4_4_0_io_clk/Y                  80.00  294.55 -214.55 (VIOLATED)\r\nSRAM2RW16x32_2/CE1                     80.00  249.22 -169.22 (VIOLATED)\r\nSRAM2RW16x32_2/CE2                     80.00  249.17 -169.17 (VIOLATED)\r\nSRAM2RW16x32/CE1                       80.00  224.86 -144.86 (VIOLATED)\r\nSRAM2RW16x32/CE2                       80.00  224.83 -144.83 (VIOLATED)\r\n_58_73/A                               80.00  193.42 -113.42 (VIOLATED)\r\n_58_74/A                               80.00  193.40 -113.40 (VIOLATED)\r\n_8_52/A                                80.00  193.35 -113.35 (VIOLATED)\r\n_8_51/A                                80.00  193.32 -113.32 (VIOLATED)\r\n_8_48/A                                80.00  193.25 -113.25 (VIOLATED)\r\n_8_53/A                                80.00  193.22 -113.22 (VIOLATED)\r\n_8_50/A                                80.00  193.03 -113.03 (VIOLATED)\r\n_58_66/A                               80.00  192.96 -112.96 (VIOLATED)\r\n_58/A                                  80.00  192.91 -112.91 (VIOLATED)\r\n_58_71/A                               80.00  192.76 -112.76 (VIOLATED)\r\n_58_60/A                               80.00  192.65 -112.65 (VIOLATED)\r\n_58_67/A                               80.00  192.64 -112.64 (VIOLATED)\r\n_8_17/A                                80.00  192.28 -112.28 (VIOLATED)\r\n_8_18/A                                80.00  192.23 -112.23 (VIOLATED)\r\nclkbuf_4_11_0_io_clk/Y                 80.00  191.85 -111.85 (VIOLATED)\r\n_8_55/A                                80.00  154.73  -74.73 (VIOLATED)\r\n_8_24/A                                80.00  154.72  -74.72 (VIOLATED)\r\n_58_70/A                               80.00  154.72  -74.72 (VIOLATED)\r\n_58_77/A                               80.00  154.71  -74.71 (VIOLATED)\r\n_8_54/A                                80.00  154.67  -74.67 (VIOLATED)\r\n_8_49/A                                80.00  154.66  -74.66 (VIOLATED)\r\n_8_57/A                                80.00  154.55  -74.55 (VIOLATED)\r\n_58_75/A                               80.00  154.42  -74.42 (VIOLATED)\r\n_58_63/A                               80.00  154.36  -74.36 (VIOLATED)\r\nclkbuf_4_10_0_io_clk/Y                 80.00  153.74  -73.74 (VIOLATED)\r\nSRAM2RW16x32_3/CE1                     80.00  148.30  -68.30 (VIOLATED)\r\n_8_19/A                                80.00  142.96  -62.96 (VIOLATED)\r\n_8_36/A                                80.00  142.96  -62.96 (VIOLATED)\r\nclkbuf_4_2_0_io_clk/Y                  80.00  142.96  -62.96 (VIOLATED)\r\nclkbuf_4_9_0_io_clk/A                  80.00  140.76  -60.76 (VIOLATED)\r\nclkbuf_4_8_0_io_clk/A                  80.00  140.75  -60.75 (VIOLATED)\r\nclkbuf_4_10_0_io_clk/A                 80.00  139.69  -59.69 (VIOLATED)\r\nclkbuf_4_4_0_io_clk/A                  80.00  139.66  -59.66 (VIOLATED)\r\nclkbuf_4_5_0_io_clk/A                  80.00  139.65  -59.65 (VIOLATED)\r\nclkbuf_4_11_0_io_clk/A                 80.00  139.64  -59.64 (VIOLATED)\r\nclkbuf_4_6_0_io_clk/A                  80.00  139.22  -59.22 (VIOLATED)\r\nclkbuf_4_7_0_io_clk/A                  80.00  139.19  -59.19 (VIOLATED)\r\nclkbuf_4_0_0_io_clk/A                  80.00  138.58  -58.58 (VIOLATED)\r\nclkbuf_4_1_0_io_clk/A                  80.00  138.12  -58.12 (VIOLATED)\r\nclkbuf_4_15_0_io_clk/A                 80.00  137.02  -57.02 (VIOLATED)\r\nclkbuf_4_14_0_io_clk/A                 80.00  137.02  -57.02 (VIOLATED)\r\nclkbuf_4_13_0_io_clk/A                 80.00  137.01  -57.01 (VIOLATED)\r\nclkbuf_4_12_0_io_clk/A                 80.00  136.99  -56.99 (VIOLATED)\r\nclkbuf_4_3_0_io_clk/A                  80.00  136.86  -56.86 (VIOLATED)\r\nclkbuf_4_2_0_io_clk/A                  80.00  136.22  -56.22 (VIOLATED)\r\nclkbuf_0_io_clk/Y                      80.00  132.32  -52.32 (VIOLATED)\r\nSRAM2RW16x32_2/O2[23]                   0.23   45.42  -45.19 (VIOLATED)\r\nSRAM2RW16x32_2/O2[24]                   0.23   45.26  -45.04 (VIOLATED)\r\nSRAM2RW16x32_2/O2[16]                   0.23   41.77  -41.54 (VIOLATED)\r\nSRAM2RW16x32_3/CE2                     80.00  120.37  -40.37 (VIOLATED)\r\nSRAM2RW16x32_2/O2[30]                   0.23   40.24  -40.01 (VIOLATED)\r\nSRAM2RW16x32_2/O2[26]                   0.23   38.87  -38.65 (VIOLATED)\r\nSRAM2RW16x32_2/O2[29]                   0.23   38.54  -38.31 (VIOLATED)\r\nSRAM2RW16x32_2/O2[12]                   0.23   38.16  -37.93 (VIOLATED)\r\nSRAM2RW16x32_2/O2[17]                   0.23   36.78  -36.55 (VIOLATED)\r\nSRAM2RW16x32_2/O2[7]                    0.23   36.69  -36.46 (VIOLATED)\r\n```", "date": "2023-08-03T12:46:17Z"}, {"author": "oharboe", "role": "assistant", "message": "This PR uses set_max_transition. I have an example to study now, so closing.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1311", "date": "2023-08-03T15:26:55Z"}], "date": "2023-08-03T11:38:18Z", "category": "Query", "subcategory": "Usage question", "Tool": "Gate Resizer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3766", "id": 3766, "title": "What does \"time given to startpoint\" mean?", "author": "oharboe", "description": "Silly question...\r\n\r\n```\r\n>>> report_checks -path_delay max -through [get_pins foo*] -format full_clock_expanded -fields {net slew cap}\r\nStartpoint: yyy (positive level-sensitive latch clocked by clock)\r\nEndpoint: zzz (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                          0.00    0.00   clock source latency\r\n                  0.00    0.00    0.00 ^ clock (in)\r\n[deleted]\r\n                        580.10 4606.57   time given to startpoint\r\n[deleted]\r\n\u00b4\u00b4\u00b4\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Silly question...\r\n\r\n```\r\n>>> report_checks -path_delay max -through [get_pins foo*] -format full_clock_expanded -fields {net slew cap}\r\nStartpoint: yyy (positive level-sensitive latch clocked by clock)\r\nEndpoint: zzz (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\nFanout     Cap    Slew   Delay    Time   Description\r\n-----------------------------------------------------------------------------\r\n                          0.00    0.00   clock clock (rise edge)\r\n                          0.00    0.00   clock source latency\r\n                  0.00    0.00    0.00 ^ clock (in)\r\n[deleted]\r\n                        580.10 4606.57   time given to startpoint\r\n[deleted]\r\n\u00b4\u00b4\u00b4\r\n", "date": "2023-08-02T16:06:15Z"}, {"author": "maliberty", "role": "assistant", "message": "I think you want to resolve \"positive level-sensitive latch\" first.  I think it relates to latch transparency.", "date": "2023-08-02T16:09:24Z"}, {"author": "oharboe", "role": "assistant", "message": "Fixed in #3762", "date": "2023-08-02T16:45:50Z"}], "date": "2023-08-02T16:06:15Z", "category": "Query", "subcategory": "Timing analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3763", "id": 3763, "title": "How can I set a false path within a macro?", "author": "oharboe", "description": "I want to set a false path for two pins on a macro, but not at the macro's level, but rather at the containing macros level.\r\n\r\nI looked at\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/bf9f1e81bfabb85c0bfe794d18a4ea82dda83872/flow/designs/tsmc65lp/vanilla5/constraint.sdc#L724\r\n\r\nand thought it was supported. Though when I read https://github.com/The-OpenROAD-Project/OpenSTA/blob/3275a304e17092895b7d7721148edc7dc67ba3aa/search/Sta.cc#L2080, it looks like I can only use the ports of the macro for the constraints.sdc file as `-to` and `-from`. \r\n\r\nNo changes are intended for mock-array w.r.t. this, I'm only using mock-array to illustrate what I'm trying to find the syntax for:\r\n\r\n```\r\n>>> set_false_path -from [get_pins ces_6_6/io_ins_right*] -to [get_pins ces_6_6/io_outs_right*]\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[0]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[10]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[11]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[12]' is not a valid start point.\r\n```\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65c8550d-3187-4503-a1b7-2e35c81ccba6)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I want to set a false path for two pins on a macro, but not at the macro's level, but rather at the containing macros level.\r\n\r\nI looked at\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/bf9f1e81bfabb85c0bfe794d18a4ea82dda83872/flow/designs/tsmc65lp/vanilla5/constraint.sdc#L724\r\n\r\nand thought it was supported. Though when I read https://github.com/The-OpenROAD-Project/OpenSTA/blob/3275a304e17092895b7d7721148edc7dc67ba3aa/search/Sta.cc#L2080, it looks like I can only use the ports of the macro for the constraints.sdc file as `-to` and `-from`. \r\n\r\nNo changes are intended for mock-array w.r.t. this, I'm only using mock-array to illustrate what I'm trying to find the syntax for:\r\n\r\n```\r\n>>> set_false_path -from [get_pins ces_6_6/io_ins_right*] -to [get_pins ces_6_6/io_outs_right*]\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[0]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[10]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[11]' is not a valid start point.\r\n[WARNING STA-0018] 'ces_6_6/io_ins_right[12]' is not a valid start point.\r\n```\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/65c8550d-3187-4503-a1b7-2e35c81ccba6)\r\n", "date": "2023-08-02T08:27:43Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nI got this from OpenSTA user guide:\r\n```\r\nfrom_list A list of clocks, instances, ports or pins.\r\nthrough_list A list of instances, pins or nets.\r\nto_list A list of clocks, instances, ports or pins.\r\n```\r\nSo as per this you can provide `pins` also.\r\n```\r\nThe **set_false_path** command disables timing along a path from, through and to a group of design objects.\r\n\r\nObjects in **from_list** can be clocks, register/latch instances, or register/latch clock pins. The -rise_from\r\nand -fall_from keywords restrict the false paths to a specific clock edge.\r\n\r\nObjects in **through_list** can be nets, instances, instance pins, or hierarchical pins,. The -rise_through\r\nand -fall_through keywords restrict the false paths to a specific path edge that traverses through the\r\nobject.\r\n\r\nObjects in **to_list** can be clocks, register/latch instances, or register/latch clock pins. The -rise_to and -\r\nfall_to keywords restrict the false paths to a specific transition at the path end.\r\n```", "date": "2023-08-02T13:01:02Z"}, {"author": "maliberty", "role": "assistant", "message": "You probably need to use -through as those points are not the beginning or end of a timing path.", "date": "2023-08-02T14:11:14Z"}, {"author": "maliberty", "role": "assistant", "message": "I suspect you want \r\n\r\nset_false_path -through [get_pins ces_6_6/io_ins_right*] -through [get_pins ces_6_6/io_outs_right*]\r\n\r\n", "date": "2023-08-02T15:04:44Z"}], "date": "2023-08-02T08:27:43Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3732", "id": 3732, "title": "insert_buffer", "author": "AayushiRV", "description": "I am inserting buffers to my design. How can I find that buffers are being inserted? I cannot find anything in my design's netlist.", "content": [{"author": "AayushiRV", "role": "user", "message": "I am inserting buffers to my design. How can I find that buffers are being inserted? I cannot find anything in my design's netlist.", "date": "2023-07-27T11:02:09Z"}, {"author": "maliberty", "role": "assistant", "message": "How are you inserting the buffers?", "date": "2023-07-27T13:56:03Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no such command in OR:\r\n```\r\nopenroad> insert_buffer\r\ninvalid command name \"insert_buffer\"\r\nwhile evaluating insert_buffer\r\n```", "date": "2023-07-29T13:31:31Z"}, {"author": "vijayank88", "role": "assistant", "message": "@AayushiRV \r\n`insert_buffer` is maintained by OpenLane. Check this example: https://github.com/The-OpenROAD-Project/OpenLane/blob/master/tests/1007/interactive.tcl\r\nSo OpenROAD nothing to do with that.", "date": "2023-08-02T10:08:27Z"}], "date": "2023-07-27T11:02:09Z", "category": "Query", "subcategory": "Usage question", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3745", "id": 3745, "title": "mock-array placement is very different from row to row", "author": "oharboe", "description": "I'm curious as to why the placement gives so different results for a situation that should be identical.\r\n\r\nThe rows in mock-array are identical and there are io_lsbs_* on the right of mock-array that are fed flip flops.\r\n\r\nA snapshot from `make gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/91c718ad-7392-4af6-8ed4-ce2184e6ef80)\r\n\r\nIf I zoom in on the upper right row, I see that the io_lsbs_*, fed by a flipflop that is placed right next to the outputs are somewhat spread out:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/25d2393c-d316-4ca0-a50c-9bdeef629066)\r\n\r\nIf I look at the row below and to the right, I see that the io_lsbs_* are clustered together, which looks neat.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f5530a21-1135-4ad3-9f60-3304f2538d2f)\r\n\r\nAt the bottom row to the right, the io_lsbs_* are mixed into the other pins:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5b4d25a7-567f-480f-bf58-736cb65bb0e3)\r\n\r\n\r\n\r\nSide-note: make foo_issue doesn't work out of the box on mock-array because the size of the tar.gz file is ca. 100mBytes. This complicates filing bug reports and feature requests.\r\n\r\nSide-note: the io_lsbs_* are driven by a flip flop, then go to an output cell and are finally buffered before they go to the pin of the macro. Silly question: what does an output cell do and why does it need to be buffered? Can't the flip-flop drive the output pin directly?\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm curious as to why the placement gives so different results for a situation that should be identical.\r\n\r\nThe rows in mock-array are identical and there are io_lsbs_* on the right of mock-array that are fed flip flops.\r\n\r\nA snapshot from `make gui_place`:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/91c718ad-7392-4af6-8ed4-ce2184e6ef80)\r\n\r\nIf I zoom in on the upper right row, I see that the io_lsbs_*, fed by a flipflop that is placed right next to the outputs are somewhat spread out:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/25d2393c-d316-4ca0-a50c-9bdeef629066)\r\n\r\nIf I look at the row below and to the right, I see that the io_lsbs_* are clustered together, which looks neat.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/f5530a21-1135-4ad3-9f60-3304f2538d2f)\r\n\r\nAt the bottom row to the right, the io_lsbs_* are mixed into the other pins:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5b4d25a7-567f-480f-bf58-736cb65bb0e3)\r\n\r\n\r\n\r\nSide-note: make foo_issue doesn't work out of the box on mock-array because the size of the tar.gz file is ca. 100mBytes. This complicates filing bug reports and feature requests.\r\n\r\nSide-note: the io_lsbs_* are driven by a flip flop, then go to an output cell and are finally buffered before they go to the pin of the macro. Silly question: what does an output cell do and why does it need to be buffered? Can't the flip-flop drive the output pin directly?\r\n", "date": "2023-07-30T08:45:43Z"}, {"author": "maliberty", "role": "assistant", "message": "Global placement isn't a process that will produce identical results in all areas, even if they have symmetry.  We could look at specific areas if they seem to be suboptimal.\r\n\r\nYou can put the issue in google drive and put a link in the issue.\r\n\r\nWe buffer the inputs and outputs by default but it isn't strictly mandatory.  FF often don't have a large amount of drive strength for driving output signals.  However with no output loading in the sdc it probably doesn't matter but is a bit unrealistic.\r\n\r\nBtw, I still find there is too much hold buffering due to the unrealistically io constraints.", "date": "2023-07-31T21:34:53Z"}, {"author": "oharboe", "role": "assistant", "message": "> Global placement isn't a process that will produce identical results in all areas, even if they have symmetry. We could look at specific areas if they seem to be suboptimal.\r\n\r\nI was just curious how much difference is considered pathological. If, looking at the pictures, this variation is expected, then I don't think there is anything more to investigate here.\r\n\r\n`make global_place_issue` generated a 120mByte .tar.gz file, but zipping just the 3_place.odb file gave me 2 mByte .zip file: [place.zip](https://github.com/The-OpenROAD-Project/OpenROAD/files/12225008/place.zip)\r\n\r\nTo generate it locally, run `make DESIGN_CONFIG=designs/asap7/mock-array/config.mk place`\r\n\r\nIf there is something interesting here, then this discussion can be converted to a feature request with the click of a button...\r\n\r\n> You can put the issue in google drive and put a link in the issue.\r\n> \r\n> We buffer the inputs and outputs by default but it isn't strictly mandatory. FF often don't have a large amount of drive strength for driving output signals. However with no output loading in the sdc it probably doesn't matter but is a bit unrealistic.\r\n\r\nI imagine that a flip flop with a lot of drive strength would be bigger and slower... seems sensible to create a small, fast and weak flip flop and leave buffering to buffers and inverters...\r\n\r\n> \r\n> Btw, I still find there is too much hold buffering due to the unrealistically io constraints.\r\n\r\nYes... I've got changes locally removes that, but I need to understand the clock tree generation better first. That's separate concern to placement though.", "date": "2023-08-01T05:47:38Z"}, {"author": "maliberty", "role": "assistant", "message": "If I look at the current mock array the areas around the IOs are so filled with hold cells that the variation isn't as interesting as you show above as they are packed with cell, eg\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/761514/85c19478-10dc-4e52-98e0-79af467df0f0)\r\n\r\nAlso the IOs are not placed symmetrically with respect to the macros which will influence global placement.", "date": "2023-08-01T21:11:12Z"}, {"author": "oharboe", "role": "assistant", "message": "If this behavior exists when the hold cells are gone, then it's worth a second look.", "date": "2023-08-01T21:32:38Z"}], "date": "2023-07-30T08:45:43Z", "category": "Runtime", "subcategory": "Unexpected placement behavior", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3746", "id": 3746, "title": "Can I calculate the delay for a macro based on the .lib file?", "author": "oharboe", "description": "I would like to understand the .lib file format a bit better. It is my understanding that I should be able to calculate the delay of the macro output based on what is in the .lib file.\r\n\r\nFor the mock-array, we have 183.19 ps delay for driving the io_outs_left[0] output. Looking at the .lib file, I can't figure out where 183.19ps comes from.\r\n\r\n```\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n```\r\n\r\nFrom mock-array:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left_7[0] -format full -format full_clock_expanded\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_outs_left_7[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock source latency\r\n   0.00    0.00 ^ clock (in)\r\n  38.29   38.29 ^ wire65/Y (BUFx16f_ASAP7_75t_R)\r\n  43.22   81.50 ^ clkbuf_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.84  121.35 ^ clkbuf_1_1_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  29.43  150.78 ^ clkbuf_2_2_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  32.00  182.78 ^ clkbuf_3_5_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.23  222.00 ^ clkbuf_4_10_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  16.70  238.70 ^ max_length67/Y (BUFx12f_ASAP7_75t_R)\r\n  30.80  269.51 ^ max_length66/Y (BUFx12f_ASAP7_75t_R)\r\n  33.73  303.24 ^ ces_7_0/clock (Element)\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n  18.46  504.89 ^ output3073/Y (BUFx2_ASAP7_75t_R)\r\n   0.88  505.77 ^ io_outs_left_7[0] (out)\r\n         505.77   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n   0.00 1000.00   clock reconvergence pessimism\r\n-200.00  800.00   output external delay\r\n         800.00   data required time\r\n---------------------------------------------------------\r\n         800.00   data required time\r\n        -505.77   data arrival time\r\n---------------------------------------------------------\r\n         294.23   slack (MET)\r\n```\r\n\r\nIf I look in the Element, I can get a full report of what is driving that pin. However, my understanding is that some detail(I don't know what) is lost in the Element.lib representation:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left[0]\r\nStartpoint: _749_ (falling edge-triggered flip-flop clocked by clock')\r\nEndpoint: io_outs_left[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock' (fall edge)\r\n 108.94  108.94   clock network delay (propagated)\r\n   0.00  108.94 v _749_/CLK (DFFLQNx2_ASAP7_75t_R)\r\n  47.39  156.33 v _749_/QN (DFFLQNx2_ASAP7_75t_R)\r\n  12.65  168.98 ^ _496_/Y (INVx3_ASAP7_75t_R)\r\n  18.89  187.86 ^ _777_/Y (BUFx2_ASAP7_75t_R)\r\n  18.21  206.07 ^ output336/Y (BUFx2_ASAP7_75t_R)\r\n   0.75  206.82 ^ io_outs_left[0] (out)\r\n         206.82   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n -20.00  980.00   clock uncertainty\r\n   0.00  980.00   clock reconvergence pessimism\r\n -50.00  930.00   output external delay\r\n         930.00   data required time\r\n---------------------------------------------------------\r\n         930.00   data required time\r\n        -206.82   data arrival time\r\n---------------------------------------------------------\r\n         723.18   slack (MET)\r\n```\r\n\r\nHere the latency is 206.82, so that's not the same as 183.19 above...\r\n\r\n\r\nHere is the pin from the .lib file... Since the above is a rising transition, I think something in the \"rise\" part should add up to 183.19?\r\n\r\n```\r\nlibrary (Element) {\r\n  comment                        : \"\";\r\n  delay_model                    : table_lookup;\r\n  simulation                     : false;\r\n  capacitive_load_unit (1,fF);\r\n  leakage_power_unit             : 1pW;\r\n  current_unit                   : \"1A\";\r\n  pulling_resistance_unit        : \"1kohm\";\r\n  time_unit                      : \"1ps\";\r\n  voltage_unit                   : \"1v\";\r\n  library_features(report_delay_calculation);\r\n\r\n  input_threshold_pct_rise : 50;\r\n  input_threshold_pct_fall : 50;\r\n  output_threshold_pct_rise : 50;\r\n  output_threshold_pct_fall : 50;\r\n  slew_lower_threshold_pct_rise : 10;\r\n  slew_lower_threshold_pct_fall : 10;\r\n  slew_upper_threshold_pct_rise : 90;\r\n  slew_upper_threshold_pct_fall : 90;\r\n  slew_derate_from_library : 1.0;\r\n\r\n\r\n  nom_process                    : 1.0;\r\n  nom_temperature                : 0.0;\r\n  nom_voltage                    : 0.77;\r\n\r\n  lu_table_template(template_1) {\r\n    variable_1 : total_output_net_capacitance;\r\n    index_1 (\"1.44000,  2.88000,  5.76000,  11.52000,  23.04000,  46.08000,  92.16000\");\r\n  }\r\n[deleted]\r\n  type (\"io_outs_left\") {\r\n    base_type : array;\r\n    data_type : bit;\r\n    bit_width : 64;\r\n    bit_from : 63;\r\n    bit_to : 0;\r\n  }\r\n[deleted]\r\n    pin(\"io_outs_left[0]\") {\r\n      direction : output;\r\n      capacitance : 0.0000;\r\n      timing() {\r\n        related_pin : \"clock\";\r\n        timing_type : rising_edge;\r\n\tcell_rise(template_1) {\r\n          values(\"179.22894,181.54152,185.64272,193.40265,208.65739,239.04976,299.74982\");\r\n\t}\r\n\trise_transition(template_1) {\r\n          values(\"7.61338,11.68247,19.95989,36.84301,71.06670,139.93100,277.88907\");\r\n\t}\r\n\tcell_fall(template_1) {\r\n          values(\"176.95767,179.16806,182.98384,189.92587,203.38441,230.16859,283.65878\");\r\n\t}\r\n\tfall_transition(template_1) {\r\n          values(\"6.99804,10.42909,17.26771,31.14958,59.35967,116.35495,230.77396\");\r\n\t}\r\n      }\r\n    }\r\n```\r\n\r\nWhen I look at mock-array, I see that the wire is highlighted in yellow when I clock on the Element delay.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/092fe3d1-a379-4937-b6b3-408fa28d3000)\r\n\r\nBut when I click on the next line, that wire segment is also highlighted.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5c812814-acfc-4093-9238-6ef7af09c91b)\r\n\r\n\r\nSo I guess the wire segments are associated with some of the lines in the timing list, but I can't see what the delay is due to the wire and I don't know which item that delay is associated with. I have seen separate \"wire\" lines in the timing report for `make gui_final`, but not in this case...\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I would like to understand the .lib file format a bit better. It is my understanding that I should be able to calculate the delay of the macro output based on what is in the .lib file.\r\n\r\nFor the mock-array, we have 183.19 ps delay for driving the io_outs_left[0] output. Looking at the .lib file, I can't figure out where 183.19ps comes from.\r\n\r\n```\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n```\r\n\r\nFrom mock-array:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left_7[0] -format full -format full_clock_expanded\r\nStartpoint: ces_7_0 (rising edge-triggered flip-flop clocked by clock)\r\nEndpoint: io_outs_left_7[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock source latency\r\n   0.00    0.00 ^ clock (in)\r\n  38.29   38.29 ^ wire65/Y (BUFx16f_ASAP7_75t_R)\r\n  43.22   81.50 ^ clkbuf_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.84  121.35 ^ clkbuf_1_1_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  29.43  150.78 ^ clkbuf_2_2_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  32.00  182.78 ^ clkbuf_3_5_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  39.23  222.00 ^ clkbuf_4_10_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  16.70  238.70 ^ max_length67/Y (BUFx12f_ASAP7_75t_R)\r\n  30.80  269.51 ^ max_length66/Y (BUFx12f_ASAP7_75t_R)\r\n  33.73  303.24 ^ ces_7_0/clock (Element)\r\n 183.19  486.43 ^ ces_7_0/io_outs_left[0] (Element)\r\n  18.46  504.89 ^ output3073/Y (BUFx2_ASAP7_75t_R)\r\n   0.88  505.77 ^ io_outs_left_7[0] (out)\r\n         505.77   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n   0.00 1000.00   clock reconvergence pessimism\r\n-200.00  800.00   output external delay\r\n         800.00   data required time\r\n---------------------------------------------------------\r\n         800.00   data required time\r\n        -505.77   data arrival time\r\n---------------------------------------------------------\r\n         294.23   slack (MET)\r\n```\r\n\r\nIf I look in the Element, I can get a full report of what is driving that pin. However, my understanding is that some detail(I don't know what) is lost in the Element.lib representation:\r\n\r\n```\r\n>>> report_checks -path_delay max -to io_outs_left[0]\r\nStartpoint: _749_ (falling edge-triggered flip-flop clocked by clock')\r\nEndpoint: io_outs_left[0] (output port clocked by clock)\r\nPath Group: clock\r\nPath Type: max\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock' (fall edge)\r\n 108.94  108.94   clock network delay (propagated)\r\n   0.00  108.94 v _749_/CLK (DFFLQNx2_ASAP7_75t_R)\r\n  47.39  156.33 v _749_/QN (DFFLQNx2_ASAP7_75t_R)\r\n  12.65  168.98 ^ _496_/Y (INVx3_ASAP7_75t_R)\r\n  18.89  187.86 ^ _777_/Y (BUFx2_ASAP7_75t_R)\r\n  18.21  206.07 ^ output336/Y (BUFx2_ASAP7_75t_R)\r\n   0.75  206.82 ^ io_outs_left[0] (out)\r\n         206.82   data arrival time\r\n\r\n1000.00 1000.00   clock clock (rise edge)\r\n   0.00 1000.00   clock network delay (propagated)\r\n -20.00  980.00   clock uncertainty\r\n   0.00  980.00   clock reconvergence pessimism\r\n -50.00  930.00   output external delay\r\n         930.00   data required time\r\n---------------------------------------------------------\r\n         930.00   data required time\r\n        -206.82   data arrival time\r\n---------------------------------------------------------\r\n         723.18   slack (MET)\r\n```\r\n\r\nHere the latency is 206.82, so that's not the same as 183.19 above...\r\n\r\n\r\nHere is the pin from the .lib file... Since the above is a rising transition, I think something in the \"rise\" part should add up to 183.19?\r\n\r\n```\r\nlibrary (Element) {\r\n  comment                        : \"\";\r\n  delay_model                    : table_lookup;\r\n  simulation                     : false;\r\n  capacitive_load_unit (1,fF);\r\n  leakage_power_unit             : 1pW;\r\n  current_unit                   : \"1A\";\r\n  pulling_resistance_unit        : \"1kohm\";\r\n  time_unit                      : \"1ps\";\r\n  voltage_unit                   : \"1v\";\r\n  library_features(report_delay_calculation);\r\n\r\n  input_threshold_pct_rise : 50;\r\n  input_threshold_pct_fall : 50;\r\n  output_threshold_pct_rise : 50;\r\n  output_threshold_pct_fall : 50;\r\n  slew_lower_threshold_pct_rise : 10;\r\n  slew_lower_threshold_pct_fall : 10;\r\n  slew_upper_threshold_pct_rise : 90;\r\n  slew_upper_threshold_pct_fall : 90;\r\n  slew_derate_from_library : 1.0;\r\n\r\n\r\n  nom_process                    : 1.0;\r\n  nom_temperature                : 0.0;\r\n  nom_voltage                    : 0.77;\r\n\r\n  lu_table_template(template_1) {\r\n    variable_1 : total_output_net_capacitance;\r\n    index_1 (\"1.44000,  2.88000,  5.76000,  11.52000,  23.04000,  46.08000,  92.16000\");\r\n  }\r\n[deleted]\r\n  type (\"io_outs_left\") {\r\n    base_type : array;\r\n    data_type : bit;\r\n    bit_width : 64;\r\n    bit_from : 63;\r\n    bit_to : 0;\r\n  }\r\n[deleted]\r\n    pin(\"io_outs_left[0]\") {\r\n      direction : output;\r\n      capacitance : 0.0000;\r\n      timing() {\r\n        related_pin : \"clock\";\r\n        timing_type : rising_edge;\r\n\tcell_rise(template_1) {\r\n          values(\"179.22894,181.54152,185.64272,193.40265,208.65739,239.04976,299.74982\");\r\n\t}\r\n\trise_transition(template_1) {\r\n          values(\"7.61338,11.68247,19.95989,36.84301,71.06670,139.93100,277.88907\");\r\n\t}\r\n\tcell_fall(template_1) {\r\n          values(\"176.95767,179.16806,182.98384,189.92587,203.38441,230.16859,283.65878\");\r\n\t}\r\n\tfall_transition(template_1) {\r\n          values(\"6.99804,10.42909,17.26771,31.14958,59.35967,116.35495,230.77396\");\r\n\t}\r\n      }\r\n    }\r\n```\r\n\r\nWhen I look at mock-array, I see that the wire is highlighted in yellow when I clock on the Element delay.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/092fe3d1-a379-4937-b6b3-408fa28d3000)\r\n\r\nBut when I click on the next line, that wire segment is also highlighted.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/5c812814-acfc-4093-9238-6ef7af09c91b)\r\n\r\n\r\nSo I guess the wire segments are associated with some of the lines in the timing list, but I can't see what the delay is due to the wire and I don't know which item that delay is associated with. I have seen separate \"wire\" lines in the timing report for `make gui_final`, but not in this case...\r\n\r\n", "date": "2023-07-30T15:49:45Z"}, {"author": "maliberty", "role": "assistant", "message": "You might try report_dcalc.  Also ```report_checks -path_delay min -fields {slew cap input nets fanout} ``` helps to break out the gate and net delay.\r\n\r\nIn general it isn't a simple calculation when there are wire parasitics.  With a simple capacitive load you just look at the table and interpolate.\r\n\r\nIn this case I would suspect input slews might be different between block and top level.", "date": "2023-07-30T16:54:28Z"}, {"author": "rovinski", "role": "assistant", "message": "Maybe take a read of this article to help understand the non-linear delay model (NLDM) for .lib:\r\nhttps://www.physicaldesign4u.com/2020/05/non-linear-delay-model-nldm-in-vlsi.html\r\n\r\nThe \"exact number\" will never appear in the .lib file. The .lib file creates a series of lookup tables. The inputs to those lookup tables are the capacitance of the wiring on the output and the input slew. If the inputs are not exactly one of the keys in the lookup table (which they usually aren't because of floating point numbers) then the output is interpolated. You will almost never see the \"exact\" delay value appear in the .lib file itself.", "date": "2023-07-30T18:24:29Z"}, {"author": "maliberty", "role": "assistant", "message": "```report_dcalc -from output3073/A -to output3073/Y```\r\nworks but the report is not simple to interpret ", "date": "2023-07-30T20:39:59Z"}, {"author": "maliberty", "role": "assistant", "message": "What is your goal in this process?  Likely there is more calculation in the interconnect side of the delay.\r\n\r\nYou can only use it on a single arc and not along a path.", "date": "2023-07-31T21:35:53Z"}, {"author": "oharboe", "role": "assistant", "message": "I am looking at some numbers that are concerning and I wanted to understand this well enough that I can find out if OpenROAD/STA are probably working correctly or if the numbers are off and it is worth digging in to.\r\n\r\nI think I do now.", "date": "2023-08-01T05:50:18Z"}], "date": "2023-07-30T15:49:45Z", "category": "Query", "subcategory": "Understanding delay calculation", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3562", "id": 3562, "title": "About Local Density Penalty Described in the Original RePlace Paper", "author": "by1e11", "description": "Hi, guys\r\n\r\nAfter reading the paper and browsing the source codes, I cannot figure out which parts of the codes reflect the local density penalty described in the paper, could you please suggest where can I find that in the implementation?\r\n\r\nThanks a lot for the nice work.\r\n\r\nBo", "content": [{"author": "by1e11", "role": "user", "message": "Hi, guys\r\n\r\nAfter reading the paper and browsing the source codes, I cannot figure out which parts of the codes reflect the local density penalty described in the paper, could you please suggest where can I find that in the implementation?\r\n\r\nThanks a lot for the nice work.\r\n\r\nBo", "date": "2023-07-02T14:40:40Z"}, {"author": "maliberty", "role": "assistant", "message": "@mgwoo can you answer this?", "date": "2023-07-02T14:50:27Z"}, {"author": "mangohehe", "role": "assistant", "message": "A method related density computation seems to be removed in the CL https://github.com/The-OpenROAD-Project/OpenROAD/commit/0f82f83049733938c2fb5d6141b291409aa4678f , in which the original design calls updateDensityForceBin inside NesterovPlace::doNesterovPlace. (not sure if this can be related)\r\n\r\n@ahmadelrouby could you help understand the changes? thanks", "date": "2023-07-19T23:17:10Z"}, {"author": "mgwoo", "role": "assistant", "message": "I didn't decipher the local density features because of unstable issues. \r\nPlease check the standalone repo for the local density calculation:  https://github.com/The-OpenROAD-Project/RePlAce/blob/7c07cffdf419c4dbd315c73c235ec5d670fb0240/src/ns.cpp#L1011", "date": "2023-07-20T07:27:20Z"}], "date": "2023-07-02T14:40:40Z", "category": "Query", "subcategory": "Code implementation query", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3593", "id": 3593, "title": "Running times for 6_report as a function of area", "author": "oharboe", "description": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and executing `python util/plot-running-times.py`, I've plotted some running times against area:\r\n\r\n`6_report` running time in seconds below. Note that the x axis is um^2, but that it is multiplied by 1e6 (as can be seen in the lower right corner).\r\n\r\nAs can be seen, the running time is worse than proportional to area and I imagine that there could be some low hanging fruit as I would expect reporting not to be on the order of detailed routing times.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/499880aa-0e07-4772-9e10-73dddcf9ef51)\r\n\r\n\r\n```\r\ncat /proc/cpuinfo | grep processor | wc -l \r\n12\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and executing `python util/plot-running-times.py`, I've plotted some running times against area:\r\n\r\n`6_report` running time in seconds below. Note that the x axis is um^2, but that it is multiplied by 1e6 (as can be seen in the lower right corner).\r\n\r\nAs can be seen, the running time is worse than proportional to area and I imagine that there could be some low hanging fruit as I would expect reporting not to be on the order of detailed routing times.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/499880aa-0e07-4772-9e10-73dddcf9ef51)\r\n\r\n\r\n```\r\ncat /proc/cpuinfo | grep processor | wc -l \r\n12\r\n```", "date": "2023-07-08T19:57:36Z"}, {"author": "oharboe", "role": "assistant", "message": "Same for `2_6_pdn`, here running time is proportional to area:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/12bf57a3-9670-47d3-a19e-98c35f023ac1)\r\n", "date": "2023-07-08T19:58:16Z"}, {"author": "oharboe", "role": "assistant", "message": "`5_2_TritonRoute` running times are misleading as there's some sort of problem with DRC errors #3592\r\n\r\nHowever, since I have the data, I include the plot here anyway.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/80e6d705-994a-408d-9847-461b75cfaa37)\r\n", "date": "2023-07-08T20:00:16Z"}, {"author": "oharboe", "role": "assistant", "message": "A feature request has been filed to improve reporting times #3599", "date": "2023-07-30T08:35:14Z"}], "date": "2023-07-08T19:57:36Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3598", "id": 3598, "title": "Detailed routing time for mock-array as a function of area", "author": "oharboe", "description": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1212, I've plotted detailed routing times for the same Verilog 8x8 8 bit datapath mock-array, changing only the size of the element macros.\r\n\r\nAny thoughts on these running times for the mock-array for detailed routing? Expected? Unexpected?\r\n\r\nThe algorithm seems to be MUCH faster for smaller areas\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2e92b32-302f-4ac5-9381-1178c6520b76)\r\n\r\n\r\nBiggest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a7ca8cb1-030d-488a-99c7-c80809e46529)\r\n\r\nThe element-element wires are not straight, lots of little deviations from horizontal/vertical:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/67bb32ef-cd99-4369-bd27-becaabd73e8d)\r\n\r\nSmallest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b5ce6e6-c647-4623-9fa9-26420ec0d7a8)\r\n\r\n\r\n\"All\" element to element wires are horizontal/vertical (didn't check exhaustively):\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4e3f7f0e-ae10-451e-bb61-a012a48c28bd)\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1211 and https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1212, I've plotted detailed routing times for the same Verilog 8x8 8 bit datapath mock-array, changing only the size of the element macros.\r\n\r\nAny thoughts on these running times for the mock-array for detailed routing? Expected? Unexpected?\r\n\r\nThe algorithm seems to be MUCH faster for smaller areas\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/c2e92b32-302f-4ac5-9381-1178c6520b76)\r\n\r\n\r\nBiggest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a7ca8cb1-030d-488a-99c7-c80809e46529)\r\n\r\nThe element-element wires are not straight, lots of little deviations from horizontal/vertical:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/67bb32ef-cd99-4369-bd27-becaabd73e8d)\r\n\r\nSmallest array:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b5ce6e6-c647-4623-9fa9-26420ec0d7a8)\r\n\r\n\r\n\"All\" element to element wires are horizontal/vertical (didn't check exhaustively):\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4e3f7f0e-ae10-451e-bb61-a012a48c28bd)\r\n\r\n", "date": "2023-07-09T08:05:58Z"}, {"author": "maliberty", "role": "assistant", "message": "How do the number of routing iterations and iter0 DRCs compare between datapoints? ", "date": "2023-07-09T21:06:25Z"}, {"author": "oharboe", "role": "assistant", "message": "I wasn't able to follow up on this in a timely manner.", "date": "2023-07-30T08:34:04Z"}], "date": "2023-07-09T08:05:58Z", "category": "Query", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3733", "id": 3733, "title": "Why invertors in front of the flip-flops in a mock-array clock tree?", "author": "oharboe", "description": "For mock-array, I ran `make cts && make gui_cts` and pasted the clock tree below.\r\n\r\nI'm curious: why is there an inverter in front of every flip-flop and no invertor in front of the macros?\r\n \r\nI checked by hovering over a number of the pink dots at the leaf of the clock tree that the flip-flops are the leaf points with an invertor in front.\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9a268a21-6f3b-4777-b10d-940090081cbb)\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8a96024d-9038-445b-8826-c13354ca9264)\r\n\r\n\r\nThe clock period is 1000ps and the skew is 50ps, by gleaning at the clockd tree.\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "For mock-array, I ran `make cts && make gui_cts` and pasted the clock tree below.\r\n\r\nI'm curious: why is there an inverter in front of every flip-flop and no invertor in front of the macros?\r\n \r\nI checked by hovering over a number of the pink dots at the leaf of the clock tree that the flip-flops are the leaf points with an invertor in front.\r\n\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/9a268a21-6f3b-4777-b10d-940090081cbb)\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8a96024d-9038-445b-8826-c13354ca9264)\r\n\r\n\r\nThe clock period is 1000ps and the skew is 50ps, by gleaning at the clockd tree.\r\n\r\n", "date": "2023-07-27T14:05:49Z"}, {"author": "oharboe", "role": "assistant", "message": "I have tried to find some documentation on the `report_checks` output format, but lacking that I'm making some guesses....\r\n\r\nThe below is a report from mock-array/Element, where I notice the `clock clock' (fall edge)`, but mock-array is positive edge triggered, so why falling edge?\r\n\r\nCould it be that my design is positive edge triggered, but that the flip-flop is in fact negative edge triggered?\r\n\r\nThat would explain the inverter in front of every flip-flop in the clock-tree above too...\r\n\r\nI beleve the first path below is the data required path from macro input pin to the flip flop input pin and that the second path is the clock input pin on the macro to the flip flop input pin.\r\n\r\nWhat does `(propagated)` mean?\r\n\r\nI find  `data required time` a bit confusing for the clock propagation path, but my guess that's just the chosen terminology and that the `data required time` for the clock is in fact the clock required time in my mind of thinking.\r\n\r\n```\r\n>>> report_checks -path_delay min -from io_ins_right[0]\r\nStartpoint: io_ins_right[0] (input port clocked by clock)\r\nEndpoint: _557_ (falling edge-triggered flip-flop clocked by clock')\r\nPath Group: clock\r\nPath Type: min\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (propagated)\r\n  50.00   50.00 ^ input external delay\r\n   2.24   52.24 ^ io_ins_right[0] (in)\r\n  11.98   64.22 ^ hold1749/Y (BUFx2_ASAP7_75t_R)\r\n  11.38   75.59 ^ hold745/Y (BUFx2_ASAP7_75t_R)\r\n  11.43   87.02 ^ hold1750/Y (BUFx2_ASAP7_75t_R)\r\n  11.95   98.97 ^ input129/Y (BUFx2_ASAP7_75t_R)\r\n  12.69  111.66 ^ hold1751/Y (BUFx2_ASAP7_75t_R)\r\n  12.88  124.54 ^ hold746/Y (BUFx2_ASAP7_75t_R)\r\n  12.83  137.37 ^ hold1752/Y (BUFx2_ASAP7_75t_R)\r\n   0.18  137.55 ^ _557_/D (DFFLQNx2_ASAP7_75t_R)\r\n         137.55   data arrival time\r\n\r\n   0.00    0.00   clock clock' (fall edge)\r\n  99.73   99.73   clock network delay (propagated)\r\n  20.00  119.73   clock uncertainty\r\n   0.00  119.73   clock reconvergence pessimism\r\n         119.73 v _557_/CLK (DFFLQNx2_ASAP7_75t_R)\r\n  10.65  130.38   library hold time\r\n         130.38   data required time\r\n---------------------------------------------------------\r\n         130.38   data required time\r\n        -137.55   data arrival time\r\n---------------------------------------------------------\r\n           7.16   slack (MET)\r\n\r\n```\r\n", "date": "2023-07-27T14:37:30Z"}, {"author": "maliberty", "role": "assistant", "message": "Is this at the top or in the element?", "date": "2023-07-27T15:13:39Z"}, {"author": "maliberty", "role": "assistant", "message": "propagated means you are post-cts and \"set_propagated_clock [all_clocks]\" has been used.  The delay is calculated from the actual clock network.  The opposite is ideal clocks from before CTS.", "date": "2023-07-27T15:16:00Z"}, {"author": "maliberty", "role": "assistant", "message": "If you look at DFFLQNx2_ASAP7_75t_R you'll see\r\n```\r\n    ff (IQN,IQNN) {\r\n      clocked_on : \"!CLK\";\r\n      next_state : \"!D\";\r\n      power_down_function : \"(!VDD) + (VSS)\";\r\n    }\r\n```\r\nso it is on the negative edge.  The ff choice is made during synthesis", "date": "2023-07-27T15:23:33Z"}], "date": "2023-07-27T14:05:49Z", "category": "Query", "subcategory": "Design explanation", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3731", "id": 3731, "title": "Meta file/format to describe a PDK?", "author": "nrichaud", "description": "Hello everyone,\r\nI am new to the project but I have some experience with with PDK and enablement PDK in design flow.\r\n\r\nI was wondering how is structured the interface between the PDK file and the flow.\r\n\r\n>Do you know if there is a kind of **meta file/format** to describe the PDK and maybe \"explain\" to the flow where to pick the right file/tools?\r\nLike a kind of python `requirement.txt` file so it could be easy to integrate new PDK and switch from one technology to an other?\r\n\r\nToday, my impression is that it is still kind of challenging to have all the pieces or components of a PDK working together with the right version and right place to pick the files.\r\n\r\nThanks \r\n", "content": [{"author": "nrichaud", "role": "user", "message": "Hello everyone,\r\nI am new to the project but I have some experience with with PDK and enablement PDK in design flow.\r\n\r\nI was wondering how is structured the interface between the PDK file and the flow.\r\n\r\n>Do you know if there is a kind of **meta file/format** to describe the PDK and maybe \"explain\" to the flow where to pick the right file/tools?\r\nLike a kind of python `requirement.txt` file so it could be easy to integrate new PDK and switch from one technology to an other?\r\n\r\nToday, my impression is that it is still kind of challenging to have all the pieces or components of a PDK working together with the right version and right place to pick the files.\r\n\r\nThanks \r\n", "date": "2023-07-27T09:23:12Z"}, {"author": "rovinski", "role": "assistant", "message": "I don't know of any specific standard for PDK distribution. The main issue is that tools / formats are continuously coming in and out of vogue based on the process technology. Many PDKs may be \"incomplete\" due to lack of enablement for certain tools.\r\n\r\nhttps://github.com/RTimothyEdwards/open_pdks tries to create a standardized directory structure and format for PDKs, but of course there is effort in taking what the vendor provides and trying to fit it into that model because every PDK vendor is different.\r\n\r\n[ORFS](https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts) simply uses Make variables to point at the necessary files.", "date": "2023-07-27T09:53:22Z"}, {"author": "maliberty", "role": "assistant", "message": "I think it is better to accept the PDK as provided than to mess with it as open_pdks requires.  PDKs should be read-only.", "date": "2023-07-27T13:48:30Z"}], "date": "2023-07-27T09:23:12Z", "category": "Query", "subcategory": "PDK integration", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3644", "id": 3644, "title": "ODB:: Is there any way to unfrozen the master? (Changing the size of dbMaster during the code is running)", "author": "ApeachM", "description": "```c++\r\n// master setting\r\ndbMaster *master = dbMaster::create(db_lib, lib_cell_name.c_str());\r\nmaster->setWidth(width);\r\nmaster->setHeight(height);\r\nmaster->setType(dbMasterType::CORE);\r\n...\r\nmaster->setFrozen();\r\n// connect inst to the master\r\n    \r\ndbInst* inst = dbInst::create(db_block, master, instance_info->inst_name.c_str());\r\n\r\n// now I want to change the size of inst, by unfrozen master and resize width and height\r\n// Is my intention of the below pseudo-code possible?\r\nmaster->setUnFrozen();\r\nmaster->setWidth(new_width);\r\nmaster->setHeight(new_height);\r\nmaster->setFrozen();\r\n```\r\n\r\n**I would like to know whether the above pseudo-code is possible.**\r\n\r\n**I want to resize the cell size** after the cell size is already determined. (For example, after parsing lef and def).\r\nBut it seems like not to exist function for unfreezing.\r\n\r\nIf I want to change the cell size, then should I \r\n1. re-construct the instance,\r\n2. re-construct the new dbMaster, \r\n3. deleting the original instance, \r\n4. and re-connecting the new dbInst to the nets, which was connected with the original one?\r\n\r\nI would like to know whether **is there another way, which is more simple**.\r\n\r\n\r\nThanks for the time for reading my question.\r\n\r\nSincerely.", "content": [{"author": "ApeachM", "role": "user", "message": "```c++\r\n// master setting\r\ndbMaster *master = dbMaster::create(db_lib, lib_cell_name.c_str());\r\nmaster->setWidth(width);\r\nmaster->setHeight(height);\r\nmaster->setType(dbMasterType::CORE);\r\n...\r\nmaster->setFrozen();\r\n// connect inst to the master\r\n    \r\ndbInst* inst = dbInst::create(db_block, master, instance_info->inst_name.c_str());\r\n\r\n// now I want to change the size of inst, by unfrozen master and resize width and height\r\n// Is my intention of the below pseudo-code possible?\r\nmaster->setUnFrozen();\r\nmaster->setWidth(new_width);\r\nmaster->setHeight(new_height);\r\nmaster->setFrozen();\r\n```\r\n\r\n**I would like to know whether the above pseudo-code is possible.**\r\n\r\n**I want to resize the cell size** after the cell size is already determined. (For example, after parsing lef and def).\r\nBut it seems like not to exist function for unfreezing.\r\n\r\nIf I want to change the cell size, then should I \r\n1. re-construct the instance,\r\n2. re-construct the new dbMaster, \r\n3. deleting the original instance, \r\n4. and re-connecting the new dbInst to the nets, which was connected with the original one?\r\n\r\nI would like to know whether **is there another way, which is more simple**.\r\n\r\n\r\nThanks for the time for reading my question.\r\n\r\nSincerely.", "date": "2023-07-17T23:12:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Why are you freezing it in the first place?", "date": "2023-07-17T23:21:43Z"}, {"author": "maliberty", "role": "assistant", "message": "setWidth & setHeight don't care about the frozen status afaik.  The key thing is that the port list is frozen.  You can't add a dbMTerm to a frozen master.", "date": "2023-07-18T04:28:50Z"}], "date": "2023-07-17T23:12:18Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3298", "id": 3298, "title": "Running times in detailed routing as a function of design parameters", "author": "oharboe", "description": "mock-array-big has 3 essential parameters that can be adjusted: array area(number of elements), element size (area) and data width (bits).\r\n\r\nI thought it would be interesting to see how detailed routing (TritonRoute) varies across these parameters, so I made a python snippet(https://github.com/Pinata-Consulting/OpenROAD-flow-scripts/commits/plot-running-times) to gather some data and plot them\r\n\r\nThe graph below is interactive(measured on a machine with 16 threads and 64gByte of RAM, where memory consumption appears to peak at 20gByte), which helps in terms of understanding the 4 dimensions being represented:\r\n\r\nVideo: https://drive.google.com/file/d/1pmkIZh6tUOrWhAkVRgm0fxCD7yaf766Q/view\r\n\r\nSnapshot:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236807617-6c48df46-609a-4614-937e-539cbf7c5ce7.png)\r\n\r\n**8 x 8 64 bit array detailed route times plotted against threads**\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236921035-c2ac6218-b515-4c83-b342-0c3d2f677f99.png)\r\n\r\n**Conclusion so far**\r\n\r\nDetailed routing is surprisingly slow when the area is large, but everything else is the same.\r\n\r\nThis run takes 40 minutes or so, `APTOS_MOCK_PITCH_SCALE=20 make FLOW_VARIANT=scale-20 route DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` whereas `APTOS_MOCK_PITCH_SCALE=2 make FLOW_VARIANT=scale-2 DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` completes in a few minutes\r\n\r\n\r\n**Detailed of testing...**\r\n\r\nIt looks like the performance of detailed routing is sensitive to area:\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=2 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-2 route\r\n```\r\n\r\n```\r\nSamples: 15M of event 'cycles', Event count (approx.): 14285585618565\r\nOverhead  Command   Shared Object           Symbol\r\n  16,94%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n   8,38%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   7,46%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   5,92%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   4,62%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   4,23%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   4,20%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   3,31%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   3,22%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,93%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   2,48%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   2,46%  openroad  openroad                [.] box2boxDistSquareNew\r\n   2,37%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   2,17%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,71%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,45%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,43%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,28%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedVia\r\n   1,25%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n ```\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236752880-91dadf5a-3715-4afa-b51f-3a568bb4d8cd.png)\r\n\r\n**Same run, but bigger area**\r\n\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=20 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-20 route\r\n```\r\n\r\n2_4_floorplan_macro.odb:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b1972e9e-6724-4b87-9b22-c438bfc0365b)\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236757786-f74ac20a-8cdf-4708-a5a1-add3357b116a.png)\r\n\r\n```\r\nOverhead  Command   Shared Object           Symbol\r\n  15,25%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n  14,39%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   7,94%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   7,67%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   6,08%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   3,98%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   3,80%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   2,84%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   2,64%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,62%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   2,11%  openroad  openroad                [.] box2boxDistSquareNew\r\n   1,66%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   1,45%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,40%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,36%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n   1,31%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,25%  openroad  openroad                [.] boost::geometry::index::detail::rtree::visitors::spatial_qu\r\n   1,20%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,15%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   0,88%  openroad  openroad                [.] fr::frSpacingTablePrlConstraint::typeId\r\n   0,86%  openroad  libc.so.6               [.] malloc\r\n```\r\n\r\n\r\nIt's interesting thing that the 1st run with 1200 violations takes 20 minutes, the 2nd run with 700 violations takes 12 seconds:\r\n\r\n```\r\n[INFO DRT-0195] Start 1st optimization iteration.\r\n    Completing 10% with 5729 violations.\r\n    elapsed time = 00:02:00, memory = 29854.12 (MB).\r\n    Completing 20% with 4647 violations.\r\n    elapsed time = 00:04:04, memory = 30005.05 (MB).\r\n    Completing 30% with 3871 violations.\r\n    elapsed time = 00:06:04, memory = 30034.33 (MB).\r\n    Completing 40% with 3694 violations.\r\n    elapsed time = 00:08:04, memory = 30100.05 (MB).\r\n    Completing 50% with 1899 violations.\r\n    elapsed time = 00:10:00, memory = 28813.91 (MB).\r\n    Completing 60% with 1471 violations.\r\n    elapsed time = 00:11:58, memory = 29945.56 (MB).\r\n    Completing 70% with 1042 violations.\r\n    elapsed time = 00:13:55, memory = 29941.39 (MB).\r\n    Completing 80% with 908 violations.\r\n    elapsed time = 00:15:49, memory = 29953.07 (MB).\r\n    Completing 90% with 805 violations.\r\n    elapsed time = 00:17:44, memory = 30011.33 (MB).\r\n    Completing 100% with 738 violations.\r\n    elapsed time = 00:19:38, memory = 28749.75 (MB).\r\n[INFO DRT-0199]   Number of violations = 1176.\r\nViol/Layer          M2     M3     V3     M4     V4     M5     M6     M7\r\nCorner Spacing       0      0      0      2      0      0      0      0\r\nCutSpcTbl            0      0      5      0      2      0      0      0\r\nEOL                  0      0      0      4      0      1      0      0\r\nMetal Spacing      209    105      0     92      0      2      0      0\r\nRecheck             12      0      0     91      0    247      2     86\r\nShort              157    153      0      0      0      0      0      0\r\neolKeepOut           0      0      0      3      0      3      0      0\r\n[INFO DRT-0267] cpu time = 11:11:56, elapsed time = 00:19:39, memory = 28720.20 (MB), peak = 30179.07 (MB)\r\nTotal wire length = 330230 um.\r\nTotal wire length on LAYER M1 = 0 um.\r\nTotal wire length on LAYER M2 = 32835 um.\r\nTotal wire length on LAYER M3 = 28341 um.\r\nTotal wire length on LAYER M4 = 130089 um.\r\nTotal wire length on LAYER M5 = 91062 um.\r\nTotal wire length on LAYER M6 = 30826 um.\r\nTotal wire length on LAYER M7 = 17074 um.\r\nTotal wire length on LAYER M8 = 0 um.\r\nTotal wire length on LAYER M9 = 0 um.\r\nTotal wire length on LAYER Pad = 0 um.\r\nTotal number of vias = 41385.\r\nUp-via summary (total 41385):.\r\n\r\n----------------\r\n Active        0\r\n     M1     1424\r\n     M2     5855\r\n     M3    20852\r\n     M4    11321\r\n     M5     1354\r\n     M6      579\r\n     M7        0\r\n     M8        0\r\n     M9        0\r\n----------------\r\n           41385\r\n\r\n\r\n[INFO DRT-0195] Start 2nd optimization iteration.\r\n    Completing 10% with 1154 violations.\r\n    elapsed time = 00:00:02, memory = 28720.20 (MB).\r\n    Completing 20% with 1135 violations.\r\n    elapsed time = 00:00:03, memory = 28720.20 (MB).\r\n    Completing 30% with 1116 violations.\r\n    elapsed time = 00:00:06, memory = 28720.20 (MB).\r\n    Completing 40% with 1078 violations.\r\n    elapsed time = 00:00:10, memory = 28716.63 (MB).\r\n    Completing 50% with 1059 violations.\r\n    elapsed time = 00:00:13, memory = 28716.63 (MB).\r\n    Completing 60% with 978 violations.\r\n    elapsed time = 00:00:16, memory = 28716.63 (MB).\r\n    Completing 70% with 945 violations.\r\n    elapsed time = 00:00:17, memory = 28716.63 (MB).\r\n    Completing 80% with 920 violations.\r\n    elapsed time = 00:00:20, memory = 28716.63 (MB).\r\n    Completing 90% with 755 violations.\r\n    elapsed time = 00:00:24, memory = 28716.63 (MB).\r\n    Completing 100% with 717 violations.\r\n    elapsed time = 00:00:27, memory = 28716.63 (MB).\r\n[INFO DRT-0199]   Number of violations = 755.\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "mock-array-big has 3 essential parameters that can be adjusted: array area(number of elements), element size (area) and data width (bits).\r\n\r\nI thought it would be interesting to see how detailed routing (TritonRoute) varies across these parameters, so I made a python snippet(https://github.com/Pinata-Consulting/OpenROAD-flow-scripts/commits/plot-running-times) to gather some data and plot them\r\n\r\nThe graph below is interactive(measured on a machine with 16 threads and 64gByte of RAM, where memory consumption appears to peak at 20gByte), which helps in terms of understanding the 4 dimensions being represented:\r\n\r\nVideo: https://drive.google.com/file/d/1pmkIZh6tUOrWhAkVRgm0fxCD7yaf766Q/view\r\n\r\nSnapshot:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236807617-6c48df46-609a-4614-937e-539cbf7c5ce7.png)\r\n\r\n**8 x 8 64 bit array detailed route times plotted against threads**\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236921035-c2ac6218-b515-4c83-b342-0c3d2f677f99.png)\r\n\r\n**Conclusion so far**\r\n\r\nDetailed routing is surprisingly slow when the area is large, but everything else is the same.\r\n\r\nThis run takes 40 minutes or so, `APTOS_MOCK_PITCH_SCALE=20 make FLOW_VARIANT=scale-20 route DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` whereas `APTOS_MOCK_PITCH_SCALE=2 make FLOW_VARIANT=scale-2 DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk` completes in a few minutes\r\n\r\n\r\n**Detailed of testing...**\r\n\r\nIt looks like the performance of detailed routing is sensitive to area:\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=2 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-2 route\r\n```\r\n\r\n```\r\nSamples: 15M of event 'cycles', Event count (approx.): 14285585618565\r\nOverhead  Command   Shared Object           Symbol\r\n  16,94%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n   8,38%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   7,46%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   5,92%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   4,62%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   4,23%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   4,20%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   3,31%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   3,22%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,93%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   2,48%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   2,46%  openroad  openroad                [.] box2boxDistSquareNew\r\n   2,37%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   2,17%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,71%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,45%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,43%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,28%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedVia\r\n   1,25%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n ```\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236752880-91dadf5a-3715-4afa-b51f-3a568bb4d8cd.png)\r\n\r\n**Same run, but bigger area**\r\n\r\n\r\n```\r\nMOCK_ARRAY_PITCH_SCALE=20 make OPENROAD_EXE=\"perf record -o perf.data ~/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad\" DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk FLOW_VARIANT=scale-20 route\r\n```\r\n\r\n2_4_floorplan_macro.odb:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/b1972e9e-6724-4b87-9b22-c438bfc0365b)\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/236757786-f74ac20a-8cdf-4708-a5a1-add3357b116a.png)\r\n\r\n```\r\nOverhead  Command   Shared Object           Symbol\r\n  15,25%  openroad  openroad                [.] fr::FlexGridGraph::initEdges\r\n  14,39%  openroad  openroad                [.] fr::FlexGCWorker::Impl::isCornerOverlap\r\n   7,94%  openroad  openroad                [.] fr::FlexGCWorker::Impl::initNet_pins_polygonCorners_helper\r\n   7,67%  openroad  openroad                [.] fr::FlexGridGraph::outOfDieVia\r\n   6,08%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia\r\n   3,98%  openroad  libstdc++.so.6.0.30     [.] std::_Rb_tree_increment\r\n   3,80%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostPlanar\r\n   2,84%  openroad  [unknown]               [k] 0xffffffffa7b87f27\r\n   2,64%  openroad  openroad                [.] fr::FlexGridGraph::getIdx\r\n   2,62%  openroad  openroad                [.] fr::frLayer::getMinSpacingValue\r\n   2,11%  openroad  openroad                [.] box2boxDistSquareNew\r\n   1,66%  openroad  openroad                [.] fr::FlexDRWorker::modMinSpacingCostVia_eol\r\n   1,45%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,40%  openroad  openroad                [.] fr::FlexGridGraph::isEdgeInBox\r\n   1,36%  openroad  openroad                [.] std::vector<fr::FlexGridGraph::Node, std::allocator<fr::Fle\r\n   1,31%  openroad  openroad                [.] fr::FlexGridGraph::addFixedShapeCostVia\r\n   1,25%  openroad  openroad                [.] boost::geometry::index::detail::rtree::visitors::spatial_qu\r\n   1,20%  openroad  openroad                [.] odb::dbTransform::apply\r\n   1,15%  openroad  openroad                [.] fr::FlexDRWorker::modBlockedPlanar\r\n   0,88%  openroad  openroad                [.] fr::frSpacingTablePrlConstraint::typeId\r\n   0,86%  openroad  libc.so.6               [.] malloc\r\n```\r\n\r\n\r\nIt's interesting thing that the 1st run with 1200 violations takes 20 minutes, the 2nd run with 700 violations takes 12 seconds:\r\n\r\n```\r\n[INFO DRT-0195] Start 1st optimization iteration.\r\n    Completing 10% with 5729 violations.\r\n    elapsed time = 00:02:00, memory = 29854.12 (MB).\r\n    Completing 20% with 4647 violations.\r\n    elapsed time = 00:04:04, memory = 30005.05 (MB).\r\n    Completing 30% with 3871 violations.\r\n    elapsed time = 00:06:04, memory = 30034.33 (MB).\r\n    Completing 40% with 3694 violations.\r\n    elapsed time = 00:08:04, memory = 30100.05 (MB).\r\n    Completing 50% with 1899 violations.\r\n    elapsed time = 00:10:00, memory = 28813.91 (MB).\r\n    Completing 60% with 1471 violations.\r\n    elapsed time = 00:11:58, memory = 29945.56 (MB).\r\n    Completing 70% with 1042 violations.\r\n    elapsed time = 00:13:55, memory = 29941.39 (MB).\r\n    Completing 80% with 908 violations.\r\n    elapsed time = 00:15:49, memory = 29953.07 (MB).\r\n    Completing 90% with 805 violations.\r\n    elapsed time = 00:17:44, memory = 30011.33 (MB).\r\n    Completing 100% with 738 violations.\r\n    elapsed time = 00:19:38, memory = 28749.75 (MB).\r\n[INFO DRT-0199]   Number of violations = 1176.\r\nViol/Layer          M2     M3     V3     M4     V4     M5     M6     M7\r\nCorner Spacing       0      0      0      2      0      0      0      0\r\nCutSpcTbl            0      0      5      0      2      0      0      0\r\nEOL                  0      0      0      4      0      1      0      0\r\nMetal Spacing      209    105      0     92      0      2      0      0\r\nRecheck             12      0      0     91      0    247      2     86\r\nShort              157    153      0      0      0      0      0      0\r\neolKeepOut           0      0      0      3      0      3      0      0\r\n[INFO DRT-0267] cpu time = 11:11:56, elapsed time = 00:19:39, memory = 28720.20 (MB), peak = 30179.07 (MB)\r\nTotal wire length = 330230 um.\r\nTotal wire length on LAYER M1 = 0 um.\r\nTotal wire length on LAYER M2 = 32835 um.\r\nTotal wire length on LAYER M3 = 28341 um.\r\nTotal wire length on LAYER M4 = 130089 um.\r\nTotal wire length on LAYER M5 = 91062 um.\r\nTotal wire length on LAYER M6 = 30826 um.\r\nTotal wire length on LAYER M7 = 17074 um.\r\nTotal wire length on LAYER M8 = 0 um.\r\nTotal wire length on LAYER M9 = 0 um.\r\nTotal wire length on LAYER Pad = 0 um.\r\nTotal number of vias = 41385.\r\nUp-via summary (total 41385):.\r\n\r\n----------------\r\n Active        0\r\n     M1     1424\r\n     M2     5855\r\n     M3    20852\r\n     M4    11321\r\n     M5     1354\r\n     M6      579\r\n     M7        0\r\n     M8        0\r\n     M9        0\r\n----------------\r\n           41385\r\n\r\n\r\n[INFO DRT-0195] Start 2nd optimization iteration.\r\n    Completing 10% with 1154 violations.\r\n    elapsed time = 00:00:02, memory = 28720.20 (MB).\r\n    Completing 20% with 1135 violations.\r\n    elapsed time = 00:00:03, memory = 28720.20 (MB).\r\n    Completing 30% with 1116 violations.\r\n    elapsed time = 00:00:06, memory = 28720.20 (MB).\r\n    Completing 40% with 1078 violations.\r\n    elapsed time = 00:00:10, memory = 28716.63 (MB).\r\n    Completing 50% with 1059 violations.\r\n    elapsed time = 00:00:13, memory = 28716.63 (MB).\r\n    Completing 60% with 978 violations.\r\n    elapsed time = 00:00:16, memory = 28716.63 (MB).\r\n    Completing 70% with 945 violations.\r\n    elapsed time = 00:00:17, memory = 28716.63 (MB).\r\n    Completing 80% with 920 violations.\r\n    elapsed time = 00:00:20, memory = 28716.63 (MB).\r\n    Completing 90% with 755 violations.\r\n    elapsed time = 00:00:24, memory = 28716.63 (MB).\r\n    Completing 100% with 717 violations.\r\n    elapsed time = 00:00:27, memory = 28716.63 (MB).\r\n[INFO DRT-0199]   Number of violations = 755.\r\n```\r\n\r\n", "date": "2023-05-07T18:41:42Z"}, {"author": "maliberty", "role": "assistant", "message": "How many threads in your experiment? ", "date": "2023-05-07T21:24:56Z"}, {"author": "oharboe", "role": "assistant", "message": "@rovinski I would not have guessed that the *area* of the design is what really drives up the time of detailed routing.\r\n", "date": "2023-05-08T04:50:15Z"}, {"author": "maliberty", "role": "assistant", "message": "The area of the design will definitely matter.   You will have tracks at the same pitch and have to traverse more of them during routing a larger area.", "date": "2023-05-08T18:37:25Z"}, {"author": "maliberty", "role": "assistant", "message": "Rather than plot \"detailed route times plotted against threads\" it is usually easier to look at speedup (t(1)/t(N)) vs threads.  It makes it clearer how close to ideal scaling you are getting (the 45 degree line is perfect).", "date": "2023-05-08T19:57:45Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @rovinski I fixed the image for the 1000x1000um when I took a snapshot. I accidentally used the small macro, the spacing between the macros should be very short, nearly abutment.", "date": "2023-05-09T18:33:44Z"}, {"author": "oharboe", "role": "assistant", "message": "It looks like the expected behavior is that the 0th and the 1st iteration will take a long time for top level designs with lots of wires and little contention, even if these routes are horizontal and vertical and that the low hanging fruit has already been picked.", "date": "2023-05-18T06:52:10Z"}, {"author": "binsa7261", "role": "assistant", "message": "wow this looks very impressive, bravo!", "date": "2023-06-30T18:04:20Z"}, {"author": "v11sman", "role": "assistant", "message": "I learned a lot of interesting things", "date": "2023-07-17T17:16:59Z"}], "date": "2023-05-07T18:41:42Z", "category": "Query", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3597", "id": 3597, "title": "Detailed routing loops instead of straight wire...", "author": "oharboe", "description": "I've been fixing some problems in mock-array in positioning of macros and pins not being aligned and now things are working well.\r\n\r\nHowever, I found this curious thing when inspecting, a detailed routing loop :-)\r\n\r\nI don't see any reason why a horizontal wire wouldn't work here...\r\n\r\nAny ideas or insights?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/381a3158-6635-452c-a270-247df28a6dae)\r\n\r\n\r\nThe above can be found if creating a `flow/settings.mk` file:\r\n\r\n```\r\nexport DESIGN_CONFIG?=designs/asap7/mock-array/config.mk\r\nexport MOCK_ARRAY_DATAWIDTH?=8\r\nexport MOCK_ARRAY_TABLE?=8 8 4 4 5 5\r\nexport MOCK_ARRAY_SCALE?=80\r\n```\r\n\r\nand running `make verilog` and `make`\r\n\r\n\r\nVarious interesting things can be seen in detailed routing:\r\n\r\n- almost all the wires are vertical/horizontal between \"Element\" macros. The loop above is untypical, usually it's just a slight horizontal/vertical deviation.\r\n- there are hold cells in the middle to the right\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e9bca2da-5e41-4ee6-b279-e7ca375bb26a)\r\n\r\n\r\n\r\nHold cells have to be placed *outside* to the right of the array, hence many non-vertical vertical wires between those two elements.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3a17be46-8604-498c-901f-ce375cbed5cc)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I've been fixing some problems in mock-array in positioning of macros and pins not being aligned and now things are working well.\r\n\r\nHowever, I found this curious thing when inspecting, a detailed routing loop :-)\r\n\r\nI don't see any reason why a horizontal wire wouldn't work here...\r\n\r\nAny ideas or insights?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/381a3158-6635-452c-a270-247df28a6dae)\r\n\r\n\r\nThe above can be found if creating a `flow/settings.mk` file:\r\n\r\n```\r\nexport DESIGN_CONFIG?=designs/asap7/mock-array/config.mk\r\nexport MOCK_ARRAY_DATAWIDTH?=8\r\nexport MOCK_ARRAY_TABLE?=8 8 4 4 5 5\r\nexport MOCK_ARRAY_SCALE?=80\r\n```\r\n\r\nand running `make verilog` and `make`\r\n\r\n\r\nVarious interesting things can be seen in detailed routing:\r\n\r\n- almost all the wires are vertical/horizontal between \"Element\" macros. The loop above is untypical, usually it's just a slight horizontal/vertical deviation.\r\n- there are hold cells in the middle to the right\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/e9bca2da-5e41-4ee6-b279-e7ca375bb26a)\r\n\r\n\r\n\r\nHold cells have to be placed *outside* to the right of the array, hence many non-vertical vertical wires between those two elements.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/3a17be46-8604-498c-901f-ce375cbed5cc)\r\n", "date": "2023-07-09T07:41:59Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 any thoughts on the loop?", "date": "2023-07-09T22:45:18Z"}, {"author": "oharboe", "role": "assistant", "message": "A feature request filed: https://github.com/The-OpenROAD-Project/OpenROAD/issues/3634", "date": "2023-07-17T05:29:23Z"}], "date": "2023-07-09T07:41:59Z", "category": "Bug", "subcategory": "Routing pattern anomaly", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3359", "id": 3359, "title": "Ideas for multithreaded rendering", "author": "rovinski", "description": "I saw the conversation in #3330, #3342, #3348, etc. and started thinking about how the rendering time might be improved aside from not drawing objects that aren't useful.\r\n\r\nIt seems that the rendering, for the most part, is embarrassingly parallel. In `LayoutViewer::drawInstanceOutlines()` for example (the most expensive layer measured in #3348), a function is applied to every instance in a vector to determine how / if it gets drawn, and then it makes a draw call.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2041-L2091\r\n\r\nThis is essentially a [map reduce](https://en.wikipedia.org/wiki/MapReduce) paradigm which should be extremely parallel, except that Qt painter objects aren't thread safe. There was discussion in #3279 that the database is not \"thread safe\", but I think that was in the context of read/write operations and not read-only operations.\r\n\r\nBeyond that, each layer is independently but sequentially rendered:\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2555-L2599\r\n\r\nThere may or may not be ordering required on draw calls to these layers, I'm not sure.\r\n\r\nI looked at a few [Qt guides](https://doc.qt.io/qt-5/qtcore-threads-mandelbrot-example.html) and they all recommend separating computation from rendering in separate threads for better performance (and interactivity).\r\n\r\nI think some of these things were mentioned by @QuantamHD in #1930 but the PR itself seems to be unrelated (and abandoned).\r\n\r\nI have some interest in looking into this, but I wonder what the best approach would be for this? Qt has [QThread](https://doc.qt.io/qt-5/qthread.html) and [QThreadPool](https://doc.qt.io/qt-5/qthreadpool.html) for this exact purpose. There's also [QtConcurrent](https://doc.qt.io/qt-5/qtconcurrent.html) which may have some uses.\r\n\r\nIn an ideal world, it seems like there should be a thread pool with `getThreadCount()-1` threads and the main thread. The main thread has a render queue which atomically pops the queue for draw calls and does nothing else until all worker threads yield. The worker threads can parallelize at the granularity of layer or instance/shape depending on what's optimal. But this could take a lot of refactoring, possibly be overkill, or possibly be difficult to tune the amount of threading correctly.\r\n\r\nAn intermediate step could be to simply parallelize some of the heavy-weight tasks that block the GUI thread, such as using `std::transform(std::execution::par)` or `std::for_each(std::execution::par)` and separating the draw calls from the filtering. But also these functions don't seem to be well supported on old versions of GCC/Clang (it requires Intel `libtbb` and may error or just use a serial version if it isn't linked, but I think it also think it doesn't work on Apple silicon). Maybe using OpenMP would work?\r\n\r\nAny thoughts or opinions?\r\n@gadfort @maliberty @oharboe @QuantamHD ", "content": [{"author": "rovinski", "role": "user", "message": "I saw the conversation in #3330, #3342, #3348, etc. and started thinking about how the rendering time might be improved aside from not drawing objects that aren't useful.\r\n\r\nIt seems that the rendering, for the most part, is embarrassingly parallel. In `LayoutViewer::drawInstanceOutlines()` for example (the most expensive layer measured in #3348), a function is applied to every instance in a vector to determine how / if it gets drawn, and then it makes a draw call.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2041-L2091\r\n\r\nThis is essentially a [map reduce](https://en.wikipedia.org/wiki/MapReduce) paradigm which should be extremely parallel, except that Qt painter objects aren't thread safe. There was discussion in #3279 that the database is not \"thread safe\", but I think that was in the context of read/write operations and not read-only operations.\r\n\r\nBeyond that, each layer is independently but sequentially rendered:\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/gui/src/layoutViewer.cpp#L2555-L2599\r\n\r\nThere may or may not be ordering required on draw calls to these layers, I'm not sure.\r\n\r\nI looked at a few [Qt guides](https://doc.qt.io/qt-5/qtcore-threads-mandelbrot-example.html) and they all recommend separating computation from rendering in separate threads for better performance (and interactivity).\r\n\r\nI think some of these things were mentioned by @QuantamHD in #1930 but the PR itself seems to be unrelated (and abandoned).\r\n\r\nI have some interest in looking into this, but I wonder what the best approach would be for this? Qt has [QThread](https://doc.qt.io/qt-5/qthread.html) and [QThreadPool](https://doc.qt.io/qt-5/qthreadpool.html) for this exact purpose. There's also [QtConcurrent](https://doc.qt.io/qt-5/qtconcurrent.html) which may have some uses.\r\n\r\nIn an ideal world, it seems like there should be a thread pool with `getThreadCount()-1` threads and the main thread. The main thread has a render queue which atomically pops the queue for draw calls and does nothing else until all worker threads yield. The worker threads can parallelize at the granularity of layer or instance/shape depending on what's optimal. But this could take a lot of refactoring, possibly be overkill, or possibly be difficult to tune the amount of threading correctly.\r\n\r\nAn intermediate step could be to simply parallelize some of the heavy-weight tasks that block the GUI thread, such as using `std::transform(std::execution::par)` or `std::for_each(std::execution::par)` and separating the draw calls from the filtering. But also these functions don't seem to be well supported on old versions of GCC/Clang (it requires Intel `libtbb` and may error or just use a serial version if it isn't linked, but I think it also think it doesn't work on Apple silicon). Maybe using OpenMP would work?\r\n\r\nAny thoughts or opinions?\r\n@gadfort @maliberty @oharboe @QuantamHD ", "date": "2023-05-19T09:05:49Z"}, {"author": "oharboe", "role": "assistant", "message": "After the recent performance improvement, the biggest performance problem currently for us, is that all intermediate zoom levels are rendered https://github.com/The-OpenROAD-Project/OpenROAD/issues/3278\r\n\r\nSo if that could be fixed FIRST... :-)\r\n\r\nAfterwards, the suggestions that you propose sound wicked!\r\n\r\nIt is true that Qt nor the database is thread safe, then on the other hand, this means that the GUI is single threaded, so I suppose that you are right that you can use as many or few threads as you like as long as Qt nor the database functions are non-the-wiser. Rendering should be especially amenable to this since it is a read only operation...\r\n\r\nAlso, rendering doesn't have to be perfect.  I have been thinking that a draft could be rendered while zooming and then when the user stops giving input, more detail can be rendered.\r\n", "date": "2023-05-19T09:19:25Z"}, {"author": "maliberty", "role": "assistant", "message": "@rovinski I've considered all these ideas but lack the time to implement them all.  Right now I'm looking at moving the rendering to a separate thread and making it interruptible.  The main challenge is figuring out how to trigger the right events at the right time to make Qt happy.  It is very particular that you can only paint in paintEvent.\r\n\r\nAssuming I can land this then it is more straightforward to split that worker thread into multiple threads.  KLayout works in a similar fashion where they render per layer in each thread and composite in the main thread.", "date": "2023-05-20T04:40:31Z"}], "date": "2023-05-19T09:05:49Z", "category": "Feature Request", "subcategory": "Performance enhancement", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3608", "id": 3608, "title": "How do I find and view the nets that are causing hold and setup violations?", "author": "oharboe", "description": "It want to find and view nets that cause hold violations.\r\n\r\nToday I have to wait and hope for a global routing failure to be able to view the nets that cause hold violations in DRC viewer there.\r\n\r\n```\r\nRepair setup and hold violations...\r\nTNS end percent 5\r\n[INFO RSZ-0041] Resized 2 instances.\r\n[WARNING RSZ-0062] Unable to repair all setup violations.\r\n[INFO RSZ-0046] Found 2957 endpoints with hold violations.\r\n[INFO RSZ-0032] Inserted 40106 hold buffers.\r\nPlacement Analysis\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "It want to find and view nets that cause hold violations.\r\n\r\nToday I have to wait and hope for a global routing failure to be able to view the nets that cause hold violations in DRC viewer there.\r\n\r\n```\r\nRepair setup and hold violations...\r\nTNS end percent 5\r\n[INFO RSZ-0041] Resized 2 instances.\r\n[WARNING RSZ-0062] Unable to repair all setup violations.\r\n[INFO RSZ-0046] Found 2957 endpoints with hold violations.\r\n[INFO RSZ-0032] Inserted 40106 hold buffers.\r\nPlacement Analysis\r\n```\r\n", "date": "2023-07-12T06:18:21Z"}, {"author": "vvbandeira", "role": "assistant", "message": "```tcl\r\nfind_timing_paths -path_delay min -slack_max 0\r\n```\r\n@oharboe, Would this work for you?\r\nNote that RSZ just said it had found `2957` hold violations; after inserting the `40106` buffers, there's no warning.\r\nSo it is likely that all have been fixed -- see the warning in the line above for a contrast about setup violations.\r\n\r\nFor setup you would do:\r\n```tcl\r\nfind_timing_paths -path_delay max -slack_max 0\r\n```", "date": "2023-07-12T14:44:56Z"}, {"author": "oharboe", "role": "assistant", "message": "Found an approach... Here is what I did:\r\n\r\n1. create some hold failures by reducing the clock period from 2000 to 1000ps in mock-array, using diff below.\r\n2. There are no timing violations in placement, the timing violations happen after CTS.\r\n3. Modify cts.tcl to write out an ODB file *before* hold cells are inserted and the design is repair. Post repair in CTS there are no violations.\r\n\r\nNow I can run commands to examine minimum hold time violations, which will lead to hold cells being inserted.\r\n\r\n\r\n```\r\nreport_checks -path_delay min\r\nStartpoint: io_insRight_0[61] (input port clocked by clock)\r\nEndpoint: ces_0_0 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: min\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (propagated)\r\n 200.00  200.00 ^ input external delay\r\n   0.00  200.00 ^ io_insRight_0[61] (in)\r\n  10.45  210.45 ^ input1082/Y (BUFx2_ASAP7_75t_R)\r\n   0.04  210.48 ^ ces_0_0/io_ins_right[61] (Element)\r\n         210.48   data arrival time\r\n\r\n   0.00    0.00   clock clock (rise edge)\r\n 337.72  337.72   clock network delay (propagated)\r\n   0.00  337.72   clock reconvergence pessimism\r\n         337.72 ^ ces_0_0/clock (Element)\r\n 102.40  440.11   library hold time\r\n         440.11   data required time\r\n---------------------------------------------------------\r\n         440.11   data required time\r\n        -210.48   data arrival time\r\n---------------------------------------------------------\r\n        -229.63   slack (VIOLATED)\r\n```\r\n\r\n```\r\nforeach path [find_timing_paths -slack_max 0 -group_count 10 -path_delay min] {puts \"[get_property $path slack] [get_property [get_property $path endpoint] full_name]\"}\r\n-229.630280 ces_0_0/io_ins_right[61]\r\n-229.599152 ces_0_0/io_ins_right[3]\r\n-229.596451 ces_0_0/io_ins_right[56]\r\n-229.570663 ces_0_0/io_ins_right[51]\r\n-229.570786 ces_0_0/io_ins_right[53]\r\n-229.568649 ces_0_0/io_ins_right[1]\r\n-229.561371 ces_0_0/io_ins_right[14]\r\n-229.517380 ces_0_0/io_ins_right[30]\r\n-229.512604 ces_0_0/io_ins_right[5]\r\n-229.509186 ces_7_0/io_ins_right[61]\r\n```\r\n\r\n\r\n\r\n```\r\ndiff --git a/flow/designs/asap7/mock-array/Element/constraints.sdc b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\nindex be545b8f..0a66e62e 100644\r\n--- a/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n@@ -4,7 +4,7 @@ set cols [expr {[info exists ::env(MOCK_ARRAY_COLS)] ? $::env(MOCK_ARRAY_COLS) :\r\n \r\n set clk_name clock\r\n set clk_port_name clock\r\n-set clk_period 2000\r\n+set clk_period 1000\r\n \r\n set clk_port [get_ports $clk_port_name]\r\n create_clock -period $clk_period -waveform [list 0 [expr $clk_period / 2]] -name $clk_name $clk_port\r\ndiff --git a/flow/designs/asap7/mock-array/constraints.sdc b/flow/designs/asap7/mock-array/constraints.sdc\r\nindex 5d33c792..46b20e5b 100644\r\n--- a/flow/designs/asap7/mock-array/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/constraints.sdc\r\n@@ -1,6 +1,6 @@\r\n set sdc_version 2.0\r\n \r\n-set clk_period 2000\r\n+set clk_period 1000\r\n create_clock [get_ports clock] -period $clk_period -waveform [list 0 [expr $clk_period/2]]\r\n \r\n set clk_name  clock\r\ndiff --git a/flow/scripts/cts.tcl b/flow/scripts/cts.tcl\r\nindex 0b7c56b8..2c0c6fef 100644\r\n--- a/flow/scripts/cts.tcl\r\n+++ b/flow/scripts/cts.tcl\r\n@@ -45,6 +45,8 @@ estimate_parasitics -placement\r\n report_metrics \"cts pre-repair\"\r\n utl::pop_metrics_stage\r\n \r\n+write_db $::env(RESULTS_DIR)/4_1_cts_pre_repair.odb\r\n+\r\n repair_clock_nets\r\n \r\n utl::push_metrics_stage \"cts__{}__post_repair\"\r\n```\r\n", "date": "2023-07-13T08:58:43Z"}, {"author": "oharboe", "role": "assistant", "message": "`make gui_cts` ctrl-f and searching for instance `*hold*` is helpful. :-)\r\n\r\nFrom there I can go to the buffer tree, then find the endpoints.\r\n\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/bcfc601b-55b6-4a91-aa4c-e58f630c647e)\r\n", "date": "2023-07-13T09:11:31Z"}, {"author": "maliberty", "role": "assistant", "message": "Various useful patterns at https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/2734e98ee7c0f6888a686c2ef2445c0bb837ed0f/flow/scripts/save_images.tcl#L59", "date": "2023-07-13T16:41:43Z"}], "date": "2023-07-12T06:18:21Z", "category": "Query", "subcategory": "Timing analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3604", "id": 3604, "title": "How do I find out which nets detailed placed failed on?", "author": "oharboe", "description": "If I try to bump mock-array frequency from 8000ps to 1000ps, I get detailed placement errors.\r\n\r\nHow do I find out which nets detailed placement is failing for?\r\n\r\n```\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold19172\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33346\r\n[INFO DPL-0035]  hold1805\r\n[INFO DPL-0035]  hold19173\r\n[INFO DPL-0035]  hold7528\r\n[INFO DPL-0035]  input2044\r\n[ERROR DPL-0036] Detailed placement failed.\r\nError: cts.tcl, 90 DPL-0036\r\nCommand exited with non-zero status 1\r\nElapsed time: 1:53.31[h:]min:sec. CPU time: user 113.09 sys 0.19 (99%). Peak memory: 792296KB.\r\nmake: *** [Makefile:579: results/asap7/mock-array/base/4_1_cts.odb] Error 1\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "If I try to bump mock-array frequency from 8000ps to 1000ps, I get detailed placement errors.\r\n\r\nHow do I find out which nets detailed placement is failing for?\r\n\r\n```\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold7527\r\n[INFO DPL-0035]  hold19172\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33345\r\n[INFO DPL-0035]  hold33346\r\n[INFO DPL-0035]  hold1805\r\n[INFO DPL-0035]  hold19173\r\n[INFO DPL-0035]  hold7528\r\n[INFO DPL-0035]  input2044\r\n[ERROR DPL-0036] Detailed placement failed.\r\nError: cts.tcl, 90 DPL-0036\r\nCommand exited with non-zero status 1\r\nElapsed time: 1:53.31[h:]min:sec. CPU time: user 113.09 sys 0.19 (99%). Peak memory: 792296KB.\r\nmake: *** [Makefile:579: results/asap7/mock-array/base/4_1_cts.odb] Error 1\r\n```\r\n", "date": "2023-07-11T07:08:37Z"}, {"author": "oharboe", "role": "assistant", "message": "Change I tried:\r\n\r\n```\r\n$ git show\r\ncommit be3fd43658747fa25b16fd7fb7317a36e92d7362 (HEAD)\r\nAuthor: \u00d8yvind Harboe <oyvind.harboe@zylin.com>\r\nDate:   Tue Jul 11 09:01:30 2023 +0200\r\n\r\n    mock-array: reduce clock period to 1000ps from 8000ps\r\n    \r\n    Signed-off-by: \u00d8yvind Harboe <oyvind.harboe@zylin.com>\r\n\r\ndiff --git a/flow/designs/asap7/mock-array/Element/constraints.sdc b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\nindex 1d817bb8..0a66e62e 100644\r\n--- a/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/Element/constraints.sdc\r\n@@ -4,7 +4,7 @@ set cols [expr {[info exists ::env(MOCK_ARRAY_COLS)] ? $::env(MOCK_ARRAY_COLS) :\r\n \r\n set clk_name clock\r\n set clk_port_name clock\r\n-set clk_period 8000\r\n+set clk_period 1000\r\n \r\n set clk_port [get_ports $clk_port_name]\r\n create_clock -period $clk_period -waveform [list 0 [expr $clk_period / 2]] -name $clk_name $clk_port\r\ndiff --git a/flow/designs/asap7/mock-array/constraints.sdc b/flow/designs/asap7/mock-array/constraints.sdc\r\nindex ad66e12c..7370cc7f 100644\r\n--- a/flow/designs/asap7/mock-array/constraints.sdc\r\n+++ b/flow/designs/asap7/mock-array/constraints.sdc\r\n@@ -1,6 +1,6 @@\r\n set sdc_version 2.0\r\n \r\n-set clk_period 8000\r\n+set clk_period 1000\r\n create_clock [get_ports clock] -period $clk_period -waveform [list 0 [expr $clk_period/2]]\r\n \r\n set clk_name  clock\r\n```\r\n", "date": "2023-07-11T07:09:11Z"}, {"author": "maliberty", "role": "assistant", "message": "Was this after the abutment PR?  If so you should retry again after https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1221 as that opens up rows in the core.", "date": "2023-07-11T14:31:44Z"}], "date": "2023-07-11T07:08:37Z", "category": "Runtime", "subcategory": "Timing constraint issue", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3513", "id": 3513, "title": "Build problems. Missing gmock.h", "author": "oharboe", "description": "There has been a lot of activity concerning build errors, but I tried with latest master merged with #3512\r\n\r\nIs it enough to update to latest master or do I need to purge something or other locally?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_CXX_FLAGS=-g\"\r\n```\r\n\r\n```\r\n[ 25%] Building CXX object src/odb/test/cpp/CMakeFiles/TestGuide.dir/TestGuide.cpp.o\r\n/home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD/src/odb/test/cpp/TestAbstractLef.cc:13:10: fatal error: gmock/gmock.h: No such file or directory\r\n   13 | #include \"gmock/gmock.h\"\r\n      |          ^~~~~~~~~~~~~~~\r\ncompilation terminated.\r\ngmake[2]: *** [src/odb/test/cpp/CMakeFiles/OdbGTests.dir/build.make:90: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/TestAbstractLef.cc.o] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:2331: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/all] Error 2\r\ngmake[1]: *** Waiting for unfinished jobs...\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "There has been a lot of activity concerning build errors, but I tried with latest master merged with #3512\r\n\r\nIs it enough to update to latest master or do I need to purge something or other locally?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_CXX_FLAGS=-g\"\r\n```\r\n\r\n```\r\n[ 25%] Building CXX object src/odb/test/cpp/CMakeFiles/TestGuide.dir/TestGuide.cpp.o\r\n/home/oyvind/OpenROAD-flow-scripts/tools/OpenROAD/src/odb/test/cpp/TestAbstractLef.cc:13:10: fatal error: gmock/gmock.h: No such file or directory\r\n   13 | #include \"gmock/gmock.h\"\r\n      |          ^~~~~~~~~~~~~~~\r\ncompilation terminated.\r\ngmake[2]: *** [src/odb/test/cpp/CMakeFiles/OdbGTests.dir/build.make:90: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/TestAbstractLef.cc.o] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:2331: src/odb/test/cpp/CMakeFiles/OdbGTests.dir/all] Error 2\r\ngmake[1]: *** Waiting for unfinished jobs...\r\n```\r\n", "date": "2023-06-23T20:04:47Z"}, {"author": "QuantamHD", "role": "assistant", "message": "This ones my bad. It seems that some installations of libgtest-dev don't include google mock. If you uninstall your system gtest it will fix this error, but I'll see if there's something else we could do to fix this.", "date": "2023-06-23T20:14:07Z"}, {"author": "vvbandeira", "role": "assistant", "message": "Fixed on #3514 ", "date": "2023-06-25T22:17:30Z"}], "date": "2023-06-23T20:04:47Z", "category": "Build", "subcategory": "Missing dependency", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3489", "id": 3489, "title": "ABC contains local modifications!", "author": "Simonliudan", "description": "[ 12%] Building abc/abc-bafd2a7\r\nDebug: ABCREV=bafd2a7\r\n[ 22%] Building passes/techmap/filterlib.o\r\n[ 22%] Building yosys-smtbmc\r\nERROR: ABC contains local modifications! Set ABCREV=default in Yosys Makefile!\r\nmake: *** [Makefile:749: abc/abc-bafd2a7] Error 1\r\n\r\nin Centos, I have set ABCREV = default, but the debug info is bafd2a7\r\n", "content": [{"author": "Simonliudan", "role": "user", "message": "[ 12%] Building abc/abc-bafd2a7\r\nDebug: ABCREV=bafd2a7\r\n[ 22%] Building passes/techmap/filterlib.o\r\n[ 22%] Building yosys-smtbmc\r\nERROR: ABC contains local modifications! Set ABCREV=default in Yosys Makefile!\r\nmake: *** [Makefile:749: abc/abc-bafd2a7] Error 1\r\n\r\nin Centos, I have set ABCREV = default, but the debug info is bafd2a7\r\n", "date": "2023-06-20T01:54:57Z"}, {"author": "vijayank88", "role": "assistant", "message": "Is this installation issue?\r\nCan you provide steps to reproduce the same?", "date": "2023-06-20T06:18:54Z"}, {"author": "vvbandeira", "role": "assistant", "message": "@Simonliudan, this looks more like an issue than a discussion. Please file an Issue and follow the Issue template, the template give us important information to help you.", "date": "2023-06-20T18:28:02Z"}], "date": "2023-06-20T01:54:57Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Verilog to DB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3447", "id": 3447, "title": "A few questions about the capabilities of OpenROAD-Flow-Scripts", "author": "lokki11199", "description": "Hello! I have a few questions about ORFS capabilities.\r\n\r\n1)\tDoes OpenROAD support libraries with CCS driver model?\r\n2)\tIs incremental flow supported?\r\n3)\tDoes OpenSTA in OpenROAD support all sdc commands?\r\n4)\tIs SystemVerilog support limited to the constructs that Yosys supports?\r\n5)\tDoes OpenROAD do only DRC analysis or also DRV and DFM? Of the DFM analysis I have only seen an antenna rule check.\r\n6)\tDoes OpenROAD provide corner-based optimisation, or it can only show us the characteristics, like wns, for different corners?\r\n7)\tAre OCVs supported?\r\n8)\tDoes OpenROAD support crosstalk delay/noise analysis?\r\n\r\nThank you for your answers!", "content": [{"author": "lokki11199", "role": "user", "message": "Hello! I have a few questions about ORFS capabilities.\r\n\r\n1)\tDoes OpenROAD support libraries with CCS driver model?\r\n2)\tIs incremental flow supported?\r\n3)\tDoes OpenSTA in OpenROAD support all sdc commands?\r\n4)\tIs SystemVerilog support limited to the constructs that Yosys supports?\r\n5)\tDoes OpenROAD do only DRC analysis or also DRV and DFM? Of the DFM analysis I have only seen an antenna rule check.\r\n6)\tDoes OpenROAD provide corner-based optimisation, or it can only show us the characteristics, like wns, for different corners?\r\n7)\tAre OCVs supported?\r\n8)\tDoes OpenROAD support crosstalk delay/noise analysis?\r\n\r\nThank you for your answers!", "date": "2023-06-10T13:58:50Z"}, {"author": "maliberty", "role": "assistant", "message": "> Hello! I have a few questions about ORFS capabilities.\r\n> \r\n> 1. Does OpenROAD support libraries with CCS driver model?\r\n\r\nOnly NLDM is currently supported but CCS is under development.\r\n\r\n> 2. Is incremental flow supported?\r\n\r\nThat can have a lot of meanings.  We do support restarting the flow at a given step.\r\n\r\n> 3. Does OpenSTA in OpenROAD support all sdc commands?\r\n\r\nYes afaik but be careful that there are many proprietary commands that are not in SDC.\r\n\r\n> 4. Is SystemVerilog support limited to the constructs that Yosys supports?\r\n\r\nYes.  The is the surelog plugin that has a good amount of SV support\r\n\r\n> 5. Does OpenROAD do only DRC analysis or also DRV and DFM? Of the DFM analysis I have only seen an antenna rule check.\r\n\r\nOR does max slew/cap/fanout if that's what you mean by DRV.  There is no DFM.\r\n\r\n> 6. Does OpenROAD provide corner-based optimisation, or it can only show us the characteristics, like wns, for different corners?\r\n\r\nOR can be setup for multi-corner analysis.  ORFS doesn't take advantage of that today.\r\n\r\n> 7. Are OCVs supported?\r\n\r\nYes but see 6\r\n\r\n> 8. Does OpenROAD support crosstalk delay/noise analysis?\r\n\r\nNo.  Once we have CCS for delay it would be natural to tackle this next.\r\n\r\n> \r\n> Thank you for your answers!\r\n\r\n", "date": "2023-06-10T19:12:53Z"}, {"author": "dralabeing", "role": "assistant", "message": "> @dralabeing. Should we curate this and ask Jack to add it to OR and ORFS FAQs?\r\n\r\nYes, this is a good idea. Let's add this to the FAQs", "date": "2023-06-16T04:31:36Z"}], "date": "2023-06-10T13:58:50Z", "category": "Query", "subcategory": "Capability questions", "Tool": "OpenROAD-Flow-Scripts"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3454", "id": 3454, "title": "How can I go from timing reports to Verilog?", "author": "oharboe", "description": "I have a timing path in the OpenROAD GUI that I want to understand.\r\n\r\nHow can I go from the timing report in the GUI to the Verilog?", "content": [{"author": "oharboe", "role": "user", "message": "I have a timing path in the OpenROAD GUI that I want to understand.\r\n\r\nHow can I go from the timing report in the GUI to the Verilog?", "date": "2023-06-13T06:59:44Z"}, {"author": "maliberty", "role": "assistant", "message": "https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1129 should help with naming once merged.\r\n\r\nThere is no direct link today so you'll have to work back from the names.  @QuantamHD has some work to store line numbers that is hopefully going to land but has been tied up in OSS licensing issues.", "date": "2023-06-13T11:42:50Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty Here is an example of how it is hard to get from the static timing report to the Verilog:\r\n\r\nBuild the design with ` make DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk`, then look at the Element `make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk gui_final`.\r\n\r\nHow, in general, do I find my way to the Verilog code?\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/840713c0-f33a-484f-b156-9a79e4aad50d)\r\n\r\n\r\n", "date": "2023-06-14T07:01:39Z"}, {"author": "maliberty", "role": "assistant", "message": "If you use the rename PR I mentioned then the register should have a name matching the Element.v to some degree.  Does that work here?", "date": "2023-06-14T14:55:39Z"}, {"author": "oharboe", "role": "assistant", "message": "What I've heard is that tracking from timing reports back to RTL is an \"unsolved problem in EDA tools\", so https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1129 is probably as good as it gets for now.\r\n\r\nTo go beyond this, I suppose Yosys has to grow some sophistication w.r.t. tracking back to the original Verilog.\r\n\r\nOne of the goals of https://circt.llvm.org/ is to provide an improved infrastructure for RTL as it goes through a number of tools in a flow. Perhaps, one day, yosys will support https://circt.llvm.org/. Ideally this would give Yosys more input languages and better \"debug information\" through synthesis and technology mapping...", "date": "2023-06-15T05:29:49Z"}], "date": "2023-06-13T06:59:44Z", "category": "Query", "subcategory": "Tracing timing paths", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3445", "id": 3445, "title": "how to suppress specific warnings", "author": "gkamendje", "description": "I would like to temporarily suppress some warnings like `[WARNING STA-0122]`. Is there a way to do that? Is there a place to look for the full meaning of warnings and error messages? Some of them are cryptic. ", "content": [{"author": "gkamendje", "role": "user", "message": "I would like to temporarily suppress some warnings like `[WARNING STA-0122]`. Is there a way to do that? Is there a place to look for the full meaning of warnings and error messages? Some of them are cryptic. ", "date": "2023-06-09T20:11:43Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no suppression mechanism.  There is no catalog of messages though you can always look at the source code to get more ideas.  Is there a particular message that you are finding cryptic?", "date": "2023-06-10T05:02:33Z"}, {"author": "maliberty", "role": "assistant", "message": "I forgot we had that.  I wrote it with unit tests in mind but I guess it works here too.", "date": "2023-06-10T23:48:16Z"}], "date": "2023-06-09T20:11:43Z", "category": "Query", "subcategory": "Warning suppression", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3390", "id": 3390, "title": "How to generate a SPEF (`write_spef`) including coordinate information?", "author": "xlindo", "description": "As the default flow, there is no coordinate information in `*CONN` following each `PORT` in the generated `6_final.spef`, which is not in coincidence with a normal SPEF format.\r\n\r\nE.g., no `*C` bolow,\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/8579640/488691da-2217-4dae-980b-da833f9bbf79)\r\n\r\n```\r\n...\r\n\r\n*CONN\r\n*I *572:B I *D sky130_fd_sc_hd__nand2_1\r\n*I *571:Y O *D sky130_fd_sc_hd__nand2_1\r\n\r\n...\r\n```\r\n\r\nCompared with another example in a book,\r\n\r\n```\r\n*D_NET *5423 2.69358 \r\n\r\n*CONN \r\n*I *14207:D I *C 21.7450 94.3150 \r\n*I *14205:D I *C 21.7450 90.4900 \r\n*I *14211:Q O *C 21.4900 83.8800 *D DFFQX1 \r\n\r\n*CAP \r\n1 *5423:10107 *547:12722 0.202686 \r\n2 *5423:10107 *5116:10594 0.104195\r\n\r\n....\r\n```\r\n\r\n\r\nAny boss help me?", "content": [{"author": "xlindo", "role": "user", "message": "As the default flow, there is no coordinate information in `*CONN` following each `PORT` in the generated `6_final.spef`, which is not in coincidence with a normal SPEF format.\r\n\r\nE.g., no `*C` bolow,\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/8579640/488691da-2217-4dae-980b-da833f9bbf79)\r\n\r\n```\r\n...\r\n\r\n*CONN\r\n*I *572:B I *D sky130_fd_sc_hd__nand2_1\r\n*I *571:Y O *D sky130_fd_sc_hd__nand2_1\r\n\r\n...\r\n```\r\n\r\nCompared with another example in a book,\r\n\r\n```\r\n*D_NET *5423 2.69358 \r\n\r\n*CONN \r\n*I *14207:D I *C 21.7450 94.3150 \r\n*I *14205:D I *C 21.7450 90.4900 \r\n*I *14211:Q O *C 21.4900 83.8800 *D DFFQX1 \r\n\r\n*CAP \r\n1 *5423:10107 *547:12722 0.202686 \r\n2 *5423:10107 *5116:10594 0.104195\r\n\r\n....\r\n```\r\n\r\n\r\nAny boss help me?", "date": "2023-05-26T03:20:13Z"}, {"author": "maliberty", "role": "assistant", "message": "Coordinates are optional in spef so this is valid.  There is code to generate coordinates but we've never used it.  We could try enabling but I can't make any guarantees about what it will produce.  Do you have a use model for these or are you just comparing to what a book shows?", "date": "2023-05-26T05:06:58Z"}, {"author": "maliberty", "role": "assistant", "message": "I've added a -coordinates option to write_spef in https://github.com/The-OpenROAD-Project/OpenROAD/pull/3434", "date": "2023-06-07T04:18:59Z"}], "date": "2023-05-26T03:20:13Z", "category": "Query", "subcategory": "SPEF format", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3395", "id": 3395, "title": "Any reference paper for the psm tool?", "author": "Pzy-ss", "description": "Did the psm module refer to any academic research? If so, it would be better to cite the paper for us to learn the ir-solver and make some improvement. If not, any recommendation for freshmen to understand the whole ir-drop thing? Appreciate it!", "content": [{"author": "Pzy-ss", "role": "user", "message": "Did the psm module refer to any academic research? If so, it would be better to cite the paper for us to learn the ir-solver and make some improvement. If not, any recommendation for freshmen to understand the whole ir-drop thing? Appreciate it!", "date": "2023-05-29T03:55:58Z"}, {"author": "vijayank88", "role": "assistant", "message": "@Pzy-ss \r\nHave you referred [this](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/psm)?\r\nhttps://theopenroadproject.org/an-ml-based-iccad-contest-for-static-ir-drop-estimation/", "date": "2023-05-29T05:53:22Z"}, {"author": "maliberty", "role": "assistant", "message": "@VidyaChhabria is the author - would you comment.", "date": "2023-05-30T01:57:37Z"}, {"author": "maliberty", "role": "assistant", "message": "@VidyaChhabria provided the doc in #3405 ", "date": "2023-05-30T22:45:36Z"}, {"author": "VidyaChhabria", "role": "assistant", "message": "Look at PR: https://github.com/The-OpenROAD-Project/OpenROAD/pull/3428 should update the document to have the citations.", "date": "2023-06-05T23:09:07Z"}], "date": "2023-05-29T03:55:58Z", "category": "Query", "subcategory": "Reference materials", "Tool": "IR Drop Analysis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3407", "id": 3407, "title": "How do I trace global routing congestion to net?", "author": "oharboe", "description": "How can I trace global routing congestion to the net that is causing the problem?\r\n\r\nI have routing congestion on top of my macro, but I'm struggling to find out which net is causing the problem.\r\n\r\nI *think* the problem is that some pin is on the wrong side of the macro and that a net is being routed around the macro.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/29c9571b-1fe1-48a0-b70c-b73b151f7d3f)\r\n\r\nClicking on the routing congestion doesn't leave me with much of a clue to track down the net that is causing the problem:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b060f66-f907-4707-8841-9772ffa5f7a5)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I trace global routing congestion to the net that is causing the problem?\r\n\r\nI have routing congestion on top of my macro, but I'm struggling to find out which net is causing the problem.\r\n\r\nI *think* the problem is that some pin is on the wrong side of the macro and that a net is being routed around the macro.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/29c9571b-1fe1-48a0-b70c-b73b151f7d3f)\r\n\r\nClicking on the routing congestion doesn't leave me with much of a clue to track down the net that is causing the problem:\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/8b060f66-f907-4707-8841-9772ffa5f7a5)\r\n", "date": "2023-05-31T11:29:37Z"}, {"author": "maliberty", "role": "assistant", "message": "Short term I would select all nets and see if you can spot the one crossing the macro.  Then go to one end and see what pin it is coming from\r\n\r\n@eder-matheus @luis201420 can we add the set of nets in the gcell to the congestion marker?", "date": "2023-05-31T15:57:21Z"}, {"author": "oharboe", "role": "assistant", "message": "Some tips and some ideas for new features to improve this experience, so I think this is answered.", "date": "2023-05-31T18:41:56Z"}], "date": "2023-05-31T11:29:37Z", "category": "Query", "subcategory": "Usage question", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3417", "id": 3417, "title": "Where do I find the endpoint slack histogram?", "author": "oharboe", "description": "I'm running OpenROAD v2.0-8374-g5235ee26c, but I can't find the endpoint slack histogram. I thought it would be in the Windows menu...\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/pull/3344\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/d979d815-5fee-4951-b4c4-dfb58c45e7a7)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm running OpenROAD v2.0-8374-g5235ee26c, but I can't find the endpoint slack histogram. I thought it would be in the Windows menu...\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/pull/3344\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/d979d815-5fee-4951-b4c4-dfb58c45e7a7)\r\n", "date": "2023-06-01T04:25:52Z"}, {"author": "rovinski", "role": "assistant", "message": "Do you have Qt5 charts installed? Your CMake log should have:\r\n```\r\n-- Charts widget is enabled\r\n```\r\nIt requires a new optional dependency. On Ubuntu you should be able to do `apt install libqt5charts5-dev`.", "date": "2023-06-01T05:24:06Z"}, {"author": "oharboe", "role": "assistant", "message": "Very cool!\r\n\r\nSome nits:\r\n\r\nNo legend on horizontal axis and I have to undock it and increase the size to see what's going on(no numbers visible when it is a tiny chartlet in the default position).\r\n\r\nAlso, I think the scripting window could leave space for the vertical column where the timing report is, instead of taking the full width of the window.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/cbe9a37a-0eba-4cf6-8e5d-df51c58e2457)\r\n", "date": "2023-06-01T05:40:38Z"}], "date": "2023-06-01T04:25:52Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2784", "id": 2784, "title": "New DFT Tool: Starting with scan replace", "author": "fgaray", "description": "Hello OpenROAD devs,\r\n\r\nI am planning on contributing a new tool (following  https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/docs/contrib/DeveloperGuide.md, I will call this \"dft\") for DFT insertion into OpenROAD and I would like to discuss the user facing API.\r\n\r\n# User facing API\r\n\r\nI think we should create two new main commands for DFT: preview_dft and insert_dft:\r\n\r\n* preview_dft: will show a summary of what scan chains are we going to create (after scan architect) but will not apply any changes to the design. This is an immutable command and will not perform any modifications to the design or database. This is useful for debugging proposes and to help users to iterate any DFT option that could change the creation of the scan chains.\r\n* insert_dft: will run again from scratch the immutable part of preview_dft, including scan architect and perform scan stitching. The result of insert_dft should be the same that the one presented by preview_dft but applied to the design.\r\n\r\nI would say that it is better to configure the DFT compiler with commands like \"set_dft_*\" instead of receiving any argument in \"preview_dft\" or \"insert_dft\". For example: set_dft_no_scan (for cells that we don't want to scan replace), set_dft_chain_count (for the number of scan chains to be created) or set_dft_clock_mix (if we want or not to mix clock domains).\r\n\r\nNow, I am not sure if this is going to be something you expect to see in the Python interface, this is a very TCL oriented API and I would like to see if you have any suggestion on doing this more programmatically for Python scripting (maybe this is totally fine as we can have a different API for Python?).\r\n\r\n# Where in the flow is DFT insertion going to be?\r\n\r\n![OpenROAD's flow](https://user-images.githubusercontent.com/1619948/213331834-76ea8bb9-a63b-4576-90ff-5e6eca6e5647.png)\r\n\r\nLooking into OpenROAD's flow, I think the best part to perform DFT insertion is between \"Logic Synthesis\" and \"Floorplanning\". That way we floorplanning will have all the info about DFT to perform optimizations in the design.\r\n\r\nFeel free to suggest something different here :).\r\n\r\n# What is the plan?\r\n\r\nFor now, I will only be creating \"insert_dft\" and \"set_no_scan\" for scan replacement: I will replace sequential cells (excluding black boxes as we don't have support for [CTLs](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626) yet!) in the design with scan equivalents if they are available and nothing more inside insert_dft. I will keep of of the scope adding scan muxes or any other kind of scan stitching as this is my first approach to OpenROAD.\r\n\r\nPlease, let me know if there is something I should be aware of or anything related to this idea or the user interface.\r\n\r\nThanks!,\r\nFelipe\r\n", "content": [{"author": "fgaray", "role": "user", "message": "Hello OpenROAD devs,\r\n\r\nI am planning on contributing a new tool (following  https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/docs/contrib/DeveloperGuide.md, I will call this \"dft\") for DFT insertion into OpenROAD and I would like to discuss the user facing API.\r\n\r\n# User facing API\r\n\r\nI think we should create two new main commands for DFT: preview_dft and insert_dft:\r\n\r\n* preview_dft: will show a summary of what scan chains are we going to create (after scan architect) but will not apply any changes to the design. This is an immutable command and will not perform any modifications to the design or database. This is useful for debugging proposes and to help users to iterate any DFT option that could change the creation of the scan chains.\r\n* insert_dft: will run again from scratch the immutable part of preview_dft, including scan architect and perform scan stitching. The result of insert_dft should be the same that the one presented by preview_dft but applied to the design.\r\n\r\nI would say that it is better to configure the DFT compiler with commands like \"set_dft_*\" instead of receiving any argument in \"preview_dft\" or \"insert_dft\". For example: set_dft_no_scan (for cells that we don't want to scan replace), set_dft_chain_count (for the number of scan chains to be created) or set_dft_clock_mix (if we want or not to mix clock domains).\r\n\r\nNow, I am not sure if this is going to be something you expect to see in the Python interface, this is a very TCL oriented API and I would like to see if you have any suggestion on doing this more programmatically for Python scripting (maybe this is totally fine as we can have a different API for Python?).\r\n\r\n# Where in the flow is DFT insertion going to be?\r\n\r\n![OpenROAD's flow](https://user-images.githubusercontent.com/1619948/213331834-76ea8bb9-a63b-4576-90ff-5e6eca6e5647.png)\r\n\r\nLooking into OpenROAD's flow, I think the best part to perform DFT insertion is between \"Logic Synthesis\" and \"Floorplanning\". That way we floorplanning will have all the info about DFT to perform optimizations in the design.\r\n\r\nFeel free to suggest something different here :).\r\n\r\n# What is the plan?\r\n\r\nFor now, I will only be creating \"insert_dft\" and \"set_no_scan\" for scan replacement: I will replace sequential cells (excluding black boxes as we don't have support for [CTLs](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=966626) yet!) in the design with scan equivalents if they are available and nothing more inside insert_dft. I will keep of of the scope adding scan muxes or any other kind of scan stitching as this is my first approach to OpenROAD.\r\n\r\nPlease, let me know if there is something I should be aware of or anything related to this idea or the user interface.\r\n\r\nThanks!,\r\nFelipe\r\n", "date": "2023-01-19T01:20:43Z"}, {"author": "maliberty", "role": "assistant", "message": "I think it is best to do scan chain after global placement.  You want to put the ff in the best placement for timing and only then construct the chain ordering based on neighbors.  \r\n\r\nIt would be helpful to know what commands you intend to implement to define the chains.  A small complete example would clarify the use model.\r\n\r\nFor python API please see the discussion in https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2745", "date": "2023-01-19T05:45:23Z"}, {"author": "maliberty", "role": "assistant", "message": "@rovinski @msaligane @louiic @Colin-Holehouse  any comments?", "date": "2023-01-19T18:12:32Z"}, {"author": "rovinski", "role": "assistant", "message": "Very cool! Always excited to see more functionality contributed \ud83d\ude03", "date": "2023-01-21T10:42:57Z"}, {"author": "maliberty", "role": "assistant", "message": "Would you say more about scandef and how you intend to generate it?", "date": "2023-01-22T22:17:10Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that odb doesn't store any scan information from DEF today so you'll have to plan on enhancing it as part of this project.", "date": "2023-01-23T01:31:56Z"}, {"author": "maliberty", "role": "assistant", "message": "In case its useful: http://vlsicad.eecs.umich.edu/BK/Slots/cache/vlsicad.ucsd.edu/GSRC/Bookshelf/Slots/ScanOpt/", "date": "2023-01-26T06:25:47Z"}, {"author": "fgaray", "role": "assistant", "message": "Hey @maliberty , \r\n\r\nI am trying to write a function to perform the scan replace and I need to find a scan equivalent cell in the DB.\r\n\r\nI am iterating over the libs in the odb::dbDatabase like this:\r\n\r\n```\r\nbool IsLibScanCell(odb::dbLib* lib) {\r\n  for (odb::dbMaster* master: lib->getMasters()) {\r\n    for (odb::dbMTerm* mterm: master->getMTerms()) {\r\n        std::cout << mterm->getSigType().getString() << std::endl;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n```\r\n\r\nBut looks like the enum of getSigType does not have enough information to see if a pin is scan_enable or scan_in. Is this something that I need to implement or is there another way to access this information inside the lib? I see that in sta/ there are some parsing to detect scan signals, but I do not see them being used in any place outside sta/.\r\n\r\n", "date": "2023-01-27T00:46:52Z"}, {"author": "fgaray", "role": "assistant", "message": "For scan replace, I have a working demo where I collect the scan lib cells and then I try to iterate over the design's blocks applying \"sta::dbNetwork\" replaceCell, but I found that this and some methods in sta:: check before performing the replace if both cells are \"equivalent\" by counting the number of ports in each cell (See inDbInstSwapMasterBefore in dbSta/src/dbSta.cc ).\r\n\r\nThis is not really true when you try to replace a cell with an scan equivalent because the scan one will have additional ports like scan in and scan enable.\r\n\r\nI was wondering if there is a function that I am missing that could help me with this kind of replace.\r\n\r\nIf not, should I provide a new method for dbSta and odb that checks for functional equivalent ports instead of index/name based matching (See swapMaster in odb/src/db/dbInst.cpp) or roll one myself just for DFT? Would you prefer this method to be available in odb or maybe just complete change the way we do the replaceCell?\r\n\r\nThanks!", "date": "2023-02-03T01:25:31Z"}, {"author": "fgaray", "role": "assistant", "message": "Hi @maliberty,\r\n\r\nDo you know how to test if two ports/pins are functional equivalent?, I am trying to use sta::LibertyPort's function() and sta::FuncExpr::equiv() but looks like sta::LibertyPort's function() returns most of the time nullptr. I see that in odb/src/db/dbInst.cpp:1201, we test that mterms are equivalent by checking that the name of the ports is the same (line 1236). \r\n\r\nI can work with that but I think my scan replace function will be more robust if I can check if the ports are functional equivalent.\r\n", "date": "2023-02-08T01:21:22Z"}, {"author": "fgaray", "role": "assistant", "message": "Implemented basic DFT in #2900, #3079 and #3356", "date": "2023-05-31T18:14:55Z"}], "date": "2023-01-19T01:20:43Z", "category": "Feature Request", "subcategory": "New tool addition", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3350", "id": 3350, "title": "Which distros to support", "author": "maliberty", "description": "Currently OR CI is built with\r\n* Local centos7 gcc8\r\n* Local centos7 gcc8 without GUI\r\n* Docker centos7 gcc8\r\n* Docker ubuntu20.04 gcc9\r\n\r\nPRs additionally have GH actions that test:\r\n* macOS (x86)\r\n* c++20 (using clang-16)\r\n\r\nCentos7 is getting quite dated and I think it is time to replace it with a more modern distro.  #3344 shows an example problem where qt5charts is not available in this older distro.  I think Ubuntu 22 or Debian 11 are good contenders.\r\n\r\nI'd like community input as to what distro others are using with OR to help guide our choice.  @antonblanchard @gadfort @QuantamHD @rovinski @msaligane @oharboe @donn @nayiri-k\r\n\r\nThe default compiler version would be updated to match the distro default.\r\n\r\nFYI @vvbandeira @tspyrou ", "content": [{"author": "maliberty", "role": "user", "message": "Currently OR CI is built with\r\n* Local centos7 gcc8\r\n* Local centos7 gcc8 without GUI\r\n* Docker centos7 gcc8\r\n* Docker ubuntu20.04 gcc9\r\n\r\nPRs additionally have GH actions that test:\r\n* macOS (x86)\r\n* c++20 (using clang-16)\r\n\r\nCentos7 is getting quite dated and I think it is time to replace it with a more modern distro.  #3344 shows an example problem where qt5charts is not available in this older distro.  I think Ubuntu 22 or Debian 11 are good contenders.\r\n\r\nI'd like community input as to what distro others are using with OR to help guide our choice.  @antonblanchard @gadfort @QuantamHD @rovinski @msaligane @oharboe @donn @nayiri-k\r\n\r\nThe default compiler version would be updated to match the distro default.\r\n\r\nFYI @vvbandeira @tspyrou ", "date": "2023-05-17T21:59:34Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Google is on Debian test called [Glinux](https://en.wikipedia.org/wiki/GLinux). Ubuntu 22 or Debian 11 seem like reasonable choices to me.\r\n\r\nBut we use bazel to build everything from source so the biggest issue for me is if we start requiring very new versions of widely used libraries like Boost, because then I have to upgrade all of Google to use that version of software which can be a big pain.\r\n\r\nGoogle has a one version policy for any piece of software in the universe, and it's all stored in a monorepo.", "date": "2023-05-17T22:04:38Z"}, {"author": "donn", "role": "assistant", "message": "I use Nix as a build system, so as long as the CMakeFiles are generic enough to compile on both macOS, Ubuntu and CentOS I have no issues with the specific versions of the operating system.", "date": "2023-05-18T00:09:34Z"}, {"author": "rovinski", "role": "assistant", "message": "CentOS 7 is EOL on 2024-06-30. I know of machines that are still running it, so maybe it would be a good idea to hold off removing support until then.", "date": "2023-05-18T01:23:22Z"}, {"author": "olofk", "role": "assistant", "message": "As a data point, I wanted to mention that I just got it running on Gentoo, depending only on system packages except for or-tools", "date": "2023-05-23T11:42:30Z"}], "date": "2023-05-17T21:59:34Z", "category": "Configuration", "subcategory": "Environment setup", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3355", "id": 3355, "title": "set_io_pin_constraint and pin distance", "author": "oharboe", "description": "@nerriav It looks like minimum pin distance is only availble globally for a macro, not per set_io_pin_constraint?\r\n\r\nhttps://openroad.readthedocs.io/en/latest/main/src/ppl/README.html\r\n\r\nWe would like pins to use the entire(initially) width/height of the macro edge to minimize contention at the top level where the macro is used. Currently we add extra horizontal distance in the example below to handle routing congestion at the top level. Routing congestion happens even with horizontal routes, because the horizontal routes will intersect a bit with the PDN.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/83012711-df0f-4b41-bdae-d05d3e3fbc8b)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "@nerriav It looks like minimum pin distance is only availble globally for a macro, not per set_io_pin_constraint?\r\n\r\nhttps://openroad.readthedocs.io/en/latest/main/src/ppl/README.html\r\n\r\nWe would like pins to use the entire(initially) width/height of the macro edge to minimize contention at the top level where the macro is used. Currently we add extra horizontal distance in the example below to handle routing congestion at the top level. Routing congestion happens even with horizontal routes, because the horizontal routes will intersect a bit with the PDN.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/83012711-df0f-4b41-bdae-d05d3e3fbc8b)\r\n", "date": "2023-05-18T08:46:26Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't understand what you are asking here.  Are you talking about -corner_avoidance ?", "date": "2023-05-18T14:06:15Z"}, {"author": "oharboe", "role": "assistant", "message": "@nerriav discovered that `-region:*` and `-region:0-100` to is not identical if the regions is 100 wide. The pins are spread evenly when a range is specified (latter) and bunched together more closely if `*` is specified.\r\n\r\n@maliberty Is this intentional?", "date": "2023-05-21T17:44:59Z"}], "date": "2023-05-18T08:46:26Z", "category": "Query", "subcategory": "Pin placement behavior", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3362", "id": 3362, "title": "Where does \"Error: tdms_place.tcl, 35 cannot create std::vector larger than max_size()\"", "author": "oharboe", "description": "I want to debug it, but I searched the code and couldn't find this error message in the source.\r\n\r\n```\r\n[INFO GPL-0003] SiteSize: 54 270\r\n[INFO GPL-0004] CoreAreaLxLy: 2160 2160\r\n[INFO GPL-0005] CoreAreaUxUy: 25922160 25922160\r\nError: tdms_place.tcl, 35 cannot create std::vector larger than max_size()\r\nCommand exited with non-zero status 1\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I want to debug it, but I searched the code and couldn't find this error message in the source.\r\n\r\n```\r\n[INFO GPL-0003] SiteSize: 54 270\r\n[INFO GPL-0004] CoreAreaLxLy: 2160 2160\r\n[INFO GPL-0005] CoreAreaUxUy: 25922160 25922160\r\nError: tdms_place.tcl, 35 cannot create std::vector larger than max_size()\r\nCommand exited with non-zero status 1\r\n```\r\n", "date": "2023-05-20T19:31:49Z"}, {"author": "maliberty", "role": "assistant", "message": "My guess is this is an STL exception and not in the OR code.  In gdb try 'catch throw' to see when it is being thrown.", "date": "2023-05-20T20:57:10Z"}, {"author": "oharboe", "role": "assistant", "message": "This is odd... 48000*96000 = 4608000000. Ah. overflow.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/ca384a53-04da-42fd-9039-014b3bdd89f9)\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/a0156546-48aa-4c6c-84a1-ee9b89647226)\r\n\r\n\r\n```\r\nD$ git diff\r\ndiff --git a/src/gpl/src/placerBase.cpp b/src/gpl/src/placerBase.cpp\r\nindex 30ff82771..4f2c10b4e 100644\r\n--- a/src/gpl/src/placerBase.cpp\r\n+++ b/src/gpl/src/placerBase.cpp\r\n@@ -1002,8 +1002,8 @@ void PlacerBase::initInstsForUnusableSites()\r\n {\r\n   dbSet<dbRow> rows = db_->getChip()->getBlock()->getRows();\r\n \r\n-  int siteCountX = (die_.coreUx() - die_.coreLx()) / siteSizeX_;\r\n-  int siteCountY = (die_.coreUy() - die_.coreLy()) / siteSizeY_;\r\n+  long siteCountX = (die_.coreUx() - die_.coreLx()) / siteSizeX_;\r\n+  long siteCountY = (die_.coreUy() - die_.coreLy()) / siteSizeY_;\r\n \r\n   enum PlaceInfo\r\n   {\r\n```\r\n\r\ngives me:\r\n\r\n```\r\n[INFO GPL-0002] DBU: 1000\r\n[INFO GPL-0003] SiteSize: 54 270\r\n[INFO GPL-0004] CoreAreaLxLy: 2160 2160\r\n[INFO GPL-0005] CoreAreaUxUy: 25922160 25922160\r\nError: out of memory.\r\n```", "date": "2023-05-21T15:32:51Z"}], "date": "2023-05-20T19:31:49Z", "category": "Bug", "subcategory": "Memory allocation error", "Tool": "Global Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3353", "id": 3353, "title": "Build times for our design", "author": "oharboe", "description": "There is no question here, just a demonstration of the use of the build time summary for a design that has one top level macro and 5 macros at the top level. What is being built here are mock abstracts for the macros at the top level as we are only interested in regression testing the top level on our build servers.\r\n\r\nThe top level is the slowest in detailed routing and we have 5 macros at the top level.\r\n\r\nWe are not currently building the macros at the top level in parallel, though we intend to, but it would only cut the running time by 50%.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4cf1cdad-6896-4d2f-9ad2-af2944e50761)\r\n\r\n\r\nThis is the command I run to build a summary of all the build times `find -regex ./logs/.*/base -type d -exec python3 util/genElapsedTime.py -d {} \\; | sort -hr -k2`\r\n\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n\r\nStage | time/s\r\n-- | --\r\n5_2_TritonRoute | 21313\r\n5_2_TritonRoute | 7284\r\n5_2_TritonRoute | 4744\r\n5_2_TritonRoute | 2964\r\n5_2_TritonRoute | 1825\r\n5_2_TritonRoute | 1482\r\n3_3_place_gp | 1274\r\n4_1_cts | 1158\r\n3_3_place_gp | 666\r\n1_1_yosys | 617\r\n4_1_cts | 379\r\n6_report | 332\r\n3_3_place_gp | 312\r\n5_2_TritonRoute | 294\r\n3_5_opendp | 293\r\n1_1_yosys | 287\r\n5_2_TritonRoute | 282\r\n3_3_place_gp | 278\r\n4_1_cts | 273\r\n3_4_resizer | 224\r\n4_1_cts | 203\r\n5_1_fastroute | 198\r\n6_report | 164\r\n5_1_fastroute | 164\r\n1_1_yosys | 160\r\n5_1_fastroute | 142\r\n3_1_place_gp_skip_io | 132\r\n5_1_fastroute | 126\r\n3_4_resizer | 123\r\n6_report | 116\r\n3_5_opendp | 109\r\n... | ...\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n", "content": [{"author": "oharboe", "role": "user", "message": "There is no question here, just a demonstration of the use of the build time summary for a design that has one top level macro and 5 macros at the top level. What is being built here are mock abstracts for the macros at the top level as we are only interested in regression testing the top level on our build servers.\r\n\r\nThe top level is the slowest in detailed routing and we have 5 macros at the top level.\r\n\r\nWe are not currently building the macros at the top level in parallel, though we intend to, but it would only cut the running time by 50%.\r\n\r\n![image](https://github.com/The-OpenROAD-Project/OpenROAD/assets/2798822/4cf1cdad-6896-4d2f-9ad2-af2944e50761)\r\n\r\n\r\nThis is the command I run to build a summary of all the build times `find -regex ./logs/.*/base -type d -exec python3 util/genElapsedTime.py -d {} \\; | sort -hr -k2`\r\n\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n\r\nStage | time/s\r\n-- | --\r\n5_2_TritonRoute | 21313\r\n5_2_TritonRoute | 7284\r\n5_2_TritonRoute | 4744\r\n5_2_TritonRoute | 2964\r\n5_2_TritonRoute | 1825\r\n5_2_TritonRoute | 1482\r\n3_3_place_gp | 1274\r\n4_1_cts | 1158\r\n3_3_place_gp | 666\r\n1_1_yosys | 617\r\n4_1_cts | 379\r\n6_report | 332\r\n3_3_place_gp | 312\r\n5_2_TritonRoute | 294\r\n3_5_opendp | 293\r\n1_1_yosys | 287\r\n5_2_TritonRoute | 282\r\n3_3_place_gp | 278\r\n4_1_cts | 273\r\n3_4_resizer | 224\r\n4_1_cts | 203\r\n5_1_fastroute | 198\r\n6_report | 164\r\n5_1_fastroute | 164\r\n1_1_yosys | 160\r\n5_1_fastroute | 142\r\n3_1_place_gp_skip_io | 132\r\n5_1_fastroute | 126\r\n3_4_resizer | 123\r\n6_report | 116\r\n3_5_opendp | 109\r\n... | ...\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n", "date": "2023-05-18T06:49:38Z"}, {"author": "maliberty", "role": "assistant", "message": "That is average behaviour as drt is costly.  It does scale pretty well with threads so more CPUs helps.  We do have some work to do distributed drt if you want to test it out but it isn't in the flow currently due to the extra setup overhead.", "date": "2023-05-18T14:08:30Z"}, {"author": "maliberty", "role": "assistant", "message": "How many threads in your data above?", "date": "2023-05-18T14:08:48Z"}, {"author": "oharboe", "role": "assistant", "message": "No question or suggestions here, just a datapoint that I thought it might have some value in sharing.", "date": "2023-05-18T14:26:17Z"}, {"author": "maliberty", "role": "assistant", "message": "Fwiw we test with 40 cpus and I know Google often uses 96.   We have tested with several hundred in distributed mode.", "date": "2023-05-18T14:31:25Z"}], "date": "2023-05-18T06:49:38Z", "category": "Runtime", "subcategory": "Performance analysis", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3346", "id": 3346, "title": "Can I ask global route to fail early?", "author": "oharboe", "description": "@nerriav Global routing takes very little time for the project I am working on. However, when I make changes, these sometimes can make global routing impossible and I have to tweak my change.\r\n\r\nWhen global routing fails, it doesnt fail quickly, it just runs \"forever\"(hours compared to minutes) before it ultimately fails.\r\n\r\nCan I adjust a setting such that global route fails quickly so that I dont waste server build resources and I can quickly load the routing congestion report in the DRC viewer to drill down to the problem?", "content": [{"author": "oharboe", "role": "user", "message": "@nerriav Global routing takes very little time for the project I am working on. However, when I make changes, these sometimes can make global routing impossible and I have to tweak my change.\r\n\r\nWhen global routing fails, it doesnt fail quickly, it just runs \"forever\"(hours compared to minutes) before it ultimately fails.\r\n\r\nCan I adjust a setting such that global route fails quickly so that I dont waste server build resources and I can quickly load the routing congestion report in the DRC viewer to drill down to the problem?", "date": "2023-05-17T10:14:52Z"}, {"author": "rovinski", "role": "assistant", "message": "In OR you can use the `-congestion_interations` argument which translates to `GLOBAL_ROUTE_ARGS=\" -congestion_iterations X \"` in ORFS. X is a positive integer. The default is 100.", "date": "2023-05-17T10:41:27Z"}, {"author": "oharboe", "role": "assistant", "message": "Syntax subtleties... `export GLOBAL_ROUTE_ARGS=\"-congestion_iterations 10 -verbose\"`, failed with `[ERROR STA-0402] global_route -congestion_iterations 10 -verbose is not a known keyword or flag.`\r\n\r\n`export GLOBAL_ROUTE_ARGS=-congestion_iterations 10 -verbose` worked...\r\n\r\nIt is still stuck on:\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n```\r\n\r\nWith `export GLOBAL_ROUTE_ARGS=-congestion_iterations 2 -verbose` it fails after 2:30 minutes.\r\n\r\nI'll see how high I can make it until it \"runs forever\". If it fails after 10 minutes, then I have something I can try out. If there is nothing wrong, I would expect it to complete in ca. 3 minutes.\r\n\r\nI'm curious if 10 iterations is enough for all the designs under test... https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1076", "date": "2023-05-18T08:43:30Z"}], "date": "2023-05-17T10:14:52Z", "category": "Runtime", "subcategory": "Global routing timeout", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3314", "id": 3314, "title": "[WARNING STA-0139] ... 63.3687 is not a float.", "author": "oharboe", "description": "I get a lot of these warnings when I run `make gui_final`\r\n\r\nThis is with the latest ORFS.\r\n\r\nWhat are they?\r\n\r\n```\r\n$ make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk place\r\n```\r\n\r\n\r\n```\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 63.3687 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 79.0805 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 106.935 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 156.622 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 248.596 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 432.982 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.36 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.72 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 1.44 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 2.88 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 5.76 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 11.52 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 23.04 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 12.8576 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 15.7364 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 21.3969 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 32.5931 is not a float.\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "I get a lot of these warnings when I run `make gui_final`\r\n\r\nThis is with the latest ORFS.\r\n\r\nWhat are they?\r\n\r\n```\r\n$ make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk place\r\n```\r\n\r\n\r\n```\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 63.3687 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 79.0805 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 106.935 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 156.622 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 248.596 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 397, 432.982 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.36 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 0.72 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 1.44 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 2.88 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 5.76 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 11.52 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 406, 23.04 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 12.8576 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 15.7364 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 21.3969 is not a float.\r\n[WARNING STA-0139] /home/oyvind/OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_AO_RVT_TT_nldm_211120.lib.gz line 415, 32.5931 is not a float.\r\n```", "date": "2023-05-10T05:39:19Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nI ran with latest commit and not able to get similar logs.", "date": "2023-05-11T07:20:10Z"}, {"author": "maliberty", "role": "assistant", "message": "The report says 'make place' and 'make gui_final' which are not a compatible pair.   I can't reproduce this either even running all the way through.", "date": "2023-05-11T16:26:42Z"}, {"author": "oharboe", "role": "assistant", "message": "```\r\nrm -rf results/\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk place\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk gui_place\r\n```\r\n\r\n```\r\n$ make DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk gui_place\r\n[INFO][FLOW] Using platform directory ./platforms/asap7\r\n[INFO-FLOW] ASU ASAP7 - version 2\r\nDefault PVT selection: BC\r\nODB_FILE=./results/asap7/mock-array-big_Element/base/3_place.odb /home/oyvind/OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad -gui  ./scripts/gui.tcl\r\nWarning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on Wayland anyway.\r\nThis plugin does not support propagateSizeHints()\r\nOpenROAD v2.0-8114-gaa1f8060d \r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 0.72 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 1.44 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 2.88 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 5.76 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 11.52 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 23.04 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 82, 46.08 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 0.72 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 1.44 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 2.88 is not a float.\r\n[WARNING STA-0139] ./platforms/asap7/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib.gz line 96, 5.76 is not a float.\r\n```\r\n", "date": "2023-05-12T09:16:10Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty Aha! This is a locale issue. In their wisdom a hundred years ago, Norwegians decided to use \",\" to separate integers from fractions in floating point... So \"12.34\" is not a valid float in Norwegian locale, rather \"12,34\" is.\r\n\r\nThe evidence that this is the problem is that setting `LC_NUMERIC=\"en_GB.UTF-8\"` fixes the problem.\r\n\r\nIn this case, the locale is decided by the format that is being parsed, it is not a human readable/writeable number.\r\n\r\nLet's see if this works: https://github.com/Pinata-Consulting/OpenSTA/tree/lock-down-strtof-locale\r\n\r\nYep :-)\r\n\r\nThis also explains why we don't see this when we run from docker, only local install.", "date": "2023-05-17T17:03:22Z"}, {"author": "maliberty", "role": "assistant", "message": "Brazil has the same issue.  https://github.com/The-OpenROAD-Project/OpenROAD/blob/6920ac530b6959f742e75b7f55062b1642730b14/src/Main.cc#L217  attempts to solve this.  Do none of the locales exist on your systems?", "date": "2023-05-17T17:47:34Z"}, {"author": "maliberty", "role": "assistant", "message": "Would you try your strtof check along with getlocale after these various points to try to see what's going on.  I think this works in Brazil so I'm trying to understand what's different here.  @luis201420 any insights?\r\n", "date": "2023-05-17T20:34:20Z"}, {"author": "maliberty", "role": "assistant", "message": "Perhaps it relates to LC_NUMERIC or another.  Can you try unsetting all LC_* but LC_ALL in your environment to see if that matters?", "date": "2023-05-17T20:36:26Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @luis201420 With this change, I no longer get the warnings.\r\n\r\nThis is just a quick hack, I think it would be better if someone who knows what is going on and are aware of other edgecases articulates the pull request :-)\r\n\r\n```\r\ndiff --git a/src/gui/src/gui.cpp b/src/gui/src/gui.cpp\r\nindex 355aa6842..7d79d99a3 100644\r\n--- a/src/gui/src/gui.cpp\r\n+++ b/src/gui/src/gui.cpp\r\n@@ -1141,6 +1141,16 @@ int startGui(int& argc,\r\n   }\r\n   main_window->show();\r\n \r\n+  // This avoids problems with locale setting dependent\r\n+  // C functions like strtod (e.g. 0.5 vs 0,5).\r\n+  std::array locales = {\"en_US.UTF-8\", \"C.UTF-8\", \"C\"};\r\n+  for (auto locale : locales) {\r\n+    if (std::setlocale(LC_ALL, locale) != nullptr) {\r\n+      break;\r\n+    }\r\n+  }\r\n+\r\n+\r\n   gui->setLogger(open_road->getLogger());\r\n \r\n   main_window->setDatabase(open_road->getDb());\r\n```\r\n", "date": "2023-05-17T21:13:00Z"}, {"author": "maliberty", "role": "assistant", "message": "@luis201420 will you look at this since you can reproduce it", "date": "2023-05-18T05:25:42Z"}, {"author": "oharboe", "role": "assistant", "message": "I guess this has been identified as a bug in OpenROAD, given that there are frameworks that set the locale after OpenROAD has set the locale.", "date": "2023-05-18T06:50:33Z"}], "date": "2023-05-10T05:39:19Z", "category": "Bug", "subcategory": "Locale issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1610", "id": 1610, "title": "How to get heatmap data?", "author": "gudeh", "description": "Hi guys, congratulations on all the great job done with the OpenROAD project!! I want to use it to develop my ideas during my Ph.D.\r\n\r\nI am trying to build a dataset for graph neural network training. My idea is to perform physical design predictions with a mapped circuit before P&R. I am trying to extract features from Verilog with Yosys, send them to the DGL python library and perform training with DGL. These steps are already operational, but I am missing an essential aspect of the prediction: the label! \r\n\r\nTo solve the mentioned issue **I would like to have the data shown by the heatmaps in the GUI, such as placement density and routing congestion**. I would like them not as images but the actual numeric values. The positions of the cells and wires would also be essential. \r\n\r\n- Can anyone point me to which path I should go to get this data? I understand all of it is already processed by the code to show the images in the GUI. I just need to find it. \r\n- Would there be any TCL command which could help me with that? \r\n- Or my best shot is to try and use the odb database and edit some code? \r\n\r\nI noticed there are some heatmap codes in [./src/gui/src](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gui/src), but there are so many attributes and methods. Also, I am not used to the odb database yet. Any help is welcome.", "content": [{"author": "gudeh", "role": "user", "message": "Hi guys, congratulations on all the great job done with the OpenROAD project!! I want to use it to develop my ideas during my Ph.D.\r\n\r\nI am trying to build a dataset for graph neural network training. My idea is to perform physical design predictions with a mapped circuit before P&R. I am trying to extract features from Verilog with Yosys, send them to the DGL python library and perform training with DGL. These steps are already operational, but I am missing an essential aspect of the prediction: the label! \r\n\r\nTo solve the mentioned issue **I would like to have the data shown by the heatmaps in the GUI, such as placement density and routing congestion**. I would like them not as images but the actual numeric values. The positions of the cells and wires would also be essential. \r\n\r\n- Can anyone point me to which path I should go to get this data? I understand all of it is already processed by the code to show the images in the GUI. I just need to find it. \r\n- Would there be any TCL command which could help me with that? \r\n- Or my best shot is to try and use the odb database and edit some code? \r\n\r\nI noticed there are some heatmap codes in [./src/gui/src](https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/gui/src), but there are so many attributes and methods. Also, I am not used to the odb database yet. Any help is welcome.", "date": "2022-02-02T22:00:07Z"}, {"author": "gudeh", "role": "assistant", "message": "By the way I couldn't find the path `./build/src/swig/tcl/opendbtcl` and `./build/src/swig/tcl/opendb_wrapper.cpp` as mentioned in [the documentation](https://openroad.readthedocs.io/en/latest/main/src/odb/README.html).", "date": "2022-02-02T22:01:34Z"}, {"author": "maliberty", "role": "assistant", "message": "The bit of documentation is out of date as we now include the tcl functionality in openroad itself and no longer build standalone executables for odb.  (@vvbandeira)\r\n\r\n@arlpetergadfort My first thought was to look at each engine but maybe it would be easier to provide a dump_heatmap command in the GUI since it has already abstracted the interface to each engine.  Does that seem reasonable to you?", "date": "2022-02-02T22:06:33Z"}, {"author": "maliberty", "role": "assistant", "message": "#1612 is merged so you should be good to go.", "date": "2022-02-04T19:55:30Z"}, {"author": "maliberty", "role": "assistant", "message": "You are repeating the previous rule and probably want something like:\r\n\r\nmy_gui: my_gui_6_final.def\r\n$(foreach file,$(RESULTS_DEF),my_gui_$(file)): my_gui_%:\r\n\r\nYou are getting the bbox of each instance.  You'll have to map that back to the grid you are working with (an instance may be across a boundary as well).", "date": "2022-02-13T04:44:20Z"}, {"author": "gudeh", "role": "assistant", "message": "Hey guys, I have some issues with the heatmap features. I noticed that running the GCD project from a fresh OpenROAD-flow with this exact sequence of commands:\r\n```\r\ngit clone --recursive https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts.git\r\ncd OpenROAD-flow-scripts/\r\nsudo ./build_openroad.sh --local\r\ncd flow\r\nmake\r\nmake gui_final\r\n```\r\nRenders no output on the circuit's image when clicking on the checkbox for `Placement Density`. The `Power Density` checkbox works fine. Furthermore,  clicking on `Routing Congestion` and `IR Drop` gives the error message bellow and shows no heatmap in the image.\r\n```\r\n[WARNING GUI-0066] Heat map \"Routing Congestion\" has not been populated with data.\r\n[WARNING GUI-0066] Heat map \"IR Drop\" has not been populated with data.\r\n```\r\n\r\nIf I run the AES project I can see the Placement and Power heatmaps. Although I have the same errors with Routing and IR Drop.\r\n\r\nThe Routing and IR Drop also gives errors when trying to call gui::dump_heatmap: `[ERROR GUI-0072] \"Routing Congestion\" is not populated with data.`\r\nI also noticed that the CSVs provided by the gui::dump_heatmap command gives bouding boxes with different sizes for Placement and Power, is this expected?\r\n", "date": "2022-02-14T16:51:15Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't see any issue with placement density.  This is gcd/ng45:\r\n![image](https://user-images.githubusercontent.com/761514/153918958-d33becda-6a06-417a-a685-463e6076575a.png)\r\n", "date": "2022-02-14T17:51:33Z"}, {"author": "maliberty", "role": "assistant", "message": "@arlpetergadfort I'm seeing:\r\n```\r\n>>> read_guides results/nangate45/gcd/base/route.guide\r\n[WARNING GUI-0066] Heat map \"Routing Congestion\" has not been populated with data.\r\n```\r\nThis used to work - do you know what has changed?", "date": "2022-02-14T17:59:53Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi again! I am progressing with my dataset generation. Looking real promising. I am only having issues trying to close the gui. Even if I use gui::hide it goes to the `openroad>` command option in terminal. How can I exit it the gui AND the openroad afterwards via a TCL file? [This is what I have tried](https://github.com/gudeh/OpenROAD-flow-scripts/blob/master/flow/scripts/getLabels.tcl). As seen in the last lines.\r\n\r\nBy the way if you uncoment the part where I try to use the Routing and IRdrop heatmaps the gui::hide doesn't work.", "date": "2022-02-15T23:58:28Z"}, {"author": "gudeh", "role": "assistant", "message": "", "date": "2022-03-01T20:23:15Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi everyone! I am coming back to this project. I was focusing on other tasks the last months. \r\n \r\nI wanted to share with you an example of what my code is able to generate by editing Yosys and OpenROAD: https://drive.google.com/drive/folders/1xTz4iTuGx0bDD-ZWAOV-MDQWKI0a8XA8?usp=sharing . \r\n\r\nThis pair of CSV files can be used as input for DGL Python library and create a GNN. \r\n\r\nThere is an issue though, I created a [Python script to check for collisions among the heatmaps and logic gate locations,](https://github.com/gudeh/OpenROAD-flow-scripts/blob/master/flow/myStuff/gateToHeat.py) and it is really slow. I made it by comparing the location of all the gates against each of the 4 heat types. I would like to ask any suggestions on how to improve this. Is this able to be solved on the OpenROAD db?", "date": "2022-05-13T23:40:25Z"}, {"author": "maliberty", "role": "assistant", "message": "The link to your script is broken.  The heatmaps are a grid so it should be easy to compute the index into the map.\r\n\r\nMatt", "date": "2022-05-16T16:18:31Z"}, {"author": "gudeh", "role": "assistant", "message": "Hello again! I found a bug on my code to retrieve learning data using OpenROAD. The logic gate names don't match!\r\n\r\nMy machine learning model features come from the verilog generated during the flow. Optionally I can use the 1_1_yosys.v ( post tech map ) or the 6_final.v ( post route ). Afterwards I get the labels using some TCL commands discussed previously in this post. For example:\r\n\r\n\r\n> set dut gatesPosition_\r\n> set fileName ${designPath}/${dut}${::env(DESIGN_NAME)}.csv\r\n> set outFile [open $fileName w]\r\n> puts $outFile \"Name,xMin,yMin,xMax,yMax\"\r\n> set block [ord::get_db_block]\r\n> foreach inst [$block getInsts] { \r\n>   set box [$inst getBBox] \r\n>   puts $outFile \"[$inst getName], [ord::dbu_to_microns [$box xMin]], [ord::dbu_to_microns [$box yMin]], [ord::dbu_to_microns [$box xMax]], [ord::dbu_to_microns [$box yMax]]\" \r\n> }\r\n> close $outFile\r\n\r\nAt last, I have to build up my dataset by matching the logic gates names from the verilog,  the logic gate names(from the TCL snippet pasted here and the heatmap dumps (positions). **But there is a problem:**\r\n\r\nI noticed that sometimes the flow changes the names of the gates between the verilog and the names retrieved from the TCL command ( `[$inst getName]`) causing unexpected behavior when I build the dataset. For example, the design bp_be_top with nangate45, there is a gate called `\\be_calculator/_09864_` in the 6_final.v, and the name I get with the TCL command is `be_calculator/_09864_` without the `\\`. \r\n\r\n**My question is:** Is there anyway to be sure that OR flow won't change the names of the gates? If not when and how does the tool changes the names of the gates, does it simply remove the starting `\\` or are there any other possible modifications?", "date": "2023-03-30T22:41:14Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi guys, I have another doubt regarding the heatmaps provided by OR. I would like to make sure the behavior is as intended. This is the routing congestion heatmap when executing the Rocket Tile design with standard values (config.mk) given by the repository:\r\n![image](https://user-images.githubusercontent.com/37420320/230185344-17959d7b-05b3-4ee8-ab04-6865fb097f41.png)\r\n\r\nAfter executing the flow, OR inserts a lot of Filler Cells. It seems that the standard core size for Rocket Tile is extremely large, is there a reason for that?\r\n\r\nI ran the flow with the same design, although dividing the max X and max Y core area values in half and leaving the die area as is:\r\n\r\n> export DIE_AREA    = 0 0 924.92 799.4\r\n> #export CORE_AREA   = 10.07 9.8 914.85 789.6\r\n> export CORE_AREA   = 10.07 9.8 457.425 394.8\r\n\r\nAnd this is the routing congestion heatmap after execution. There is still a considerably high congestion between core and die:\r\n![image](https://user-images.githubusercontent.com/37420320/230186482-44fd0f4f-85d4-4fcc-afa1-ed0b05a1635d.png)\r\n\r\nTo confirm, this is the placement density after the same run:\r\n![image](https://user-images.githubusercontent.com/37420320/230188189-c3be97c8-c7a9-4f42-b78d-03918a202baf.png)\r\n\r\n\r\nThis seems strange to me. I wouldn't expect so much routing congestion between die and core area. Furthermore, I couldn't even see metal wires on the green congested area. Is this as supposed to?", "date": "2023-04-05T19:45:12Z"}, {"author": "gudeh", "role": "assistant", "message": "Hello again. I wonder if there is a way to get the heatmaps considering only certain metal layers, is that possible?", "date": "2023-05-16T14:08:49Z"}], "date": "2022-02-02T22:00:07Z", "category": "Query", "subcategory": "Data extraction", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3331", "id": 3331, "title": "Synthesis support", "author": "Blebowski", "description": "Hello, Is there any idea whether eventually OpenRoad would like to support also synthesis as part of the tool (instead of using Yosys externally) ?", "content": [{"author": "Blebowski", "role": "user", "message": "Hello, Is there any idea whether eventually OpenRoad would like to support also synthesis as part of the tool (instead of using Yosys externally) ?", "date": "2023-05-13T09:41:36Z"}, {"author": "maliberty", "role": "assistant", "message": "There is no plan for that.  At most we would integrate yosys.  What motivates your question?", "date": "2023-05-13T14:03:21Z"}, {"author": "Blebowski", "role": "assistant", "message": "Hi, @maliberty , several points:\r\n- Yosys does not support full System Verilog (AFAIK, only with proprietary parser). Nor it supports VHDL (only via GHDL yosys plugin, and  getting this to work is tricky)\r\n- Synthesis is mentioned several times in: https://github.com/The-OpenROAD-Project/OpenROAD/issues/1759\r\n1. Hard to get netlist that passes the timing\r\n2. Possible QoR gains\r\n\r\n- Generally, placement / routing aware synthesis reaches better results in lower geometries\r\n- Industry high-end goes this direction\r\n- Easier user interface (single database, simpler to pass information from synthesis to PnR)\r\n", "date": "2023-05-13T21:15:55Z"}, {"author": "Blebowski", "role": "assistant", "message": "However,\r\nI need to note that I am not actively using nor developing OpenRoad. As for the usage, in company where I work, we use Synopsys for Synthesis and PnR tools due to stability, documentation, good performance and vast features available. We are looking forward for the day when we will be able to use open source.\r\nAs for the development, I would really like to join, but I already have little time for the open-source work due to my daily job.", "date": "2023-05-13T21:21:16Z"}, {"author": "maliberty", "role": "assistant", "message": "SV support is unrelated to OR and is being addressed in https://github.com/chipsalliance/Surelog.  The pain is mostly related to missing ASIC oriented features in yosys/abc (eg operator mapping).  \r\n\r\nIn general its a large effort and would need dedicated resources to work on it.  There isn't enough bandwidth to make it a priority.  If you want to start addressing some of these concerns I'd be happy to discuss further.", "date": "2023-05-13T21:24:48Z"}, {"author": "maliberty", "role": "assistant", "message": "OR has already integrated abc which handles the technology dependent operations.  Its less clear that there is a big advantage to the technology independent operations in yosys itself.  There is some work slowly progressing on remapping in OR using abc.", "date": "2023-05-15T02:27:10Z"}], "date": "2023-05-13T09:41:36Z", "category": "Feature Request", "subcategory": "Synthesis support", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3327", "id": 3327, "title": "What is the order of pins for get_ports?", "author": "oharboe", "description": "I'm using `-group -order` with `set_io_constraints` and I'm using the tcl snippet below to enumerate pins.\r\n\r\nHowever, this brings up the question: what order does `get_ports` return pins in?\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [get_ports -regexp $regex] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm using `-group -order` with `set_io_constraints` and I'm using the tcl snippet below to enumerate pins.\r\n\r\nHowever, this brings up the question: what order does `get_ports` return pins in?\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [get_ports -regexp $regex] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n```\r\n", "date": "2023-05-12T09:31:58Z"}, {"author": "oharboe", "role": "assistant", "message": "@nerriav FYI", "date": "2023-05-12T09:32:12Z"}, {"author": "maliberty", "role": "assistant", "message": "arbitrary order, no assumptions should be made", "date": "2023-05-12T14:07:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The command comes from SDC and such an option would be non-standard and non-portable.", "date": "2023-05-12T21:29:11Z"}, {"author": "oharboe", "role": "assistant", "message": "In mock-array-big, I introduced a designs/asap7/mock-array-big/util.tcl function, which is shared between macros and top level of the design.\r\n\r\nI'm thinking that a shared util.tcl function will be required for non-trivial designs anyway.\r\n\r\nPerhaps it is sufficient to provide an example of this in mock-array-big for now?\r\n\r\nI see this somewhat tying into how one would have a centralized method to calculate properties of macros and the top level design: manual placement of macros relative to eachother, sizes of macros calculated based on environment variables, etc.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/discussions/1067", "date": "2023-05-15T04:50:58Z"}], "date": "2023-05-12T09:31:58Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3291", "id": 3291, "title": "Can these warnings be removed?", "author": "oharboe", "description": "I've found myself ignoring warnings when I shouldn't...\r\n\r\nIn that regard, it would be helpful to fix some warnings that are always there, so I pay more attention...\r\n\r\nCan these be fixed?\r\n\r\n```\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13178, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13211, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13244, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13277, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13310, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13343, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13376, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14772, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14805, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14838, timing group from output port.\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I've found myself ignoring warnings when I shouldn't...\r\n\r\nIn that regard, it would be helpful to fix some warnings that are always there, so I pay more attention...\r\n\r\nCan these be fixed?\r\n\r\n```\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13178, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13211, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13244, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13277, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13310, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13343, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 13376, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14772, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14805, timing group from output port.\r\n[WARNING STA-0164] /OpenROAD-flow-scripts/flow/platforms/asap7/lib/asap7sc7p5t_SIMPLE_RVT_TT_nldm_211120.lib.gz line 14838, timing group from output port.\r\n```\r\n", "date": "2023-05-04T05:27:04Z"}, {"author": "rovinski", "role": "assistant", "message": "They cannot, the warnings are due to the structure of the cells in the PDK and the way they were characterized into a timing model. You can, however, stop the warnings from showing up by using `suppress_message STA 164`.", "date": "2023-05-04T06:24:34Z"}, {"author": "vijayank88", "role": "assistant", "message": "I have discussed about this `WARNING STA-016` month back with Tom. Replied:\r\n```\r\nThe output to output timing edges in the liberty cause this warning.\r\nIf it's just this one cell, you could add it to the don't use list. \r\nI think this warning means the timing will be less accurate.\r\nIf you are doing experiments it may also be safe to ignore.\r\n```", "date": "2023-05-04T09:35:49Z"}], "date": "2023-05-04T05:27:04Z", "category": "Query", "subcategory": "Warning handling", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2971", "id": 2971, "title": "Arm64 Support", "author": "DylanTom", "description": "Hi, I am looking to use OpenROAD and have tried to install it on my computer.\r\n\r\nIt is an M2 Pro Macbook Pro, 32 GB RAM, 1TB SSD. I am running an Ubuntu VM through UTM which has 8GB RAM and 64 GB SSD. \r\n\r\nI am having trouble with building OpenROAD because one of the dependencies is `or-tools`, which does not appear to have Ubuntu support for the ARM architecture. I was wondering if anyone had similar issues or would know how to resolve this.\r\n\r\nSpecifically, does OpenROAD support the ARM architecture, and if not, is that a priority in the future? \r\n\r\nThanks!", "content": [{"author": "DylanTom", "role": "user", "message": "Hi, I am looking to use OpenROAD and have tried to install it on my computer.\r\n\r\nIt is an M2 Pro Macbook Pro, 32 GB RAM, 1TB SSD. I am running an Ubuntu VM through UTM which has 8GB RAM and 64 GB SSD. \r\n\r\nI am having trouble with building OpenROAD because one of the dependencies is `or-tools`, which does not appear to have Ubuntu support for the ARM architecture. I was wondering if anyone had similar issues or would know how to resolve this.\r\n\r\nSpecifically, does OpenROAD support the ARM architecture, and if not, is that a priority in the future? \r\n\r\nThanks!", "date": "2023-03-05T18:35:14Z"}, {"author": "vijayank88", "role": "assistant", "message": "Can you try OpenROAD-flow-scripts with docker based: https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildWithDocker.html#clone-and-build", "date": "2023-03-06T11:11:43Z"}, {"author": "maliberty", "role": "assistant", "message": "We do not officially support it as we don't have the hardware resources to test on that platform.  We do try to make sure we can compile on mac M1 based systems.  That said or-tools is available for arm64 as Vijayan pointed out.", "date": "2023-03-06T16:22:13Z"}, {"author": "vvbandeira", "role": "assistant", "message": "> Note: OR-Tools only provides archives for the x86_64 (also known as amd64) architecture.\r\nSource: https://developers.google.com/optimization/install/cpp/binary_linux\r\n\r\n@DylanTom If you are already using a VM, you can create a x86_64 VM and avoid this issue.", "date": "2023-03-21T14:52:30Z"}, {"author": "stefanottili", "role": "assistant", "message": "If you're on M2, why not give \"native\" OR a try ?\r\n\r\nI've been compiling it on and off using HomeBrew for dependencies (including or-tools) for a while now.\r\nor-tools and mpl2 keep on breaking the build and mpl2 is still be disabled.\r\n>> -- Removing MPL2 and PAR to avoid run time fatal error.\r\n\r\nSo occasionally it doesn't work, but most of the times I got it to compile in < 15min on a M1.\r\n\r\netc/DependencyInstaller.sh     (unforunately now installs x86 klayout, I prefer building it natively)\r\n./build_openroad.sh --local --latest --clean-force   (breaks today in a mpl2 test)\r\n./build_openroad.sh --local   (when run again it finishes, go figure)\r\n", "date": "2023-04-28T18:46:09Z"}], "date": "2023-03-05T18:35:14Z", "category": "Installation", "subcategory": "Architecture compatibility", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3208", "id": 3208, "title": "About the runtime of   archived TritonRoute  and TritonRoute in OpenROAD", "author": "gilgamsh", "description": "I have tried both of them and running the same ispd19 benchmark. I have noticed that the runtime of TritonRoute in OpenROAD is quite larger than that in archived TritonRoute. \r\nThe specific data is\r\nIn ispd19_testcase1 , with single thread\r\n  TritonRoute in OpenROAD  : Elapsed Time:\t643.091s\r\n  archived TritonRoute. :Elapsed Time:\t236.032s\r\n\r\nI have noticed that, in TritonRoute in OpenROAD ,the pin analysis time and design rule checking time increase dramatically.\r\npin analysis time in OpenROAD, about 300s, pin analysis time in archived TritonRoute, about 10s.\r\nIs there a normal situation? Maybe there is something wrong about my scripts.\r\n\r\nI use the openroad scripts like below\r\n```\r\nread_lef ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.lef\r\nread_def ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.def\r\nread_guides ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.guide\r\ndetailed_route\r\nwrite_def ispd19_test1.solution.def\r\nexit\r\n```\r\n\r\n\r\n", "content": [{"author": "gilgamsh", "role": "user", "message": "I have tried both of them and running the same ispd19 benchmark. I have noticed that the runtime of TritonRoute in OpenROAD is quite larger than that in archived TritonRoute. \r\nThe specific data is\r\nIn ispd19_testcase1 , with single thread\r\n  TritonRoute in OpenROAD  : Elapsed Time:\t643.091s\r\n  archived TritonRoute. :Elapsed Time:\t236.032s\r\n\r\nI have noticed that, in TritonRoute in OpenROAD ,the pin analysis time and design rule checking time increase dramatically.\r\npin analysis time in OpenROAD, about 300s, pin analysis time in archived TritonRoute, about 10s.\r\nIs there a normal situation? Maybe there is something wrong about my scripts.\r\n\r\nI use the openroad scripts like below\r\n```\r\nread_lef ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.lef\r\nread_def ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.input.def\r\nread_guides ../benchmarks//ispd2019/ispd19_test1/ispd19_test1.guide\r\ndetailed_route\r\nwrite_def ispd19_test1.solution.def\r\nexit\r\n```\r\n\r\n\r\n", "date": "2023-04-19T11:44:41Z"}, {"author": "gilgamsh", "role": "assistant", "message": "another question, If i want to learn the code of `TritonRoute-WXL: The Open Source Router with Integrated DRC Engine`. Can i use the archived TritonRoute, thinking it implemented the functions mentioned in this paper(not including the gr)?", "date": "2023-04-19T11:49:01Z"}, {"author": "maliberty", "role": "assistant", "message": "Have you enabled a similar number of threads in both runs?  In OR use ```set_thread_count <n>```\r\n\r\nThe archived version should match the paper but any further improvements will not be present.", "date": "2023-04-19T13:55:38Z"}, {"author": "maliberty", "role": "assistant", "message": "That should be fine.  Are you using a similar number of threads in standalone TR?", "date": "2023-04-19T15:53:22Z"}, {"author": "antonblanchard", "role": "assistant", "message": "Are you running a recent version of OpenROAD with the following fix: https://github.com/The-OpenROAD-Project/OpenROAD/commit/0cf19963d358347bcf06a2cd803ea883f8c46f27\r\n\r\nThat issue isn't in the original TritonRoute source, and can cause significantly more runtime in the pin access code.", "date": "2023-04-19T23:35:50Z"}, {"author": "antonblanchard", "role": "assistant", "message": "@vijayank88 did you mean to close this? I just checked, and we are spending significantly more time in genInstRowPattern vs TritonRoute.", "date": "2023-04-21T08:13:07Z"}, {"author": "antonblanchard", "role": "assistant", "message": "Most of the problem appears to be 5fada4c44b2d4aba09185eb1217f928645c32c4b. Start up time for ispd19_test1 goes from 17 seconds to 280 seconds. I haven't got far enough to understand if all that overhead is required. FYI @maliberty @osamahammad21 \r\n", "date": "2023-04-23T11:32:10Z"}, {"author": "maliberty", "role": "assistant", "message": "Its not obvious to me how that change triggers the issue but its @osamahammad21 change so he might have an idea.", "date": "2023-04-23T15:46:51Z"}, {"author": "antonblanchard", "role": "assistant", "message": "I'm not sure why, but the problem is caused by filtering out other instances when generating our preferred access points:\r\n\r\n```\r\n-  hasVio = !genPatterns_gc({prevInst, currInst}, objs, Edge);\r\n+  // hasVio = !genPatterns_gc({prevInst, currInst}, objs, Edge);\r\n+  hasVio = !genPatterns_gc({}, objs, Edge);\r\n```\r\n\r\nI would have expected this to take less time, unless the act of filtering out other instances is taking lots of time.", "date": "2023-04-24T01:11:17Z"}, {"author": "oharboe", "role": "assistant", "message": "@gilgamsh It would be interesting to see a profile of both cases to see where the difference in time is. That should tell us something of the nature of the difference to corroborate the suspicions on what differences in code that can cause this.", "date": "2023-05-01T08:00:14Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that a fair number of enhancements and bug fixes have gone into the OR version.  It is possible you are not observing equivalent results.", "date": "2023-05-01T15:26:50Z"}], "date": "2023-04-19T11:44:41Z", "category": "Runtime", "subcategory": "Performance degradation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3262", "id": 3262, "title": "How can I find the net for a wire?", "author": "oharboe", "description": "I am currently dealing with an issue related to unexpected congestion in a design that has me stumped. It appears that there might be incorrect constraints on some I/O pins of a macro.\r\n\r\nWhen I try to probe deeper into the congested area by clicking on the wires, the details provided are fairly vague \u2013 something along the lines of \"wire4940/A\". I'm led to believe that this wire is simply a segment of a larger net.\r\n\r\nIdeally, I would be able to trace this wire segment back to its origin and endpoint within the RTL design, which would help me identify the exact register/pin it connects from and to. However, I'm unsure of how to proceed with this.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/235071472-965d37ef-93e0-453b-95d3-92e085d45064.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I am currently dealing with an issue related to unexpected congestion in a design that has me stumped. It appears that there might be incorrect constraints on some I/O pins of a macro.\r\n\r\nWhen I try to probe deeper into the congested area by clicking on the wires, the details provided are fairly vague \u2013 something along the lines of \"wire4940/A\". I'm led to believe that this wire is simply a segment of a larger net.\r\n\r\nIdeally, I would be able to trace this wire segment back to its origin and endpoint within the RTL design, which would help me identify the exact register/pin it connects from and to. However, I'm unsure of how to proceed with this.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/235071472-965d37ef-93e0-453b-95d3-92e085d45064.png)\r\n", "date": "2023-04-28T06:37:42Z"}, {"author": "rovinski", "role": "assistant", "message": "`wire4940/A` is an iTerm (instance terminal) meaning that `wire4940` is the name of a cell, not a wire segment. I believe `wire####` is the generated name for buffers which are inserted due to max wirelength targets.\r\n\r\nThe net that you have selected is connecting two iTerms, most likely buffers.\r\n\r\nThere should be a GUI display item called \"Buffer Tree\" which should show you what you want. See #2781 and #2824 for discussion.", "date": "2023-04-28T07:09:11Z"}, {"author": "maliberty", "role": "assistant", "message": "wireXXX will be part of multiple nets and they will be show next to the iterm name.\r\n\r\nBuffer tree only shows up if one is detected.  To detect buffers we need the liberty to be loaded.  If you used GUI_NO_TIMING=1 then it will not appear.", "date": "2023-04-28T17:46:52Z"}, {"author": "oharboe", "role": "assistant", "message": "Works very well!\r\n\r\nWhen I click on the buffer tree, I get the terminals (endpoints), which I can relate to my Verilog easily.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/235290247-50079b66-d746-47db-b511-470cfe18260d.png)\r\n", "date": "2023-04-29T07:40:10Z"}], "date": "2023-04-28T06:37:42Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3174", "id": 3174, "title": "Meandering wires in a void", "author": "oharboe", "description": "I'm doing some exploration of floorplanning, which means that I sometimes have a LOT of free space after detailed routing.\r\n\r\nI saw this net, which I thought was curious: a meandering wire in the void...\r\n\r\nWouldn't a single vertical + horizontal wire be faster?\r\n\r\nI'm curious as to why the detailed router meanders in this way.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/231722490-7eeb540d-5004-424b-bca1-f29bc53fa899.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm doing some exploration of floorplanning, which means that I sometimes have a LOT of free space after detailed routing.\r\n\r\nI saw this net, which I thought was curious: a meandering wire in the void...\r\n\r\nWouldn't a single vertical + horizontal wire be faster?\r\n\r\nI'm curious as to why the detailed router meanders in this way.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/231722490-7eeb540d-5004-424b-bca1-f29bc53fa899.png)\r\n", "date": "2023-04-13T09:51:14Z"}, {"author": "maliberty", "role": "assistant", "message": "what does the route guide look like for this wire?", "date": "2023-04-13T16:11:35Z"}, {"author": "oharboe", "role": "assistant", "message": "I know what is going on. That wire has a lot of flip-flops on it.\r\n\r\nThis is a holdover from FPGA design. In the FPGA design, we used global synthesis and we had a synchronous reset with a LARGE fan-out. That large fan-out was handled by adding a number of flip-flops to it so that the tools would be able to create a synchronous reset tree to deal with the fanout and reset congestion. This is congruent with the recommendation in Quartus to use the HyperFlex architecture where there are bypassable registers in the routing. To use those, you basically add a bunch of pipeline stages to your synchronous reset. Basically the more modern Intel FPGAs now recommend synchronous reset over asynchronous reset for this reason.\r\n\r\nhttps://www.intel.com/content/www/us/en/docs/programmable/683353/21-3/fpga-architecture-introduction.html\r\n\r\nThe above with the caveat that I'm not an FPGA expert when it comes to detail, I just write RTL, follow some high level guidelines, and the tools handle the rest...", "date": "2023-04-27T08:26:51Z"}], "date": "2023-04-13T09:51:14Z", "category": "Query", "subcategory": "Detailed routing strategy", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3216", "id": 3216, "title": "DRC errors in detailed routing - \"Metal spacing violation\"", "author": "oharboe", "description": "I think this is happening because two macros that need straight vertical wires between them don't have IO pins lined up and then the wires between the macros are criss-crossing.\r\n\r\n\r\nWhat is the difference and purpose of `MACRO_PLACE_HALO` vs `MACRO_PLACE_CHANNEL` and where do I use them, in the macro or where I'm using the macro from?\r\n\r\n\r\nSome thoughts on what I might do:\r\n\r\n- I could modify the halo macro to have a big enough \"halo\" (black area) where the wires can move horizontally to line up better with their destination pin in the other macro.\r\n- I could fix the io pin locations and floorplan so the router is able to use straight vertical wires instead of crisscrossing between two macros. This would reduce the need for a big halo.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233312554-d99551bf-439f-47f9-85da-21b601517284.png)\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I think this is happening because two macros that need straight vertical wires between them don't have IO pins lined up and then the wires between the macros are criss-crossing.\r\n\r\n\r\nWhat is the difference and purpose of `MACRO_PLACE_HALO` vs `MACRO_PLACE_CHANNEL` and where do I use them, in the macro or where I'm using the macro from?\r\n\r\n\r\nSome thoughts on what I might do:\r\n\r\n- I could modify the halo macro to have a big enough \"halo\" (black area) where the wires can move horizontally to line up better with their destination pin in the other macro.\r\n- I could fix the io pin locations and floorplan so the router is able to use straight vertical wires instead of crisscrossing between two macros. This would reduce the need for a big halo.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233312554-d99551bf-439f-47f9-85da-21b601517284.png)\r\n\r\n", "date": "2023-04-20T08:53:39Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nVariable description found here: https://openroad-flow-scripts.readthedocs.io/en/latest/user/FlowVariables.html#floorplan", "date": "2023-04-20T11:59:41Z"}, {"author": "maliberty", "role": "assistant", "message": "Note that mpl distinguished halo vs channel but mpl2 just uses halo.  The distinction is that a channel is the space between two macros but the halo applies on all sides of the macro.\r\n\r\nI can't tell much from the picture.", "date": "2023-04-20T15:28:25Z"}, {"author": "maliberty", "role": "assistant", "message": "The setting are for x & y separately.   Usually they are the same", "date": "2023-04-24T17:49:01Z"}, {"author": "maliberty", "role": "assistant", "message": "Imagine channel=10 and halo=5.  Then macros must be 10 apart but standard cells must be 5 away from a macro.  It is moot with mpl2.", "date": "2023-04-24T19:04:55Z"}, {"author": "oharboe", "role": "assistant", "message": "Updated docs in pull request based on the above: https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/1007", "date": "2023-04-25T06:41:38Z"}], "date": "2023-04-20T08:53:39Z", "category": "Runtime", "subcategory": "DRC violation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3217", "id": 3217, "title": "DRC error in detailed routing - Short", "author": "oharboe", "description": "What is detailed routing trying to do here? The grey area is a macro.\r\n\r\nIs the detailed route simply spilling onto the macro because it can't find a valid place to put the wire?\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233313803-be73a31c-255b-4857-acb3-d304cb37db11.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233314427-9f2f4378-db70-4f2f-bc54-c23118c5e2b9.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "What is detailed routing trying to do here? The grey area is a macro.\r\n\r\nIs the detailed route simply spilling onto the macro because it can't find a valid place to put the wire?\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233313803-be73a31c-255b-4857-acb3-d304cb37db11.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/233314427-9f2f4378-db70-4f2f-bc54-c23118c5e2b9.png)\r\n", "date": "2023-04-20T08:57:03Z"}, {"author": "oharboe", "role": "assistant", "message": "Since no-one answers, I'm thinking I guessed right :-)", "date": "2023-04-24T13:49:43Z"}, {"author": "maliberty", "role": "assistant", "message": "Most likely (assuming the layers are blocked and this isn't just available resource).", "date": "2023-04-24T17:45:21Z"}], "date": "2023-04-20T08:57:03Z", "category": "Bug", "subcategory": "Routing violation", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2790", "id": 2790, "title": "Inserting PDN takes a lot of time", "author": "oharboe", "description": "Is it expected that inserting PDN (last part of make floorplan) should take a lot of time for designs that start to approach 1mm^2 in ASAP7?\r\n\r\nIt would be helpful if \"make floorplan\" was faster, because then it is quicker to iterate on the floorplan, after which the build can normally be left alone without human interaction for longer runs.\r\n\r\nI ran it in the debugger and it looks like a lot of time is spent building this ShapeTree: https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L637 \r\n\r\nAfterwards, this line seems to almost always return false https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L640) \r\n\r\nI made a few fleeting vain attempts to rewrite the code, such that the common case, https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L627, returning false, would not require building the ShapeTree.\r\n\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Is it expected that inserting PDN (last part of make floorplan) should take a lot of time for designs that start to approach 1mm^2 in ASAP7?\r\n\r\nIt would be helpful if \"make floorplan\" was faster, because then it is quicker to iterate on the floorplan, after which the build can normally be left alone without human interaction for longer runs.\r\n\r\nI ran it in the debugger and it looks like a lot of time is spent building this ShapeTree: https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L637 \r\n\r\nAfterwards, this line seems to almost always return false https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L640) \r\n\r\nI made a few fleeting vain attempts to rewrite the code, such that the common case, https://github.com/The-OpenROAD-Project/OpenROAD/blob/b99d7d2c3db8b72a3fc35da9bd6c3a203c3b8306/src/pdn/src/shape.cpp#L627, returning false, would not require building the ShapeTree.\r\n\r\n\r\n", "date": "2023-01-19T14:56:41Z"}, {"author": "maliberty", "role": "assistant", "message": "There could be a lot of factors.  Are you using the asap7 default pdn?\r\n@gadfort ", "date": "2023-01-19T16:24:27Z"}, {"author": "oharboe", "role": "assistant", "message": "Still running, 1 hr 35 minutes...\r\n\r\n```\r\n01:35:49 /OpenROAD-flow-scripts/tools/install/OpenROAD/bin/openroad -exit -no_init ./scripts/pdn.tcl -metrics ./logs/asap7/doohickey/base/2_6_pdn.json\r\n```", "date": "2023-01-19T16:51:41Z"}, {"author": "maliberty", "role": "assistant", "message": "In asap7 the m1/m2 stripes introduce a ton of vias.  @gadfort could help skip the add_pdn_connect for M1/M2 or would that produce an error.  It wouldn't matter much for prototyping whether we have the vias or not.", "date": "2023-01-19T16:56:56Z"}, {"author": "gadfort", "role": "assistant", "message": "@oharboe @maliberty it shouldn't take that long, there has always been some inefficiency when building those obstruction sets and maybe it's a good idea to revisit how that is done and find a better solution that is faster.", "date": "2023-01-19T17:59:03Z"}, {"author": "oharboe", "role": "assistant", "message": "@maliberty @gadfort Example of ```[INFO PDN-0001] Inserting grid: top``` taking at least 12 hours, after which I stopped it. https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/779", "date": "2023-01-19T20:50:27Z"}, {"author": "oharboe", "role": "assistant", "message": "PDN insertion is MUCH faster than it used to be, but it can still be an issue.", "date": "2023-04-24T14:02:18Z"}], "date": "2023-01-19T14:56:41Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Power Distribution Network Generator"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2821", "id": 2821, "title": "Slow detailed routing convergence", "author": "oharboe", "description": "I was curious what was difficult about detailed routing for a design, so I stopped detailed routing after 4 iterations, using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/791, then looked at 5_route_drc.rpt.\r\n\r\nHere it seems like there is a lot of congestion at the top of macros because the power strip is running inside the halo (?) of the macro.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215082762-af8767ce-7118-48cb-a7a3-c9913369defc.png)\r\n\r\nHowevever here is a macro, just like the one above where detailed routing doesn't seem to have a problem dealing with this issue:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215083592-634bcdef-9a15-45c7-ad5b-b34820f0a94e.png)\r\n\r\n\r\nPerhaps nothing is wrong here and it just takes a while to do detailed routing.\r\n\r\nIs there anything to learn or that I can do different here?", "content": [{"author": "oharboe", "role": "user", "message": "I was curious what was difficult about detailed routing for a design, so I stopped detailed routing after 4 iterations, using https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/791, then looked at 5_route_drc.rpt.\r\n\r\nHere it seems like there is a lot of congestion at the top of macros because the power strip is running inside the halo (?) of the macro.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215082762-af8767ce-7118-48cb-a7a3-c9913369defc.png)\r\n\r\nHowevever here is a macro, just like the one above where detailed routing doesn't seem to have a problem dealing with this issue:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215083592-634bcdef-9a15-45c7-ad5b-b34820f0a94e.png)\r\n\r\n\r\nPerhaps nothing is wrong here and it just takes a while to do detailed routing.\r\n\r\nIs there anything to learn or that I can do different here?", "date": "2023-01-27T12:10:57Z"}, {"author": "maliberty", "role": "assistant", "message": "How many iterations does it take to complete?  In general drt is the slowest step of the flow but it also looks like something is going on here.\r\n\r\nIn the lower picture the wires appear to go straight in on m5 but in the upper the go up to a higher layer and then try to drop down (which is blocked by the strap).  I'm not clear why they can't go straight in from the image.  Can you tell?", "date": "2023-01-27T14:13:25Z"}, {"author": "oharboe", "role": "assistant", "message": "I can see the same problem on https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/asap7/mock-array-big\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215114565-abeebeab-8247-4fb0-81eb-8259fbad3390.png)\r\n\r\n\r\nZooming in, we can see that different metal is being used:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/215114709-80ae1615-95c6-4bb3-bfaa-a25c3bc339b9.png)\r\n\r\n\r\nTo reproduce the image above, first build, but abort after 5 iterations in detailed routing, then load the 5_route_drc.rpt and zoom in:\r\n\r\n```\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/Element/config.mk generate_abstract\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk DETAILED_ROUTE_ARGS=\\\"-bottom_routing_layer M2 -top_routing_layer M7 -save_guide_updates -verbose 1 -droute_end_iter 5\\\"\r\nmake DESIGN_CONFIG=designs/asap7/mock-array-big/config.mk\r\n```\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-01-27T14:48:33Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 I think looking at this issue in the context of asap7/mock-array-big fits with your other drt performance work.", "date": "2023-01-27T14:49:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Your pins are off the routing grid:\r\n![image](https://user-images.githubusercontent.com/761514/215116042-68838f95-3670-47af-8cc8-e03d6748a470.png)\r\n\r\nwhich I guess is why the router is gyrating to hit them.", "date": "2023-01-27T14:53:35Z"}, {"author": "maliberty", "role": "assistant", "message": "@osamahammad21 with the PRs from this morning this case now finishes with 0 drvs.  However it reaches 2 drvs by the end of iter 4 but takes until iter 13 to reach zero.  At the end of iter5 I see two cut spacing violations.  They both look easy to fix, eg\r\n![image](https://user-images.githubusercontent.com/761514/216147952-499d6ec6-11d2-4d60-b8e7-27cdf28104ef.png)\r\n\r\nyou should readily move the via to the right by one track.  I guess this is a costing issue.\r\n", "date": "2023-02-01T19:49:35Z"}, {"author": "antonblanchard", "role": "assistant", "message": "I missed this because it was hiding in discussions. I have noticed various issues with via spacing in drt, eg https://github.com/The-OpenROAD-Project/OpenROAD/issues/2827 and https://github.com/The-OpenROAD-Project/OpenROAD/pull/2844, so likely issues in both route cost and GC (drc).", "date": "2023-02-03T22:14:36Z"}, {"author": "oharboe", "role": "assistant", "message": "Near as I know all of these issues are resolved on master.", "date": "2023-04-24T13:59:25Z"}], "date": "2023-01-27T12:10:57Z", "category": "Runtime", "subcategory": "Performance issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2870", "id": 2870, "title": "Question about straight wire routing between macros", "author": "oharboe", "description": "Below are two macros next to eachother where I have mirrored the pins, so the connections are nice and horizontal.\r\n\r\nThe pins are on ASAP7 M4, but the route is on M2.\r\n\r\nLooking at the image, I'm curious as to why M4 wasn't just used in a straight line across? Why go via M2?\r\n\r\nThe reason I'm asking about this is that my design does detailed routing quickly when I scale it down, but as I scale up, add more macros and a wider data path, it seems like detailed routing has to spend more time(ca. 20x longer) getting signals from M2, to M4 and back to M2 to do the routing between macros. I believe there is non-linear increase(with datapath width) in complexity with getting signals from M4 to M2 and back to M2.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/217489650-65aa3930-5241-4c6f-affe-adc68a99a9be.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Below are two macros next to eachother where I have mirrored the pins, so the connections are nice and horizontal.\r\n\r\nThe pins are on ASAP7 M4, but the route is on M2.\r\n\r\nLooking at the image, I'm curious as to why M4 wasn't just used in a straight line across? Why go via M2?\r\n\r\nThe reason I'm asking about this is that my design does detailed routing quickly when I scale it down, but as I scale up, add more macros and a wider data path, it seems like detailed routing has to spend more time(ca. 20x longer) getting signals from M2, to M4 and back to M2 to do the routing between macros. I believe there is non-linear increase(with datapath width) in complexity with getting signals from M4 to M2 and back to M2.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/217489650-65aa3930-5241-4c6f-affe-adc68a99a9be.png)\r\n", "date": "2023-02-08T09:42:39Z"}, {"author": "maliberty", "role": "assistant", "message": "does this happen on the mock array?", "date": "2023-02-08T11:51:31Z"}, {"author": "maliberty", "role": "assistant", "message": "If you select one of the nets, in the inspector there is an option to show the route guide.  It would be interesting to see what the guide for one of these nets looks like.", "date": "2023-02-08T11:52:31Z"}, {"author": "maliberty", "role": "assistant", "message": "The global router prefers to put wires on lower layers, which is a good strategy for standard cell connections.  It isn't so good here.\r\n\r\n@eder-matheus I think we should update the 3d embedding in grt to handle the case where the pins being connected are all at layer N or above to avoid layers below N if possible.  Would you take care of this or work with Luis or Arthur to do so.", "date": "2023-02-08T12:30:58Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@oharboe Could you try this branch: https://github.com/eder-matheus/OpenROAD/tree/grt_upper_layer_nets?", "date": "2023-02-13T22:01:21Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus he does not have access to the private repo.  Please sync it to public in a PR.", "date": "2023-02-13T22:02:18Z"}, {"author": "maliberty", "role": "assistant", "message": "If you had an obs that you couldn't go over or around then it could be an issue.  However it is similar to the clock net constraints we already have that are similar.  Probably we would need to introduce a costing scheme to allow out of range layers to be used in extreme cases but that seems like a separate enhancement.\r\n\r\nThe motivating case is simply two m4 pins that have an easy planar connection but we drop down to m2 for no good reason (the router prefers lower layers on the erroneous assumption that pins are on the lower layer).", "date": "2023-02-13T22:16:18Z"}, {"author": "oharboe", "role": "assistant", "message": "Master is MUCH better with this now. If the route is not straight, there's generally a reason, like powergrid in the way, buffers added at edge of design before pins, or something.", "date": "2023-04-24T13:58:40Z"}], "date": "2023-02-08T09:42:39Z", "category": "Runtime", "subcategory": "Routing problem", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2888", "id": 2888, "title": "Using deltaDebug.py to whittle down detailed routing example", "author": "oharboe", "description": "I have some violations that detailed routing isn't able to deal with, that I really think it should be able to deal with.\r\n\r\nNormally, deltaDebug.py needs an error message to look for to do it's bisection.\r\n\r\nHowever, a detailed route can succeed after 64 iterations, even if all violations are not sorted out, so there's no error message for  deltaDebug.py to use for it's bisection.\r\n\r\nTips?", "content": [{"author": "oharboe", "role": "user", "message": "I have some violations that detailed routing isn't able to deal with, that I really think it should be able to deal with.\r\n\r\nNormally, deltaDebug.py needs an error message to look for to do it's bisection.\r\n\r\nHowever, a detailed route can succeed after 64 iterations, even if all violations are not sorted out, so there's no error message for  deltaDebug.py to use for it's bisection.\r\n\r\nTips?", "date": "2023-02-13T06:53:31Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you use --use_stdout & --error_string to check the final drcs?", "date": "2023-02-13T07:36:26Z"}, {"author": "maliberty", "role": "assistant", "message": "You could make a temporary change to scripts/detail_route.tcl to call detailed_route_num_drvs and issue an error message if >0.  Then you could delta on that.", "date": "2023-02-13T16:26:01Z"}, {"author": "oharboe", "role": "assistant", "message": "Various bugs have been fixed and improvements made to deltaDebug.py since this post.", "date": "2023-04-24T13:57:57Z"}], "date": "2023-02-13T06:53:31Z", "category": "Runtime", "subcategory": "Detailed routing issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2927", "id": 2927, "title": "Iterating on top level floorplan with macro pin constraints", "author": "oharboe", "description": "I would like to iterate on the floorplan of the top level of our design. In doing so, I want to change the pin constraints for the macros used at the top level.\r\n\r\nHowever, ```make generate_abstract``` goes all the way to detailed routing before producing a .gds, .lef and .lib file. This takes a long time.\r\n\r\nIs there a way to run generate_abstract after IO pin placement on the macro without going through detailed route?\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I would like to iterate on the floorplan of the top level of our design. In doing so, I want to change the pin constraints for the macros used at the top level.\r\n\r\nHowever, ```make generate_abstract``` goes all the way to detailed routing before producing a .gds, .lef and .lib file. This takes a long time.\r\n\r\nIs there a way to run generate_abstract after IO pin placement on the macro without going through detailed route?\r\n", "date": "2023-02-21T13:16:45Z"}, {"author": "maliberty", "role": "assistant", "message": "The flow itself doesn't have a mechanism but the command should work at that point (though it hasn't been tested).  You could add a flow option if needed.", "date": "2023-02-21T17:05:39Z"}, {"author": "oharboe", "role": "assistant", "message": "Solution implemented: `make skip_cts skip_route generate_abstract`", "date": "2023-04-24T13:53:13Z"}], "date": "2023-02-21T13:16:45Z", "category": "Query", "subcategory": "Flow customization", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2925", "id": 2925, "title": "[ERROR GRT-0076] Net foo.bar\\[13\\] not properly covered.", "author": "oharboe", "description": "What does this error message mean?", "content": [{"author": "oharboe", "role": "user", "message": "What does this error message mean?", "date": "2023-02-20T20:29:28Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus please respond", "date": "2023-02-21T04:06:30Z"}, {"author": "eder-matheus", "role": "assistant", "message": "@oharboe That means the guides don't cover at least one pin of this net. I will update this error message to clarify what pin is not covered.\r\nCould you share what commit you are using in this run? This error should not be happening at all and could be a side effect of an update I've made.", "date": "2023-02-23T00:04:21Z"}, {"author": "oharboe", "role": "assistant", "message": "I don't recall the details, but this was fixed on master.", "date": "2023-04-24T13:52:41Z"}], "date": "2023-02-20T20:29:28Z", "category": "Runtime", "subcategory": "Error message clarification", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2804", "id": 2804, "title": "Problems with detailed routing violations with an array of macros", "author": "oharboe", "description": "In this pull request, I've added a design that has a problem with detailed routing.  I *suspect* there are some alignment requirements for macro positioning, but I don't understand what those requirements are.\r\n\r\nAny tips?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/782\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/213920736-10b8a7f8-0b71-466a-9357-178dbb9b52b7.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "In this pull request, I've added a design that has a problem with detailed routing.  I *suspect* there are some alignment requirements for macro positioning, but I don't understand what those requirements are.\r\n\r\nAny tips?\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/782\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/213920736-10b8a7f8-0b71-466a-9357-178dbb9b52b7.png)\r\n", "date": "2023-01-22T14:22:43Z"}, {"author": "maliberty", "role": "assistant", "message": "My first guess would be to look at the macro pins and whether they are on grid", "date": "2023-01-22T15:22:54Z"}, {"author": "khaledhasanzami", "role": "assistant", "message": "Same issue, any solution reached yet?", "date": "2023-03-18T04:02:52Z"}, {"author": "oharboe", "role": "assistant", "message": "We're not seeing these problems currently with latest master", "date": "2023-04-24T13:52:21Z"}], "date": "2023-01-22T14:22:43Z", "category": "Runtime", "subcategory": "Routing violations", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3040", "id": 3040, "title": "Can I import yosys netlists in the openroad GUI and examine timing?", "author": "oharboe", "description": "I realize this is an open ended question: How can I import Yosys netlists into OpenROAD and identify any timing concerns in the design?\r\n\r\nIs there any documentation, tutorials or examples I can look at?\r\n\r\nI think I have seen an ability to select interesting paths and drill down using \"select\" (yosys command? opensta command?) and filter timing paths, but I don't recall where.\r\n\r\nIdeally using ORFS.\r\n\r\nThis would be more convenient than invoking yosys + open sta directly and interacting with the shell in either. ", "content": [{"author": "oharboe", "role": "user", "message": "I realize this is an open ended question: How can I import Yosys netlists into OpenROAD and identify any timing concerns in the design?\r\n\r\nIs there any documentation, tutorials or examples I can look at?\r\n\r\nI think I have seen an ability to select interesting paths and drill down using \"select\" (yosys command? opensta command?) and filter timing paths, but I don't recall where.\r\n\r\nIdeally using ORFS.\r\n\r\nThis would be more convenient than invoking yosys + open sta directly and interacting with the shell in either. ", "date": "2023-03-19T12:52:20Z"}, {"author": "maliberty", "role": "assistant", "message": "You can use 'make gui_floorplan' to open the results after the floorplan step which is pretty quick.  We could add an way to directly load the yosys output.  In either case you won't see any layout as nothing has been placed but you can use the usual timing path viewer.\r\n\r\nYou can't use yosys commands in OR as they are different tools.", "date": "2023-03-19T14:17:04Z"}, {"author": "maliberty", "role": "assistant", "message": "In the GUI from Windows->Timing Report you can get the path viewer.  When you select items in the path viewer you can see them in the inspector if you need to get more physical/netlist details.", "date": "2023-03-19T14:38:59Z"}, {"author": "maliberty", "role": "assistant", "message": "@vijayank88 are there any tutorials for timing debug?", "date": "2023-03-19T14:42:55Z"}, {"author": "maliberty", "role": "assistant", "message": "Fwiw https://www.youtube.com/watch?v=5lkKp-gL1Ow", "date": "2023-03-19T20:31:46Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nOnly after placement you can trace timing path in OpenROAD gui.\r\nYou can refer `logs/nangate45/gcd/base/2_1_floorplan.log` (gcd example). It is the first OpenSTA timing report post synthesis.\r\n", "date": "2023-03-20T07:45:18Z"}, {"author": "maliberty", "role": "assistant", "message": "You can really only do back annotation after you reach a fully routed result.  There is nothing to back annotate before that.  That is already supported in ORFS and the make gui_final will load the parasitics automatically.\r\n\r\nYou can generate timing report at any step of the flow.  Pre-placement you will get wire load models.  Later in the flow we use estimate_parasitics with -placement (after CTS) or -global_routing (after global routing).  Post-routing we use rcx extracted values.\r\n\r\nYosys 'schematics' are a capability of yosys and have nothing to do with OR.  The timing report already contains a list of all the cells/ports/nets so a schematic doesn't add much for a path.  In general generating schematics for arbitrary chunks of logic is hard and is essentially another P&R problem itself.  Even the proprietary tools aren't great at this beyond a small amount of logic.", "date": "2023-03-20T16:38:47Z"}, {"author": "maliberty", "role": "assistant", "message": "If you have layout you can use the inspector to look at an ITerm and there are buttons to show the fanin and fanout cones\r\n![image](https://user-images.githubusercontent.com/761514/226408803-ae3cef35-4855-4909-9786-e7b4f569a8af.png)\r\n", "date": "2023-03-20T16:40:55Z"}, {"author": "maliberty", "role": "assistant", "message": "Here is a tightly package cone on gcd:\r\n![image](https://user-images.githubusercontent.com/761514/226409401-157a4b9b-7384-4e75-b43c-ed0b6d099e6e.png)\r\n", "date": "2023-03-20T16:43:25Z"}, {"author": "maliberty", "role": "assistant", "message": "@oharboe is this sufficient info or do you need something more?", "date": "2023-03-23T21:44:30Z"}, {"author": "oharboe", "role": "assistant", "message": "Will open new more specific questions in the future as needed. This was helpful to improve our understanding meanwhile.", "date": "2023-04-24T13:51:46Z"}], "date": "2023-03-19T12:52:20Z", "category": "Query", "subcategory": "Timing analysis", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3178", "id": 3178, "title": "How to attach/add a new load to a net?", "author": "fgaray", "description": "Hello,\r\n\r\nIn the DFT tool, I am trying to connect a new created scan_out port at the top level module with the scan out of a scan cell.\r\n\r\nThe scan out of the cell is previously connected to a functional path, so I am doing something like:\r\n\r\n```\r\nodb::dbNet* functional_net = scan_out_cell->getNet();\r\nscan_out_module->connect(functional_net);\r\n```\r\nWhen I print the BTerms of the net, I get both, the scan_out of the module and the previous connected port.\r\n\r\nHowever, I doesn't seems to work if I write the verilog, as I am only seeing it being connected to the original functional port instead of being connected to both of them: scan out and functional port.\r\n\r\nIs there something that am I missing?\r\n\r\nThanks,\r\nFelipe", "content": [{"author": "fgaray", "role": "user", "message": "Hello,\r\n\r\nIn the DFT tool, I am trying to connect a new created scan_out port at the top level module with the scan out of a scan cell.\r\n\r\nThe scan out of the cell is previously connected to a functional path, so I am doing something like:\r\n\r\n```\r\nodb::dbNet* functional_net = scan_out_cell->getNet();\r\nscan_out_module->connect(functional_net);\r\n```\r\nWhen I print the BTerms of the net, I get both, the scan_out of the module and the previous connected port.\r\n\r\nHowever, I doesn't seems to work if I write the verilog, as I am only seeing it being connected to the original functional port instead of being connected to both of them: scan out and functional port.\r\n\r\nIs there something that am I missing?\r\n\r\nThanks,\r\nFelipe", "date": "2023-04-14T01:55:40Z"}, {"author": "maliberty", "role": "assistant", "message": "What is the type of scan_out_module ?", "date": "2023-04-14T02:41:06Z"}, {"author": "maliberty", "role": "assistant", "message": "An issue with a test case might be better as it doesn't sound like an unusual operation.", "date": "2023-04-14T02:43:10Z"}, {"author": "fgaray", "role": "assistant", "message": "This was addressed in https://github.com/The-OpenROAD-Project/OpenROAD/issues/3183\r\n\r\nHowever, @maliberty was right in that ticket and we don't really need to punch a new port for scan out, we can just reuse the already existing port. So, we only need to punch a new scan out port if there is funcional logic before scan insertion and there are only ITerms in the net.", "date": "2023-04-20T19:25:28Z"}], "date": "2023-04-14T01:55:40Z", "category": "Query", "subcategory": "Usage question", "Tool": "Design for Test"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3033", "id": 3033, "title": "Using each tools (i.e. OpenDB, RePlAce, OpenDP..) as a submodule", "author": "ApeachM", "description": "Now I'd like to use OpenDB Framework and am searching for how to use each tool (i.e. OpenDB, OpenDB, etc) in **the OpenROAD repository** as a submodule for my open-source project.\r\n\r\nFor example, I'm using the OpenDB Framework as [this repository](https://github.com/ApeachM/EDA-API).\r\nIn that repository, I only can know how to use the [legacy one](https://github.com/The-OpenROAD-Project/OpenDB) as a submodule, but couldn't find how to set the OpenROAD repository as a submodule.\r\n\r\nI would be very appreciative if there is any recommended way to use each tool (like RePlAce, OpenDP, ..) in the OpenROAD repository which is now updated recently, and if you let me know them.\r\n \r\nThank you for reading my question.\r\n\r\nBest regards.\r\n\r\n", "content": [{"author": "ApeachM", "role": "user", "message": "Now I'd like to use OpenDB Framework and am searching for how to use each tool (i.e. OpenDB, OpenDB, etc) in **the OpenROAD repository** as a submodule for my open-source project.\r\n\r\nFor example, I'm using the OpenDB Framework as [this repository](https://github.com/ApeachM/EDA-API).\r\nIn that repository, I only can know how to use the [legacy one](https://github.com/The-OpenROAD-Project/OpenDB) as a submodule, but couldn't find how to set the OpenROAD repository as a submodule.\r\n\r\nI would be very appreciative if there is any recommended way to use each tool (like RePlAce, OpenDP, ..) in the OpenROAD repository which is now updated recently, and if you let me know them.\r\n \r\nThank you for reading my question.\r\n\r\nBest regards.\r\n\r\n", "date": "2023-03-18T11:26:42Z"}, {"author": "maliberty", "role": "assistant", "message": "We do not offer each tool as a submodule.  It is a lot of overhead to manage submodules (we did that initially).   You could make OR itself a submodule and link to the portions you wish.", "date": "2023-03-18T14:57:30Z"}, {"author": "maliberty", "role": "assistant", "message": "You should be able to reference our libraries from your app like\r\n\r\ntarget_link_libraries(<mystuff>\r\n  PUBLIC\r\n    odb\r\n)\r\n\r\nyou would need to include src/CMakeLists.txt", "date": "2023-03-18T21:08:56Z"}, {"author": "maliberty", "role": "assistant", "message": "@QuantamHD what do you think about applying your library separation work to mpl2?", "date": "2023-03-29T05:32:34Z"}, {"author": "ApeachM", "role": "assistant", "message": "@QuantamHD \r\n> @ApeachM I'll ask you for a favor back. If you do end up running mpl2 in your project can you contribute some C++ unit tests back to the project? https://github.com/The-OpenROAD-Project/OpenROAD/pull/3109/files#diff-24b9bab7be8fe0944c3ae7ccbd1d8700449a2e965d33d624fd7f8e3315ebdc9e\r\n\r\nI'd like to do the favor that you mentioned, but I have a question for you.\r\nNow I'm struggling to construct the unit test for mpl2, but there are several problems with making it.\r\n\r\n### 1. The construction dependency exists. \r\n\r\nAt least calling `void MacroPlacer2::init(sta::dbNetwork* network, odb::dbDatabase* db, sta::dbSta* sta, utl::Logger* logger, par::PartitionMgr* tritonpart)` function, I need `sta::dbNetwork` and `sta::dbSta` in the test code like below.\r\n\r\n```cpp\r\n#include <unistd.h>\r\n\r\n#include <memory>\r\n\r\n#include \"gtest/gtest.h\"\r\n#include \"mpl2/rtl_mp.h\"\r\n#include \"db_sta/dbSta.hh\"\r\n#include \"par/PartitionMgr.h\"\r\n#include \"utl/Logger.h\"\r\n\r\nnamespace mpl2 {\r\n\r\nTEST(Mpl2, CanConstruct)\r\n{\r\n  MacroPlacer2();\r\n}\r\n\r\nTEST(Mpl2, init){\r\n  MacroPlacer2 macro_placer_2{};\r\n\r\n  sta::dbSta* db_sta = new sta::dbSta;\r\n  sta::dbNetwork* db_network = db_sta->getDbNetwork();\r\n  odb::dbDatabase* db_database = odb::dbDatabase::create();\r\n  utl::Logger logger;\r\n  par::PartitionMgr partition_mgr;\r\n\r\n  /**\r\n   * Construct some data in dbDatabase and dbSta by parsing or calling their methods..\r\n   * */\r\n  partition_mgr.init(db_database, db_network, db_sta, &logger);\r\n  macro_placer_2.init(db_network, db_database, db_sta, &logger, &partition_mgr);\r\n}\r\n};  // namespace mpl2\r\n```\r\n\r\n\r\n\r\nBut at `line 21`: `sta::dbSta* db_sta = new sta::dbSta;` an error occurs with the below message.\r\n\r\n```shell\r\nOpenROAD/src/mpl2/test/cpp/mpl2_test.cc:21: undefined reference to `sta::dbSta::dbSta()'\r\n```\r\n\r\n\r\n\r\nI think this problem is due to a linking issue; `dbSta_lib` library doesn\u2019t link `dbSta.cc`, but links only `dbSta.hh`.\r\n\r\nThe `DbSta.cc` file is dependent on `ord::OpenRoad::Observer::Observer()`, so it\u2019s a pretty tricky thing to link with `mpl2_test` library and `sta::dbSta`. \r\n\r\nIs there any proposed method to use `sta::dbSta` in the `OpenROAD/src/mpl2/test/cpp/mpl2_test.cc` file? Unless, I think I can\u2019t make unit test for the one after `mpl2.init(sta::dbNetwork, ..., utl::Logger)`. \r\n\r\n\r\n\r\n### 2. Unless editing code in mpl2/src/*.cpp, there aren\u2019t many things to make unit test.\r\n\r\nFor making the unit test for `MacroPlacer2`, I can only call Constructor, Destructor, `init()`, and `place()`. \r\n\r\nEven though the assumption of linking the `mpl2_test` library and `hier_rtlmp.h, hier_rtlmp.cpp`, the `HierRTLMP` has public functions only for setters (`setGlobalFence`, \u2026,`setDebug`) and the top interface (`hierRTLMacroPlacer()`). \r\n\r\nTo test whether the `HierRTLMP` is properly working, I think I need to make some accessors to private variables (like `getGlobalFence` \u2026). But I can\u2019t assure you that it\u2019s okay for me to edit the codes in mpl2/src/*.cpp.\r\n\r\n### \r\n\r\n### Conclusion\r\n\r\nIf the first problem is solved, the second problem says there are not so many things to make unit test unless I edit the codes.\r\n\r\nI\u2019d like to ask how I can solve problem 1 (the linking issue for `sta::dbSta`), and whether it\u2019s okay or not to edit the code except the test code.\r\n\r\n\r\n\r\nThank you for reading my questions.", "date": "2023-04-17T06:25:48Z"}], "date": "2023-03-18T11:26:42Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2923", "id": 2923, "title": "Using a regex for set_io_pin_constraint -names", "author": "oharboe", "description": "How can I get a list of the names of the pins, such that I can pass in a list of names to set_io_pin_constraint that match a regex?\r\n\r\nSomething like:\r\n\r\n```\r\nset_io_pin_constraint ... -names [lsearch -all -inline $pins $regex]\r\n```\r\n\r\nAnswering myself..\r\n\r\nThis will do it:\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [sta::find_port_pins_matching $regex 1 0] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names [match_pins someregex]\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I get a list of the names of the pins, such that I can pass in a list of names to set_io_pin_constraint that match a regex?\r\n\r\nSomething like:\r\n\r\n```\r\nset_io_pin_constraint ... -names [lsearch -all -inline $pins $regex]\r\n```\r\n\r\nAnswering myself..\r\n\r\nThis will do it:\r\n\r\n```\r\nproc match_pins { regex } {\r\n    set pins {}\r\n    foreach pin [sta::find_port_pins_matching $regex 1 0] {\r\n        lappend pins [get_property $pin name]\r\n    }\r\n    return $pins\r\n}\r\n\r\nset_io_pin_constraint -region top:* -pin_names [match_pins someregex]\r\n```\r\n", "date": "2023-02-20T11:09:31Z"}, {"author": "maliberty", "role": "assistant", "message": "See discussion in https://github.com/The-OpenROAD-Project/OpenROAD/pull/2839", "date": "2023-02-20T15:44:06Z"}, {"author": "maliberty", "role": "assistant", "message": "The point being there isn't a default mechanism right now but rather a discussion of how best to do it.  get_pins will return a list of pins objects rather than names.  You could convert them to names or you could use the odb APIs to traverse the db yourself.", "date": "2023-02-20T16:42:41Z"}, {"author": "oharboe", "role": "assistant", "message": "This will do it:\r\n\r\n```\r\nset_io_pin_constraint ... -names [sta::find_port_pins_matching $regex 1 0]\r\n```\r\n\r\n", "date": "2023-02-21T11:57:03Z"}, {"author": "maliberty", "role": "assistant", "message": "What do you mean by \"verilog pin names\"?  Those look ok to me for instance pins", "date": "2023-02-21T17:07:56Z"}, {"author": "maliberty", "role": "assistant", "message": "Perhaps you want get_ports?  I would call those port names as Verilog includes the instance pins as well.", "date": "2023-02-21T17:57:12Z"}], "date": "2023-02-20T11:09:31Z", "category": "Query", "subcategory": "Usage question", "Tool": "Pin Placer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3148", "id": 3148, "title": "LoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'", "author": "oharboe", "description": "I'm getting this problem again while building OpenROAD locally.  I've tried recloning and deleting the entire ORFS folder, still no luck.\r\n\r\nAny ideas?\r\n\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 22.10\r\nRelease:\t22.10\r\nCodename:\tkinetic\r\n\r\n```\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n```\r\n\r\n```\r\n[deleted]\r\nFAILED: src/dpl/test/dpl_test src/dpl/test/dpl_test[1]_tests.cmake /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake \r\n: && /usr/bin/c++ -O3 -DNDEBUG  src/dpl/test/CMakeFiles/dpl_test.dir/dpl_test.cc.o -o src/dpl/test/dpl_test  -lgtest  -lgtest_main  src/dpl/libdpl_lib.a  src/odb/src/cdl/libcdl.a  src/odb/src/defin/libdefin.a  src/odb/src/def/libdef.a  src/odb/src/def/libdefzlib.a  src/odb/src/lefin/liblefin.a  src/odb/src/lef/liblef.a  src/odb/src/lef/liblefzlib.a  /usr/lib/x86_64-linux-gnu/libz.so  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/tm/libtm.a  /home/oyvind/ascenium/blah/tools/OpenROAD/src/sta/app/libOpenSTA.a  /usr/lib/x86_64-linux-gnu/libtcl.so  /usr/lib/x86_64-linux-gnu/libtclreadline.so  /usr/lib/x86_64-linux-gnu/libz.so  -ltcl  src/utl/utl.a  src/utl/libutl_lib.a  /home/oyvind/ascenium/blah/dependencies/lib/libspdlog.a && cd /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test && /home/oyvind/ascenium/blah/dependencies/bin/cmake -D TEST_TARGET=dpl_test -D TEST_EXECUTABLE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test -D TEST_EXECUTOR= -D TEST_WORKING_DIR=/home/oyvind/ascenium/blah/tools/OpenROAD/src/dpl/test -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=dpl_test_TESTS -D CTEST_FILE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/blah/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n[3/39] Automatic MOC and UIC for target gui\r\nninja: build stopped: subcommand failed.\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm getting this problem again while building OpenROAD locally.  I've tried recloning and deleting the entire ORFS folder, still no luck.\r\n\r\nAny ideas?\r\n\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 22.10\r\nRelease:\t22.10\r\nCodename:\tkinetic\r\n\r\n```\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n```\r\n\r\n```\r\n[deleted]\r\nFAILED: src/dpl/test/dpl_test src/dpl/test/dpl_test[1]_tests.cmake /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake \r\n: && /usr/bin/c++ -O3 -DNDEBUG  src/dpl/test/CMakeFiles/dpl_test.dir/dpl_test.cc.o -o src/dpl/test/dpl_test  -lgtest  -lgtest_main  src/dpl/libdpl_lib.a  src/odb/src/cdl/libcdl.a  src/odb/src/defin/libdefin.a  src/odb/src/def/libdef.a  src/odb/src/def/libdefzlib.a  src/odb/src/lefin/liblefin.a  src/odb/src/lef/liblef.a  src/odb/src/lef/liblefzlib.a  /usr/lib/x86_64-linux-gnu/libz.so  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/db/libdb.a  src/odb/src/defout/libdefout.a  src/odb/src/lefout/liblefout.a  src/odb/src/zutil/libzutil.a  src/odb/src/tm/libtm.a  /home/oyvind/ascenium/blah/tools/OpenROAD/src/sta/app/libOpenSTA.a  /usr/lib/x86_64-linux-gnu/libtcl.so  /usr/lib/x86_64-linux-gnu/libtclreadline.so  /usr/lib/x86_64-linux-gnu/libz.so  -ltcl  src/utl/utl.a  src/utl/libutl_lib.a  /home/oyvind/ascenium/blah/dependencies/lib/libspdlog.a && cd /home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test && /home/oyvind/ascenium/blah/dependencies/bin/cmake -D TEST_TARGET=dpl_test -D TEST_EXECUTABLE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test -D TEST_EXECUTOR= -D TEST_WORKING_DIR=/home/oyvind/ascenium/blah/tools/OpenROAD/src/dpl/test -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=dpl_test_TESTS -D CTEST_FILE=/home/oyvind/ascenium/blah/tools/OpenROAD/build/src/dpl/test/dpl_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/blah/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n[3/39] Automatic MOC and UIC for target gui\r\nninja: build stopped: subcommand failed.\r\n```\r\n", "date": "2023-04-10T12:07:24Z"}, {"author": "maliberty", "role": "assistant", "message": "I can't reproduce it but can you try changing https://github.com/The-OpenROAD-Project/OpenROAD/blob/8a49dff86645352d30780951b1146b31ef41b0f4/src/dpl/CMakeLists.txt#L58 to utl_lib and see if that helps.", "date": "2023-04-10T15:40:11Z"}, {"author": "maliberty", "role": "assistant", "message": "PR coming.  I'm not sure why it varies - perhaps different compilers?", "date": "2023-04-10T16:41:26Z"}], "date": "2023-04-10T12:07:24Z", "category": "Build", "subcategory": "Linking error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3121", "id": 3121, "title": "How much time for tritonroute to run the benchmarks of ispd2018 and ispd2019?", "author": "gilgamsh", "description": "I am using https://github.com/The-OpenROAD-Project/TritonRoute to run the benchmarks of ispd2018&2019. However I found Multithreaded acceleration is almost useless.  Does the legacy code in https://github.com/The-OpenROAD-Project/TritonRoute support Multithreaded acceleration ?", "content": [{"author": "gilgamsh", "role": "user", "message": "I am using https://github.com/The-OpenROAD-Project/TritonRoute to run the benchmarks of ispd2018&2019. However I found Multithreaded acceleration is almost useless.  Does the legacy code in https://github.com/The-OpenROAD-Project/TritonRoute support Multithreaded acceleration ?", "date": "2023-04-01T12:03:02Z"}, {"author": "maliberty", "role": "assistant", "message": "How are you enabling the multi threading? It should make a large difference", "date": "2023-04-01T14:14:33Z"}, {"author": "maliberty", "role": "assistant", "message": "The standalone TritonRoute is archived and not under any active development or support.  If that meets you needs that's fine but the integrated version in OR is continuing to be improved.", "date": "2023-04-02T14:28:05Z"}, {"author": "maliberty", "role": "assistant", "message": "Since you are interested in contests I would look at \r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/drt/test/ispd18_sample.tcl\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/master/src/drt/test/run-ispd.py\r\n\r\nas examples", "date": "2023-04-04T14:02:38Z"}], "date": "2023-04-01T12:03:02Z", "category": "Query", "subcategory": "Usage question", "Tool": "TritonPart"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3129", "id": 3129, "title": "[INFO GPL-0075] Routability numCall: 1 inflationIterCnt: 1 bloatIterCnt: 0", "author": "oharboe", "description": "So I thought my run was almost finished, it went fairly quickly for a while, but then it got stuck in \"Routeability\" below.\r\n\r\n5 minutes until it got to the GPL-0075 progress message, then stuck there for at least 30 minutes.\r\n\r\nWhat does this mean and what can I do about it?\r\n\r\nThe floorplan in my case looks quite reasonable and generous.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/580bd35a8b17f0ea7ff8afafb6cf6d23b757063e/src/gpl/src/routeBase.cpp#L557\r\n\r\n```\r\n[NesterovSolve] Iter: 370 overflow: 0.254754 HPWL: 19171375971\r\n[NesterovSolve] Iter: 380 overflow: 0.250836 HPWL: 18915207500\r\n[NesterovSolve] Iter: 390 overflow: 0.225598 HPWL: 18784146027\r\n[NesterovSolve] Iter: 400 overflow: 0.201047 HPWL: 18784861983\r\n[INFO GPL-0075] Routability numCall: 1 inflationIterCnt: 1 bloatIterCnt: 0\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "So I thought my run was almost finished, it went fairly quickly for a while, but then it got stuck in \"Routeability\" below.\r\n\r\n5 minutes until it got to the GPL-0075 progress message, then stuck there for at least 30 minutes.\r\n\r\nWhat does this mean and what can I do about it?\r\n\r\nThe floorplan in my case looks quite reasonable and generous.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/blob/580bd35a8b17f0ea7ff8afafb6cf6d23b757063e/src/gpl/src/routeBase.cpp#L557\r\n\r\n```\r\n[NesterovSolve] Iter: 370 overflow: 0.254754 HPWL: 19171375971\r\n[NesterovSolve] Iter: 380 overflow: 0.250836 HPWL: 18915207500\r\n[NesterovSolve] Iter: 390 overflow: 0.225598 HPWL: 18784146027\r\n[NesterovSolve] Iter: 400 overflow: 0.201047 HPWL: 18784861983\r\n[INFO GPL-0075] Routability numCall: 1 inflationIterCnt: 1 bloatIterCnt: 0\r\n```\r\n", "date": "2023-04-04T12:37:57Z"}, {"author": "oharboe", "role": "assistant", "message": "A little bit of suspend/resume profiling using latest OpenROAD and release build...\r\n\r\nHmmm... curious. I don't think this is a performance problem, but there were a lot of exceptions thrown, so I had to turn off breakpoints on exceptions.\r\n\r\n```\r\n__cxa_throw (@__cxa_throw:3)\r\n\r\nsta::DmpAlg::findDriverParams(double) (.cold) (@sta::DmpAlg::findDriverParams(double) (.cold):14)\r\nsta::DmpPi::gateDelaySlew(double&, double&) (.cold) (@sta::DmpPi::gateDelaySlew(double&, double&) (.cold):50)\r\nsta::DmpCeffDelayCalc::gateDelay(sta::LibertyCell const*, sta::TimingArc const*, float const&, float, sta::Parasitic const*, float, sta::Pvt const*, sta::DcalcAnalysisPt const*, float&, float&) (@sta::DmpCeffDelayCalc::gateDelay(sta::LibertyCell const*, sta::TimingArc const*, float const&, float, sta::Parasitic const*, float, sta::Pvt const*, sta::DcalcAnalysisPt const*, float&, float&):88)\r\nsta::GraphDelayCalc1::findArcDelay(sta::LibertyCell*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::TimingArc*, sta::Parasitic*, float, sta::Vertex*, sta::Edge*, sta::Pvt const*, sta::DcalcAnalysisPt const*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findArcDelay(sta::LibertyCell*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::TimingArc*, sta::Parasitic*, float, sta::Vertex*, sta::Edge*, sta::Pvt const*, sta::DcalcAnalysisPt const*, sta::ArcDelayCalc*):112)\r\nsta::GraphDelayCalc1::findDriverEdgeDelays(sta::LibertyCell*, sta::Instance*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::Edge*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findDriverEdgeDelays(sta::LibertyCell*, sta::Instance*, sta::Pin const*, sta::Vertex*, sta::MultiDrvrNet*, sta::Edge*, sta::ArcDelayCalc*):105)\r\nsta::GraphDelayCalc1::findDriverDelays1(sta::Vertex*, bool, sta::MultiDrvrNet*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findDriverDelays1(sta::Vertex*, bool, sta::MultiDrvrNet*, sta::ArcDelayCalc*):108)\r\nsta::GraphDelayCalc1::findDriverDelays(sta::Vertex*, sta::ArcDelayCalc*) (@sta::GraphDelayCalc1::findDriverDelays(sta::Vertex*, sta::ArcDelayCalc*):63)\r\nsta::FindVertexDelays::visit(sta::Vertex*) (@sta::FindVertexDelays::visit(sta::Vertex*):74)\r\nsta::BfsIterator::visit(int, sta::VertexVisitor*) (@sta::BfsIterator::visit(int, sta::VertexVisitor*):71)\r\nsta::GraphDelayCalc1::findDelays(int) (@sta::GraphDelayCalc1::findDelays(int):47)\r\nsta::Sta::checkSlewLimitPreamble() (@sta::Sta::checkSlewLimitPreamble():82)\r\nrsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&) (@rsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&):65)\r\nrsz::Resizer::findResizeSlacks() (@rsz::Resizer::findResizeSlacks():24)\r\ngpl::TimingBase::updateGNetWeights(float) (@gpl::TimingBase::updateGNetWeights(float):18)\r\ngpl::NesterovPlace::doNesterovPlace(int) (@gpl::NesterovPlace::doNesterovPlace(int):1262)\r\n_wrap_replace_nesterov_place_cmd (@_wrap_replace_nesterov_place_cmd:20)\r\nTclNRRunCallbacks (@TclNRRunCallbacks:37)\r\n___lldb_unnamed_symbol1504 (@___lldb_unnamed_symbol1504:315)\r\nTcl_EvalEx (@Tcl_EvalEx:9)\r\n```\r\n\r\nOoops.... from within the debugger(attaching) to the release build, I ran into an recursive loop below and a SEGFAULT.\r\n\r\nCuriously, this infinite stack recursion does not appear with the debug build, which makes for an interesting debug exercise...\r\n\r\n```\r\nrsz::RepairDesign::repairNetJunc(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&) (@rsz::RepairDesign::repairNetJunc(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&):16)\r\nrsz::RepairDesign::repairNet(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&) (@rsz::RepairDesign::repairNet(std::shared_ptr<rsz::BufferedNet>, int, int&, sta::Vector<sta::Pin const*>&):82)\r\n[deleted 100s if not 1000s of these]\r\n(@rsz::RepairDesign::repairNet(std::shared_ptr<rsz::BufferedNet>, sta::Pin const*, float, int, sta::Corner const*):29)\r\nrsz::RepairDesign::repairNet(sta::Net*, sta::Pin const*, sta::Vertex*, bool, bool, bool, int, bool, int&, int&, int&, int&, int&) (@rsz::RepairDesign::repairNet(sta::Net*, sta::Pin const*, sta::Vertex*, bool, bool, bool, int, bool, int&, int&, int&, int&, int&):356)\r\nrsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&) (@rsz::RepairDesign::repairDesign(double, double, double, int&, int&, int&, int&, int&):195)\r\nrsz::Resizer::findResizeSlacks() (@rsz::Resizer::findResizeSlacks():24)\r\ngpl::TimingBase::updateGNetWeights(float) (@gpl::TimingBase::updateGNetWeights(float):18)\r\ngpl::NesterovPlace::doNesterovPlace(int) (@gpl::NesterovPlace::doNesterovPlace(int):1262)\r\n_wrap_replace_nesterov_place_cmd (@_wrap_replace_nesterov_place_cmd:20)\r\nTclNRRunCallbacks (@TclNRRunCallbacks:37)\r\n___lldb_unnamed_symbol1504 (@___lldb_unnamed_symbol1504:315)\r\nTcl_EvalEx (@Tcl_EvalEx:9)\r\nTcl_Eval (@Tcl_Eval:11)\r\nsta::sourceTclFile(char const*, bool, bool, Tcl_Interp*) (@sta::sourceTclFile(char const*, bool, bool, Tcl_Interp*):31)\r\nord::tclAppInit(Tcl_Interp*) (@ord::tclAppInit(Tcl_Interp*):128)\r\nTcl_MainEx (@Tcl_MainEx:111)\r\nmain (@main:742)\r\n__libc_start_call_main (@__libc_start_call_main:29)\r\n__libc_start_main_impl (@__libc_start_main@@GLIBC_2.34:43)\r\n_start (@_start:15)\r\n```\r\n\r\n\r\n", "date": "2023-04-04T13:20:25Z"}, {"author": "oharboe", "role": "assistant", "message": "Letting it run for a while, debug is MUCH slower than release, I see when I suspend in the debugger. There are 200000 nets to process in gen_brk_RSMT(), coeffADJ() is going through double loops for a total of 10000000 iterations...\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/229814542-0e59488f-6f61-46ca-9219-fe4cea5fb085.png)\r\n\r\n\r\n```\r\ngrt::FastRouteCore::getEdgeCapacity(grt::FrNet*, int, int, grt::EdgeDirection) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/FastRoute.cpp:592)\r\ngrt::FastRouteCore::coeffADJ(int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/RSMT.cpp:616)\r\ngrt::FastRouteCore::gen_brk_RSMT(bool, bool, bool, bool, bool) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/RSMT.cpp:662)\r\ngrt::FastRouteCore::run() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/fastroute/src/FastRoute.cpp:766)\r\ngrt::GlobalRouter::findRouting(std::vector<grt::Net*, std::allocator<grt::Net*>>&, int, int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/GlobalRouter.cpp:397)\r\ngrt::GlobalRouter::globalRoute(bool) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/grt/src/GlobalRouter.cpp:285)\r\ngpl::RouteBase::getGlobalRouterResult() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/routeBase.cpp:378)\r\ngpl::RouteBase::routability() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/routeBase.cpp:566)\r\ngpl::NesterovPlace::doNesterovPlace(int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/nesterovPlace.cpp:699)\r\ngpl::Replace::doNesterovPlace(int) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/gpl/src/replace.cpp:343)\r\nreplace_nesterov_place_cmd() (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/build/src/gpl/CMakeFiles/gpl.dir/replaceTCL_wrap.cxx:1740)\r\n::_wrap_replace_nesterov_place_cmd(ClientData, Tcl_Interp *, int, Tcl_Obj *const *) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/build/src/gpl/CMakeFiles/gpl.dir/replaceTCL_wrap.cxx:2190)\r\nTclNRRunCallbacks (@TclNRRunCallbacks:37)\r\n___lldb_unnamed_symbol1504 (@___lldb_unnamed_symbol1504:315)\r\nTcl_EvalEx (@Tcl_EvalEx:9)\r\nTcl_Eval (@Tcl_Eval:11)\r\nsta::sourceTclFile(char const*, bool, bool, Tcl_Interp*) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/sta/app/StaMain.cc:95)\r\n::tclAppInit(int &, char **, const char *, Tcl_Interp *) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/Main.cc:412)\r\nord::tclAppInit(Tcl_Interp*) (/home/oyvind/ascenium/OpenROAD-flow-scripts/tools/OpenROAD/src/Main.cc:440)\r\nTcl_MainEx (@Tcl_MainEx:111)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/229812113-27d8013b-9fbc-4727-93ee-18fed95d3702.png)\r\n\r\n", "date": "2023-04-04T13:37:17Z"}, {"author": "maliberty", "role": "assistant", "message": "You could try disabling each of these in turn to localize the cause\r\n```\r\nif {$::env(GPL_ROUTABILITY_DRIVEN)} {\r\n    append global_placement_args \" -routability_driven\"\r\n}\r\nif {$::env(GPL_TIMING_DRIVEN)} {\r\n    append global_placement_args \" -timing_driven\"\r\n}\r\n```\r\nThe stacks in rsz/sta are related to timing_driven.  If you see a stack in grt that is related to routability_driven.", "date": "2023-04-04T14:14:43Z"}], "date": "2023-04-04T12:37:57Z", "category": "Runtime", "subcategory": "Stuck in routine", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3124", "id": 3124, "title": "Problems building - undefined reference to `ord::getLogger()'", "author": "oharboe", "description": "Any idea what is going on here?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n[deleted]\r\nTIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/OpenROAD-flow-scripts/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "Any idea what is going on here?\r\n\r\n```\r\n./build_openroad.sh --local --openroad-args \"-D CMAKE_BUILD_TYPE=RELEASE\"\r\n[deleted]\r\nTIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /home/oyvind/ascenium/OpenROAD-flow-scripts/dependencies/share/cmake-3.24/Modules/GoogleTestAddTests.cmake\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::report(char const*)':\r\nLoggerCommon.cpp:(.text+0x18f): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::open_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x2e9): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::close_metrics(char const*)':\r\nLoggerCommon.cpp:(.text+0x309): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::set_metrics_stage(char const*)':\r\nLoggerCommon.cpp:(.text+0x32e): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o): in function `utl::clear_metrics_stage()':\r\nLoggerCommon.cpp:(.text+0x369): undefined reference to `ord::getLogger()'\r\n/usr/bin/ld: src/utl/utl.a(LoggerCommon.cpp.o):LoggerCommon.cpp:(.text+0x38e): more undefined references to `ord::getLogger()' follow\r\ncollect2: error: ld returned 1 exit status\r\n```", "date": "2023-04-02T18:57:45Z"}, {"author": "vijayank88", "role": "assistant", "message": "@oharboe \r\nHave you removed `OpenROAD-flow-scripts/tools` directory before building again.\r\nSometimes it may cause the issue.\r\n@vvbandeira Can please check this?", "date": "2023-04-03T10:49:14Z"}, {"author": "maliberty", "role": "assistant", "message": "which binary is it building when the error happens?", "date": "2023-04-03T22:26:06Z"}, {"author": "oharboe", "role": "assistant", "message": "Rejoice! I finally got it to compile. I deleted the *entire* ORFS folder, recloned, reran sudo ./setup.sh and then the build worked.\r\n\r\nSo, somewhere inside the ORFS folder there was an out of date file that wasn't being built...\r\n\r\nIt would be nice to know what exactly is going wrong, but I guess that will have to wait until next time it breaks and I do some more investigations?", "date": "2023-04-04T06:46:28Z"}], "date": "2023-04-02T18:57:45Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3094", "id": 3094, "title": "Problems with etc/DependencyInstaller.sh and md5 on boost", "author": "oharboe", "description": "What's going on here?\r\n\r\n```bash\r\n$ etc/DependencyInstaller.sh -prefix=~/openroad-tools/ -common\r\n[deleted]\r\nLength: 136670223 (130M) [application/x-gzip]\r\nSaving to: \u2018boost_1_80_0.tar.gz.1\u2019\r\n\r\nboost_1_80_0.tar.gz 100%[===================>] 130,34M  2,37MB/s    in 65s\r\n\r\n2023-03-27 16:56:06 (2,02 MB/s) - \u2018boost_1_80_0.tar.gz.1\u2019 saved [136670223/136670223]\r\n\r\n+ md5sum -c /dev/fd/63\r\n++ echo '077f074743ea7b0cb49c6ed43953ae95  boost_1_80_0.tar.gz'\r\nboost_1_80_0.tar.gz: FAILED\r\nmd5sum: WARNING: 1 computed checksum did NOT match\r\n+ exit 1\r\n```", "content": [{"author": "oharboe", "role": "user", "message": "What's going on here?\r\n\r\n```bash\r\n$ etc/DependencyInstaller.sh -prefix=~/openroad-tools/ -common\r\n[deleted]\r\nLength: 136670223 (130M) [application/x-gzip]\r\nSaving to: \u2018boost_1_80_0.tar.gz.1\u2019\r\n\r\nboost_1_80_0.tar.gz 100%[===================>] 130,34M  2,37MB/s    in 65s\r\n\r\n2023-03-27 16:56:06 (2,02 MB/s) - \u2018boost_1_80_0.tar.gz.1\u2019 saved [136670223/136670223]\r\n\r\n+ md5sum -c /dev/fd/63\r\n++ echo '077f074743ea7b0cb49c6ed43953ae95  boost_1_80_0.tar.gz'\r\nboost_1_80_0.tar.gz: FAILED\r\nmd5sum: WARNING: 1 computed checksum did NOT match\r\n+ exit 1\r\n```", "date": "2023-03-27T19:44:54Z"}, {"author": "oharboe", "role": "assistant", "message": "Hmm.... I suspect a manifestation of https://github.com/The-OpenROAD-Project/OpenROAD/issues/3096", "date": "2023-03-27T20:43:40Z"}, {"author": "vvbandeira", "role": "assistant", "message": "The problem is that the first download failed, and the file was not correctly deleted.\r\n\r\nNew download:\r\n```\r\nboost_1_80_0.tar.gz 100%[===================>] 130,34M  2,37MB/s    in 65s\r\n```\r\n\r\nSaving with the `.1` suffix:\r\n```\r\n2023-03-27 16:56:06 (2,02 MB/s) - \u2018boost_1_80_0.tar.gz.1\u2019 saved [136670223/136670223]\r\n```\r\n\r\nChecking against the file without the suffix:\r\n```\r\n+ md5sum -c /dev/fd/63\r\n++ echo '077f074743ea7b0cb49c6ed43953ae95  boost_1_80_0.tar.gz'\r\n```\r\n\r\nI will propose a PR that uses `mktemp` that should avoid this and the #3096 issues. You can manually delete the folder/offending file for now -- apologies for the inconvenience.", "date": "2023-03-28T14:26:27Z"}], "date": "2023-03-27T19:44:54Z", "category": "Build", "subcategory": "Dependency installation", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3073", "id": 3073, "title": "repair_design hanging", "author": "msingh9", "description": "I have \"repair_design\" to repair slew and cap, but this has been running for long time with no output. I think it is hanging. My design is not that big. I think it will be useful to get some sense of how much work has been completed, like work progress from these functions. Maybe I should file this a enhancement request? Is there a way to print some message while it is working?", "content": [{"author": "msingh9", "role": "user", "message": "I have \"repair_design\" to repair slew and cap, but this has been running for long time with no output. I think it is hanging. My design is not that big. I think it will be useful to get some sense of how much work has been completed, like work progress from these functions. Maybe I should file this a enhancement request? Is there a way to print some message while it is working?", "date": "2023-03-23T19:02:20Z"}, {"author": "maliberty", "role": "assistant", "message": "You could file it as an enhancement request or try to tackle it yourself and file a PR.", "date": "2023-03-23T20:58:43Z"}, {"author": "vijayank88", "role": "assistant", "message": "@msingh9 \r\nAre you using standalone OpenROAD or with OpenROAD-flow-scripts?", "date": "2023-03-24T13:28:43Z"}, {"author": "maliberty", "role": "assistant", "message": "How large is your design?", "date": "2023-03-24T20:49:08Z"}], "date": "2023-03-23T19:02:20Z", "category": "Runtime", "subcategory": "Hanging issue", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3044", "id": 3044, "title": "Custom Macro placement detailed route issue: Maze Route cannot find path of net", "author": "khaledhasanzami", "description": "I am using a custom macro placement script. Changing the macro position from default to any other formation causing error in detailed routing. \r\n\r\n`[ERROR DRT-0255] Maze Route cannot find path of net (some net) in worker of routeBox (34000 75000) (41000 45000)`\r\n\r\nIs it an algorithm error, any idea?\r\n", "content": [{"author": "khaledhasanzami", "role": "user", "message": "I am using a custom macro placement script. Changing the macro position from default to any other formation causing error in detailed routing. \r\n\r\n`[ERROR DRT-0255] Maze Route cannot find path of net (some net) in worker of routeBox (34000 75000) (41000 45000)`\r\n\r\nIs it an algorithm error, any idea?\r\n", "date": "2023-03-20T04:41:29Z"}, {"author": "vijayank88", "role": "assistant", "message": "Is automatic macro placement creating that error?", "date": "2023-03-20T09:27:43Z"}, {"author": "maliberty", "role": "assistant", "message": "This is a problem in detailed routing that would require a test case to investigate.  Can you provide one?", "date": "2023-03-20T17:10:03Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't expect this error from the router even with a bad macro placement.", "date": "2023-03-21T16:06:22Z"}, {"author": "msingh9", "role": "assistant", "message": "How do you do custom macro placement?", "date": "2023-03-24T18:51:22Z"}, {"author": "maliberty", "role": "assistant", "message": "It would be great to have a test case for this problem as is so we can fix it in addition to any workarounds in placement to avoid it.", "date": "2023-03-24T20:46:52Z"}], "date": "2023-03-20T04:41:29Z", "category": "Runtime", "subcategory": "Detailed routing failure", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3068", "id": 3068, "title": "openroad gui", "author": "msingh9", "description": "If ran openroad without gui, can I bring gui on later on after few steps from flow.tcl? I could save the design db and then open that design in gui, but I am just wondering if I can bring gui on from within openroad prompt.\r\n\r\n1) openroad -log log\r\n2) source <my_design>.tcl\r\n3) After few steps of flow\r\n4) I want to open the design in gui", "content": [{"author": "msingh9", "role": "user", "message": "If ran openroad without gui, can I bring gui on later on after few steps from flow.tcl? I could save the design db and then open that design in gui, but I am just wondering if I can bring gui on from within openroad prompt.\r\n\r\n1) openroad -log log\r\n2) source <my_design>.tcl\r\n3) After few steps of flow\r\n4) I want to open the design in gui", "date": "2023-03-23T01:22:37Z"}, {"author": "QuantamHD", "role": "assistant", "message": "You can open the gui at anytime with `gui::show`", "date": "2023-03-23T01:32:32Z"}, {"author": "msingh9", "role": "assistant", "message": "This works like a charm. Thank you for comment.", "date": "2023-03-23T18:41:25Z"}, {"author": "maliberty", "role": "assistant", "message": "FYI you can go the other way with \"Hide GUI\":\r\n![image](https://user-images.githubusercontent.com/761514/227319100-b11dc3c6-bf82-4464-aac2-318293c43c13.png)\r\n", "date": "2023-03-23T18:54:10Z"}], "date": "2023-03-23T01:22:37Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3029", "id": 3029, "title": "how to get timing path information", "author": "msingh9", "description": "I am interested to find out my worst timing path. I can run following command to get path objects, but how do I get full report like start point, logic gates in between and end point.\r\n\r\nopenroad> find_timing_paths -from * -to * -group_count 10 -sort_by_slack\r\n_d02fb74000000000_p_PathEnd _1005b54000000000_p_PathEnd _1040b44000000000_p_PathEnd _1006b54000000000_p_PathEnd _3071b64000000000_p_PathEnd _b0bfb54000000000_p_PathEnd _d0173d3f00000000_p_PathEnd _20cdb54000000000_p_PathEnd _9091bc4000000000_p_PathEnd _003db64000000000_p_PathEnd\r\n", "content": [{"author": "msingh9", "role": "user", "message": "I am interested to find out my worst timing path. I can run following command to get path objects, but how do I get full report like start point, logic gates in between and end point.\r\n\r\nopenroad> find_timing_paths -from * -to * -group_count 10 -sort_by_slack\r\n_d02fb74000000000_p_PathEnd _1005b54000000000_p_PathEnd _1040b44000000000_p_PathEnd _1006b54000000000_p_PathEnd _3071b64000000000_p_PathEnd _b0bfb54000000000_p_PathEnd _d0173d3f00000000_p_PathEnd _20cdb54000000000_p_PathEnd _9091bc4000000000_p_PathEnd _003db64000000000_p_PathEnd\r\n", "date": "2023-03-17T19:49:03Z"}, {"author": "maliberty", "role": "assistant", "message": "From the docs for find_timing_paths https://github.com/The-OpenROAD-Project/OpenSTA/blob/master/doc/OpenSTA.pdf\r\n\r\n```\r\nUse the get_property function to access properties of the paths.\r\n```\r\n", "date": "2023-03-17T22:51:11Z"}, {"author": "msingh9", "role": "assistant", "message": "Thank you very much for prompt response. This works fantastically. I wrote a small TCL function to nicely print complete timing path with the arrival time. Maybe, it will be helpful to someone. \r\n\r\n```\r\n### Document this ####\r\nUsage: report_timing_paths <args>\r\nExample: report_timing_paths -from * -to * -group_count 2 -sort_by_slack \r\n\r\nproc report_timing_paths {args} {\r\n    set path_ends [sta::find_timing_paths_cmd \"find_timing_paths\" args]\r\n    set pathno 1\r\n    foreach path_end $path_ends {\r\n        set start_clock [get_property [get_property $path_end startpoint_clock] full_name]\r\n        set start_point [get_property [get_property $path_end startPoint] full_name]\r\n        set end_point [get_property [get_property $path_end endPoint] full_name]\r\n        set end_clock [get_property [get_property $path_end endpoint_clock] full_name]\r\n        set slack [get_property $path_end slack]\r\n        puts \"Path ${pathno} : \"\r\n        puts \" [format \"%-80s\" $start_point], ${start_clock}\"\r\n        set points [get_property $path_end points]\r\n        foreach point $points {\r\n            set arrival [get_property $point arrival]\r\n            set pin [get_property [get_property $point pin] full_name]\r\n            set cslack [get_property $point slack]\r\n            puts \" [format \"%-80s\" $pin], $arrival\"\r\n        }\r\n        puts \" [format \"%-80s\" $end_point], ${end_clock}, [format \"%.3f\" $slack]\"\r\n        incr pathno\r\n        puts \"\"\r\n    }\r\n}\r\n```", "date": "2023-03-18T01:44:00Z"}], "date": "2023-03-17T19:49:03Z", "category": "Query", "subcategory": "Usage question", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3037", "id": 3037, "title": "confusion over where worst slacks are stored and populated", "author": "cshi15", "description": "Hello, I'm an undergrad who has been trying to add some new functionality and thus trying to learn how the codebase works.\r\n\r\nRight now, I am working in Resizer and trying to write a function that will print out the top failing (negative slack) paths. I was studying the code for worst slacks by studying the `worstSlack` functions in `Search.cc` and `WorstSlack.cc`, and also the `findResizeSlacks()` function in `Resizer.cc`. Looking at the `findResizeSlacks1()` function in `Resizer.cc`, it appears to populate the `worst_slack_nets_` field. However, when I try to access `worst_slack_nets_` in my function, it appears to be empty.\r\n\r\nIs there something that I need to call before this to populate the field? Should I even be trying to access `worst_slack_nets_` at all? ", "content": [{"author": "cshi15", "role": "user", "message": "Hello, I'm an undergrad who has been trying to add some new functionality and thus trying to learn how the codebase works.\r\n\r\nRight now, I am working in Resizer and trying to write a function that will print out the top failing (negative slack) paths. I was studying the code for worst slacks by studying the `worstSlack` functions in `Search.cc` and `WorstSlack.cc`, and also the `findResizeSlacks()` function in `Resizer.cc`. Looking at the `findResizeSlacks1()` function in `Resizer.cc`, it appears to populate the `worst_slack_nets_` field. However, when I try to access `worst_slack_nets_` in my function, it appears to be empty.\r\n\r\nIs there something that I need to call before this to populate the field? Should I even be trying to access `worst_slack_nets_` at all? ", "date": "2023-03-18T15:58:20Z"}, {"author": "rovinski", "role": "assistant", "message": "@openroadie @maliberty any ideas here?\r\n\r\n@cshi15 maybe take a quick look at #3045 to see if there was anything useful there.\r\nAlso maybe if you can commit what you have to a fork then it will make it easier to understand what you have tried so far.", "date": "2023-03-20T17:58:05Z"}, {"author": "maliberty", "role": "assistant", "message": "I'm guessing you need to call Resizer::resizePreamble() first.", "date": "2023-03-20T18:06:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you put the code on a branch somewhere?  ", "date": "2023-03-20T22:30:32Z"}], "date": "2023-03-18T15:58:20Z", "category": "Query", "subcategory": "Code understanding", "Tool": "Gate Resizer"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3030", "id": 3030, "title": "How to view macro to macro and macro to pin connections in openroad gui mode?", "author": "khaledhasanzami", "description": "I am having some error showing macros can not connect to some pins. \r\n\r\nI can't figure out how to view macro to macro connections (flightline) and macro to pin connections in gui mode. \r\n\r\nHelp me if anyone figured this out!", "content": [{"author": "khaledhasanzami", "role": "user", "message": "I am having some error showing macros can not connect to some pins. \r\n\r\nI can't figure out how to view macro to macro connections (flightline) and macro to pin connections in gui mode. \r\n\r\nHelp me if anyone figured this out!", "date": "2023-03-18T04:00:17Z"}, {"author": "vijayank88", "role": "assistant", "message": "Use `net` name to view in GUI using `Find` menu. It was explained here: https://openroad-flow-scripts.readthedocs.io/en/latest/tutorials/FlowTutorial.html#tracing-the-clock-tree", "date": "2023-03-18T04:58:27Z"}, {"author": "khaledhasanzami", "role": "assistant", "message": "I was looking for macro to macro connection. \r\n\r\nI got the solution though. \r\n\r\nWe have to select a macro, right click, highlight, go to all nets and chose a group.\r\n\r\nThank you for the suggestions though.\r\n", "date": "2023-03-20T04:11:08Z"}], "date": "2023-03-18T04:00:17Z", "category": "Query", "subcategory": "Visualization", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3004", "id": 3004, "title": "openRoad installation", "author": "msingh9", "description": "I was successfully able to run cmake and then make. However, output of cmake has following two messages which seems problematic to me. How do I resolve these?\r\n\r\n-- GUI is not enabled\r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS)\r\n\r\nI ran following command\r\ncmake .. -DCMAKE_INSTALL_PREFIX=/home/msingh/openRoad -DPYTHON_INCLUDE_DIR=$(python3 -c \"import sysconfig; print(sysconfig.get_path('include'))\") -DPYTHON_LIBRARY=$(python3 -c\\\r\n \"import sysconfig; print(sysconfig.get_config_var('LIBDIR'))\")\r\n\r\nI also ran make afterwards, which seems to finish. There are bunch of warnings but no error message. Where do I find the executable. I don't find it in CMAKE_INSTALL_PREFIX/bin directory.\r\n\r\nDoes it mean that installation didn't complete? \r\n\r\nI am looking for some help because I am stuck in the installation.\r\n\r\nI just cleared the buffer that has log, but I can redo those steps if you need the complete log output.", "content": [{"author": "msingh9", "role": "user", "message": "I was successfully able to run cmake and then make. However, output of cmake has following two messages which seems problematic to me. How do I resolve these?\r\n\r\n-- GUI is not enabled\r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS)\r\n\r\nI ran following command\r\ncmake .. -DCMAKE_INSTALL_PREFIX=/home/msingh/openRoad -DPYTHON_INCLUDE_DIR=$(python3 -c \"import sysconfig; print(sysconfig.get_path('include'))\") -DPYTHON_LIBRARY=$(python3 -c\\\r\n \"import sysconfig; print(sysconfig.get_config_var('LIBDIR'))\")\r\n\r\nI also ran make afterwards, which seems to finish. There are bunch of warnings but no error message. Where do I find the executable. I don't find it in CMAKE_INSTALL_PREFIX/bin directory.\r\n\r\nDoes it mean that installation didn't complete? \r\n\r\nI am looking for some help because I am stuck in the installation.\r\n\r\nI just cleared the buffer that has log, but I can redo those steps if you need the complete log output.", "date": "2023-03-11T18:18:02Z"}, {"author": "maliberty", "role": "assistant", "message": "Vtune is unimportant unless you are a developer of OR.\r\n\r\nThe GUI suggests that you don't have Qt installed.  Did you run the dependency installer?", "date": "2023-03-11T22:02:42Z"}, {"author": "msingh9", "role": "assistant", "message": "Thanks Maliberty for response.\r\n\r\nI followed the steps \"https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildLocally.html\" and was able to build with hiccups. \r\nHow do I make sure Qt is installed? BTW - I am trying to install it on Linux RH8. Is it supported platform?\r\n\r\nWhen I try to invoke it, I get this missing library error.\r\nopenroad -help\r\nopenroad: error while loading shared libraries: libortools.so.9: cannot open shared object file: No such file or directory\r\n", "date": "2023-03-11T23:00:36Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't know what OS you are on and you haven't included any logs.  If you look at https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/etc/DependencyInstaller.sh it you'll see it references Qt libraries.", "date": "2023-03-12T01:39:32Z"}, {"author": "msingh9", "role": "assistant", "message": "I am trying to build it on RH8. I am really stuck at this point now. I ran \"sudo ./DependencyInstaller.sh\" successfully. \r\n\r\nI can check that qt5 is installed.\r\n\r\n[msingh@lnx-msingh cv6 /tmp]$ sudo yum -y install qt5-srpm-macros.noarch\r\nLast metadata expiration check: 0:07:51 ago on Sun 12 Mar 2023 12:19:34 AM PST.\r\nPackage qt5-srpm-macros-5.12.5-3.el8.noarch is already installed.\r\nDependencies resolved.\r\nNothing to do.\r\n\r\nWhen I run cmake to create build files, I get that \"GUI is not enabled\". Is there a switch I need to pass to cmake. Here is my command and it's output.\r\n\r\n[msingh@lnx-msingh cv6 build]$ cmake .. -DPYTHON_INCLUDE_DIR=/cv6/tools2/tv2/release/Python3/3.9.0/include/python3.9 -DPYTHON_LIBRARY=/cv6/tools2/tv2/release/Python3/3.9.0/lib -Dortools_DIR=/opt/or-tools\r\n-- OpenROAD version: v2.0-7131-g1d8d24209\r\n-- System name: Linux\r\n-- Compiler: GNU 8.3.1\r\n-- Build type: RELEASE\r\n-- Install prefix: /usr/local\r\n-- C++ Standard: 17\r\n-- C++ Standard Required: ON\r\n-- C++ Extensions: OFF\r\n-- TCL library: /usr/lib64/libtcl.so\r\n-- TCL header: /usr/include/tcl.h\r\n-- TCL readline library: /usr/lib64/libtclreadline.so\r\n-- TCL readline header: /usr/include\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\")\r\n-- boost: 1.80.0\r\n-- spdlog: 1.8.1\r\n-- STA version: 2.4.0\r\n-- STA git sha: f84e617fc435d2d280a3f76045aa461afa386e2b\r\n-- System name: Linux\r\n-- Compiler: GNU 8.3.1\r\n-- Build type: RELEASE\r\n-- Build CXX_FLAGS: -O3 -DNDEBUG\r\n-- Install prefix: /usr/local\r\n-- TCL library: /usr/lib64/libtcl.so\r\n-- TCL header: /usr/include/tcl.h\r\n-- SSTA: 0\r\n-- STA executable: /dump/vlsidump302/msingh/OpenROAD/src/sta/app/sta\r\n-- GPU is not enabled\r\n-- GUI is not enabled\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization\r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS)\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found suitable version \"1.80.0\", minimum required is \"1.78\")\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization system thread\r\n-- TCL readline enabled\r\n-- Tcl Extended disabled\r\n-- Python3 disabled\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /dump/vlsidump302/msingh/OpenROAD/build\r\n", "date": "2023-03-12T08:30:45Z"}, {"author": "maliberty", "role": "assistant", "message": "What OS are you using?  Is qt in the default location?", "date": "2023-03-12T18:08:37Z"}, {"author": "vijayank88", "role": "assistant", "message": "@msingh9 \r\nCan you try docker based installation [steps](https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildWithDocker.html) ?", "date": "2023-03-13T11:13:08Z"}, {"author": "msingh9", "role": "assistant", "message": "Thank you everyone for support. I finally managed to make it work on RH8. It is exciting to see this tool in action. I really like to appreciate everyone effort to make this open-source magic.  I will post my results once I can make it work.", "date": "2023-03-17T02:30:06Z"}], "date": "2023-03-11T18:18:02Z", "category": "Installation", "subcategory": "Dependency issues", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3023", "id": 3023, "title": "Clock Division", "author": "Ziad-cyber", "description": "How to define a constraint on a generated clock that's divided by 2 from a master clock source?", "content": [{"author": "Ziad-cyber", "role": "user", "message": "How to define a constraint on a generated clock that's divided by 2 from a master clock source?", "date": "2023-03-16T05:07:36Z"}, {"author": "vijayank88", "role": "assistant", "message": "OpenROAD flow accepts all standard SDC formats. Just browse it and implement the same.\r\nOpenSTA doc found [here](https://github.com/The-OpenROAD-Project/OpenSTA/blob/master/doc/OpenSTA.pdf)", "date": "2023-03-16T06:43:46Z"}, {"author": "maliberty", "role": "assistant", "message": "In particular see create_generated_clock", "date": "2023-03-16T15:42:31Z"}], "date": "2023-03-16T05:07:36Z", "category": "Query", "subcategory": "Constraint definition", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/3014", "id": 3014, "title": "Hold wns resulting infinite", "author": "khaledhasanzami", "description": "I was running the riscv model with default setup. When I was trying to find wns for hold after the full run (or in cts, route). It is returning as INF.\r\n\r\nCommand:\r\n```\r\nreport_worst_slack -min\r\n```\r\nReturns `worst slack INF`\r\n\r\n**pdk:** asap7\r\n**design:** riscv32i\r\n\r\nAny idea why is that and how to solve it?", "content": [{"author": "khaledhasanzami", "role": "user", "message": "I was running the riscv model with default setup. When I was trying to find wns for hold after the full run (or in cts, route). It is returning as INF.\r\n\r\nCommand:\r\n```\r\nreport_worst_slack -min\r\n```\r\nReturns `worst slack INF`\r\n\r\n**pdk:** asap7\r\n**design:** riscv32i\r\n\r\nAny idea why is that and how to solve it?", "date": "2023-03-14T04:18:29Z"}, {"author": "maliberty", "role": "assistant", "message": "In which PDK?  How did you load the design?  Please give specific steps to reproduce the issue.", "date": "2023-03-14T04:47:22Z"}, {"author": "maliberty", "role": "assistant", "message": "I guess you meant ```make gui_6_final.odb``` without the 'e'.  I get:\r\n\r\n```\r\n>>> report_worst_slack -min\r\nworst slack 40.29\r\n```\r\n\r\nWhat commit id are you using for OR & ORFS?  This would have worked better as an issue with the required info.", "date": "2023-03-14T15:36:19Z"}], "date": "2023-03-14T04:18:29Z", "category": "Runtime", "subcategory": "Timing analysis issue", "Tool": "OpenSTA"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2972", "id": 2972, "title": "CMAKE errors while installing Openroad", "author": "mdzaki-git", "description": "HI All,\r\n\r\nAfter installing the dependencies we re stuck with cmake errors and would appreciate your help in fixing them. Attaching the error snippet for reference.\r\n<img width=\"1388\" alt=\"Cmake Error\" src=\"https://user-images.githubusercontent.com/68725332/223042193-39b47832-730e-4716-abce-421e7a44dfc8.png\">\r\n", "content": [{"author": "mdzaki-git", "role": "user", "message": "HI All,\r\n\r\nAfter installing the dependencies we re stuck with cmake errors and would appreciate your help in fixing them. Attaching the error snippet for reference.\r\n<img width=\"1388\" alt=\"Cmake Error\" src=\"https://user-images.githubusercontent.com/68725332/223042193-39b47832-730e-4716-abce-421e7a44dfc8.png\">\r\n", "date": "2023-03-06T07:10:56Z"}, {"author": "vijayank88", "role": "assistant", "message": "attach log `build_openroad.log`", "date": "2023-03-06T11:07:43Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "[openroad_build.log](https://github.com/The-OpenROAD-Project/OpenROAD/files/10897535/openroad_build.log)\r\n", "date": "2023-03-06T11:24:01Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "Following the install instruction mentioned on git hub.\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD", "date": "2023-03-06T11:25:48Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "Hi Vitor,\n\nRecloned the repository and tried again, getting below errors now.\n\n\n\nOn Mon, Mar 6, 2023 at 7:32\u202fPM Vitor Bandeira ***@***.***>\nwrote:\n\n> @vijayank88 <https://github.com/vijayank88>, this warning is not a\n> problem with CMake; this indicates that the folder is not a git repo.\n> @mdzaki-git <https://github.com/mdzaki-git>, can you make sure that the\n> clone ended fine? Maybe check the output of git status --long, the output\n> of this command should look something like this:\n>\n> > git status --long\n> On branch master\n> Your branch is up to date with 'origin/master'.\n> nothing to commit, working tree clean\n>\n> Also, try to do a clean build and in case of any errors upload the new log\n> file.\n>\n> ./etc/Build.sh -clean\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2972#discussioncomment-5216244>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AQMKUVEUTV4F7PDCH6F4IQ3W2XU6HANCNFSM6AAAAAAVQXMFI4>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> <The-OpenROAD-Project/OpenROAD/repo-discussions/2972/comments/5216244@\n> github.com>\n>\n", "date": "2023-03-06T14:45:10Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "[openroad_build.log](https://github.com/The-OpenROAD-Project/OpenROAD/files/10899446/openroad_build.log)\r\n", "date": "2023-03-06T14:51:36Z"}, {"author": "vvbandeira", "role": "assistant", "message": "Looks like you missed the `--recursive` when cloning. Please run\n\n```\ngit submodule update --init\n```\n\nIn the future you should use `git clone --recursive` to also clone the submodules `abc` and `sta`. ", "date": "2023-03-06T16:07:04Z"}, {"author": "mdzaki-git", "role": "assistant", "message": "Hi All,\n\nThanks it works now.\n\nOn Mon, Mar 6, 2023 at 9:37\u202fPM Vitor Bandeira ***@***.***>\nwrote:\n\n> Looks like you missed the --recursive when cloning. Please run\n>\n> git submodule update --init\n>\n> In the future you should use git clone --recursive to also clone the\n> submodules abc and sta.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2972#discussioncomment-5217710>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AQMKUVH4OMC266IZBNAHYATW2YDTFANCNFSM6AAAAAAVQXMFI4>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> <The-OpenROAD-Project/OpenROAD/repo-discussions/2972/comments/5217710@\n> github.com>\n>\n", "date": "2023-03-08T07:11:38Z"}], "date": "2023-03-06T07:10:56Z", "category": "Installation", "subcategory": "Build issues", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2965", "id": 2965, "title": "Open a sample project in the OpenROAD GUI", "author": "vic4key", "description": "Hi everybody,\r\n\r\nI already build OpenROAD GUI to run on Ubuntu Linux. Now I'm looking for a sample project that can open directly via main menu `File > Open DB` in OpenROAD GUI (like the below image), I have spent a lot of time to find the way (reading read-me, watching video, etc) to do it, but I did not complete.\r\nI found a data test at https://github.com/TILOS-AI-Institute/MacroPlacement/tree/main/Flows/NanGate45/ariane133 but seems it cannot open directly by OpenROAD and maybe need to do several pre-processing steps before can open in OpenROAD GUI.\r\nCould you please help me to know how to do it or give me detail instructions to open this test data in the OpenROAD GUI?\r\nThanks.\r\n\r\n![sample](https://user-images.githubusercontent.com/5672864/222308822-2fc0204a-440c-4593-a04b-a4e82f591073.png)\r\n", "content": [{"author": "vic4key", "role": "user", "message": "Hi everybody,\r\n\r\nI already build OpenROAD GUI to run on Ubuntu Linux. Now I'm looking for a sample project that can open directly via main menu `File > Open DB` in OpenROAD GUI (like the below image), I have spent a lot of time to find the way (reading read-me, watching video, etc) to do it, but I did not complete.\r\nI found a data test at https://github.com/TILOS-AI-Institute/MacroPlacement/tree/main/Flows/NanGate45/ariane133 but seems it cannot open directly by OpenROAD and maybe need to do several pre-processing steps before can open in OpenROAD GUI.\r\nCould you please help me to know how to do it or give me detail instructions to open this test data in the OpenROAD GUI?\r\nThanks.\r\n\r\n![sample](https://user-images.githubusercontent.com/5672864/222308822-2fc0204a-440c-4593-a04b-a4e82f591073.png)\r\n", "date": "2023-03-02T02:01:20Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Hi @vic4key,\r\n\r\nIt's not clear what's failing, and what you would like to see? It would also be helpful if you uploaded the data you could upload your test data in a zip folder and post it here. So that we can debug th issue.", "date": "2023-03-02T02:23:23Z"}, {"author": "vijayank88", "role": "assistant", "message": "@vic4key \r\nSame design implemented in OpenROAD-flow-scripts. https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/tree/master/flow/designs/nangate45/ariane136\r\nAll you need to install OpenROAD-flow-scripts and run the design and view it in OpenROAD GUI.\r\nInstallation document available here: https://openroad-flow-scripts.readthedocs.io/en/latest/user/BuildLocally.html", "date": "2023-03-02T10:39:33Z"}, {"author": "maliberty", "role": "assistant", "message": "cuda will make almost no difference to runtime.  I would start by running gcd as it is the smallest test case.", "date": "2023-03-02T15:20:27Z"}], "date": "2023-03-02T02:01:20Z", "category": "Query", "subcategory": "Usage question", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2952", "id": 2952, "title": "Cannot build with CUDA", "author": "yathAg", "description": "I am trying to build Openroad with cmake .. -DGPU=true and I get the following output\r\n\r\n```\r\n-- GPU is enabled\r\n-- CUDA is found\r\n-- The CUDA compiler identification is NVIDIA 10.1.243\r\n-- Detecting CUDA compiler ABI info\r\n-- Detecting CUDA compiler ABI info - done\r\n-- Check for working CUDA compiler: /usr/bin/nvcc - skipped\r\n-- Detecting CUDA compile features\r\n-- Detecting CUDA compile features - done\r\n-- Found re2: /opt/or-tools/lib/cmake/re2/re2Config.cmake (found version \"9.0.0\") \r\n-- Found Clp: /opt/or-tools/lib/cmake/Clp/ClpConfig.cmake (found version \"1.17.7\") \r\n-- Found Cbc: /opt/or-tools/lib/cmake/Cbc/CbcConfig.cmake (found version \"2.10.7\") \r\n-- Found Eigen3: /usr/local/share/eigen3/cmake/Eigen3Config.cmake (found version \"3.4.0\") \r\n-- Found SCIP: /opt/or-tools/lib/cmake/scip/scip-config.cmake (found version \"8.0.1\") \r\n-- GUI is enabled\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization \r\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \r\n-- Found OpenMP: TRUE (found version \"4.5\")  \r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS) \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found suitable version \"1.80.0\", minimum required is \"1.78\")  \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization system thread \r\n-- TCL readline enabled\r\n-- Tcl Extended disabled\r\n-- Python3 enabled\r\n-- Configuring done\r\nCMake Warning (dev) in src/gpl/CMakeLists.txt:\r\n  Policy CMP0104 is not set: CMAKE_CUDA_ARCHITECTURES now detected for NVCC,\r\n  empty CUDA_ARCHITECTURES not allowed.  Run \"cmake --help-policy CMP0104\"\r\n  for policy details.  Use the cmake_policy command to set the policy and\r\n  suppress this warning.\r\n\r\n  CUDA_ARCHITECTURES is empty for target \"gpl\".\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\nCMake Error in src/gpl/CMakeLists.txt:\r\n  Target \"gpl\" requires the language dialect \"CUDA17\" .  But the current\r\n  compiler \"NVIDIA\" does not support this, or CMake does not know the flags\r\n  to enable it.\r\n\r\n\r\n-- Generating done\r\nCMake Generate step failed.  Build files cannot be regenerated correctly.\r\n```\r\n\r\nI have Cuda installed and on `nvidia-smi` I get \r\n\r\n```\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 525.85.12    Driver Version: 525.85.12    CUDA Version: 12.0     |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|                               |                      |               MIG M. |\r\n|===============================+======================+======================|\r\n|   0  NVIDIA GeForce ...  On   | 00000000:01:00.0  On |                  N/A |\r\n| N/A   51C    P5    18W / 115W |    187MiB /  6144MiB |     19%      Default |\r\n|                               |                      |                  N/A |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                                  |\r\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\r\n|        ID   ID                                                   Usage      |\r\n|=============================================================================|\r\n|    0   N/A  N/A      1211      G   /usr/lib/xorg/Xorg                 52MiB |\r\n|    0   N/A  N/A      1875      G   /usr/lib/xorg/Xorg                133MiB |\r\n+-----------------------------------------------------------------------------+\r\n```\r\n\r\nand on `nvcc -V`\r\n\r\n```\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2019 NVIDIA Corporation\r\nBuilt on Sun_Jul_28_19:07:16_PDT_2019\r\nCuda compilation tools, release 10.1, V10.1.243\r\n```\r\nAny help on how to get the setup working is really appreciated and thanks in advanced.\r\n\r\n\r\n\r\n\r\n\r\n", "content": [{"author": "yathAg", "role": "user", "message": "I am trying to build Openroad with cmake .. -DGPU=true and I get the following output\r\n\r\n```\r\n-- GPU is enabled\r\n-- CUDA is found\r\n-- The CUDA compiler identification is NVIDIA 10.1.243\r\n-- Detecting CUDA compiler ABI info\r\n-- Detecting CUDA compiler ABI info - done\r\n-- Check for working CUDA compiler: /usr/bin/nvcc - skipped\r\n-- Detecting CUDA compile features\r\n-- Detecting CUDA compile features - done\r\n-- Found re2: /opt/or-tools/lib/cmake/re2/re2Config.cmake (found version \"9.0.0\") \r\n-- Found Clp: /opt/or-tools/lib/cmake/Clp/ClpConfig.cmake (found version \"1.17.7\") \r\n-- Found Cbc: /opt/or-tools/lib/cmake/Cbc/CbcConfig.cmake (found version \"2.10.7\") \r\n-- Found Eigen3: /usr/local/share/eigen3/cmake/Eigen3Config.cmake (found version \"3.4.0\") \r\n-- Found SCIP: /opt/or-tools/lib/cmake/scip/scip-config.cmake (found version \"8.0.1\") \r\n-- GUI is enabled\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization \r\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \r\n-- Found OpenMP: TRUE (found version \"4.5\")  \r\n-- Could NOT find VTune (missing: VTune_LIBRARIES VTune_INCLUDE_DIRS) \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found suitable version \"1.80.0\", minimum required is \"1.78\")  \r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.80.0/BoostConfig.cmake (found version \"1.80.0\") found components: serialization system thread \r\n-- TCL readline enabled\r\n-- Tcl Extended disabled\r\n-- Python3 enabled\r\n-- Configuring done\r\nCMake Warning (dev) in src/gpl/CMakeLists.txt:\r\n  Policy CMP0104 is not set: CMAKE_CUDA_ARCHITECTURES now detected for NVCC,\r\n  empty CUDA_ARCHITECTURES not allowed.  Run \"cmake --help-policy CMP0104\"\r\n  for policy details.  Use the cmake_policy command to set the policy and\r\n  suppress this warning.\r\n\r\n  CUDA_ARCHITECTURES is empty for target \"gpl\".\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\nCMake Error in src/gpl/CMakeLists.txt:\r\n  Target \"gpl\" requires the language dialect \"CUDA17\" .  But the current\r\n  compiler \"NVIDIA\" does not support this, or CMake does not know the flags\r\n  to enable it.\r\n\r\n\r\n-- Generating done\r\nCMake Generate step failed.  Build files cannot be regenerated correctly.\r\n```\r\n\r\nI have Cuda installed and on `nvidia-smi` I get \r\n\r\n```\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 525.85.12    Driver Version: 525.85.12    CUDA Version: 12.0     |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|                               |                      |               MIG M. |\r\n|===============================+======================+======================|\r\n|   0  NVIDIA GeForce ...  On   | 00000000:01:00.0  On |                  N/A |\r\n| N/A   51C    P5    18W / 115W |    187MiB /  6144MiB |     19%      Default |\r\n|                               |                      |                  N/A |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                                  |\r\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\r\n|        ID   ID                                                   Usage      |\r\n|=============================================================================|\r\n|    0   N/A  N/A      1211      G   /usr/lib/xorg/Xorg                 52MiB |\r\n|    0   N/A  N/A      1875      G   /usr/lib/xorg/Xorg                133MiB |\r\n+-----------------------------------------------------------------------------+\r\n```\r\n\r\nand on `nvcc -V`\r\n\r\n```\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2019 NVIDIA Corporation\r\nBuilt on Sun_Jul_28_19:07:16_PDT_2019\r\nCuda compilation tools, release 10.1, V10.1.243\r\n```\r\nAny help on how to get the setup working is really appreciated and thanks in advanced.\r\n\r\n\r\n\r\n\r\n\r\n", "date": "2023-02-27T18:14:29Z"}, {"author": "vvbandeira", "role": "assistant", "message": "Please install a newer version of `nvcc` and try again. As per NVIDIA docs, you will require at least v11; see more [here](https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#c-17-language-features).", "date": "2023-02-27T18:52:21Z"}, {"author": "maliberty", "role": "assistant", "message": "If we bump to cmake 3.10 then https://cmake.org/cmake/help/latest/module/FindCUDA.html suggests we can use the usual VERSION keyword.\r\n\r\nFYI - the use of CUDA is quite minimal and probably not worth the bother at this point.", "date": "2023-02-28T03:47:48Z"}], "date": "2023-02-27T18:14:29Z", "category": "Build", "subcategory": "Compiler version mismatch", "Tool": "Verilog to DB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2889", "id": 2889, "title": "[INFO GRT-0101] Running extra iterations to remove overflow - taking a long time", "author": "oharboe", "description": "What does this step actually do?\r\n\r\nAny hints on how to figure out what is going on here, what to look at?\r\n\r\nWhen I zoom in on the design, I see an ocean of thinly spread fiddlybits:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/218471305-7312e5f8-afbf-454d-9dbd-87a75d5197e5.png)\r\n", "content": [{"author": "oharboe", "role": "user", "message": "What does this step actually do?\r\n\r\nAny hints on how to figure out what is going on here, what to look at?\r\n\r\nWhen I zoom in on the design, I see an ocean of thinly spread fiddlybits:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/218471305-7312e5f8-afbf-454d-9dbd-87a75d5197e5.png)\r\n", "date": "2023-02-13T13:34:13Z"}, {"author": "rovinski", "role": "assistant", "message": "GRT is the global router. It means your design is very dense (at least within some areas). It is attempting to assign nets to routing tracks, but there are too many nets within an area (overflow) so it is trying to reroute nets to avoid this.\r\n\r\nGRT runs for a fixed number of iterations before giving up and erroring if it can't resolve the overflow.\r\n\r\nThe best first thing to check is the global routing heatmap to see congestion hotspots. In your case, it is likely that the density is simply too high and you need to reduce the placement density %.", "date": "2023-02-13T16:26:57Z"}, {"author": "maliberty", "role": "assistant", "message": "You should also check how many buffers are being inserted as it possible that can cause extra congestion if you have very bad timing.", "date": "2023-02-13T16:31:20Z"}], "date": "2023-02-13T13:34:13Z", "category": "Runtime", "subcategory": "Global routing issue", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2868", "id": 2868, "title": "How do I figure out valid macro coordinates for manual placement?", "author": "oharboe", "description": "I'm trying to find out valid coordinates to put macros onto. The pins of the macros must align on the routing grid.\r\n\r\nFrom ASAP 7 LEF files, I see that pins are on M4 and M5 layer. From make_tracks.tcl, I see offsets and pitches.\r\n\r\nFrom that information, I should be able to come up with some formulae of valid macro positions....\r\n\r\nI just seem to be unable to connect the dots here to what the formulae should be:\r\n\r\nM4 is horizontal pins and M5 is vertical pins (or vice versa, I could see in the GUI, but I don't know how to tell from the LEF file):\r\n\r\n\r\nThe pins are from a macro, so I know the pin coordinates below are correct:\r\n\r\n```\r\n  PIN foo[50]\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M4 ;\r\n        RECT  144.818 86.208 145.152 86.232 ;\r\n    END\r\n  END foo[50]\r\n\r\n  PIN bar\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M5 ;\r\n        RECT  101.76 144.818 101.784 145.152 ;\r\n    END\r\n  END bar\r\n```\r\n\r\nfrom make_tracks.tcl:\r\n\r\n```\r\nmake_tracks M4  -x_offset [expr 0.009 * $multiplier] -x_pitch [expr 0.036 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\nmake_tracks M5  -x_offset [expr 0.012 * $multiplier] -x_pitch [expr 0.048 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\n```\r\n", "content": [{"author": "oharboe", "role": "user", "message": "I'm trying to find out valid coordinates to put macros onto. The pins of the macros must align on the routing grid.\r\n\r\nFrom ASAP 7 LEF files, I see that pins are on M4 and M5 layer. From make_tracks.tcl, I see offsets and pitches.\r\n\r\nFrom that information, I should be able to come up with some formulae of valid macro positions....\r\n\r\nI just seem to be unable to connect the dots here to what the formulae should be:\r\n\r\nM4 is horizontal pins and M5 is vertical pins (or vice versa, I could see in the GUI, but I don't know how to tell from the LEF file):\r\n\r\n\r\nThe pins are from a macro, so I know the pin coordinates below are correct:\r\n\r\n```\r\n  PIN foo[50]\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M4 ;\r\n        RECT  144.818 86.208 145.152 86.232 ;\r\n    END\r\n  END foo[50]\r\n\r\n  PIN bar\r\n    DIRECTION INPUT ;\r\n    USE SIGNAL ;\r\n    PORT\r\n      LAYER M5 ;\r\n        RECT  101.76 144.818 101.784 145.152 ;\r\n    END\r\n  END bar\r\n```\r\n\r\nfrom make_tracks.tcl:\r\n\r\n```\r\nmake_tracks M4  -x_offset [expr 0.009 * $multiplier] -x_pitch [expr 0.036 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\nmake_tracks M5  -x_offset [expr 0.012 * $multiplier] -x_pitch [expr 0.048 * $multiplier] -y_offset [expr 0.012 * $multiplier] -y_pitch [expr 0.048 * $multiplier]\r\n```\r\n", "date": "2023-02-07T21:15:00Z"}, {"author": "yupferris", "role": "assistant", "message": "@maliberty mentioned in our discussion yesterday that the routing grid is defined in the tech lef for the PDK. For ASAP7 we have to look at the [generated tech lef in ORFS](https://github.com/The-OpenROAD-Project/asap7/issues/19#issuecomment-1115712485) which should be `OpenROAD-flow-scripts/flow/platforms/asap7/lef/asap7_tech_1x_201209.lef`:\r\n\r\n```\r\nLAYER M4\r\n  TYPE ROUTING ;\r\n  DIRECTION HORIZONTAL ;\r\n PITCH 0.048 ;\r\n WIDTH 0.024 ;\r\n SPACING 0.024 ;\r\n\r\n OFFSET 0.003 ;\r\n\r\n AREA 0.008 ;\r\n\r\n PROPERTY LEF58_SPACING \"\r\n SPACING 0.024 ENDOFLINE 0.025 WITHIN 0.04 ENDTOEND 0.04 ; \" ;\r\n\r\n PROPERTY LEF58_WIDTHTABLE\r\n \" WIDTHTABLE 0.024 0.12 0.216 0.312 0.408 ; \" ;\r\n\r\n PROPERTY LEF58_CORNERSPACING \"\r\n CORNERSPACING CONVEXCORNER CORNERONLY 0.048\r\n WIDTH 0.0 SPACING 0.04 ;\r\n \" ;\r\n\r\n PROPERTY LEF58_EOLKEEPOUT \"\r\n EOLKEEPOUT 0.025 EXTENSION 0.048 0.02425 0.048 CORNERONLY ;\r\n \" ;\r\n\r\n  # spacing table is required for the rule that has wide metal requires a 72nm (288 scaled)\r\n  # spacing between wide and minimum metals \r\n\r\n  SPACINGTABLE\r\n PARALLELRUNLENGTH 0.0\r\n WIDTH 0.0 0.024\r\n WIDTH 0.025 0.072 ;\r\n\r\n PROPERTY LEF58_RIGHTWAYONGRIDONLY \"\r\n      RIGHTWAYONGRIDONLY ;\r\n \" ;\r\n\r\n PROPERTY LEF58_RECTONLY \"\r\n      RECTONLY ;\r\n \" ;\r\n\r\nEND M4\r\n```\r\n\r\nFrom this we can indeed see that M4 is horizontal and M5 is vertical (not shown above but the definitions for M5 are below those for M4 in the file). We can also see that the pitch is `0.048` which lines up with the `-y_pitch` arg in the `make_tracks.tcl` code above, among other things. However, I'm also a bit confused at how to use this information.\r\n\r\nSome specific questions:\r\n\r\n - Where does `0.012` for the `-y_offset` arg in `make_tracks.tcl` come from? I would have assumed it would be `0.003` from the `OFFSET` in the tech lef.\r\n - How does offset/pitch relate to macro position? I would assume that the bottom-left of a macro is the origin (0, 0), and that if we respect `PITCH` and `OFFSET` from the tech lef above for IO y-positions (eg. `my_io_y = OFFSET + some_integer * PITCH`) we can then place that macro at a position which ensures those constraints are still respected (eg. `my_macro_y = some_integer * PITCH - OFFSET`). Is this correct?\r\n\r\n\"Bonus\" question: What's the difference between the 1x and 4x .lef files in the PDK?\r\n", "date": "2023-02-08T09:26:16Z"}, {"author": "maliberty", "role": "assistant", "message": "In the LEF you can see the preferred routing direction from:\r\n```\r\nLAYER M4\r\n  DIRECTION HORIZONTAL ;\r\n\r\nLAYER M5\r\n  DIRECTION VERTICAL ;\r\n```\r\n\r\nIf you look at M1 you'll see it has an offset of 0 which makes the first track unusable (a wire would be half outside the bounds if that track were used).  So in make_tracks it was setup to make the first track usable by using a 1/2 width offset.  Similarly the other layers need adjusting.  Its mostly a matter of style and either could have been used.   \r\n\r\nM2 has a track pattern too complex to express in the LEF format so make_tracks.tcl is required in any case.\r\n\r\nIf you place a macro a (0,0) the tracks should align since they would be built the way way.  Moving the macro by a multiple of the pitch should keep it aligned.  You would use the m4 pitch vertically and the m5 pitch horizontally.\r\n\r\nYou can check your work by turning on m4 & m5 visibility in the GUI, turning on the display of the preferred tracks and look at your pins to see that the tracks go through the center.", "date": "2023-02-08T12:17:53Z"}, {"author": "maliberty", "role": "assistant", "message": "Bonus: 1X and 4X can be ignored as OR is only using 1X.  The origin is that some academic users may not have the advanced node licenses for proprietary tools required to use a 7nm process.  The 4X library makes it appear like a 28nm library by making all dimensions 4X larger as a workaround.  Since OR has no licensing 4X is not required.", "date": "2023-02-08T12:21:48Z"}], "date": "2023-02-07T21:15:00Z", "category": "Query", "subcategory": "Macro placement", "Tool": "Initialize Floorplan"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2880", "id": 2880, "title": "estimate_parasitics -global_routing on a post-global_route design loaded via read_db", "author": "nayiri-k", "description": "Is it possible to run `estimate_parasitics -global_routing` on a post-global_route design that's been loaded via the `read_db` command? As in, `global_route` has been run on the design before it was saved with `write_db`, but `global_route` has not been run in this current OpenROAD session. I keep getting this error:\r\n\r\n```\r\n>>> read_db post_global_route\r\n>>> estimate_parasitics -global_routing\r\n[ERROR RSZ-0005] Run global_route before estimating parasitics for global routing.\r\n```", "content": [{"author": "nayiri-k", "role": "user", "message": "Is it possible to run `estimate_parasitics -global_routing` on a post-global_route design that's been loaded via the `read_db` command? As in, `global_route` has been run on the design before it was saved with `write_db`, but `global_route` has not been run in this current OpenROAD session. I keep getting this error:\r\n\r\n```\r\n>>> read_db post_global_route\r\n>>> estimate_parasitics -global_routing\r\n[ERROR RSZ-0005] Run global_route before estimating parasitics for global routing.\r\n```", "date": "2023-02-10T00:39:08Z"}, {"author": "maliberty", "role": "assistant", "message": "@eder-matheus I thought this was possible.  Please comment", "date": "2023-02-10T00:42:29Z"}, {"author": "maliberty", "role": "assistant", "message": "Are you using a very old version of OR for this?  The guides should be saved in the db.", "date": "2023-02-10T02:32:22Z"}, {"author": "maliberty", "role": "assistant", "message": "OR improves a lot over time so it is a good practice to test with a current version when you find a problem.", "date": "2023-02-10T05:31:49Z"}], "date": "2023-02-10T00:39:08Z", "category": "Runtime", "subcategory": "Global routing error", "Tool": "Parasitics Extraction"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2800", "id": 2800, "title": "[developer docs] Errors thrown in C++ test files?", "author": "cdleary", "description": "I presume for errors in C++ test code (e.g. fixtures and similar) it's ok to throw more \"bare\" errors (vs the scheme used with the logger and explicitly enumerated exceptions) -- that is, it's ok to throw a derived class from `std::runtime_error` if something goes wrong in test fixture scaffolding?\r\n\r\nIf so I'll update the developer docs with a small note, but I wanted to check this seemed ok.\r\n\r\nCC @maliberty ", "content": [{"author": "cdleary", "role": "user", "message": "I presume for errors in C++ test code (e.g. fixtures and similar) it's ok to throw more \"bare\" errors (vs the scheme used with the logger and explicitly enumerated exceptions) -- that is, it's ok to throw a derived class from `std::runtime_error` if something goes wrong in test fixture scaffolding?\r\n\r\nIf so I'll update the developer docs with a small note, but I wanted to check this seemed ok.\r\n\r\nCC @maliberty ", "date": "2023-01-20T22:08:22Z"}, {"author": "cdleary", "role": "assistant", "message": "(Or if non-exception-code is preferred in test code, that'd be fine too, just let me know what the preferred way to fatal-error-with-message would be.)", "date": "2023-01-20T22:10:17Z"}, {"author": "cdleary", "role": "assistant", "message": "(Or possibly we use logger with an error ID of 0 for a testing use cases like this?)\r\n\r\nApologies for the stream of conscious of possibilities. :-)", "date": "2023-01-20T22:17:10Z"}, {"author": "maliberty", "role": "assistant", "message": "What do you mean by \"explicitly enumerated exceptions\"?  In general I'm ok with your initial statement.", "date": "2023-01-21T02:06:33Z"}], "date": "2023-01-20T22:08:22Z", "category": "Query", "subcategory": "Best practices", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2754", "id": 2754, "title": "How can I find out where the routing congestion is?", "author": "oharboe", "description": "Any tips?\r\n\r\nI'm trying a larger version & different version of https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/743 and it fails in global routing.\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[WARNING GRT-0227] Reached 20 congestion iterations with less than 15% of reduction between iterations.\r\n[INFO GRT-0197] Via related to pin nodes: 1126254\r\n[INFO GRT-0198] Via related Steiner nodes: 39\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 2236520\r\n[INFO GRT-0112] Final usage 3D: 15578444\r\n[ERROR GRT-0118] Routing congestion too high. Check the congestion heatmap in the GUI.\r\nError: global_route.tcl, 19 GRT-0118\r\n```\r\n\r\nThe most recent .odb file to be written is 4_cts.odb, but when I load it and look at the routing congestion map, I don't see anything suspicious. Such arrays have a lot of routing to do, but the routing is simple conceptually: point to point between the array elements.\r\n\r\nI'm learning a few tricks with OpenROAD-flow-scripts:\r\n\r\n1. read documentation, if you can find it.\r\n2. read the OpenROAD-flow-scripts/flow/*.tcl script for the step. It is normally quite short. From here you can find out what reports are being saved and also what to search for in other examples.\r\n\r\n\r\nLooking at congestion.rpt, it is full of these. There's nothing in that area, just filler cells. Sometimes overflow is as high as 20.\r\n\r\n```\r\nviolation type: Horizontal congestion\r\n\tsrcs: \r\n\tcongestion information: capacity:16 usage:17 overflow:1\r\n\tbbox = ( 1544.4, 45.9 ) - ( 1544.94, 46.44) on Layer -\r\n```\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "Any tips?\r\n\r\nI'm trying a larger version & different version of https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/743 and it fails in global routing.\r\n\r\n```\r\n[INFO GRT-0101] Running extra iterations to remove overflow.\r\n[WARNING GRT-0227] Reached 20 congestion iterations with less than 15% of reduction between iterations.\r\n[INFO GRT-0197] Via related to pin nodes: 1126254\r\n[INFO GRT-0198] Via related Steiner nodes: 39\r\n[INFO GRT-0199] Via filling finished.\r\n[INFO GRT-0111] Final number of vias: 2236520\r\n[INFO GRT-0112] Final usage 3D: 15578444\r\n[ERROR GRT-0118] Routing congestion too high. Check the congestion heatmap in the GUI.\r\nError: global_route.tcl, 19 GRT-0118\r\n```\r\n\r\nThe most recent .odb file to be written is 4_cts.odb, but when I load it and look at the routing congestion map, I don't see anything suspicious. Such arrays have a lot of routing to do, but the routing is simple conceptually: point to point between the array elements.\r\n\r\nI'm learning a few tricks with OpenROAD-flow-scripts:\r\n\r\n1. read documentation, if you can find it.\r\n2. read the OpenROAD-flow-scripts/flow/*.tcl script for the step. It is normally quite short. From here you can find out what reports are being saved and also what to search for in other examples.\r\n\r\n\r\nLooking at congestion.rpt, it is full of these. There's nothing in that area, just filler cells. Sometimes overflow is as high as 20.\r\n\r\n```\r\nviolation type: Horizontal congestion\r\n\tsrcs: \r\n\tcongestion information: capacity:16 usage:17 overflow:1\r\n\tbbox = ( 1544.4, 45.9 ) - ( 1544.94, 46.44) on Layer -\r\n```\r\n\r\n", "date": "2023-01-14T17:52:45Z"}, {"author": "maliberty", "role": "assistant", "message": "The violations are related to routing congestion so they can occur over fill cells.  Do you not see congested areas in the heatmap?  I'm not sure what \"anything suspicious\" means.\r\n\r\nAlso you could play with the layer derates in grt.  Reducing them makes it more likely you'll get past grt but also more likely you'll have trouble in drt.  We set them more conservatively in the PDK.", "date": "2023-01-14T21:28:49Z"}, {"author": "maliberty", "role": "assistant", "message": "Something doesn't make sense.  It fails to route due to congestion but you don't see any in the congestion map.  If you load the congestion report in the drc viewer you should be able to see where the congestion is.", "date": "2023-01-14T22:45:22Z"}, {"author": "maliberty", "role": "assistant", "message": "Can you show a local image of the area?  If you click the underlined heat map you'll get an options dialog.  You can investigate on what layers/directions the congestion is happening in.", "date": "2023-01-15T01:54:48Z"}, {"author": "oharboe", "role": "assistant", "message": "I'm going to investigate something else... Could it be that the PDN is overlaying the pins at the top of the macro?\r\n\r\nHere the blue line (from PDN) is not overlaying the pins at the top of the macro.\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212607947-ac115c6b-dec6-47e2-87f1-17f8da092f63.png)\r\n\r\nThe vertical PDN lines go all the way to the top, but the horizontal not all the way to the right edge. That's an assymetry that I find puzzling.\r\n\r\nThe screenshot below is the upper right corner of the design I'm tinkering with:\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212608610-bb1d7d24-7eb3-4d7f-9a1d-6815b7689330.png)\r\n\r\nThe routing congestion heat map shows that there's a lot of routing at the top (orange). There's nothing there...\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212611152-9861946b-337e-43cb-9153-671785c873a8.png)\r\n\r\n", "date": "2023-01-16T06:06:17Z"}, {"author": "oharboe", "role": "assistant", "message": "I scaled down the design (fewer wires) and then I can see gui_route.\r\n\r\nAlthough there's only horizontal routes between the inner macro's right edge and the top level design's right edge, there's this spagetti just before the input/outputs on the right side...\r\n\r\nNo wonder this doesn't work if you scale up the number of wires.\r\n\r\nI wonder what is going on here...\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212673682-743d7cf8-fe27-435a-9982-f709a7e6ef42.png)\r\n\r\nzoom in:\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2798822/212674518-062cec9c-ab11-4eeb-92d1-2902cbd6419a.png)\r\n\r\n\r\n\r\n\r\n```\r\nset sdc_version 2.0\r\ncreate_clock [get_ports clock] -period 4000 -waveform {0 2000}\r\n\r\nset clk_name  clock\r\nset clk_port_name clock\r\nset clk_period 250\r\nset clk_io_pct 0.2\r\n\r\nset clk_port [get_ports $clk_port_name]\r\n\r\nset non_clock_inputs [lsearch -inline -all -not -exact [all_inputs] $clk_port]\r\n\r\nset_input_delay  [expr $clk_period * $clk_io_pct] -clock $clk_name $non_clock_inputs\r\nset_output_delay [expr $clk_period * $clk_io_pct] -clock $clk_name [all_outputs]\r\n\r\n```", "date": "2023-01-16T12:08:44Z"}, {"author": "oharboe", "role": "assistant", "message": "@rovinski @maliberty  I've polished up a test case https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/764. \r\n\r\nThis array is open source and big enough to exhibit the problems, though less pronounced, seen above that will appear as you go from from mock-array-big to a bigger version, yet it will build in a more reasonable amount of time.\r\n\r\nIn this pull request, I increase the datapath from 8 to 64 bits, at which point global routing fails: https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/774\r\n\r\n\r\n", "date": "2023-01-17T10:13:50Z"}, {"author": "maliberty", "role": "assistant", "message": "I looked at https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/pull/764.  I see a path like:\r\n![image](https://user-images.githubusercontent.com/761514/212960378-5042926e-b92f-4ea5-8493-1424c25f7294.png)\r\n\r\nThe input arrives at 50ps (20% of your 250ps clock period).   The capture clock path is at nearly 200ps with 44ps of hold from the liberty:\r\n```\r\n>>> report_checks -through hold2693/A -path_delay min -format full_clock_expanded\r\nStartpoint: io_insVertical_0_2[4] (input port clocked by clock)\r\nEndpoint: ces_2_7 (rising edge-triggered flip-flop clocked by clock)\r\nPath Group: clock\r\nPath Type: min\r\n\r\n  Delay    Time   Description\r\n---------------------------------------------------------\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock network delay (propagated)\r\n  50.00   50.00 ^ input external delay\r\n   0.00   50.00 ^ io_insVertical_0_2[4] (in)\r\n  10.10   60.10 ^ hold3918/Y (BUFx2_ASAP7_75t_R)\r\n  11.76   71.86 ^ hold2691/Y (BUFx2_ASAP7_75t_R)\r\n  11.77   83.63 ^ hold3919/Y (BUFx2_ASAP7_75t_R)\r\n  11.61   95.24 ^ hold1087/Y (BUFx2_ASAP7_75t_R)\r\n  11.64  106.88 ^ hold2692/Y (BUFx2_ASAP7_75t_R)\r\n  11.81  118.69 ^ hold245/Y (BUFx2_ASAP7_75t_R)\r\n  11.74  130.43 ^ hold2693/Y (BUFx2_ASAP7_75t_R)\r\n  11.65  142.08 ^ hold1088/Y (BUFx2_ASAP7_75t_R)\r\n  11.75  153.83 ^ hold2694/Y (BUFx2_ASAP7_75t_R)\r\n  11.95  165.78 ^ input149/Y (BUFx2_ASAP7_75t_R)\r\n  12.04  177.82 ^ hold2695/Y (BUFx2_ASAP7_75t_R)\r\n  12.02  189.84 ^ hold1089/Y (BUFx2_ASAP7_75t_R)\r\n  12.10  201.94 ^ hold2696/Y (BUFx2_ASAP7_75t_R)\r\n  12.11  214.05 ^ hold246/Y (BUFx2_ASAP7_75t_R)\r\n  12.07  226.12 ^ hold2697/Y (BUFx2_ASAP7_75t_R)\r\n  11.89  238.01 ^ hold1090/Y (BUFx2_ASAP7_75t_R)\r\n  12.17  250.19 ^ hold2698/Y (BUFx2_ASAP7_75t_R)\r\n   0.05  250.24 ^ ces_2_7/io_ins_1[4] (Element)\r\n         250.24   data arrival time\r\n\r\n   0.00    0.00   clock clock (rise edge)\r\n   0.00    0.00   clock source latency\r\n   0.00    0.00 ^ clock (in)\r\n  16.72   16.72 ^ wire1/Y (BUFx12f_ASAP7_75t_R)\r\n  74.94   91.66 ^ clkbuf_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  51.85  143.51 ^ clkbuf_2_1_0_clock/Y (BUFx4_ASAP7_75t_R)\r\n  44.16  187.67 ^ clkbuf_3_3__f_clock/Y (BUFx4_ASAP7_75t_R)\r\n   8.97  196.64 ^ ces_2_7/clock (Element)\r\n   0.00  196.64   clock reconvergence pessimism\r\n  44.22  240.86   library hold time\r\n         240.86   data required time\r\n---------------------------------------------------------\r\n         240.86   data required time\r\n        -250.24   data arrival time\r\n---------------------------------------------------------\r\n           9.39   slack (MET)\r\n```\r\n\r\nSo you'll need 200ps of hold buffering to make this pass.  BUFx2 is ~12ps so you need a good number to meet your hold constraint.  I don't see anything wrong here other than inputs that arrive quite early relative to the macro's requirements.\r\n\r\nThe clock path doesn't look unreasonable:\r\n![image](https://user-images.githubusercontent.com/761514/212962157-a2e3bc6e-911d-4243-a648-39f7e10343d2.png)\r\n", "date": "2023-01-17T16:55:02Z"}, {"author": "maliberty", "role": "assistant", "message": "The most forgiving would be to put no i/o timings at all aside from clock.  Then only paths internal to the block would be checked.  Another option would be to give different min/max timings where they are both forgiving.", "date": "2023-01-18T15:12:21Z"}], "date": "2023-01-14T17:52:45Z", "category": "Runtime", "subcategory": "Routing congestion", "Tool": "Global Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2342", "id": 2342, "title": "Apple clang 14.0.0 (Xcode 14.0.1) M1 coredumps compiling abc .c files", "author": "stefanottili", "description": "Hi Folks,\r\n\r\njust a heads up for anybody using an Apple M1 with the most recent Xcode 14.0.1\r\n\r\nApple clang 14.0.0 randomly coredumps compiling abc .c files. But not deterministically, restarting ./build_openroad.sh will eventually compile some of them til it finally always coredumps compiling extraUtilMisc.c.\r\n\r\nI was able to compile OpenROAD on this machine before, but not with the latest and greatest Xcode.\r\n\r\nI'm curious whether there are other M1/Xcode users out there with similar experience.\r\n\r\nStefan\r\n\r\ngmake[2]: Entering directory '/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n[  0%] Building CXX object third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o\r\ncd /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build/third-party/abc && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  -I/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -Wall -Wno-array-bounds -Wno-nonnull -Wno-unused-variable -Wno-unused-function -Wno-write-strings -Wno-sign-compare -Wno-deprecated -Wno-c++11-narrowing -Wno-register -Wno-format -Wno-reserved-user-defined-literal -DABC_USE_STDINT_H=1 -DABC_MEMALIGN=4 -DABC_NAMESPACE=abc -fpermissive -DABC_USE_CUDD=1 -DABC_USE_PTHREADS -Wno-unused-but-set-variable -std=c++17 -MD -MT third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -MF CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o.d -o CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -c /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src/misc/extra/extraUtilMisc.c\r\nclang: error: unable to execute command: Segmentation fault: 11\r\nclang: error: clang frontend command failed due to signal (use -v to see invocation)\r\nApple clang version 14.0.0 (clang-1400.0.29.102)\r\nTarget: arm64-apple-darwin21.6.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n", "content": [{"author": "stefanottili", "role": "user", "message": "Hi Folks,\r\n\r\njust a heads up for anybody using an Apple M1 with the most recent Xcode 14.0.1\r\n\r\nApple clang 14.0.0 randomly coredumps compiling abc .c files. But not deterministically, restarting ./build_openroad.sh will eventually compile some of them til it finally always coredumps compiling extraUtilMisc.c.\r\n\r\nI was able to compile OpenROAD on this machine before, but not with the latest and greatest Xcode.\r\n\r\nI'm curious whether there are other M1/Xcode users out there with similar experience.\r\n\r\nStefan\r\n\r\ngmake[2]: Entering directory '/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n[  0%] Building CXX object third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o\r\ncd /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/build/third-party/abc && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  -I/Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src -O3 -DNDEBUG -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -Wall -Wno-array-bounds -Wno-nonnull -Wno-unused-variable -Wno-unused-function -Wno-write-strings -Wno-sign-compare -Wno-deprecated -Wno-c++11-narrowing -Wno-register -Wno-format -Wno-reserved-user-defined-literal -DABC_USE_STDINT_H=1 -DABC_MEMALIGN=4 -DABC_NAMESPACE=abc -fpermissive -DABC_USE_CUDD=1 -DABC_USE_PTHREADS -Wno-unused-but-set-variable -std=c++17 -MD -MT third-party/abc/CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -MF CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o.d -o CMakeFiles/libabc.dir/src/misc/extra/extraUtilMisc.c.o -c /Users/user/OpenROAD-flow-scripts/tools/OpenROAD/third-party/abc/src/misc/extra/extraUtilMisc.c\r\nclang: error: unable to execute command: Segmentation fault: 11\r\nclang: error: clang frontend command failed due to signal (use -v to see invocation)\r\nApple clang version 14.0.0 (clang-1400.0.29.102)\r\nTarget: arm64-apple-darwin21.6.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n", "date": "2022-10-07T18:03:01Z"}, {"author": "stefanottili", "role": "assistant", "message": "downgrading the command line tools to 13.4 allows to build the project", "date": "2022-10-12T03:33:06Z"}, {"author": "stefanottili", "role": "assistant", "message": "Here's some feedback from https://developer.apple.com/forums/thread/717259\r\n\r\n> It only happens with optimized code. An alternative workaround for building openroad is to patch the abc cmake file to include -g\r\n\r\nthird-party/CMakeLists.txt @@ -46,6 +46,10 @@ if (NOT USE_SYSTEM_ABC)\r\nreadline is not needed since we call abc from c++\r\nset(READLINE_FOUND FALSE)\r\n+# apple clang 14.0.0 seg faults on abc without -g +add_compile_options(\r\n$<$<CXX_COMPILER_ID:AppleClang>:-g>\r\n+) add_subdirectory(abc)\r\nendif()", "date": "2022-10-31T17:35:54Z"}, {"author": "stefanottili", "role": "assistant", "message": "clang-1400.0.29.202 as part of Xcode 14.1.0 compiles OpenRoad without issues", "date": "2023-01-12T16:14:47Z"}], "date": "2022-10-07T18:03:01Z", "category": "Build", "subcategory": "Compiler crash", "Tool": "ABC"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2679", "id": 2679, "title": "How can I run the OpenROAD GUI on Ubuntu locally and not in Docker?", "author": "oharboe", "description": "How can I install and run the OpenROAD GUI locally?\r\n\r\nI want the advantages of Docker, not having to install everything, easy to deploy upgrades, but when I run the OpenROAD GUI from docker, the experience is pretty good, but not quite as good as running locally on Ubuntu.\r\n\r\nAnother problem is that the OpenROAD-flow-scripts sets up a TON of environment variables, even if I had OpenROAD GUI installed locally, how could I get the envioronment set up correctly as I build various designs?\r\n\r\nExample of how I run the OpenROAD GUI in Docker. To run my own designs, I map results, log, objects, designs to my local drive by modifying the script in the github issue below.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/issues/2675#issue-1513733033\r\n\r\n\r\nIdeally I'd like a debian package for the OpenROAD GUI. It seems like it should be possible to host a debian package on github, but it is a bit of work, especially considering that it probably needs to be built nightly to be truely useful in the open soruce development process: https://assafmo.github.io/2019/05/02/ppa-repo-hosted-on-github.html\r\n\r\n", "content": [{"author": "oharboe", "role": "user", "message": "How can I install and run the OpenROAD GUI locally?\r\n\r\nI want the advantages of Docker, not having to install everything, easy to deploy upgrades, but when I run the OpenROAD GUI from docker, the experience is pretty good, but not quite as good as running locally on Ubuntu.\r\n\r\nAnother problem is that the OpenROAD-flow-scripts sets up a TON of environment variables, even if I had OpenROAD GUI installed locally, how could I get the envioronment set up correctly as I build various designs?\r\n\r\nExample of how I run the OpenROAD GUI in Docker. To run my own designs, I map results, log, objects, designs to my local drive by modifying the script in the github issue below.\r\n\r\nhttps://github.com/The-OpenROAD-Project/OpenROAD/issues/2675#issue-1513733033\r\n\r\n\r\nIdeally I'd like a debian package for the OpenROAD GUI. It seems like it should be possible to host a debian package on github, but it is a bit of work, especially considering that it probably needs to be built nightly to be truely useful in the open soruce development process: https://assafmo.github.io/2019/05/02/ppa-repo-hosted-on-github.html\r\n\r\n", "date": "2022-12-30T08:11:46Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Creating a snap package in the CI might be a good option https://ubuntu.com/tutorials/create-your-first-snap#1-overview", "date": "2022-12-30T08:29:00Z"}, {"author": "maliberty", "role": "assistant", "message": "You would run the [dependency installer](https://github.com/The-OpenROAD-Project/OpenROAD/blob/master/etc/DependencyInstaller.sh) and then compiler OR locally  (build_openroad.sh --local).\r\n\r\nI'm surprised using docker makes much of a difference for the GUI.  What do you see?\r\n\r\nYou can always mount your directory in docker so envars shouldn't be a big issue.", "date": "2022-12-30T19:05:17Z"}, {"author": "mithro", "role": "assistant", "message": "Have you tried the conda packages?", "date": "2022-12-30T22:30:48Z"}], "date": "2022-12-30T08:11:46Z", "category": "Installation", "subcategory": "Local installation", "Tool": "Graphical User Interface"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2445", "id": 2445, "title": "rtl-mp", "author": "bittnada", "description": "Hello,\r\n\r\nI am trying to do floorplanning with OpenROAD with ISPD benchmark superblue16, but I am struggling with so many problems.\r\nI am quite new to this filed, so my knowledge for this filed is not high enough.\r\nI uploaded .lef, .def. and .v field given by ISPD and tried to do floorplan, but  this error line \"LEF MASTER ~CELL HAS NO LIBERTY CELL\" appeared and does not work at all. \r\nI am glad if anyone has any idea about this error and how to work with this kind of open bench mark.\r\n\r\nThanks", "content": [{"author": "bittnada", "role": "user", "message": "Hello,\r\n\r\nI am trying to do floorplanning with OpenROAD with ISPD benchmark superblue16, but I am struggling with so many problems.\r\nI am quite new to this filed, so my knowledge for this filed is not high enough.\r\nI uploaded .lef, .def. and .v field given by ISPD and tried to do floorplan, but  this error line \"LEF MASTER ~CELL HAS NO LIBERTY CELL\" appeared and does not work at all. \r\nI am glad if anyone has any idea about this error and how to work with this kind of open bench mark.\r\n\r\nThanks", "date": "2022-11-02T10:18:12Z"}, {"author": "maliberty", "role": "assistant", "message": "I don't see any uploaded files.  Based on the message you have a cell called \"~CELL\" that exists in LEF but for which you have no .lib.", "date": "2022-11-02T11:22:13Z"}, {"author": "bittnada", "role": "assistant", "message": "Thanks to all of you\r\nI followed the order of commands that @QuantamHD  recommended and it worked although LEF file seems to have some syntax errors.\r\nGlobal placement (GPL) worked well, so I am very happy with this result. As @rovinski mentioned, global placement also worked without importing .lib file. Regarding with global placement, I have none of problem. I appreciate to all of you.\r\n\r\nI am also trying to run floorplanning with openroad as I want to follow the paper (https://vlsicad.ucsd.edu/Publications/Conferences/389/c389.pdf), embedded in the floorplan machine for openroad.\r\n\r\nAlthough the ISPD contest porblem is provided as \"floorplan\" finished, I want to re-floorplan with openroad and\r\ncompare the results between openroad and as it is given. \r\n\r\nI tried the commands as shown below,\r\n```\r\nread_verilog superblue16.v\r\nread_lef tech.lef\r\nread_lef superblue16.lef\r\nread_lib superblue16_Early.lib\r\nlink_design superblue16\r\nwrite_def superblue16.def\r\nread_def superblue16.def -floorplan_initialize\r\npartition_design -max_num_inst 1000 -min_num_inst 200 -max_num_macro 1 -min_num_macro 0 -net_threshold 0 -virtual_weight 500 -report_directory . -report_file report\r\n```\r\nAm I on the right track?\r\n\r\n", "date": "2022-11-03T06:46:16Z"}], "date": "2022-11-02T10:18:12Z", "category": "Runtime", "subcategory": "Error during execution", "Tool": "TritonPart"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2442", "id": 2442, "title": "Unable to find image 'openroad/flow-scripts:latest' locally", "author": "heaton56", "description": "After install, trying to run the docker I get the following. ny ideas?\r\n\r\nUnable to find image 'openroad/flow-scripts:latest' locally\r\ndocker: Error response from daemon: pull access denied for openroad/flow-scripts, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.", "content": [{"author": "heaton56", "role": "user", "message": "After install, trying to run the docker I get the following. ny ideas?\r\n\r\nUnable to find image 'openroad/flow-scripts:latest' locally\r\ndocker: Error response from daemon: pull access denied for openroad/flow-scripts, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.", "date": "2022-11-02T04:06:19Z"}, {"author": "maliberty", "role": "assistant", "message": "How did you 'install' it?  What command did you run that gave this message?", "date": "2022-11-02T08:44:52Z"}, {"author": "heaton56", "role": "assistant", "message": "Thanks for you response, but I decided to do a local install of OpenROAD-flow-scripts instead, since I would have a learning curve with docker. \r\n\r\n", "date": "2022-11-02T22:49:22Z"}], "date": "2022-11-02T04:06:19Z", "category": "Configuration", "subcategory": "Docker setup issue", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2330", "id": 2330, "title": "Compilation Error", "author": "gudeh", "description": "Hey guys! I am getting the following compilation error:\r\n\r\n> [100%] Linking CXX executable openroad\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/openroad.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG  -Wl,--export-dynamic -rdynamic CMakeFiles/openroad.dir/Design.cc.o CMakeFiles/openroad.dir/Tech.cc.o CMakeFiles/openroad.dir/OpenRoad.cc.o CMakeFiles/openroad.dir/Main.cc.o  -o openroad ifp/src/ifp.a openroad_swig.a gpl/gpl.a dpl/dpl.a dpo/dpo.a fin/fin.a rsz/src/rsz.a ppl/ppl.a stt/stt.a dbSta/src/dbSta.a ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/swig/tcl/odbtcl.a rcx/src/rcx.a rmp/src/rmp.a cts/src/cts.a grt/grt.a tap/src/tap.a gui/gui.a drt/drt.a dst/dst.a mpl/mpl.a mpl2/mpl2.a psm/src/psm.a ant/src/ant.a par/par.a utl/utl.a pdn/src/pdn.a ../third-party/abc/libabc.a /usr/lib/x86_64-linux-gnu/libtcl.so -lpthread /usr/lib/x86_64-linux-gnu/libtclreadline.so /usr/lib/x86_64-linux-gnu/libz.so _openroad_swig_py.a odb/src/swig/python/_odbpy.a ifp/src/_ifp_py.a /usr/lib/x86_64-linux-gnu/librt.so ppl/src/munkres/libMunkres.a -lm -ldl -lrt rsz/src/rsz.a grt/grt.a ant/src/ant.a grt/grt.a ant/src/ant.a dpl/dpl.a grt/src/fastroute/libFastRoute4.1.a stt/stt.a sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a mpl/src/ParquetFP/libParquetFP.a par/src/MLPart/libMLPart.a dbSta/src/dbSta.a gui/gui.a /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/defout/libdefout.a odb/src/lefout/liblefout.a odb/src/tm/libtm.a /usr/lib/x86_64-linux-gnu/libtcl.so odb/src/cdl/libcdl.a odb/src/swig/common/libodb_swig_common.a odb/src/defin/libdefin.a odb/src/def/libdef.a odb/src/def/libdefzlib.a odb/src/lefin/liblefin.a odb/src/zutil/libzutil.a utl/utl.a /usr/local/lib/libspdlog.a -lpthread odb/src/lef/liblef.a odb/src/lef/liblefzlib.a /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libpython3.8.so \r\n> /usr/bin/ld: drt/drt.a(TritonRoute.cpp.o): in function \\`boost::archive::basic_binary_iarchive<fr::frIArchive>::init()':\r\n> TritonRoute.cpp:(.text._ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv[_ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv]+0xc4): undefined reference to `boost::archive::detail::basic_iarchive::set_library_version(boost::archive::library_version_type)'\r\n> collect2: error: ld returned 1 exit status\r\n> make[2]: *** [src/CMakeFiles/openroad.dir/build.make:210: src/openroad] Error 1\r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make[1]: *** [CMakeFiles/Makefile2:449: src/CMakeFiles/openroad.dir/all] Error 2\r\n> make[1]: *** Waiting for unfinished jobs....\r\n> [100%] Linking CXX executable trTest\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src/drt && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/trTest.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG   CMakeFiles/trTest.dir/test/gcTest.cpp.o CMakeFiles/trTest.dir/test/fixture.cpp.o CMakeFiles/trTest.dir/test/stubs.cpp.o CMakeFiles/trTest.dir/__/gui/src/stub.cpp.o  -o trTest drt.a ../odb/src/db/libodb.a ../stt/stt.a ../dst/dst.a ../sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a ../dbSta/src/dbSta.a ../gui/gui.a ../odb/src/db/libodb.a ../odb/src/cdl/libcdl.a ../odb/src/defin/libdefin.a ../odb/src/def/libdef.a ../odb/src/def/libdefzlib.a ../odb/src/defout/libdefout.a ../odb/src/lefin/liblefin.a ../odb/src/lef/liblef.a ../odb/src/lef/liblefzlib.a ../odb/src/lefout/liblefout.a ../odb/src/tm/libtm.a ../odb/src/zutil/libzutil.a /usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../../src/sta/app/libOpenSTA.a ../utl/utl.a /usr/local/lib/libspdlog.a -lpthread /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a /usr/lib/x86_64-linux-gnu/libz.so \r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> [100%] Built target trTest\r\n> make[1]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make: *** [Makefile:133: all] Error 2\r\n\r\nThe error I pasted here is from a clean clone from the flow repository. I did the following commands to get to this error:\r\n\r\n> git clone --recursive https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts\r\n> cd OpenROAD-flow-scripts\r\n> sudo ./tools/OpenROAD/etc/DependencyInstaller.sh -dev\r\n> ./build_openroad.sh --local\r\n\r\nI noticed that if I run DepdencyInstaller multiple times it actually updates and compile Boost everytime. Not sure how to proceed, any help is welcome.", "content": [{"author": "gudeh", "role": "user", "message": "Hey guys! I am getting the following compilation error:\r\n\r\n> [100%] Linking CXX executable openroad\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/openroad.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG  -Wl,--export-dynamic -rdynamic CMakeFiles/openroad.dir/Design.cc.o CMakeFiles/openroad.dir/Tech.cc.o CMakeFiles/openroad.dir/OpenRoad.cc.o CMakeFiles/openroad.dir/Main.cc.o  -o openroad ifp/src/ifp.a openroad_swig.a gpl/gpl.a dpl/dpl.a dpo/dpo.a fin/fin.a rsz/src/rsz.a ppl/ppl.a stt/stt.a dbSta/src/dbSta.a ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/swig/tcl/odbtcl.a rcx/src/rcx.a rmp/src/rmp.a cts/src/cts.a grt/grt.a tap/src/tap.a gui/gui.a drt/drt.a dst/dst.a mpl/mpl.a mpl2/mpl2.a psm/src/psm.a ant/src/ant.a par/par.a utl/utl.a pdn/src/pdn.a ../third-party/abc/libabc.a /usr/lib/x86_64-linux-gnu/libtcl.so -lpthread /usr/lib/x86_64-linux-gnu/libtclreadline.so /usr/lib/x86_64-linux-gnu/libz.so _openroad_swig_py.a odb/src/swig/python/_odbpy.a ifp/src/_ifp_py.a /usr/lib/x86_64-linux-gnu/librt.so ppl/src/munkres/libMunkres.a -lm -ldl -lrt rsz/src/rsz.a grt/grt.a ant/src/ant.a grt/grt.a ant/src/ant.a dpl/dpl.a grt/src/fastroute/libFastRoute4.1.a stt/stt.a sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a mpl/src/ParquetFP/libParquetFP.a par/src/MLPart/libMLPart.a dbSta/src/dbSta.a gui/gui.a /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../src/sta/app/libOpenSTA.a odb/src/db/libodb.a odb/src/defout/libdefout.a odb/src/lefout/liblefout.a odb/src/tm/libtm.a /usr/lib/x86_64-linux-gnu/libtcl.so odb/src/cdl/libcdl.a odb/src/swig/common/libodb_swig_common.a odb/src/defin/libdefin.a odb/src/def/libdef.a odb/src/def/libdefzlib.a odb/src/lefin/liblefin.a odb/src/zutil/libzutil.a utl/utl.a /usr/local/lib/libspdlog.a -lpthread odb/src/lef/liblef.a odb/src/lef/liblefzlib.a /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libpython3.8.so \r\n> /usr/bin/ld: drt/drt.a(TritonRoute.cpp.o): in function \\`boost::archive::basic_binary_iarchive<fr::frIArchive>::init()':\r\n> TritonRoute.cpp:(.text._ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv[_ZN5boost7archive21basic_binary_iarchiveIN2fr10frIArchiveEE4initEv]+0xc4): undefined reference to `boost::archive::detail::basic_iarchive::set_library_version(boost::archive::library_version_type)'\r\n> collect2: error: ld returned 1 exit status\r\n> make[2]: *** [src/CMakeFiles/openroad.dir/build.make:210: src/openroad] Error 1\r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make[1]: *** [CMakeFiles/Makefile2:449: src/CMakeFiles/openroad.dir/all] Error 2\r\n> make[1]: *** Waiting for unfinished jobs....\r\n> [100%] Linking CXX executable trTest\r\n> cd /home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build/src/drt && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/trTest.dir/link.txt --verbose=1\r\n> /usr/bin/c++  -O3 -DNDEBUG   CMakeFiles/trTest.dir/test/gcTest.cpp.o CMakeFiles/trTest.dir/test/fixture.cpp.o CMakeFiles/trTest.dir/test/stubs.cpp.o CMakeFiles/trTest.dir/__/gui/src/stub.cpp.o  -o trTest drt.a ../odb/src/db/libodb.a ../stt/stt.a ../dst/dst.a ../sta/sta_swig.a /usr/local/lib/libboost_serialization.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a ../dbSta/src/dbSta.a ../gui/gui.a ../odb/src/db/libodb.a ../odb/src/cdl/libcdl.a ../odb/src/defin/libdefin.a ../odb/src/def/libdef.a ../odb/src/def/libdefzlib.a ../odb/src/defout/libdefout.a ../odb/src/lefin/liblefin.a ../odb/src/lef/liblef.a ../odb/src/lef/liblefzlib.a ../odb/src/lefout/liblefout.a ../odb/src/tm/libtm.a ../odb/src/zutil/libzutil.a /usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.12.8 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.12.8 ../../../src/sta/app/libOpenSTA.a ../utl/utl.a /usr/local/lib/libspdlog.a -lpthread /usr/lib/gcc/x86_64-linux-gnu/9/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libboost_serialization.a /usr/lib/x86_64-linux-gnu/libz.so \r\n> make[2]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> [100%] Built target trTest\r\n> make[1]: Leaving directory '/home/gudeh/Documents/OpenROAD-flow-scripts/tools/OpenROAD/build'\r\n> make: *** [Makefile:133: all] Error 2\r\n\r\nThe error I pasted here is from a clean clone from the flow repository. I did the following commands to get to this error:\r\n\r\n> git clone --recursive https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts\r\n> cd OpenROAD-flow-scripts\r\n> sudo ./tools/OpenROAD/etc/DependencyInstaller.sh -dev\r\n> ./build_openroad.sh --local\r\n\r\nI noticed that if I run DepdencyInstaller multiple times it actually updates and compile Boost everytime. Not sure how to proceed, any help is welcome.", "date": "2022-10-04T23:34:22Z"}, {"author": "maliberty", "role": "assistant", "message": "What OS and what compiler?", "date": "2022-10-05T05:59:50Z"}, {"author": "maliberty", "role": "assistant", "message": "The log unfortunately doesn't have the boost version so I just added print that in the OR master branch.  What version of boost do you have installed?", "date": "2022-10-05T16:09:14Z"}, {"author": "gudeh", "role": "assistant", "message": "Hi everyone, I was able to solve the issue by manually updating Boost. I used the links from [this stackoverflow page](https://stackoverflow.com/questions/2829523/upgrading-boost-version) and set the \"-prefix=\" with the same location my Boost was already installed. Also, I had to clean my previous build from OR.\r\n\r\nIt seems that for some reason the DependencyInstaller didn't fetch the correct Boost version to upgrade to.", "date": "2022-10-08T17:00:16Z"}, {"author": "maliberty", "role": "assistant", "message": "@vvbandeira any idea about \" for some reason the DependencyInstaller didn't fetch the correct Boost version to upgrade to.\"?", "date": "2022-10-08T17:28:00Z"}], "date": "2022-10-04T23:34:22Z", "category": "Build", "subcategory": "Compilation error", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/2083", "id": 2083, "title": "How to contribute?", "author": "niv280", "description": "Hi, There is any way to contribute to the openRoad project?", "content": [{"author": "niv280", "role": "user", "message": "Hi, There is any way to contribute to the openRoad project?", "date": "2022-07-22T15:27:26Z"}, {"author": "QuantamHD", "role": "assistant", "message": "They accepted code changes through PRs.\r\n\r\nIs there something you are interested in working on? ", "date": "2022-07-22T15:32:58Z"}, {"author": "maliberty", "role": "assistant", "message": "We are glad to have contributors.  Do you want some suggestions or do you have something in mind?", "date": "2022-07-22T15:55:33Z"}, {"author": "maliberty", "role": "assistant", "message": "To help narrow it a bit are you more interested in development, testing, documentation, outreach?  If you are willing to share a bit about yourself it would help to find a task of appropriate complexity.\r\n\r\nOn the development side one idea that comes to mind is to improve write_abstract_lef written by @QuantamHD to give more precise obstructions.  I can describe that further if it is of interest.", "date": "2022-07-23T14:41:23Z"}, {"author": "maliberty", "role": "assistant", "message": "The LEF abstract is a physical model of a block that is intended to be used at a higher level in the hierarchy to model the interface and obstructions in the block.  The current code starts from https://github.com/The-OpenROAD-Project/OpenROAD/blob/c4a8479c341c31fd0db26a17f4a909f59285cf58/src/odb/src/lefout/lefout.cpp#L1213\r\n\r\nThe current code is rather simplistic in its modeling of obstructions.  If you look at lefout::getTechLayerObstructions it just gathers a set of layers that have any shapes on them and then blocks the entire layer.\r\n\r\nI think it would be better to use Boost polygon to OR together the shapes on each layer; do a bloat then shrink cycle to merge them into simpler shapes and then write out the result as the layer obstruction.  The amount of bloating could be a user control with a reasonable default (say 2*pitch). \r\n\r\nThe goal is to balance model size with precision.   Does this make sense?  I can go into more detail where needed.", "date": "2022-07-23T18:45:40Z"}, {"author": "stefanottili", "role": "assistant", "message": "Please keep in mind that there are two types of abstracts used by $$$ tools. The \u201ccutout\u201d where obstructions are cut out around pins and the \u201ccover everything\u201d where the pins are at the edges and the block is completely covered with obstruction. For the latter to work, the router has to be smart enough to route to covered pins and drc has to know that covered pins on the edge are ok too. It\u2019s good practice to have pins on the edge of blocks anyways.", "date": "2022-07-24T23:13:01Z"}, {"author": "maliberty", "role": "assistant", "message": "You can see gcd_abstract* in https://github.com/The-OpenROAD-Project/OpenROAD/tree/master/src/odb/test for two examples.  \r\n\r\nThe idea of the bloat/shrink cycle is to merge nearby shapes.  I've tried to quickly illustrate it with:\r\n![image](https://user-images.githubusercontent.com/761514/180689779-273f4b34-d299-4251-a372-10437d7c246a.png)\r\n\r\nYou can learn about Boost polygon at https://www.boost.org/doc/libs/1_79_0/libs/polygon/doc/index.htm  (the docs aren't great).", "date": "2022-07-25T03:04:24Z"}, {"author": "maliberty", "role": "assistant", "message": "The red boxes in the middle image merge together into a single polygon", "date": "2022-07-25T03:06:22Z"}, {"author": "niv280", "role": "assistant", "message": "Hi, I will love to get some help in 2 issues.\r\nFirst I will need to import to boost::polygon library, in which file can I do it? Do other part of the code already import it?\r\n\r\nSecond, I having trouble to understand how can I test my change, I gather all the shapes into kind of list and I now write it into the lef file instead the whole block boundary bbox, but I probably got some mistake so I want to run some test to debug it.\r\nThere is any tutorial how can I do it? ", "date": "2022-07-29T14:35:08Z"}, {"author": "niv280", "role": "assistant", "message": "Hi, So I make some progress with the abstract lef.\r\nBut I encounter on some problem that I would like to get some help.\r\n\r\nSo I modify the abstract lef that in order to write the merge between all the rect that intersect ( after bloat ).\r\nTo demonstrate it I edit the picture from above:\r\n \r\n![image](https://user-images.githubusercontent.com/61157132/186626392-73d8ee81-e11e-4ba1-8e75-b7668e319b47.png)\r\n\r\nThe green rect is currently my OBS which isn't very efficient, but i didn't found any easy way to do it with the utils in the rect class.\r\n\r\nSo I am guessing that I need to go back to your first suggestion which is use boost polygon to OR all the rect, my problem is that is after that I will need to convert it back into different rects, there is any easy way to do that?\r\n\r\n", "date": "2022-08-25T09:20:27Z"}, {"author": "stefanottili", "role": "assistant", "message": "https://www.boost.org/doc/libs/1_79_0/libs/polygon/doc/gtl_polygon_90_set_concept.htm\n\nHave a look at get_rectangles and get_max_rectangles\n\nOn Aug 25, 2022, at 02:20, niv280 ***@***.***> wrote:\n\n\ufeff\nHi, So I make some progress with the abstract lef.\nBut I encounter on some problem that I would like to get some help.\n\nSo I modify the abstract lef that contained the merge between all the rect that intersect.\nTo demonstrate I edit the picture above:\n\n\n\nThe green rect is currently my OBS which isn't very efficient, but i didn't found any easy way to do it with the utils in the rect class.\nSo I am guessing that I need to go back to your first suggestion which is use boost polygon to OR all the rect, my problem is that is after that I will need to convert is back into different rects, there is any easy way to do that?\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you commented.", "date": "2022-08-25T11:53:53Z"}, {"author": "maliberty", "role": "assistant", "message": "get_rectangles  would be the better choice as get_max_rectangles may produce overlapping rectangles.  You an experiment with the slicing direction to see what produces a more minimal result.  My guess is the non-preferred routing direction will work best.", "date": "2022-08-25T15:30:22Z"}], "date": "2022-07-22T15:27:26Z", "category": "Query", "subcategory": "Contribution inquiry", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1951", "id": 1951, "title": "Is it possible to generate a static binary of OpenROAD?", "author": "TiagoAFontana", "description": "Hi all, I am trying to execute the OpenROAD in a cluster machine. However, in this machine, I am not able to install the dependencies to compile the OpenROAD or even use the docker image to run the OpenROAD.\r\n\r\nI was wondering if it is possible to set a cmake flag to generate a static binary (without any dependencies) for the OpenROAD project. With this, I will be able to run this binary on every machine that I need.\r\n\r\nDoes someone know how to do this? ", "content": [{"author": "TiagoAFontana", "role": "user", "message": "Hi all, I am trying to execute the OpenROAD in a cluster machine. However, in this machine, I am not able to install the dependencies to compile the OpenROAD or even use the docker image to run the OpenROAD.\r\n\r\nI was wondering if it is possible to set a cmake flag to generate a static binary (without any dependencies) for the OpenROAD project. With this, I will be able to run this binary on every machine that I need.\r\n\r\nDoes someone know how to do this? ", "date": "2022-06-09T19:33:11Z"}, {"author": "vijayank88", "role": "assistant", "message": "@vvbandeira  Any suggestion?", "date": "2022-06-24T10:07:30Z"}, {"author": "QuantamHD", "role": "assistant", "message": "Bazel rules hdl supports fully static builds of openroad.\r\n\r\nJust download bazel, git clone https://github.com/hdl/bazel_rules_hdl\r\n\r\nAnd run bazel build @org_theopenroadproject//:openroad in the git repo. \r\n\r\nIt also statically builds the entire dependency chain of openroad from source.", "date": "2022-06-26T07:19:45Z"}], "date": "2022-06-09T19:33:11Z", "category": "Build", "subcategory": "Static binary generation", "Tool": "Not Applicable"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1870", "id": 1870, "title": "Does detail router support spacing between different cut layers?", "author": "davidcarails", "description": "I have seen an example of a via/cut spacing rule between different layers.\r\nFor example : v4 space v5  >= 38\r\nCan/does the detailed router support this?", "content": [{"author": "davidcarails", "role": "user", "message": "I have seen an example of a via/cut spacing rule between different layers.\r\nFor example : v4 space v5  >= 38\r\nCan/does the detailed router support this?", "date": "2022-05-17T10:48:08Z"}, {"author": "maliberty", "role": "assistant", "message": "Its helpful to ask about a specific LEF rule but yes it does support cut spacing between layers.", "date": "2022-05-17T15:18:27Z"}, {"author": "maliberty", "role": "assistant", "message": "![image](https://user-images.githubusercontent.com/761514/169117659-453ea3a8-10cb-4794-bb41-16558182e3f8.png)\r\n", "date": "2022-05-18T18:25:06Z"}], "date": "2022-05-17T10:48:08Z", "category": "Query", "subcategory": "Tool capability", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1871", "id": 1871, "title": "Support for MEOL layer?", "author": "GuzTech", "description": "Hello everyone!\r\n\r\nI'm in the process of bringing up a new platform which is going well. I am running into a problem with a local interconnect layer which is specified as a `MASTERSLICE` with `LEF58_TYPE` = `MEOL`, so it is not specified as a `ROUTING` layer as is the case with the sky130 PDK. OpenDB complains that there is a parse mismatch for this `lil` layer.\r\n\r\nIf I add this `lil` layer as a routing layer to `make_tracks.tcl` then OpenDB complains that it is not a routing layer. If I don't add `lil` as a routing layer, then TritonRoute gives an error that it cannot find layer `lil` for viarule that connects `lil` to the first metal layer.\r\n\r\nDid anyone else run into a similar problem? If so, how did you solve it?", "content": [{"author": "GuzTech", "role": "user", "message": "Hello everyone!\r\n\r\nI'm in the process of bringing up a new platform which is going well. I am running into a problem with a local interconnect layer which is specified as a `MASTERSLICE` with `LEF58_TYPE` = `MEOL`, so it is not specified as a `ROUTING` layer as is the case with the sky130 PDK. OpenDB complains that there is a parse mismatch for this `lil` layer.\r\n\r\nIf I add this `lil` layer as a routing layer to `make_tracks.tcl` then OpenDB complains that it is not a routing layer. If I don't add `lil` as a routing layer, then TritonRoute gives an error that it cannot find layer `lil` for viarule that connects `lil` to the first metal layer.\r\n\r\nDid anyone else run into a similar problem? If so, how did you solve it?", "date": "2022-05-17T11:56:24Z"}, {"author": "maliberty", "role": "assistant", "message": "Please include the odb message.  You should not add tracks if it is not a routing layer.", "date": "2022-05-17T15:19:41Z"}, {"author": "maliberty", "role": "assistant", "message": "We need to add support for MEOL.  You can workaround it my making it a masterslice layer temporarily.", "date": "2022-05-17T22:07:26Z"}], "date": "2022-05-17T11:56:24Z", "category": "Feature Request", "subcategory": "Add MEOL layer support", "Tool": "OpenDB"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1732", "id": 1732, "title": "Can the grid/clips in the TritonRoute be exported?", "author": "Mohamed-Mejri", "description": "Hello, \r\nI would like to know if the grid can be exported after the processing of the global router output and/or the TA step.\r\n\r\nI'm planning on trying some other AI based approaches instead of Heuristics. And if I can export the grid or the clips it would be more helpful.\r\n\r\nAny idea/help will be much appreciated!", "content": [{"author": "Mohamed-Mejri", "role": "user", "message": "Hello, \r\nI would like to know if the grid can be exported after the processing of the global router output and/or the TA step.\r\n\r\nI'm planning on trying some other AI based approaches instead of Heuristics. And if I can export the grid or the clips it would be more helpful.\r\n\r\nAny idea/help will be much appreciated!", "date": "2022-03-30T16:28:54Z"}, {"author": "maliberty", "role": "assistant", "message": "Do you mean the gcell grid?  There are messages\r\n\r\n\"GCELLGRID X {} DO {} STEP {} ;\",\r\n\"GCELLGRID Y {} DO {} STEP {} ;\",\r\n\r\nthat will give you those values.  They don't change during drt.", "date": "2022-03-30T17:37:01Z"}, {"author": "maliberty", "role": "assistant", "message": "The post-processed guides are generated as output_guide.mod in ORFS (controlled by -output_guide).   Other internal state of the router is not exported today.", "date": "2022-03-31T20:16:18Z"}, {"author": "maliberty", "role": "assistant", "message": "Its the same guide format as the input guide file", "date": "2022-04-01T15:40:48Z"}, {"author": "Mohamed-Mejri", "role": "assistant", "message": "Hello again,\r\nI would like to get the access points to each pin in a net and I saw [this on another discussion](https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625?sort=new#discussioncomment-636424), however, when I tried it the coordinates didn't make sense.\r\nFor example when I try it on the nangate45 gcd, for the _000_ net we have:  `_000_ ( _672_ D ) ( _504_ ZN ) + USE SIGNAL`\r\nand the components in the net are  `_672_ DFF_X2 + PLACED ( 107540 145600 ) N ;`  and `_504_ OAI21_X1 + PLACED ( 107540 148400 ) FS ;`\r\nand this is the output of the code\r\nnet _000_ \r\n( 46930 141260 ) layerNum 2 metal1 \r\n( 46930 141120 ) layerNum 2 metal1\r\n( 46740 141260 ) layerNum 2 metal1\r\n( 51490 146580 ) layerNum 2 metal1\r\n( 51490 146860 ) layerNum 2 metal1\r\n( 51490 147140 ) layerNum 2 metal1\r\n( 51490 147420 ) layerNum 2 metal1\r\n( 50730 147420 ) layerNum 2 metal1\r\n( 51870 147420 ) layerNum 2 metal1\r\n( 51870 147700 ) layerNum 2 metal1\r\n( 51870 147980 ) layerNum 2 metal1\r\n( 51110 147420 ) layerNum 2 metal1\r\n\r\nSo from what I see these coordinates can't be correct, any idea why is this happening?", "date": "2022-04-11T14:15:24Z"}], "date": "2022-03-30T16:28:54Z", "category": "Query", "subcategory": "Information request", "Tool": "TritonRoute"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1539", "id": 1539, "title": "CTS Characterization", "author": "EffeErreG4", "description": "I was trying to customize the CTS parameters using the command \"configure_cts_characterization\", but I don't see any changes is the maximum slew constrain reported in the .log file. Trying to understand if I was doing something wrong I noticed that there's a file called \"CtsOptions.h\" that should set the desired constrains with no \"CtsOptions.cpp\" file to describe the actual function. How can I manage to customize the maximum transition time? Thanks for your attention.", "content": [{"author": "EffeErreG4", "role": "user", "message": "I was trying to customize the CTS parameters using the command \"configure_cts_characterization\", but I don't see any changes is the maximum slew constrain reported in the .log file. Trying to understand if I was doing something wrong I noticed that there's a file called \"CtsOptions.h\" that should set the desired constrains with no \"CtsOptions.cpp\" file to describe the actual function. How can I manage to customize the maximum transition time? Thanks for your attention.", "date": "2022-01-12T12:30:14Z"}, {"author": "maliberty", "role": "assistant", "message": "All the functions are inlined so there is no need for a cpp.\r\n\r\nWould you give the command you are using and the message you are getting in the log.", "date": "2022-01-12T16:36:33Z"}, {"author": "EffeErreG4", "role": "assistant", "message": "Sorry if I made a silly observation.\r\nI was trying to define the maximum limits of slew and maybe I misunderstood the command.\r\nIs it possible to change the values of maximum slew and maximum skew constrain for the CTS synthesis?", "date": "2022-01-12T18:07:58Z"}], "date": "2022-01-12T12:30:14Z", "category": "Query", "subcategory": "Customization request", "Tool": "Clock Tree Synthesis"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/1164", "id": 1164, "title": "how to run ICeWall test examples", "author": "vijayank88", "description": "Hi,\r\n\r\nI am trying to run OpenROAD/src/ICeWall/test examples. Used below command inside openroad and stopped with error\r\n\r\nopenroad 1> source soc_bsg_black_parrot_nangate45.tcl \r\n[WARNING ODB-0229] Error: library (NangateOpenCellLibrary.mod) already exists\r\n[WARNING ODB-0229] Error: library (dummy_pads) already exists\r\n[WARNING STA-0053] dummy_pads.lib line 7, library dummy_pads_worst_case already exists.\r\nSegmentation fault (core dumped)\r\n\r\nAnyone can explain how to run this flow and to view DEF file klayout to view my chip level io connection created by ICeWall\r\n\r\nThanks in advance\r\n", "content": [{"author": "vijayank88", "role": "user", "message": "Hi,\r\n\r\nI am trying to run OpenROAD/src/ICeWall/test examples. Used below command inside openroad and stopped with error\r\n\r\nopenroad 1> source soc_bsg_black_parrot_nangate45.tcl \r\n[WARNING ODB-0229] Error: library (NangateOpenCellLibrary.mod) already exists\r\n[WARNING ODB-0229] Error: library (dummy_pads) already exists\r\n[WARNING STA-0053] dummy_pads.lib line 7, library dummy_pads_worst_case already exists.\r\nSegmentation fault (core dumped)\r\n\r\nAnyone can explain how to run this flow and to view DEF file klayout to view my chip level io connection created by ICeWall\r\n\r\nThanks in advance\r\n", "date": "2021-10-05T16:38:04Z"}, {"author": "maliberty", "role": "assistant", "message": "@Colin-Holehouse @ibrahimkhairy can you help?", "date": "2021-10-05T16:59:47Z"}, {"author": "maliberty", "role": "assistant", "message": "@jjcherry56 the crash is in \r\n\r\nsta::ConcreteInstance::deletePin \r\nsta::ConcreteNetwork::deletePin \r\nsta::ConcreteNetwork::deleteInstance \r\nsta::ConcreteNetwork::deleteTopInstance \r\nsta::ConcreteNetwork::linkNetwork \r\nord::dbLinkDesign \r\n\r\nreproduce by going to src/ICeWall/test and running\r\n% openroad soc_bsg_black_parrot_nangate45.tcl\r\n[at OR prompt] source soc_bsg_black_parrot_nangate45.tcl", "date": "2021-10-14T18:51:32Z"}, {"author": "vijayank88", "role": "assistant", "message": "[vijayan@ctpl-hp11 test]$ ../../../build/src/openroad \r\nOpenROAD 1 3a8b060d9026de9b35e4f35ee59157ce9416c3ff\r\nThis program is licensed under the BSD-3 license. See the LICENSE file for details.\r\nComponents of this program may be licensed under more restrictive licenses which must be honored.\r\nopenroad 1> source soc_bsg_black_parrot_nangate45.tcl \r\n[INFO ODB-0222] Reading LEF file: NangateOpenCellLibrary.mod.lef\r\n[INFO ODB-0223]     Created 22 technology layers\r\n[INFO ODB-0224]     Created 27 technology vias\r\n[INFO ODB-0225]     Created 134 library cells\r\n[INFO ODB-0226] Finished LEF file:  NangateOpenCellLibrary.mod.lef\r\n[INFO ODB-0222] Reading LEF file: dummy_pads.lef\r\n[INFO ODB-0225]     Created 24 library cells\r\n[INFO ODB-0226] Finished LEF file:  dummy_pads.lef\r\n[INFO IFP-0001] Added 1885 rows of 13893 sites.\r\n[INFO PAD-0053] Creating padring nets: RETN_10, RETN_11, RETN_12, RETN_13, RETN_14, RETN_15, RETN_16, RETN_17, RETN_18, RETN_19, RETN_20, RETN_0, RETN_1, RETN_2, RETN_3, RETN_4, RETN_5, RETN_6, RETN_7, RETN_8, RETN_9, SNS_10, SNS_11, SNS_12, SNS_13, SNS_14, SNS_15, SNS_16, SNS_0, SNS_17, SNS_1, SNS_18, SNS_2, SNS_19, SNS_20, SNS_3, SNS_4, SNS_5, SNS_6, SNS_7, SNS_8, SNS_9, DVSS_0, DVSS_1, DVDD_0, DVDD_1.\r\n[INFO PAD-0051] Creating padring net: VSS.\r\n[INFO PAD-0051] Creating padring net: VDD.\r\nNo differences found.\r\n\r\nIs the above log right?", "date": "2021-10-16T09:44:15Z"}, {"author": "maliberty", "role": "assistant", "message": "\"No differences found. \" tells you it is right.", "date": "2021-10-16T14:13:35Z"}], "date": "2021-10-05T16:38:04Z", "category": "Runtime", "subcategory": "Crash report", "Tool": "Chip-level Connections"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625", "id": 625, "title": "Where is PA pattern generation in FlexPA::main in TritonRoute? How to dump out AP info for TA?", "author": "Raynchowkw", "description": "Hi, I want to find the step of \"pin access pattern generation\" in the TritonRoute/src/pa code and dump out the pattern information after pin access analysis. I don't see pin access pattern generation function in FlexPA::main(). Could anyone tell me where is this step? \r\nIs there template or sample of extracting pin access points information for TA? Thanks.", "content": [{"author": "Raynchowkw", "role": "user", "message": "Hi, I want to find the step of \"pin access pattern generation\" in the TritonRoute/src/pa code and dump out the pattern information after pin access analysis. I don't see pin access pattern generation function in FlexPA::main(). Could anyone tell me where is this step? \r\nIs there template or sample of extracting pin access points information for TA? Thanks.", "date": "2021-04-19T16:00:55Z"}, {"author": "maliberty", "role": "assistant", "message": "The calls to init() and prep() do the work of computing the access points.  If you just want to dump the result you would do so after those steps finish.  You can just look at frInstTerm::getAccessPoints() for the result.", "date": "2021-04-19T16:31:47Z"}, {"author": "maliberty", "role": "assistant", "message": "Btw, what is your high level goal?", "date": "2021-04-20T15:39:47Z"}, {"author": "maliberty", "role": "assistant", "message": "Anything on stdout will be copied to the log file in 5_2_TritonRoute.log.\n\nMatt\n\nOn Tue, May 18, 2021 at 2:02 PM Raynchowkw ***@***.***> wrote:\n\n> Hi, I have built the flow locally and made modification to the\n> FlexPA_prep.cpp to add the \"cout\" code provided by @Stephanommg\n> <https://github.com/Stephanommg> in previous reply\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-636424>\n> and rebuilt only the openroad tool.\n> I run 'make' for a sample design, and from the output scripts in terminal,\n> I cannot find any information which is assumed to be produced by 'cout'. I\n> look through the part from '[INFO DRT-0194] start detail routing ...' to\n> '[INFO DRT-0198] complete detail routing', also use \"Ctrl+Shift+F\" to find\n> \"layerNum \", but fail to find any aps information.\n> Am I supposed to run TritonRoute individually to output the message?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-755200>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAFZ5KTE4I5VLZTMWONFAT3TOLIYFANCNFSM43GD6SBA>\n> .\n>\n", "date": "2021-05-18T21:07:34Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "How to interpret the aps info printed by 'cout << bp << \"layerNum \" << ap->getLayerNum() << \"\\n\";'?\r\nIt looks like: ( the first paragraph)\r\n```\r\n( ( ( ( ( 84550 23940 )layerNum 2\r\n( 84550 9025072770 23940 )75810layerNum (  ( ( 86450883502 68590 70490 23940\r\n )239402394023800  )( 23940 )layerNum  23940 )layerNum 272770  )layerNum \r\n( 86450238002layerNum   )23940layerNum 23800 )2layerNum \r\n )2\r\n(  )\r\n( layerNum 70490 23800layerNum 222\r\n( 90250\r\n )2\r\n( 86450 24080 )68590\r\nlayerNum  layerNum ( layerNum ( ( 238002275810 23800\r\n```\r\nIt's not something like (X,Y,Z).\r\nWhich part of code should I read to understand this data structure?\r\nHow can I know the net_id, pin_id, pin_x, pin_y, pin_layer according to this?\r\nThanks.\r\n\r\n", "date": "2021-05-21T22:52:44Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "Thanks.\n\nOn Fri, May 28, 2021 at 5:36 PM Stephanommg ***@***.***>\nwrote:\n\n> By container I meant something that contains things. For instance: a\n> vector.\n>\n> Yes this operator.\n>\n> Learning C++ will surely help you. After that you will be better able to\n> understand the code.\n>\n> I really cant code for you right now, and I think my previous comment\n> already answered you last question (at least in part). You will have to use\n> the first code to iterate the access points in combination with the last\n> code to iterate over the nets.\n>\n> for each net\n> for each instTerm\n> get access points like the 1st code\n> for each term\n> get access points like the 1st code (with differences that it is up to up\n> to check)\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-799913>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ANTC4GJTDN2RNSJW4YS7Z43TQALHXANCNFSM43GD6SBA>\n> .\n>\n\n\n-- \nBest,\nRaynchow\n", "date": "2021-05-28T23:00:51Z"}, {"author": "maliberty", "role": "assistant", "message": "@Raynchowkw the project has limited resources and I think you need to put in more effort to solve your issues before requesting help.   Many of the requests don't require in depth knowledge of OpenRoad and are basic software development skills you need to develop.", "date": "2021-06-02T02:58:19Z"}, {"author": "maliberty", "role": "assistant", "message": "You can think of a term as a port of a verilog module; an instance as an instance of a verilog module; and an instTerm as the connection point on the instance reflecting the port of the module instantiated.", "date": "2021-06-02T03:11:27Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "Hi, After working hard on learning C++, I still have some questions. \r\nOne that blocks my understanding is `pin.get()` etc.\r\nWhat's the `.get()` here and where's its definition? I cannot find one in their class def.", "date": "2021-06-10T02:50:19Z"}, {"author": "maliberty", "role": "assistant", "message": "No problem\n\nOn Thu, Jun 10, 2021 at 11:48 AM Raynchowkw ***@***.***>\nwrote:\n\n> You need to iterate over the frNets and then iterate over their\n> frInstTerms and frTerms (similar to the for I placed here before). Do this\n> after pin access and before DR. You can do this inf FlexDR::main() before\n> the searchRepair functions. To get all nets, use\n> design_->getTopBlock()->getNets().\n>\n> Hi, I want to dump out aps before TA. I check TritonRoute::main. dr is\n> later than ta. So I want to dump out at the end of FlexPA::main. Would that\n> incur unexpected problems?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/625#discussioncomment-855088>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAFZ5KQZ53CPKQFIDDJZWCLTSECHPANCNFSM43GD6SBA>\n> .\n>\n", "date": "2021-06-10T18:52:10Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "After one week of understanding code, I find the logic of assigning one ap to one pin by this [line](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1579) in genInstPattern_commit. \r\nThe code @Stephanommg wrote to get aps is `for (auto& ap : pin->getPinAccess(inst->getPinAccessIdx())->getAccessPoints())`. I had a hard time understanding what frPinAccess is doing. I just find its uses in the [FlexPA::initPinAccess](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_init.cpp#L232) in and [FlexPA::prepPoint](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1248) in FlexPA::prepPattern and [revertAccessPoints](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1455) and [prepPattern_inst](https://github.com/The-OpenROAD-Project/OpenROAD/blob/c27d7cea8981bc917deaaa4d8cc83a6f9285c0e7/src/TritonRoute/src/pa/FlexPA_prep.cpp#L1816). \r\nIt looks like these are before genInstPattern_commit and just for coord manipulation purpose. So I think frPinAccess doesn't filter ap selected for each pin.\r\nSo in order to get ap for each pin in each net, can I do loop through net -> instTerms ->getAccessPoints() ?\r\nI am not sure the meaning of \"net\" and what's relationship between pin and net. Can I understand as this: a net connects some instTerms, each instTerm has some pins, so instTerms' pins are linked to that one net exclusively? Or pins in one instTerm can be linked to \r\ndifferent nets?\r\nThanks.", "date": "2021-06-21T17:27:37Z"}], "date": "2021-04-19T16:00:55Z", "category": "Query", "subcategory": "Usage question", "Tool": "Detailed Routing"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/754", "id": 754, "title": "[WARNING DPL-0004/5/6] Warning Details", "author": "dineshannayya", "description": "Can any one give more details on the these WARNING  & also how to solve these issue.\r\n\r\n[WARNING DPL-0004] Placed in rows check failed (4).\r\n[WARNING DPL-0005] Overlap check failed (1).\r\n[WARNING DPL-0006] Site check failed (4).\r\n\r\nI am trying to do detailed placement using openlane flow and 99% of block are hard core, only 32 cells are there at top-level\r\nThere is good amount of free space available. still tool fails with these error.\r\n\r\n", "content": [{"author": "dineshannayya", "role": "user", "message": "Can any one give more details on the these WARNING  & also how to solve these issue.\r\n\r\n[WARNING DPL-0004] Placed in rows check failed (4).\r\n[WARNING DPL-0005] Overlap check failed (1).\r\n[WARNING DPL-0006] Site check failed (4).\r\n\r\nI am trying to do detailed placement using openlane flow and 99% of block are hard core, only 32 cells are there at top-level\r\nThere is good amount of free space available. still tool fails with these error.\r\n\r\n", "date": "2021-06-17T12:19:40Z"}, {"author": "maliberty", "role": "assistant", "message": "It is a check at the end of placement to make sure the result is non-overlapping.  It suggests a placement failure but its hard to say anything more without a test case.  Can you provide one?", "date": "2021-06-17T13:47:21Z"}, {"author": "dineshannayya", "role": "assistant", "message": "The project had 99% hard macro with less than 32 other cells and there was\nmore than 30% free space. Still openroad detailed route was placing\noverlapping cells with hard macros & giving DPL-4/5/6 warning.\n\nFinally I noticed the issue was resolved after changing\ndiamond_search_hight more than *250*.\n\nCan give more details on how increased  diamond_search_hight value helped\nhere ?\n\n\n\nOn Thu, Jun 17, 2021 at 7:17 PM Matt Liberty ***@***.***>\nwrote:\n\n> It is a check at the end of placement to make sure the result is\n> non-overlapping. It suggests a placement failure but its hard to say\n> anything more without a test case. Can you provide one?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/The-OpenROAD-Project/OpenROAD/discussions/754#discussioncomment-883422>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AB7HAVW45OKCTMLEFRCYBBLTTH4HJANCNFSM463RXQWA>\n> .\n>\n", "date": "2021-06-18T05:31:53Z"}, {"author": "maliberty", "role": "assistant", "message": "I would guess that global placement left cells very far from any legal location.  You might look at a post global-placement def to see.", "date": "2021-06-18T15:11:47Z"}], "date": "2021-06-17T12:19:40Z", "category": "Runtime", "subcategory": "Detailed Placement issue", "Tool": "Detailed Placement"}
{"url": "https://github.com/The-OpenROAD-Project/OpenROAD/discussions/683", "id": 683, "title": "What's the workflow of developing in submodules?", "author": "Raynchowkw", "description": "I git clone --recursive the parent repo \"openroad-flow-scripts\" so I get all the code including submodules in the local. \r\nAnd then I use \"git remote rename origin upstream\" and \"git remote add origin <my_new_created_blank_openroad-flow.git> to let it point to my repo. (I only create one repo for the openroad-flow-script. I didn't create repo for submodules.)\r\nAfter I made changes in submodule /tools/openroad/src, I do git `add` and `commit` in the directory of submodule tools/openroad, and then in the parent directory /openroad-flow-scripts, I do `git add tools/openroad`, `commit`, `push`. I can see it does push something to somewhere[![push result](https://i.postimg.cc/jSrTz9Ry/We-Chat-Image-20210526015324.png)](https://postimg.cc/kBwLCT65), but I cannot find it on github.com, on which the directory url points to 404 [![404page](https://i.postimg.cc/FF3DfsHF/404.png)](https://postimg.cc/fkWxpsd1)page. I am wondering where the submodules go when I do the `git remote add origin <my_openroad-flow.git>`. Is there a way to create the submodule repo automatically in my repo?", "content": [{"author": "Raynchowkw", "role": "user", "message": "I git clone --recursive the parent repo \"openroad-flow-scripts\" so I get all the code including submodules in the local. \r\nAnd then I use \"git remote rename origin upstream\" and \"git remote add origin <my_new_created_blank_openroad-flow.git> to let it point to my repo. (I only create one repo for the openroad-flow-script. I didn't create repo for submodules.)\r\nAfter I made changes in submodule /tools/openroad/src, I do git `add` and `commit` in the directory of submodule tools/openroad, and then in the parent directory /openroad-flow-scripts, I do `git add tools/openroad`, `commit`, `push`. I can see it does push something to somewhere[![push result](https://i.postimg.cc/jSrTz9Ry/We-Chat-Image-20210526015324.png)](https://postimg.cc/kBwLCT65), but I cannot find it on github.com, on which the directory url points to 404 [![404page](https://i.postimg.cc/FF3DfsHF/404.png)](https://postimg.cc/fkWxpsd1)page. I am wondering where the submodules go when I do the `git remote add origin <my_openroad-flow.git>`. Is there a way to create the submodule repo automatically in my repo?", "date": "2021-05-26T20:24:38Z"}, {"author": "maliberty", "role": "assistant", "message": "It isn't clear in which repo you are runing which steps.  Please give a specific set of steps to replay to see your problem.\r\n\r\nI think the simplest is to fork ORFS & OR.", "date": "2021-05-26T20:39:57Z"}, {"author": "maliberty", "role": "assistant", "message": "When the submodule is checked out it will be a specific commit that is checked out not the HEAD.  You can just 'it checkout master' and commit your change.  Then in ORFS you can update the submodule to point to your new commit.", "date": "2021-05-26T21:47:56Z"}, {"author": "maliberty", "role": "assistant", "message": "In ORFS you should see that the submodule is modified and you git add/commit it as usual.", "date": "2021-05-26T22:43:12Z"}, {"author": "maliberty", "role": "assistant", "message": "yes", "date": "2021-05-26T23:04:43Z"}, {"author": "Raynchowkw", "role": "assistant", "message": "When I want to get the update of submodules, I do `git pull --recurse-submodule`, [![gitpullsubmodulecheckout.png](https://i.postimg.cc/hPpJ5z1G/gitpullsubmodulecheckout.png)](https://postimg.cc/svGDB28F),\r\nbut it checkouts the commit id it originally points to. [![submodulepointtocommit.png](https://i.postimg.cc/5tF6yPdH/submodulepointtocommit.png)](https://postimg.cc/Y4MpyzSk).\r\nHow to let it point to my OR git master branch? Otherwise, I need to go into that submodule directory to do the `git checkout master` every time.", "date": "2021-05-27T03:50:27Z"}], "date": "2021-05-26T20:24:38Z", "category": "Query", "subcategory": "Submodule management", "Tool": "Not Applicable"}
